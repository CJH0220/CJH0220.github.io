<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RANSAC随机采样一致性</title>
      <link href="/2024/07/30/RANSAC%E9%9A%8F%E6%9C%BA%E9%87%87%E6%A0%B7%E4%B8%80%E8%87%B4%E6%80%A7/"/>
      <url>/2024/07/30/RANSAC%E9%9A%8F%E6%9C%BA%E9%87%87%E6%A0%B7%E4%B8%80%E8%87%B4%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1>RANSAC 随机采样一致性</h1><h2 id="推荐资料">推荐资料</h2><p><a href="http://t.csdnimg.cn/ljIMI">http://t.csdnimg.cn/ljIMI</a></p><p>【2022B站最好最全的【三维重建】课程！！！北邮教授竟然把三维重建讲的如此通俗易懂，学不会UPZHIJIE 退网下架！！！-人工智能/计算机视觉/三维重建】<a href="https://www.bilibili.com/video/BV1DP41157dB?p=7&amp;vd_source=bd967f0d540a64617b8b612bc0f0f9a3">https://www.bilibili.com/video/BV1DP41157dB?p=7&amp;vd_source=bd967f0d540a64617b8b612bc0f0f9a3</a></p><blockquote><p>上面视频的第7P，1小时15分钟开始，有生动的介绍。</p></blockquote><h2 id="简介">简介</h2><p><a href="https://so.csdn.net/so/search?q=RANSAC&amp;spm=1001.2101.3001.7020">RANSAC</a>（Random Sample Consensus）算法是一种基于随机采样的迭代算法，用于估计一个数学模型参数。它最初由Fischler和Bolles于1981年提出，主要用于计算机视觉和计算机图形学中的模型拟合和参数估计问题。</p><p>RANSAC算法的基本思想是通过随机采样一小部分数据来估计模型参数，然后用这个模型对所有数据进行测试，将满足模型的数据点作为内点，不满足模型的数据点作为外点。通过迭代的方式不断随机采样和估计模型参数，最终得到内点数目最多的模型作为最终的估计结果。</p><p>RANSAC算法的优点是可以处理包含大量外点的数据集，并且不需要事先知道外点的数量。它可以用于解决许多计算机视觉和计算机图形学中的问题，如图像配准、物体识别、三维重建、特征点匹配等。</p><h2 id="计算方法">计算方法</h2><p>是一种<strong>适用于数据收到异常值污染的模型拟合方法</strong>。</p><ul><li>随即均匀采样获取模型求解所需的最小子集</li><li>适用该子集估计模型参数</li><li>计算剩余样本与当前模型的一致性，统计满足当前模型的点个数，作为当前模型分数</li><li>以设定的次数n重复上面3个步骤，输出得分最高的模型</li></ul><p>参数设置：</p><ul><li>初始点数量s：模型求解所需的最少的点的个数</li><li>距离门限t</li><li>采样次数：选择采样次数N使得至少有一次采样为真实解的概率为p（例如p=0.99）</li><li>必须匹配拟合模型的点数d：与内点数占比一致</li></ul><p>有一个概率公式推荐：</p><p><a href="https://imgse.com/i/pkqZtnU"><img src="https://s21.ax1x.com/2024/07/27/pkqZtnU.png" alt="pkqZtnU.png"></a></p><h3 id="自适应迭代次数">自适应迭代次数</h3><ul><li><p>外点率通常未知，按照最坏情况估计，比如50%。然后，根据计算结果自适应的调整外电比率，修正所需的总采样次数；</p><p><a href="https://imgse.com/i/pkqZ2He"><img src="https://s21.ax1x.com/2024/07/27/pkqZ2He.png" alt="pkqZ2He.png"></a></p></li></ul><h2 id="实例：直线拟合">实例：直线拟合</h2><p><a href="https://imgse.com/i/pkLWCGT"><img src="https://s21.ax1x.com/2024/07/30/pkLWCGT.png" alt="pkLWCGT.png"></a></p><p>随机选择两个点，构成一条线。在这个线设置一个距离阈值，如果点在阈值内，则为内点，点在阈值外则为外点。</p><p>内点数量代表这条线的得分。通过N次迭代，找到分值最高的线，即为求解答案。</p>]]></content>
      
      
      <categories>
          
          <category> 三维重建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 迭代算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于MRTK3的象棋AR游戏</title>
      <link href="/2024/06/13/%E5%9F%BA%E4%BA%8EMRTK3%E7%9A%84%E8%B1%A1%E6%A3%8BAR%E6%B8%B8%E6%88%8F/"/>
      <url>/2024/06/13/%E5%9F%BA%E4%BA%8EMRTK3%E7%9A%84%E8%B1%A1%E6%A3%8BAR%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<h1>基于MRTK3的象棋AR游戏（广工优秀毕业设计非完整版）</h1><p><strong>摘要</strong></p><p>本文采用混合现实工具包MRTK3，在Unity平台上设计并实现了一款基于MRTK3的AR象棋游戏，使用HoloLens2设备进行交互。针对中国象棋规则和棋盘布局，设计出游戏的交互界面和操作方式，实现了棋子的选择、移动、吃子、悔棋、重开等基本操作。具体地，</p><p>（1）使用MRTK3的文本框以及按钮预设体，完成对按钮以及文本框的建模工作。</p><p>（2）使用Unity中的模型工具，完成对棋盘、棋子、辅助点和微模型的建模工作。</p><p>（3）使用粒子系统，制作了在落棋时产生的粒子特效。</p><p>（4）添加游戏模式。本文设置了“单人学习”与“残局较量”两种游戏模式。玩家可以随时切换游戏模式。</p><p>经过综合测试，基于MRTK3的AR中国象棋游戏具有良好的交互性和娱乐性，程序无故障。</p><p><strong>关键词</strong>： MRTK3，Unity，游戏开发，增强现实</p><h2 id="1-绪论">1 绪论</h2><h3 id="1-1-研究背景与意义">1.1 研究背景与意义</h3><ol><li><p>技术背景：随着计算机视觉、图形处理、传感器技术和移动设备性能的不断提升，AR技术得以快速发展并应用于游戏领域。这些技术为游戏玩家提供了全新的沉浸式体验。尤其是先前进入市场的HoloLens2以及最新的Apple Vision Pro VR，更是大幅提高了游戏硬件性能。在Unity平台上使用微软的MRTK3开发HoloLens应用，提高了AR游戏的开发效率，降低了小型AR游戏的制作门槛。</p></li><li><p>市场背景：随着消费者对游戏体验的需求多样化，传统的游戏形式已无法满足玩家们的需求。AR游戏作为一种结合了现实与虚拟元素的新型游戏形式，吸引了大量寻求新颖、刺激和个性化游戏体验的玩家。现如今，苹果、微软等公司正投入大量资金及人力开发AR游戏。此时研发一款具有启蒙意义的小型AR象棋游戏，能够将使用传统设备游玩的玩家吸引至AR游戏领域进行传统文化游戏，既能迎合传统象棋玩家的市场，也能抓住其他玩家的好奇心。如今市面上已经有多款AR象棋游戏比如，Mirage AR游戏平台的《中国象棋》。</p></li><li><p>文化背景：象棋作为中国传统对弈游戏，它的基本规则简明易懂，而其中的策略和变化却无穷无尽。AR象棋可以凭借高互动性与新奇性促进中国象棋在世界范围内的普及和推广。同时也可以挖掘历史背景，将游戏历史“楚汉相争”的故事融入象棋游戏中。</p></li><li><p>研究意义：将中国象棋结合AR技术，让人们能在AR这一全新场景下游玩中国象棋，进一步发现中国象棋的魅力，体验AR交互的乐趣。优秀的游戏可以让人们身临其境，感受游戏带来的魅力，让玩家可以在游戏的同时学习到相关的知识，充实自我。</p></li></ol><h3 id="1-2-国内外研究现况">1.2 国内外研究现况</h3><p>如今国外已经有一批成熟的AR象棋游戏。比如ChessAR，HoloChess，中国象棋。</p><p>ChessAR：是一个在App Store上可用的AR游戏，允许玩家通过增强现实技术在现实世界中玩象棋。它提供了不同的棋盘风格和棋子设计，使得玩家可以在不同的环境中体验象棋游戏。</p><p>HoloChess：是一款由Magic Leap推出的AR游戏，让玩家可以在现实世界中体验星球大战系列中的象棋游戏。它利用Magic Leap的AR眼镜和技术，将虚拟的象棋棋盘放置在玩家的真实环境中。</p><p>中国象棋：是一款在Mirage AR游戏平台上运营且游玩的首款中国象棋游戏。虽然无法联机对战，但是有不同难度的AI对手进行选择。画面最大的特点是游戏元素取自历史的棋子与棋盘，与游戏主题楚汉之争保持了高度一致。画风，模型符合现在年轻玩家的审美。规则为传统的中国象棋规则。中国象棋对弈画面见图1.1。</p><div align=center><img src="https://pic.imgdb.cn/item/666a6800d9c307b7e9ab78ec.png"></div><p>目前国内没有成熟的象棋AR游戏。虽然中国的游戏开发者在AR领域有着不俗的技术水平，但是在象棋AR游戏方面的产品较少。随着AR技术的不断发展和普及，以及中国市场对于象棋游戏的热爱，象棋AR游戏在国内有很大的发展机会。</p><p>传统象棋游戏十分火爆，为AR象棋游戏提供了用户基础。无论是移动平台的小程序或APP，还是电脑或游戏机上的象棋游戏均有大量的活跃玩家。一些知名的象棋游戏平台包括中国象棋网、中国象棋在线等。除了提供对弈服务外，一些网站也提供象棋教学资源和培训课程。这些资源包括象棋规则介绍、棋谱分析、开局布局、残局技巧等，帮助玩家提高象棋水平。随着技术的不断发展和社会的不断进步以及人们对传统文化的重视，中国象棋在网上的发展前景也将更加广阔。《天天象棋》小程序截图1.2。</p><img src="https://pic.imgdb.cn/item/666a6881d9c307b7e9ac9f59.png" alt="image.png"><h2 id="2-开发环境与开发工具">2 开发环境与开发工具</h2><h3 id="2-1-Unity介绍">2.1 Unity介绍</h3><p>Unity在3D游戏开发者中非常受欢迎，它是一款跨平台开发软件，Unity 支持将游戏发布到Windows平台、Mac平台、苹果手机和安卓手机平台等各大设备，在将游戏打包发布时，只需要执行对应的打包方式即可实现，大大的降低了开发周期。</p><p>AR游戏中，已有许多优秀的作品，比如风靡全球的Pokemon GO（精灵宝可梦GO），Harry Potter: Wizards Unite（哈利·波特：巫师联盟）。这些游戏不仅提供了新颖的游戏体验，而且有可能改变玩家对物理现实的看法。</p><p>Unity在AR游戏开发上有以下特点。</p><p><strong>AR基础框架</strong>：Unity提供了AR Foundation框架，作为跨平台AR开发的基础。AR Foundation集成了ARCore和ARKit等AR平台的功能，使开发者可以在不同的设备上共享相似的AR体验。</p><p><strong>3D模型和动画支持</strong>：Unity支持导入和管理3D模型和动画，开发者可以利用这些功能来创建各种虚拟对象和场景，与现实世界进行交互。</p><p><strong>物理引擎和碰撞检测</strong>：Unity集成了强大的物理引擎和碰撞检测系统，可以模拟现实世界中的物理效果，使AR游戏更加真实和具有交互性。</p><p><strong>增强现实效果</strong>：Unity支持各种增强现实效果的实现，包括虚拟对象的投影、实时阴影、光照效果等，为AR游戏提供了更丰富的视觉体验。</p><p><strong>社区支持和资源丰富</strong>：Unity拥有庞大的开发者社区和资源库，开发者可以在社区中获取各种教程、示例项目和插件，加速AR游戏的开发过程。</p><h3 id="2-2-MRTK3介绍">2.2 MRTK3介绍</h3><p>MixedReality Toolkit（MRTK）是由微软公司开发的一套开源工具包，旨在简化和加速增强现实（AR）和混合现实（MR）应用程序的开发过程。MRTK提供了一系列预制件、组件和脚本，帮助开发者能快速构建功能丰富、交互性强的AR/MR应用，并且支持多种AR/MR平台，包括HoloLens、Windows Mixed Reality、Oculus等。</p><p>AR技术允许虚拟体验覆盖在物理环境之上，从而创建一种混合体验，其中虚拟对象成为用户感知和物理环境的一部分。AR将数字信息叠加在真实元素上。它以现实世界为基础，创造了一个新的感知层，并与现实或环境相辅相成。</p><p>MRTK的主要特点和功能包括以下几点。</p><p>**多设备支持：**MRTK支持多种AR/MR平台，包括HoloLens、Windows Mixed Reality、Oculus等，使开发者能够在不同平台上构建一致的AR/MR应用。</p><p><strong>交互组件</strong>：MRTK提供了丰富的交互组件，包括手势识别、物体操控、UI控件等，使开发者可以轻松地实现用户与应用的交互。</p><p><strong>UI工具</strong>：MRTK包含了一系列用于构建用户界面的工具和组件，包括按钮、滑块、文本框等，帮助开发者创建可视化的AR/MR界面。</p><p><strong>物理模拟</strong>：MRTK集成了物理引擎，支持碰撞检测、物体运动和交互效果的模拟，使开发者能够创建更加真实和具有交互性的AR/MR场景。</p><p>MRTK3对于MRTK2有一定改进，比如，</p><p>1.重新设计的边界框视觉对象，以减少视觉噪音，并启用流畅的注视交互。</p><p>2.改进了增强型多模式输入的视觉反馈，例如眼睛凝视与捏合手势。</p><p>3.基于 Unity XR 交互工具包和 Unity 输入系统构建，并专注于 Open XR。</p><p>4.拥有开放且灵活的交互范式，重新编写并重新设计了大多数功能和系统，从 UX 到输入再到子系统，使得开发更加简洁便捷。</p><p>5.可在 HoloLens 2 和其他资源受限的移动平台上实现最高性能。</p><h3 id="2-3-HoloLens2介绍">2.3 HoloLens2介绍</h3><p>HoloLens2 是由微软公司推出的一款头戴式光学透视增强现实（AR）显示器，是其第二代产品[7]。它于2019年2月正式发布，是一款设计精良、功能强大的AR头显设备，具有许多令人印象深刻的特点和功能[8]。以下是对 HoloLens2 设备各个功能的介绍。</p><p><strong>手部追踪</strong>：以自然的方式完全契合手部移动，会准确进行手部跟踪、触摸、抓握和移动全息图。HoloLens 2 能适应你的双手，让全息图可以像实物一样做出反应比如旋转，阴影等。这也是AR交互中最重要最常使用的方式。</p><p><strong>支持语音</strong>：通过内置语音命令，用户可以在双手忙于处理任务时，快速导航和操作 HoloLens 2。相当于多了一种信息输入方式。</p><p><strong>眼动追踪</strong>：HoloLens 2 可以准确地了解你所看的地方，理解你的意图，并根据眼睛的活动实时调整全息图。</p><p><strong>空间映射</strong>：无缝映射物理环境，无论你身在何处，都可以将数字内容稳稳投射到相应的对象或表面。它会更具你初始定位位置确定数字内容位置。</p><p><strong>大视野范围</strong>：视野是初代 HoloLens 的两倍。阅读全息网站上的 8 号字体，与全息图进行精确交互，打造混合现实环境并沉浸其中。</p><h2 id="3-需求分析（略）">3 需求分析（略）</h2><h2 id="4-系统设计">4 系统设计</h2><h3 id="4-1-总体设计">4.1 总体设计</h3><p>在Unity框架下，使用MRTK3的预制体与组件，缩短开发时间并简易实现复杂的交互功能。MRTK3的工具包具有丰富的人机交互优化方法，比如在抓取与放下棋子所用的事件交互系统XRI（XR Interaction Toolkit，Unity中一个基于组件的高级交互系统）。</p><p>首先，需要在Unity中完成各个模型的UI设计，包括棋子，棋盘，按钮等。UI设计可以使用MRTK3的预设体来实现。这些预制体具有很强的适应性与兼容性，相比使用Unity制作的组件更加健壮。</p><p>其次，需要实现游戏操作。在XRI系统上导入C#脚本中的函数，并配置玩家互动事件与游戏脚本的连接方法，搭建了用户操作与系统反馈之间的桥梁，以此实现了所有的游戏操作。需要使用脚本实现中国象棋的规则。</p><p>最后，需要提升交互体验。AR游戏场景与一般游戏场景不同，具有不同的输入方式和反馈逻辑。为了方便玩家操作，需要添加辅助功能。比如，抓取棋子过程中，添加辅助点帮助用户确定落棋位置</p><img src="https://pic.imgdb.cn/item/666a75bed9c307b7e9c9247a.png" alt="image.png"><h3 id="4-2-UI设计">4.2 UI设计</h3><h4 id="4-2-1-棋盘设计">4.2.1 棋盘设计</h4><p>棋盘是象棋游戏的重要背景，一个简洁好看的棋盘能吸引玩家。但在AR场景下，不能随意选择棋盘颜色，因为这样会干扰手势辅助线。本文构建长方体，使用背景为棕色的棋盘，使HoloLens2中的白色的手势辅助线清晰易见，提高了用户的交互体验。</p><p><a href="https://pic.imgdb.cn/item/666a7625d9c307b7e9c9d1fb.png"><img src="https://pic.imgdb.cn/item/666a7625d9c307b7e9c9d1fb.png" alt=""></a></p><p>为了防止在渲染物体时导致图片清晰度下降，可以使用图像增强技术增加原图的清晰度再进行图片渲染。同时，应把握AR游戏内图片的渲染程度，过度的渲染可能会与棋盘内的其他物体产生冲突，会对AR设备造成不必要的运行负担。</p><h4 id="4-2-2-棋子设计">4.2.2 棋子设计</h4><p>类型：兵（卒）、炮，车，马，相（象），仕（士），帅（将）。</p><p>字体：华文行楷。</p><p>边框：双边框，提高识别度。</p><p>颜色：在使用手势的头戴增强现实（AR）中，颜色选择和表面绘制在很大程度上尚未被探索，十分重要[10] 。本文在颜色上选择传统的黑色红色。</p><p>棋子正反面都需要刻上棋子类型，同时要保证图片高清，棋子在实际游玩时做到清晰可见。棋子原型图见4.3。游戏内效果图见4.4。</p><img src="https://pic.imgdb.cn/item/666a7660d9c307b7e9ca4999.png" alt="image.png"><img src="https://pic.imgdb.cn/item/666a7676d9c307b7e9ca6eb1.png" alt="image.png"><h4 id="4-2-3-按钮设计">4.2.3 按钮设计</h4><p>“Restart”按钮与“Regret chess”使用了MRKT3的预设体按钮，按钮的背景为蓝色，玩家按下按钮与松开按钮时，有明显的表层陷入画面。同时会播放MRTK3中的预设声效。声效与陷入画面有效提高了虚拟人机交互的及时性。按钮挤压效果图见4.6。</p><img src="https://pic.imgdb.cn/item/666a769dd9c307b7e9cabf50.png" alt="image.png"><h4 id="4-2-4-规则框设计">4.2.4 规则框设计</h4><p>游戏规则框存放用于辅助新手玩家上手中国象棋游戏的规则文本。使用了MRTK3中的预设体。MRTK3的文本框预设体区别于MRTK2使用了更加柔和的边框设计与色彩基调。同时还可以根据需要更改文字字体，段落排版。其中，需要将对应的蓝色背景框延长，并选择合适的字体类型与字体大小。文本框整体需要略微倾斜于主视角，便于玩家读取文本框内容。文本框效果图见图4.8。</p><img src="https://pic.imgdb.cn/item/666a76c5d9c307b7e9cb0fb3.png" alt="image.png"><h4 id="4-2-5-辅助点设计">4.2.5 辅助点设计</h4><p>为了提高玩家的游玩体验，当抓取物体时会生成红色或绿色的辅助点在棋盘上。红色代表这步棋不可行，绿色代表这步棋可行。具体设计思路为设计一个小的圆柱体，在脚本使用函数进行生成，移动或销毁。辅助点圆柱体设计见图4.9。</p><p><a href="https://pic.imgdb.cn/item/666a76f5d9c307b7e9cb875d.png"><img src="https://pic.imgdb.cn/item/666a76f5d9c307b7e9cb875d.png" alt=""></a></p><h4 id="4-2-6-粒子特效设计">4.2.6 粒子特效设计</h4><p>粒子系统是Unity游戏设计重要的渲染工具。在粒子系统中玩家可以定制自己所需的粒子特效。在图4.10中，在击杀对面棋子时所产生的黄色爆炸粒子特效具有观赏性。</p><img src="https://pic.imgdb.cn/item/666a7762d9c307b7e9cc967e.png" alt="image.png"><p>在场景中创建Pacticle System，并在属性面板上进行修改，如将播放时间设置为0.5秒，使用一次性特效，将粒子更改为黄色等参数调整，即可完成这样一个粒子特效喷射器。之后，将它设置为预设体，即可在脚本中进行载入及播放。粒子特效信息见图4.11。</p><img src="https://pic.imgdb.cn/item/666a777ad9c307b7e9ccd031.png" alt="image.png"><h3 id="4-3-游戏规则（略）">4.3 游戏规则（略）</h3><p>基本象棋规则介绍，包括移动规则，击杀规则等。</p><h3 id="4-4-交互模拟设计（略）">4.4 交互模拟设计（略）</h3><p>在追求沉浸式增强现实（AR）游戏的过程中，手势交互被认为是一种很有前途的模式。手势交互是一种能给用户带来乐趣的方式，在游戏模拟中，需要尽可能还原手势交互的功能。</p><p>在Unity中，可以在游戏开发平台直接模拟游戏，方便进行游戏的体验与检查。</p><p><a href="https://learn.microsoft.com/zh-cn/windows/mixed-reality/mrtk-unity/mrtk3-input/packages/input/input-simulation">输入模拟 - MRTK3 | Microsoft Learn</a></p><p>值得注意的是，由于电脑上鼠标的灵敏度不同，实机与模拟操作上的灵敏度差距过大。模拟与实机体验差距过大，这也是AR游戏设计目前的一个问题。开发者需要做到在游戏规则完善的情况下，提高玩家的交互体验。</p><h4 id="4-5-实机交互设计">4.5 实机交互设计</h4><p>对于AR程序，我们需要考虑用户的实际操作场景。用户在与虚拟内容交互时，也会在物理空间产生较大幅度的肢体动作。玩家在使用头戴设备时，可能会因为自身身高以及环境因素，导致离棋盘过远过近，角度偏离或者有物体阻碍等情况。此时进行AR互动，会产生安全隐患。</p><p>为此，本文设计了一个功能，使玩家能够移动棋盘，改变整个棋盘以及UI界面的位置，极大地方便了玩家的游戏操作。模型移动图见图4.13。</p><img src="https://pic.imgdb.cn/item/666a7866d9c307b7e9cf04cc.png" alt="image.png"><p>红绿辅助点位与HoloLens2原本的辅助射线互相配合，帮助玩家准确地抓取棋子。玩家可以使用白色辅助线远程抓取棋子，也可以直接用近距离交互抓取棋子。效果图见4.14。</p><img src="https://pic.imgdb.cn/item/666a787ed9c307b7e9cf389b.png" alt="image.png"><h2 id="5-系统实现与测试（不完整）">5 系统实现与测试（不完整）</h2><h3 id="5-1-模型建立">5.1 模型建立</h3><h4 id="5-1-1-棋盘">5.1.1 棋盘</h4><p>在游戏场景中，右键空白区域，在3D Object中建立一个Cube，并命名为table。具体操作见5.1。同时根据Camera主相机位置，调整table的Transform属性。具体属性见图5.2。</p><img src="https://pic.imgdb.cn/item/666a78cad9c307b7e9cff329.png" alt="image.png"><img src="https://pic.imgdb.cn/item/666a7908d9c307b7e9d0803c.png" alt="image.png"><p>在网络上寻找或自己制作棋盘图片，可参考图4.2。并将照片table2.jpg放入在游戏目录新建立的image文件夹，同时将照片直接拖入实时面板中的table模型中。具体方法见图5.3。</p><img src="https://pic.imgdb.cn/item/666a791ed9c307b7e9d0b93f.png" alt="image.png"><p>完成棋盘的图片渲染，生成预设体table。如果发现图片渲染方向相反，可调整Cube下Transform中的Rotation。如果图片渲染效果差，推荐使用更加高清的图片进行渲染。</p><h4 id="5-1-2-棋子">5.1.2 棋子</h4><ol><li>在游戏场景中创建一个Cylinder命名为piece，将其Scale属性调整至合适数值,见图5.4。</li></ol><img src="https://pic.imgdb.cn/item/666a7957d9c307b7e9d15151.png" alt="image.png"><ol start="2"><li>为棋子添加Rigidbody组件。点击inspector最下方AddComponent按钮搜索点击Rigidbody将其添加到游戏对象。Rigidbody是一个物理组件，可以模拟出重力加速和碰撞等物理效果。具体信息见图5.5。</li></ol><img src="https://pic.imgdb.cn/item/666a7979d9c307b7e9d1a409.png" alt="image.png"><ol start="3"><li>编辑Rigidbody组件。我们需要该对象在游戏过程中只发生位置移动而不发生旋转，因此在Freeze Rotation一栏中勾选XYZ。同时将Angular Drag 角偏移力设置为10000000。‘</li><li>更换Collider。Collider是一类检测碰撞的组件，有多种不同形状的派生类型。在该项目中，使用盒子形状的碰撞箱能更好地实现物理效果。因此移除对象中默认的Capsule Collider并添加Box Collider组件。Box Collider见图5.6。</li></ol><img src="https://pic.imgdb.cn/item/666a79aad9c307b7e9d22a18.png" alt="image.png"><ol start="5"><li>为棋子添加Constraint Manager与Object Manipulator组件。点击inspector最下方Add Component按钮搜索点击Constraint Manager与Object Manipulator将其添加到游戏对象。</li></ol><p>Constraint Manager为操作限制器，根据下图选择FixedRotationToUse 可以限制玩家对物体进行旋转，FixedRotationToWorld可以限制世界的物理引擎对其进行旋转。</p><p>Object Manipulator提供了一种简便的方式，让用户通过手势或控制器来操作、平移、旋转和缩放场景中的虚拟对象。它允许用户直接在现实世界中与虚拟对象进行互动。在这里主要用于识别玩家的抓取与放下操作。对MRTK3中的交互实现，主要集中在XRI系统中。见图5.7。</p><img src="https://pic.imgdb.cn/item/666a79e4d9c307b7e9d2b42d.png" alt="image.png"><ol start="6"><li><p>为棋子添加AudioSource组件。点击inspector最下方AddComponent按钮搜索点击Audio Source将其添加到游戏对象。Audio Source是一种用于在混合现实应用程序中播放声音的组件。MRTK的Audio Source可以与其他MRTK组件和事件系统集成，例如手势识别或物体交互事件，以实现在特定情境下自动播放或控制音频。例如，与Object Manipulator配合，可以用于设置棋子的抓取声音与放下声音。见图5.8。</p><img src="https://pic.imgdb.cn/item/666a7a2dd9c307b7e9d3872d.png" alt="image.png"></li><li><p>图片导入，将绘制好的棋子图案导入图形中。Piece的图形渲染效果图见图5.9。</p></li></ol><img src="https://pic.imgdb.cn/item/666a7a4fd9c307b7e9d3bcad.png" alt="image.png"><p>操作完成之后会生成Materials对应的材质文件，可以将材质文件导入预设体，改变预设体的表面图案。在规则脚本中，你可以使用代码直接将预设体放入游戏场景中。</p><h4 id="5-1-3-按钮">5.1.3 按钮</h4><p>按钮有两个，一个为悔棋按钮，一个为重新开始按钮，可以选择MRTK3的预设体。两者之间除了文本显示与脚本函数绑定，两者之间并无区别。MRTK3的预设体已经封装了大量完整的组件与脚本。对于按钮预设体，MRTK3使用了自己的抓取与放下的声音，对于开发者而言，可以更快的完成AR游戏的制作，也使得AR游戏开发更加简便。</p><p>在工程文件中，选择“ALL” 范围，输入“PressableButton”，会显示多种可使用的MRKT3交互按钮。MRTK的按钮预设体见5.10。</p><img src="https://pic.imgdb.cn/item/666a7a87d9c307b7e9d41391.png" alt="image.png"><p>CompressbleButtonVisuals下的TextMeshPro中，修改Text Input 即可修改按钮显示的文字。</p><p>在PressButton 组件下，有XRI Interactable events 即XPI系统。可交互行为定义。对应不同的XRI行为，下图中，上面那个指的是按下时触发与松开后触发。XRI行为定义见图5.12。</p><img src="https://pic.imgdb.cn/item/666a7aa7d9c307b7e9d44f18.png" alt="image.png"><h4 id="5-1-4-文本框">5.1.4 文本框</h4><p>文本框主要存放英文版象棋规则，方便玩家上手象棋规则。由于只用存放文本，可以使用MRTK3自带的文本面板。在工程文件夹下，搜索DescriptionPanel 找到对应预设体。在该预设体下，有多种组件。Subtitle是副标题，Title是标题，Paragraph是正文部分，Back指的是背景板，可以通过改变BackPlate的scale来改变蓝色背景版的大小。</p><h4 id="5-1-5-抓取模型">5.1.5 抓取模型</h4><p>抓取模型设置为简单的圆柱体，但是需要注意的是，它浮在空中，应该关闭重力系统，并冻结旋转功能。同时放下模型后，速度需要设置为0。其他的组件与棋子类似，都需要添加MRTK3的互动操作功能。抓取模型建立方法见图5.15。</p><img src="https://pic.imgdb.cn/item/666a7b1ad9c307b7e9d553d2.png" alt="image.png"><h3 id="5-2-脚本书写与导入">5.2 脚本书写与导入</h3><h4 id="5-2-1-象棋规则脚本">5.2.1 象棋规则脚本</h4><ol><li><p>创建C#文件</p><p>在工程文件夹中，建立一个新的文件夹命名为“Resource”，再在Resource文件夹中，建立一个新的文件命名为“script”，里面存放我们使用的脚本文件。在script文件夹中，右键创建一个空的C#脚本。命名为“check_rule.cs”。</p></li><li><p>棋盘结构体定义</p></li></ol><p>对于中国象棋棋盘，本质上就是一个10<code>*</code>9的二维数组。其中10为竖直方向z方向，9为水平方向x方向。</p><img src="https://pic.imgdb.cn/item/666a7b8ad9c307b7e9d675fb.png" alt="image.png"><p>构建一个二维结构体数组，并存放相应信息：实际XYZ位置，棋子归属，棋子类型，棋子GameObject。</p><img src="https://pic.imgdb.cn/item/666a7ba2d9c307b7e9d6b242.png" alt="image.png"><ol start="3"><li>行动结构体定义及悔棋的实现</li></ol><p>为了方便记录玩家的操作，以实现悔棋功能，使用了栈这一种数据结构。这里我们构建了一个栈存储“step”这个行为结构体。</p><img src="https://pic.imgdb.cn/item/666a7bc8d9c307b7e9d71e29.png" alt="image.png"><p>点击按钮触发Regret_Chess函数，进行逻辑判断。若栈为空，则拒绝请求。若栈不为空，则复原棋盘，并将行为step出栈，同时进攻方转换。</p><ol start="4"><li>其他函数的实现</li></ol><p>其中包含：抓取棋子时触发的函数，放下棋子时触发的函数，用于计算离最近点位的函数，生成/销毁辅助点的函数，击杀时触发粒子特效的函数，请求进入点位的函数，拒绝进入点位的函数等等。</p><p>其中point为棋盘数组结构体，包含棋子类型，棋子颜色，棋子队伍等。规则函数源码见图5.19。</p><p><a href="https://pic.imgdb.cn/item/666a7bf4d9c307b7e9d795bb.png"><img src="https://pic.imgdb.cn/item/666a7bf4d9c307b7e9d795bb.png" alt=""></a></p><h4 id="5-2-2-棋子规则脚本">5.2.2 棋子规则脚本</h4><p>在script文件夹中，右键创建一个空的C#脚本。命名为“Piece”。并在里面封装关于棋子本身的函数。函数数量过大，不一一截图。</p><img src="https://pic.imgdb.cn/item/666a7c4ed9c307b7e9d87e82.png" alt="image.png"><img src="https://pic.imgdb.cn/item/666a7c5cd9c307b7e9d8972b.png" alt="image.png"><h4 id="5-2-3-粒子自毁脚本">5.2.3 粒子自毁脚本</h4><p>粒子特效被创建后，经过Duration的时间，会停止喷射。但其GameObject仍然存在场景中，会影响游戏的内存与运行速度。我们创建一个名叫ParticleDestroyer.cs的脚本。并设置函数。通过Destroy函数能够在指定时间后销毁其GameObject。粒子自毁脚本见图5.22。</p><img src="https://pic.imgdb.cn/item/666a7c72d9c307b7e9d8bf2b.png" alt="image.png"><h4 id="5-2-4-模型移动脚本">5.2.4 模型移动脚本</h4><p>当移动该模型时，所有物体也需平移相同距离，方便用户交互。创建名为GrabbableObject.cs的脚本，同时编写抓取时函数与放下时函数，并拖入模型中。</p><h3 id="5-3-实机部署">5.3 实机部署</h3><p>将脚本文件拖入棋子预设体中。即可在场景中将该棋子拖入文件夹，生成预设体。在游戏场景中创建一个Empty项目为Rule，设置Postion为0，0，0，用于挂载check_rule脚本。同时将所有的自己生成的物体放入Rule中，作为Rule的子对象。在Unity界面左上角“File”中，点击“Build Settings”添加新的场景，并选择UWP平台，根据自己的电脑配置与HoloLens2设备需求，选择VS版本与SDK版本。在项目文件夹中，新建一个文件夹，选择后会进行编译与打包项目。在弹出的文件夹中，选择.sln文件。进入VS界面。在打包完成后弹出的文件夹中，选择.sln文件。进入VS界面。在VS界面中，选择Release系统，ARM64,设备，并生成解决方案。</p><h3 id="5-4-游戏过程">5.4 游戏过程</h3><h4 id="5-4-1-游戏开始">5.4.1 游戏开始</h4><p>进入游戏内，所有内容会自动生成。</p><p>左侧是文本框，玩家可以阅读上面的文字，了解象棋的基本规则。</p><p>中间是棋盘与棋子，玩家主要在棋盘上进行交互。</p><p>右侧是Restart与regret chess 按钮，前者为重新开始游戏按钮，后者悔棋为悔棋按钮。在右上角，有残局选择按钮，目前已安装两种残局。游戏开始效果图5.24。</p><img src="https://pic.imgdb.cn/item/666a7ccdd9c307b7e9da408e.png" alt="image.png"><h4 id="5-4-2-游戏互动">5.4.2 游戏互动</h4><p>玩家可使用左手或右手进行棋子的抓取，并移动棋子，将棋子放置你想放入的点位中。棋子会自动锁定最近的点位进行判断。根据象棋规则判断是否能够落入点位。如果有敌人，则消灭敌方棋子。抓取展示图见5.25。</p><img src="https://pic.imgdb.cn/item/666a7cfbd9c307b7e9da93fb.png" alt="image.png"><p>使用手或者射线按下两个按钮可以触发对应效果。为提高互动体验，按钮按下与放开时，会产生音效。点击按钮效果图见5.26。</p><img src="https://pic.imgdb.cn/item/666a7d06d9c307b7e9daa996.png" alt="image.png"><h4 id="5-4-3-游戏结束">5.4.3 游戏结束</h4><p>当玩家击杀一方的将（帅）时，会触发一段“Game over”的语音。同时所有棋子初始化并返回原位，重新开始游戏。由于使用HoloLens2设备，实际体验会比截图表现得更加优秀。</p><h4 id="5-4-4-单人学习模式">5.4.4 单人学习模式</h4><p>玩家使用HoloLens2进入游戏程序时，默认在单人学习模式进行游戏。玩家可以根据象棋规则，自己移动红色黑色两方棋子进行学习。过程图见5.28。</p><img src="https://pic.imgdb.cn/item/666a7d46d9c307b7e9db1dc9.png" alt="image.png"><h4 id="5-4-5-经典残局">5.4.5 经典残局</h4><p>残局（bishop ending）是一种独特的解密玩法。玩家在棋局中双方各只剩下少量棋子的情况下的局面下，使用精妙的策略取得胜利。残局比较适应用碎片时间游戏的玩家。对于AR游戏而言，完整的象棋对局在时间上较难完整进行。比如说，不熟悉AR设备操作的玩家在棋子密集的棋盘中抓取棋子比较困难。而残局的棋子少，容易抓取，可以缓解这个问题，为新手玩家带来更好的游戏体验。本文设计了两种残局，玩家可以点击棋盘旁边的bishop ending按钮进行游戏，具体图谱请见图5.29与图5.30。</p><img src="https://pic.imgdb.cn/item/666a7d69d9c307b7e9db614c.png" alt="image.png"><h4 id="5-5-测试方法与用例">5.5 测试方法与用例</h4><p>分为功能测试，游戏规则测试，测试结果。测试结果优秀。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机试复试</title>
      <link href="/2024/05/05/python%E6%9C%BA%E8%AF%95%E5%A4%8D%E8%AF%95/"/>
      <url>/2024/05/05/python%E6%9C%BA%E8%AF%95%E5%A4%8D%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="python考研复试"><a href="#python考研复试" class="headerlink" title="python考研复试"></a>python考研复试</h1><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><p>强力推荐卡玛网前30题，各类的输入方法。</p><p><a href="https://kamacoder.com/">卡码网KamaCoder</a></p><p><a href="https://github.com/youngyangyang04/kamacoder-solutions">GitHub - youngyangyang04/kamacoder-solutions: 卡码网题解全集</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="built_in">input</span>().strip() <span class="comment"># strip用来去除空格\n</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line"><span class="built_in">input</span>().strip().split() <span class="comment"># 循环输入split()用来分割，默认出来的是list</span></span><br><span class="line">        a,b = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().strip().split()) <span class="comment">#对a,b做int操作</span></span><br></pre></td></tr></table></figure><p>另一种方法（牛客）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    a = line.split() <span class="comment"># 每一行的输入 循环</span></span><br></pre></td></tr></table></figure><p>力口：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pivotIndex</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>输出基本靠<code>return</code> 或者 <code>print()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(*objects, sep=<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;\n&#x27;</span>, file=sys.stdout, flush=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>参数</p><ul><li>objects — 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。</li><li>sep — 用来间隔多个对象，默认值是一个空格。</li><li>end — 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。</li><li>file — 要写入的文件对象。</li><li>flush — 输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新。</li></ul><h3 id="format"><a href="#format" class="headerlink" title="format"></a>format</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"> &gt;&gt;&gt; <span class="string">&quot;&#123;1&#125; &#123;0&#125; &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">&#x27;world hello world&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;网站名：&#123;name&#125;, 地址 &#123;url&#125;&quot;</span>.<span class="built_in">format</span>(name=<span class="string">&quot;菜鸟教程&quot;</span>, url=<span class="string">&quot;www.runoob.com&quot;</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 通过字典设置参数</span></span><br><span class="line">site = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;菜鸟教程&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;www.runoob.com&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;网站名：&#123;name&#125;, 地址 &#123;url&#125;&quot;</span>.<span class="built_in">format</span>(**site))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 通过列表索引设置参数</span></span><br><span class="line">my_list = [<span class="string">&#x27;菜鸟教程&#x27;</span>, <span class="string">&#x27;www.runoob.com&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;网站名：&#123;0[0]&#125;, 地址 &#123;0[1]&#125;&quot;</span>.<span class="built_in">format</span>(my_list))  <span class="comment"># &quot;0&quot; 是必须的</span></span><br></pre></td></tr></table></figure><h3 id="数字输出格式"><a href="#数字输出格式" class="headerlink" title="数字输出格式"></a>数字输出格式</h3><p><img src="https://pic.imgdb.cn/item/65dfdd649f345e8d03d7f997.jpg" alt=""></p><h2 id="题型分布"><a href="#题型分布" class="headerlink" title="题型分布"></a>题型分布</h2><p><a href="https://labuladong.online/algo/home/">本站简介 | labuladong 的算法笔记</a></p><p>上面这个网站有非常多简单易懂的原理，基本上把免费的内容学完，就可以10道题对7、8道。</p><p>机试有一个这样的特性：<strong>算法与数据机构，深度学习紧紧联系</strong>。</p><p>根据这个特性，我们能确定的题型有：</p><ul><li>数据结构的复现：各式链表，栈，队列，树，堆，B树。</li><li>模仿深度学习的小步骤：卷积，LBP，池化等。</li><li>常见算法：动态规划，DPS，BPS，回溯算法，贪心算法。</li><li>基本方法：数学题，标准输入输出（送分，but必会）。</li></ul><p>难度集中在力扣简单题中等题，可能最后一题是困难题，但是只要把会的做对就算成功！不要学太多，学的浅=没学。</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小样本分类few-shot 初步学习</title>
      <link href="/2024/04/03/%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/03/%E5%88%9D%E6%AD%A5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 目标检测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小样本分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文跟读（一）反向传播</title>
      <link href="/2024/04/02/%E8%AE%BA%E6%96%87%E8%B7%9F%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/"/>
      <url>/2024/04/02/%E8%AE%BA%E6%96%87%E8%B7%9F%E8%AF%BB%EF%BC%88%E4%B8%80%EF%BC%89%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="论文跟读系列（一）：反向传播"><a href="#论文跟读系列（一）：反向传播" class="headerlink" title="论文跟读系列（一）：反向传播"></a>论文跟读系列（一）：反向传播</h1><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p><a href="https://www.iro.umontreal.ca/~vincentp/ift3395/lectures/backprop_old.pdf">https://www.iro.umontreal.ca/~vincentp/ift3395/lectures/backprop_old.pdf</a></p><p>【【论文必读#1：反向传播】在错误中学习，在传递中演进】 <a href="https://www.bilibili.com/video/BV1954y1o7bh/?share_source=copy_web&amp;vd_source=bd967f0d540a64617b8b612bc0f0f9a3">https://www.bilibili.com/video/BV1954y1o7bh/?share_source=copy_web&amp;vd_source=bd967f0d540a64617b8b612bc0f0f9a3</a></p><h2 id="作者介绍"><a href="#作者介绍" class="headerlink" title="作者介绍"></a>作者介绍</h2><p>这篇论文是三位大牛的合作，其中有我们比较了解的Hinton大牛。</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>反向传播入门</p><ul><li>神经网络15分钟入门！——反向传播到底是怎么传播的？ - Mr.看海的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/66534632">https://zhuanlan.zhihu.com/p/66534632</a></li><li>反向传播最佳总结——一篇文章读懂神经网络反向传播 - 干好每一天的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/662487898">https://zhuanlan.zhihu.com/p/662487898</a></li><li>温故知新——前向传播算法和反向传播算法（BP算法）及其推导 - G-kdom的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/71892752">https://zhuanlan.zhihu.com/p/71892752</a></li><li>【[5分钟深度学习] #02 反向传播算法】<a href="https://www.bilibili.com/video/BV1yG411x7Cc?vd_source=bd967f0d540a64617b8b612bc0f0f9a3">https://www.bilibili.com/video/BV1yG411x7Cc?vd_source=bd967f0d540a64617b8b612bc0f0f9a3</a></li></ul><p>其实大部分内容，知乎或者CSDN的内容会很详细，而且是中文的带图片。在我之前的博客也有记载。这里不多介绍。这篇文章是深度学习基础中的基础，看视频也好，读原文也好，要读懂反向传播的全流程，对神经网络的学习大有收益。</p><h2 id="专业英语"><a href="#专业英语" class="headerlink" title="专业英语"></a>专业英语</h2><ul><li>Learning representations by back-propagating errors：在反向传播的误差中进行学习。</li><li>BP：back-propagating 反向传播</li><li>learning procedure：学习方法 </li><li>self-organizing neural networks：自训练神经网络</li><li>symmetrical pattern：对称图案</li><li>perceptron：感知机</li></ul><h2 id="出发点，目的"><a href="#出发点，目的" class="headerlink" title="出发点，目的"></a>出发点，目的</h2><p>反向传播与感知机来说，他能够发现新的特征（features）,来自代价函数的信息通过网络向后流动，以便计算梯度。本质上，他只是用来计算梯度的。</p><h2 id="方法，创新"><a href="#方法，创新" class="headerlink" title="方法，创新"></a>方法，创新</h2><p><a href="http://t.csdnimg.cn/PCQVn">http://t.csdnimg.cn/PCQVn</a></p><p>链式法则是反向传播的基本传递方式，它大大简化了反向传播计算的复杂程度。对反向传播算法的过程进行一下总结：</p><p><strong>输入：</strong>总层数L，以及各隐藏层与输出层的神经元个数，<a href="https://www.zhihu.com/search?q=激活函数&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra={&quot;sourceType&quot;%3A&quot;article&quot;%2C&quot;sourceId&quot;%3A&quot;71892752&quot;}">激活函数</a>，损失函数，<a href="https://www.zhihu.com/search?q=迭代步长&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra={&quot;sourceType&quot;%3A&quot;article&quot;%2C&quot;sourceId&quot;%3A&quot;71892752&quot;}">迭代步长</a> α\alpha ，最大迭代次数MAX与停止迭代阈值 ϵ\epsilon ，输入的m个训练样本 ((x1,y1),(x2,y2),…(xm,ym))((x<em>{1},y</em>{1}),(x<em>{2},y</em>{2}),…(x<em>{m},y</em>{m})) </p><p><strong>1. 初始化参数W，b</strong></p><p><strong>2. 进行前向传播算法计算</strong>，for l=2l=2 to L</p><p>z(l)=W(l)a(l−1)+b(l)z^{(l)}=W^{(l)}a^{(l-1)}+b^{(l)} </p><p>a(l)=σ(z(l))a^{(l)}=\sigma(z^{(l)}) </p><p><strong>3. 通过损失函数计算输出层的梯度</strong></p><p><strong>4. 进行反向传播算法计算</strong>，for l=L−1l=L-1 to 2</p><p><img src="https://pic2.zhimg.com/v2-47606ddd08c7c073d4c284eb33ff7149_b.jpg" alt="img"></p><p><strong>5. 更新W，b</strong></p><p>通过<a href="https://www.zhihu.com/search?q=梯度下降算法&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra={&quot;sourceType&quot;%3A&quot;article&quot;%2C&quot;sourceId&quot;%3A&quot;71892752&quot;}">梯度下降算法</a>更新权重ww和偏置bb的值，α\alpha为学习率其中α∈(0,1]\alpha\in(0,1]。</p><p><img src="https://pic2.zhimg.com/v2-2efb3ca24cce35c7869943a08c1de961_b.jpg" alt="img"></p><p><strong>6. 如果所有W，b的变化值都小于停止迭代阈值ϵ，则跳出迭代循环</strong></p><p><strong>7. 输出各隐藏层与输出层的线性关系系数矩阵W和偏置b</strong>。</p><h2 id="结果，贡献"><a href="#结果，贡献" class="headerlink" title="结果，贡献"></a>结果，贡献</h2><p>从另一个角度理解深度学习：通过多层处理，逐渐将初始的”低层”特征表示转化为“高层”特征表示后，用“简单模型”即可完成复杂的分类等学习任务，由此可将深度学习理解为进行特征学习或表示学习。</p>]]></content>
      
      
      <categories>
          
          <category> 论文跟读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反向传播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24考研经验与计划</title>
      <link href="/2024/02/26/24%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E4%B8%8E%E8%AE%A1%E5%88%92/"/>
      <url>/2024/02/26/24%E8%80%83%E7%A0%94%E7%BB%8F%E9%AA%8C%E4%B8%8E%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>结果</h1><p>本人于2023年2月开始复习考研，最终考深圳大学大数据实验工程室计算机技术（专硕）<strong>324</strong>分，</p><p><a href="https://www.imagehub.cc/image/1oBpFZ"><img src="https://s1.imagehub.cc/images/2024/02/27/facaefdc82e9bfa0ce189d95c8199052.jpeg" alt="facaefdc82e9bfa0ce189d95c8199052.jpeg"></a></p><p>算是能过复试线排在中游的水平。我分享一下考研的学习经历，以及一些零零碎碎的坑。希望未来的学弟学妹们能避免走进坑里。</p><h1>为什么考研？考研为了什么。</h1><p>大家在考虑考研的时候也看过不少的视频，考研无非是几种情况，我按最推荐考研的来排名：</p><p>1.本科生就是做科研了，对科研感兴趣，但是保研没保上。</p><p>2.本科生啥也没搞但是对科研有兴趣，有一定的伪科研经历，想考个研究生深入学习。</p><p>3.家里没钱留学，自己没能力保研，不想找工作，先考个研缓冲一下。</p><p>其他情况下，我是不推荐保研的，对做研究没兴趣，只是逃避工作而考研，就算考上研究生也很难出头，不如趁着互联网还没日落西山时，找个相关岗位工作工作最好。</p><p>计算机考研现在没那么受欢迎，主要是3年时间对于互联网太长。在很多非科研领域内，三年工作经历的本科生吊打3年科研经历的研究生。你是老板你喜欢哪个？而且考研学的东西，找工作不一定用得到，工作往往要学另一套东西，老费自己的精力。但为什么还有那么多人想考研，是为了：</p><p><strong>1.就业缓冲</strong></p><p><strong>2.学历上升</strong></p><p><strong>3.科研兴趣</strong></p><p>如果这三样你都不想，建议直接找工作。如果你有米，建议留学。</p><h1>考研时间规划</h1><p>如果你是科班出生（指计算机专业考计算机专业）。</p><p>从<strong>大三下3~4月</strong>复习，时间是最合适的。</p><p>从<strong>暑假</strong>开始复习，时间会紧张，但是也是够用的。</p><p>从<strong>九月</strong>开始复习，时间会非常非常紧张，除非你有良好的基础，否则不推荐考研</p><p>除此之外，不推荐过早复习，大一大二大三最好还是去打打比赛，做做项目，谈谈恋爱，社交一下，丰富自己的简历也好，人生经历也好。</p><p>我们接下来以大三下3~4月开始复习为基本。</p><p>你<strong>考研up主</strong>的推荐，比如考研斯基啥的，小谭学长，他们也会做一些学习规划，也可以参考参考。他们免费而且有一些比较好的视频资源，可以利用一下。</p><h2 id="3-7月-考研初期-打好基础">3~7月 考研初期 打好基础</h2><p>考研初期主要做几件事情：</p><ol><li>找到心仪院校（确定所考专业）</li><li>详细阅读考试大纲，做好学习规划</li><li>英语：背单词，熟悉长难句</li><li>数学：复习高数和线代</li><li>408：从你不熟悉的科目慢慢复习。</li></ol><p>介于大三下还有很多课程和活动。基本上做到：暑假前</p><p><strong>完成408的一轮复习，</strong></p><p><strong>英语的单词和句子积累，</strong></p><p><strong>数学高数线代的一轮复习。</strong></p><p>就基本任务达标了。</p><p>当然你要是还有时间，还可以做以下突破：</p><ol><li>英语的真题，完成20年前~10年前套题，并复习。</li><li>数学，做多一套复习题。</li><li>408：把课后大题都做了。</li></ol><h2 id="7月初-9月-专项突破">7月初~9月 专项突破</h2><p>英语：阅读，新题型，作文，长难句，翻译，完型。都有对应优秀的老师，你可以跟着学，专项训练。</p><p>数学：各种专项题型，比如张宇18讲等，把各个题型掌握透。</p><p>408：专项突破，滚动复习四门科目。</p><p>政治：有空的话可以看课程进行基础复习，几倍速对着核心考案之类的书籍圈圈划划，做好政治的复习基础。</p><h2 id="9月-11月-套题积累，查漏补缺">9月~11月 套题积累，查漏补缺</h2><p>这段时间可以把各个学科的真题拉出来做做了。</p><p>英语：真题一轮全部刷完，自己觉得那方面不行就买课程买习题册继续查缺补漏。</p><p>数学：可以做往年真题了，并根据真题找出自己的漏洞。</p><p>408：真题，模拟题都可以开始做了。</p><p>政治：要开始疯狂提高选择题准确率，这个时候已经可以用小程序刷选择题了。</p><p>同时你还需要确定好心仪院校和考点，定好房间，这个后面会细嗦~</p><h3 id="11月-12月-冲刺阶段">11月~12月 冲刺阶段</h3><p>英语：真题二轮复习，背作文模板。</p><p>数学：专题训练继续，每周抽时间全程完成2~3套试卷。</p><p>408：真题，模拟题滚动训练，具体复习押了的题。</p><p>政治：背，给我背！肖四肖八，选择题给我刷！</p><h1>考研资源推荐</h1><h2 id="必备网站">必备网站</h2><p><a href="https://www.bilibili.com/">b站</a>（唯一的god）</p><p><a href="https://yz.chsi.com.cn/">中国研究生招生信息网 (chsi.com.cn)</a></p><p>心仪学校的研究生招生网，及公众号。</p><p>考点学校的研究生招生网，及公众号。</p><p><a href="https://www.chsi.com.cn/">中国高等教育学生信息网（学信网） (chsi.com.cn)</a>及公众号</p><p>某宝几块钱的百度网盘群，啥都有。</p><h2 id="推荐书籍与课程">推荐书籍与课程</h2><p>网上也有很多推荐书籍网课以及用法，不一一列举，我写一下我觉得用的不错的。最好还是锻炼好网上搜索的能力，找到自己合适的书籍和网课老师。</p><h3 id="英语">英语</h3><p>《考研真相》：本质上就是买真题与答案，解析部分可以看网上视频。</p><p>《单词之间》：有小程序，有书籍，背单词的方法灵活。</p><p>《黄皮书》：对应套题的训练，质量不如真题，仅作为保持手感的方法。</p><p>英文字帖：找个自己喜欢的字体练练吧，好看的字能加不少分的。</p><p>阅读：唐迟老师在新东方的老课程！</p><p>长难句：田静还行。</p><p>新题型：不好推荐（觉得讲的都不好）</p><p>作文：橙啦的作文模板，还算可以。</p><h3 id="数学">数学</h3><p>《金榜时代》：大套餐，作为基本书，人人都有。</p><p>[<img src="https://s1.ax1x.com/2023/02/20/pSXKU6U.png" alt="pSXKU6U.png"></p><p>《张宇18讲》：专项突破很强。</p><p>《XX模拟6卷》：买几套来玩玩，看看学学就好了，不要硬扣题目。</p><p>数学考研届老师非常多，各有千秋，不用指定跟一个，觉得讲的不好直接run。</p><p>最重要还是自己做好笔记本，做全，做清晰，不要漏掉公式，做好专题的笔记。让自己真正弄明白。</p><h3 id="政治">政治</h3><p>小程序：我用的苍盾考研，还可以。</p><p>《核心考案》：暑假复习的教材。</p><p>《肖四肖八》：必买必背。</p><p>《腿姐的技巧班》：简单听听，觉得没用就跳过就行</p><h3 id="408">408</h3><p>王道考研4本指导手册+模拟题+真题训练。</p><p>[<img src="https://s1.ax1x.com/2023/02/20/pSXK47d.png" alt="pSXK47d.png"></p><p>408可推荐的不多，因为市面也不多，网课也是看着王道考研的课程，可b站白嫖。</p><h1>细碎的坑</h1><p>1.考研报名，应届生不要慌张，看清楚自己能在哪里考试，再填报。</p><p>2.应考点选好后，早点定周边酒店，嗨贵。</p><p>3.部分学校的考研信息没有做表格，得自己整理。</p><p>4.没有精力的时候，就别硬学了，反而会影响自己的学习兴趣。</p><p>5.锻炼好身体，考研那两天很累很累，更何况还有疫情那年的教训。</p><p>6.久坐要起来动动，喝喝水，不然会痔疮。</p><h1>最后的话</h1><p>坚持到最后的人就是胜利的人。</p><p>9月份看到各个大佬保研的保研，工作上岸的上岸，确实很影响心情。</p><p>考场第一场考政治，考完发现人走了20%。考到后面，很多剩下30分钟就run了，</p><p>坚持真的就是胜利了，相信自己。</p><p>把基础搞好，心态调整好，坚持到最后，相信自己！</p><p><strong>一研为定噢~</strong></p><p><a href="https://www.imagehub.cc/image/1oBZ8I"><img src="https://s1.imagehub.cc/images/2024/02/27/8ec14a27b40407eb5b3dfd49dd7a7d68.jpeg" alt="8ec14a27b40407eb5b3dfd49dd7a7d68.jpeg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>finalshell连接虚拟机流程和常见问题</title>
      <link href="/2023/08/09/finalshell%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%B5%81%E7%A8%8B%E5%92%8C%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
      <url>/2023/08/09/finalshell%E8%BF%9E%E6%8E%A5%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%B5%81%E7%A8%8B%E5%92%8C%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>虚拟机连finalshell全100%流程和常见问题。</p><h2 id="Centos7与windows11-和VMware">Centos7与windows11 和VMware</h2><h2 id="虚拟机">虚拟机</h2><p>1、先sudo -r 进入管理员模式</p><p>2、关闭防火墙（可能不影响）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>3、查看自己虚拟机的ip和网关啥的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>如果ifconfig不了就安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install net-tools</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pChs5in"><img src="https://s1.ax1x.com/2023/07/13/pChs5in.png" alt="pChs5in.png"></a></p><p>有两个大段才说明是正确的。</p><p>其中inet  192.168.240.130 是ip地址，netmask是网络掩码，要关注。</p><p>对应ens33这是你的网卡名字后面配置需要使用。</p><p>4、查看网卡配置</p><p>进入文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/sysconfig/network-scripts/</span><br></pre></td></tr></table></figure><p>vi工具修改配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ifcfg-ens33</span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/pChsXdJ"><img src="https://s1.ax1x.com/2023/07/13/pChsXdJ.png" alt="pChsXdJ.png"></a></p><p>记住你的IPADDR和GATEWAY,DNS1。其他的都修改一致即可。</p><p>5、重新配置网络,返回终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>6、ssh的问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi cd /etc/sshd_config</span><br></pre></td></tr></table></figure><p>让 UseDNS no 或yes 。</p><p>还有就是可能出现这种情况。logind服务有问题。</p><p><a href="https://blog.csdn.net/lsqingfeng/article/details/119342825">(209条消息) FinalShell 连接出现 chanel is not opened解决方案记录_channel is not opened_一缕82年的清风的博客-CSDN博客</a></p><h2 id="配置虚拟网络">配置虚拟网络</h2><p>点机VMware虚拟，Workstation 编辑  虚拟网络编辑器</p><p><a href="https://imgse.com/i/pChy1eg"><img src="https://s1.ax1x.com/2023/07/13/pChy1eg.png" alt="pChy1eg.png"></a></p><p>跟虚拟机内部配置网段要适应。</p><p><a href="https://imgse.com/i/pChytWq"><img src="https://s1.ax1x.com/2023/07/13/pChytWq.png" alt="pChytWq.png"></a></p><h2 id="主机网卡">主机网卡</h2><p>1、wndows 操作面板，查看网络连接</p><p><a href="https://imgse.com/i/pChyrTJ"><img src="https://s1.ax1x.com/2023/07/13/pChyrTJ.png" alt="pChyrTJ.png"></a></p><p>2、记得你虚拟机的配置啊哈，然后把对应内容对应上，IP地址最后那个设置为1或2.</p><p><a href="https://imgse.com/i/pChy7tA"><img src="https://s1.ax1x.com/2023/07/13/pChy7tA.png" alt="pChy7tA.png"></a></p><p>3、win+R cmd 回车 ping 192.168.240.130 对应的地址</p><p>ping通就nice。</p><p><a href="https://imgse.com/i/pChyL1P"><img src="https://s1.ax1x.com/2023/07/13/pChyL1P.png" alt="pChyL1P.png"></a></p><p>4、进入finalshell。选择ssh连接，输入相关用户名和主机。</p><p>注意！端口号默认22，就用22，否则你得进入虚拟机看防火墙和ssh的内容更加麻烦。</p><p><a href="https://imgse.com/i/pCh6ipq"><img src="https://s1.ax1x.com/2023/07/13/pCh6ipq.png" alt="pCh6ipq.png"></a></p><p>然后就欧克了。</p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常见问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HOG和LBP</title>
      <link href="/2023/06/14/HOG%E5%92%8CLBP/"/>
      <url>/2023/06/14/HOG%E5%92%8CLBP/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机视觉中的特征提取"><a href="#计算机视觉中的特征提取" class="headerlink" title="计算机视觉中的特征提取"></a>计算机视觉中的特征提取</h1><h2 id="LBP-local-binary-pattern"><a href="#LBP-local-binary-pattern" class="headerlink" title="LBP(local binary pattern)"></a>LBP(local binary pattern)</h2><h3 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h3><p>是一种用来描述图像局部纹理特征的算子。</p><ul><li>将中心像素点A的值与其最临近的8个像素点的值逐个比较<ul><li>若A大于其临近点的像素值，则得到0。</li><li>若A小于其临近点的像素值，则得到1。</li></ul></li><li>最后，将所得到的8个0或1的值连起来。</li><li>得到一个8位的二进制序列。</li><li>将该二进制序列转换为十进制数作为A的LBP值</li></ul><h3 id="计算过程"><a href="#计算过程" class="headerlink" title="计算过程"></a>计算过程</h3><h2 id=""><a href="#" class="headerlink" title=""></a><a href="https://imgse.com/i/pCngoZj"><img src="https://s1.ax1x.com/2023/06/14/pCngoZj.png" alt="pCngoZj.png"></a></h2><p><a href="https://imgse.com/i/pCngqJ0"><img src="https://s1.ax1x.com/2023/06/14/pCngqJ0.png" alt="pCngqJ0.png"></a></p><p>原始的LBP不具有旋转不变性，这样我们就提出了旋转不变的LBP模式。</p><p><a href="https://imgse.com/i/pCn2pw9"><img src="https://s1.ax1x.com/2023/06/14/pCn2pw9.png" alt="pCn2pw9.png"></a></p><p><a href="https://imgse.com/i/pCn2PF1"><img src="https://s1.ax1x.com/2023/06/14/pCn2PF1.png" alt="pCn2PF1.png"></a></p><h2 id="HOG"><a href="#HOG" class="headerlink" title="HOG"></a>HOG</h2><p><a href="http://t.csdn.cn/kyFTT">推荐博客1</a></p><p>方向梯度直方图（Histogram of Oriented Gradient, HOG）特征是一种在计算机视觉和图像处理中用来进行物体检测的特征描述子。它通过计算和统计图像局部区域的梯度方向直方图来构成特征。</p><p>HOG算法的基本思想是提取图像局部区域的梯度方向信息，并利用这些信息来描述图像的外观特征。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HOG算法的基本思想是提取图像局部区域的梯度方向信息，并利用这些信息来描述图像的外观特征。具体来说，HOG算法包括以下几个步骤：</span><br><span class="line"></span><br><span class="line">图像预处理： 首先对图像进行预处理，包括灰度化、归一化等操作，以便后续处理。</span><br><span class="line"></span><br><span class="line">计算梯度： 对图像进行梯度计算，常用的方法是利用Sobel算子或Prewitt算子来计算图像中每个像素点的梯度幅值和方向。</span><br><span class="line"></span><br><span class="line">划分单元格： 将图像划分为若干个单元格（Cell），通常选择较小的尺寸，比如8x8像素。每个单元格内的像素梯度方向信息将用于后续的特征提取。</span><br><span class="line"></span><br><span class="line">计算单元格内的梯度直方图： 对每个单元格内的像素梯度方向信息进行统计，生成该单元格的梯度直方图。通常，将梯度方向划分为若干个方向区间（一般为9个），并统计每个方向区间内的梯度强度。</span><br><span class="line"></span><br><span class="line">块归一化： 将图像划分为若干个块（Block），每个块由多个相邻的单元格组成。对每个块内的梯度直方图进行归一化处理，目的是增强对光照和阴影的鲁棒性。</span><br><span class="line"></span><br><span class="line">特征向量的拼接： 将所有块内的归一化梯度直方图拼接成一个特征向量，作为最终的图像特征表示。</span><br><span class="line"></span><br><span class="line">通过上述步骤，HOG算法可以有效地提取图像的局部纹理和形状信息，形成一个用于目标检测和图像分类的高维特征向量。这些特征向量通常会输入到支持向量机（SVM）等分类器中进行训练和分类。HOG算法在行人检测、车辆检测等领域取得了很好的效果，并成为目标检测领域的经典算法之一。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="/2023/05/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2023/05/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>以下参考自珠海科技学院PPT和广东工业大学。</p><h1>0 设计模式学习步骤/考试结构</h1><blockquote><p>1.模式动机与定义</p><p>2.模式结构与分析</p><p>3.模式实例与解析</p><p>4.模式效果与应用</p><p>5.模式扩展</p></blockquote><p>考试题目结构：</p><ul><li>概念题：3道*5分 = 15</li><li>简答题：4*15 = 60</li><li>设计题：1* 25 = 25</li></ul><h1>1 设计模式概念</h1><h2 id="1-1-模式">1.1 模式</h2><p><strong>模式</strong>是在特定环境中解决问题的一种方案。</p><p>模式的<strong>经典定义</strong>（ Alexander ）：每个模式都描述了一个在我们的环境中不断出现的问题，然后描述了该问题的解决方案的核心。通过这种方式，我们可以无数次地重用那些已有的解决方案，无需再重复相同的工作。</p><p><strong>软件模式</strong>是模式概念在软件开发领域中的应用，它是对软件开发中某种特定“问题”的“解法”的统一表示，它和 Alexander 所描述的模式定义完全相同，即软件模式等于一定条件下出现的问题以及解决方案。</p><p>软件模式并非仅限于<strong>设计模式</strong>，还包括<strong>架构模式</strong>、<strong>分析模式</strong>和<strong>过程模式</strong>等。</p><h2 id="1-2-模式要素与结构">1.2 模式要素与结构</h2><p><strong>模式三要素：</strong></p><p>Context（模式可适用的前提条件）</p><p>Theme或Problem（在特定条件下要解决的目标问题）</p><p>Solution（对目标问题求解过程中各种物理关系的记述）。</p><p>软件模式的<strong>基本结构</strong>由4个部分构成：</p><p>模式名称</p><ul><li>问题描述</li><li>前提条件（环境或约束条件）</li><li>解法</li><li>效果</li></ul><h2 id="1-3-定义与要素">1.3 定义与要素</h2><p>**设计模式（Design Pattern）**定义：是一套被反复使用、多数人知晓、经过分类编目的代码设计经验的总结。</p><p>使用设计模式是为了可重用代码、让代码更<strong>容易被他人理解、保证代码可靠性</strong>。</p><p>设计模式的要素有名称、问题、目的、解决方案、效果和实例代码等，其中的关键元素包括以下四个方面：</p><p><strong>模式名称 (Pattern name)</strong></p><p><strong>问题 (Problem)</strong></p><p><strong>解决方案 (Solution)</strong></p><p><strong>效果(Consequences)</strong></p><h2 id="1-4-设计模式的分类">1.4 设计模式的分类</h2><h3 id="1-4-1-根据使用目的划分">1.4.1 根据使用目的划分</h3><p>根据模式的使用目的，可分为如下三种：</p><p><strong>1.创建型（Creational）模式，用于创建对象，将对象的创建与使用分离。</strong></p><p><strong>2.结构型(Structural)模式，用于处理类或对象的组合，将类或对象按某种布局组成更大的结构。</strong></p><p><strong>3.行为型（Behavioral）模式，用于描述对类或对象怎样交互和怎样分配职责。</strong></p><h3 id="1-4-2-根据范围划分">1.4.2 根据范围划分</h3><p>根据处理类之间关系还是对象之间的关系，可分为<strong>类模式</strong>和<strong>对象模式</strong>两种。</p><ol><li>类模式处理类之间的关系，通过继承（或实现）建立，在编译时刻就被确定下来，具有静态性。</li><li>对象模式处理对象间的关系，这些关系在运行时刻变化，具有动态性。</li></ol><h3 id="1-4-3-设计模式23类">1.4.3 设计模式23类</h3><p><a href="https://imgse.com/i/p9t72NV"><img src="https://s1.ax1x.com/2023/05/04/p9t72NV.md.png" alt="p9t72NV.md.png"></a></p><p>另一种表达方式：</p><p><a href="https://imgse.com/i/p9t7X9O"><img src="https://s1.ax1x.com/2023/05/04/p9t7X9O.png" alt="p9t7X9O.png"></a></p><h2 id="1-5-设计模式优点">1.5 设计模式优点</h2><p>软件开发过程中，合理使用设计模式， 使程序呈现高内聚、低耦合的特性，具有如下优点：</p><p>1.更好地实现代码重用</p><p>2.系统易于扩展（方便增加新的功能，也称可维护）</p><p>3.高可靠性 （增加新的功能时，对原有功能没有影响）</p><p>4.程序易于理解和交流（因为可以使用UML类图来交流）</p><h1>2 七大设计原则</h1><p><strong>设计原则</strong>是程序员在编程时应当遵守的原则，也是各种设计模式的基础（或者说是设计的依据）。</p><p>面向对象设计原则包括7个，这些原则并不是孤立存在的，它们相互依赖，相互补充。</p><p>目的是提高可维护性和可靠性。</p><p><a href="https://imgse.com/i/p9tbYJf"><img src="https://s1.ax1x.com/2023/05/04/p9tbYJf.png" alt="p9tbYJf.png"></a></p><p>1 开闭原则（OCP）</p><p>2 依赖倒置原则（DIP）</p><p>3 里氏代换原则（LSP）</p><p>4 合成-聚合复用原则（CARP）</p><p>5 单一职责原则（SRP）</p><p>6 迪米特法则（LoD 或 PLK）</p><p>7 接口隔离原则（ISP）</p><h1>3 类间关系（不考）</h1><p>在Java语言（以下默认）中，普通类使用关系字class定义，类方法都需要使用一对花括号{…}表示方法体（方法的实现代码）。</p><p>抽象类使用<code>abstract class</code>定义，必须包含有使用abstract定义的抽象方法。抽象方法没有使用一对花括号{…}定义的方法体，抽象类也可以包含有方法体的普通方法。</p><p>接口使用关键字<code>interface</code>定义，它定义的所有方法默认是抽象方法（尽管通常省略了关键字abstract）</p><p>注意：设计模式研究类间关系时，当然会涉及类与类、类与抽象类、类与接口之间的关系，并认为接口是一种特殊的类。</p><h2 id="3-1-泛化关系">3.1 泛化关系</h2><p>使用泛化关系（Generalization）也就是继承关系，也称为“is-a”关系。泛化关系用于描述父类与子类之间的关系，父类又称作基类或超类，子类又称作派生类。</p><p>在代码实现时，使用面向对象的继承机制来实现泛化关系。在Java语言中，使用extends关键字；在C++ 、C#中，使用冒号“：”来实现。</p><p><a href="https://imgse.com/i/p9tvMy8"><img src="https://s1.ax1x.com/2023/05/04/p9tvMy8.png" alt="p9tvMy8.png"></a></p><h2 id="3-2-实现关系">3.2 实现关系</h2><p>实现关系（Realization）是指接口与实现类之间的实现关系，接口实现类需要实现接口中声明的所有抽象方法。</p><p>在Java语言中，使用关键字implements来表示实现关系。</p><p>示例：类Ship和类Car都实现了接口Vehicle。</p><p><a href="https://imgse.com/i/p9tvJFs"><img src="https://s1.ax1x.com/2023/05/04/p9tvJFs.png" alt="p9tvJFs.png"></a></p><h2 id="3-3-关联关系">3.3 关联关系</h2><p>关联关系（Association）表示一类对象与另一类对象之间的有（has a）联系，它是一种表示整体与部分的结构化关系。</p><p>在使用C#、C++和Java等编程语言中，关联关系通常是将一个类（接口）类型的对象作为另一个类的属性 。代码中，部分类对象表现为全局变量。</p><p>关联关系可分为单向关联和双向关联。</p><p>单向关联示例： Customer与Address（顾客与快递地址）</p><p>双向关联示例： Employee与Department（员工—部门）</p><p>关联关系通常有聚合与组合2种使用方式，它们通过代码加以区分。</p><h3 id="3-3-1-聚合">3.3.1 聚合</h3><p>聚合（Aggregation）关系表现在部分类对象可以脱离整体类对象而独立存在。</p><p>在代码实现时，部分类对象通过它的构造器或setter方法注入。</p><p><a href="https://imgse.com/i/p9tvBmF"><img src="https://s1.ax1x.com/2023/05/04/p9tvBmF.png" alt="p9tvBmF.png"></a></p><h3 id="3-3-2-组合">3.3.2 组合</h3><p>组合（Composition）关系中，部分类对象与整体类对象具有统一的生存期。当整体类对象消亡时，部分类对象也将消亡。或者说，整体类对象控制了部分类对象的生命周期。</p><p>在代码实现时，部分类对象在整体类属性声明时或它的构造方法里实例化。</p><p><a href="https://imgse.com/i/p9tvTkd"><img src="https://s1.ax1x.com/2023/05/04/p9tvTkd.png" alt="p9tvTkd.png"></a></p><h3 id="3-3-3-自关联">3.3.3 自关联</h3><p>在系统中，可能会存在一些类的属性对象类型为该类本身，这种建立自身关联的关系称为自关联。例如：单链表中的结点类。</p><p><a href="https://imgse.com/i/p9tvO6f"><img src="https://s1.ax1x.com/2023/05/04/p9tvO6f.png" alt="p9tvO6f.png"></a></p><h2 id="3-4-依赖关系">3.4 依赖关系</h2><p>依赖关系（Dependency）是指两个事物之间的<strong>使用</strong>关系。</p><p>一个类只要用（using）到了另一个类，那么它们之间就存在依赖关系。如果没有对方，连编译都通过不了（IDE是自动编译，此时有波浪线提示）。</p><p>在代码中，依赖关系通过如下三种方式来体现依赖类：</p><p>（1）方法参数类型</p><p>（2）方法返回值类型</p><p>（3）在方法代码里使用了另外的类。</p><h2 id="3-5-UML类图表示">3.5 UML类图表示</h2><p><a href="https://imgse.com/i/p9NS50U"><img src="https://s1.ax1x.com/2023/05/04/p9NS50U.png" alt="p9NS50U.png"></a></p><ul><li><strong>泛化关系用带空心三角形的直线</strong></li><li><strong>实现关系用带空心三角形的虚线</strong></li><li><strong>关联关系用实线连接有关联的两个类</strong></li><li><strong>依赖关系用带箭头的虚线表示</strong></li></ul><h1>4 创建型模式</h1><p>创建型模式(Creational Pattern)对<strong>类的实例化过程进行了抽象</strong>，能够将软件模块中<strong>对象的创建和对象的使用分离。</strong></p><p>为了使软件的结构更加清晰，外界对于这些对象只需要知道它们共同的接口，而不清楚其具体的实现细节，使整个系统的设计更加符合单一职责原则。</p><p>创建型模式在创建什么（What），由谁创建（Who），何时创建（When）等方面都为软件设计者提供了尽可能大的灵活性。</p><p>创建型模式<strong>隐藏了类的实例的创建细节</strong>，通过隐藏对象如何被创建和组合在一起达到使整个系统独立的目的。</p><p>创建型设计模式（Creational Design Pattern）描述如何创建对象，将对象的创建和对象的使用分离开，因而符合单一职责原则。由于创建型模式封装了对象的创建细节，客户端无需关心对象的创建细节，这就降低了系统耦合度，因而便于扩展，符合开闭原则。</p><p>创建型模式可划分为类创建型模式和对象创建型模式。在GoF23的5种创建型模式中，只有工厂方法模式属于类创建型模式；而抽象工厂、单例、原型和建造者等都属于对象创建型模式。</p><h2 id="4-1-工厂模式">4.1 工厂模式</h2><p><a href="https://imgse.com/i/p9NpJBT"><img src="https://s1.ax1x.com/2023/05/04/p9NpJBT.png" alt="p9NpJBT.png"></a></p><h3 id="4-1-1-简单工厂模式（不属于23类）">4.1.1 简单工厂模式（不属于23类）</h3><p>简单工厂模式（Simple Factory Pattern）定义：又称为静态工厂方法（Static Factory Method）模式，它属于类创建型模式。在简单工厂模式中，根据参数的不同返回不同类的实例。</p><blockquote><p>模式动机：</p><p>只需要知道水果的名字，就能得到相应的水果。</p><p>再考虑一种场景。客户端需要创建和使用不同类型的电视机对象，不同品牌的电视机都源自同一个电视机抽象类。我们希望客户端不需要知道这些具体的品牌电视机名字，只需要知道电视品牌名称并提供一个调用方便的方法，把参数传入方法就可返回一个相应的电视机对象，以实现电视机对象创建与使用的分离。</p></blockquote><p>简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有共同的父类。</p><p>简单工厂模式的核心是工厂类，在没有工厂类之前，客户端一般会使用<code>new</code>关键字来直接创建产品对象。</p><p>在引入工厂类之后，客户端可以通过工厂类来创建产品，在简单工厂模式中，工厂类提供了一个静态工厂方法供客户端使用，根据所传入的参数不同可以创建不同的产品对象。</p><p>在客户端代码中，我们通过调用工厂类的静态方法即可得到产品对象。</p><p><a href="https://imgse.com/i/p9NpTDf"><img src="https://s1.ax1x.com/2023/05/04/p9NpTDf.png" alt="p9NpTDf.png"></a></p><p><a href="https://imgse.com/i/p9Npsu6"><img src="https://s1.ax1x.com/2023/05/04/p9Npsu6.png" alt="p9Npsu6.png"></a></p><h3 id="4-1-2-工厂方式模式（类创建型）">4.1.2 工厂方式模式（类创建型）</h3><p>模式动机：简单工厂模式如果需要增加新的产品类型，那么需要修改工厂类的代码，这就使得整个设计在一定程度上违反了“开放封闭原则”。我们定义一个抽象工厂类，并在具体工厂类里重写这个抽象按钮工厂类中定义的抽象方法。抽象化的结果使这种结构可以在不修改已有具体工厂类的情况下引进新的产品。</p><p>工厂方法模式（<strong>Factory Method Pattern</strong>）定义：定义一个用于创建对象的接口，让子类决定实例化哪一个类。</p><p>在工厂方法模式中，父类负责定义创建对象的公共接口，而子类则负责生成具体的对象，这样做的目的是将类的实例化操作延迟到子类中完成。</p><p>工厂方法模式属于类创建型模式。</p><p><a href="https://imgse.com/i/p9NpR4H"><img src="https://s1.ax1x.com/2023/05/04/p9NpR4H.png" alt="p9NpR4H.png"></a></p><p><a href="https://imgse.com/i/p9NCkef"><img src="https://s1.ax1x.com/2023/05/04/p9NCkef.png" alt="p9NCkef.png"></a></p><p><a href="https://imgse.com/i/p9NCETS"><img src="https://s1.ax1x.com/2023/05/04/p9NCETS.png" alt="p9NCETS.png"></a></p><h3 id="4-1-3-抽象工厂模式">4.1.3 抽象工厂模式</h3><p>**模式动机：**在工厂方法模式中，每个具体工厂对应一种具体产品。有时，我们需要一个工厂可以提供多个产品对象，而不是单一的产品对象。</p><p>抽象工厂模式（<strong>Abstract Factory Pattern</strong>）<strong>定义</strong>：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。</p><p>抽象工厂模式属于对象创建型模式</p><p><strong>抽象工厂模式与访问者模式</strong>有一定的相似性。</p><p><a href="https://imgse.com/i/p9NPVnx"><img src="https://s1.ax1x.com/2023/05/04/p9NPVnx.png" alt="p9NPVnx.png"></a></p><blockquote><p>如果增加新的品牌，即增加一个抽象工厂的子类，则只需要相应地增加该工厂生产的产品类。因此，抽象工厂模式符合开闭原则（如同工厂方法模式）。</p><p>如果增加新的产品类型，则需要添加相应的抽象产品及其子类。同时，还需要在抽象工厂里添加新的抽象方法，在具体工厂重写新增的抽象方法。因此，抽象工厂模式属于对象创建型模式，且不支持添加新的产品类型。</p><p>由于工厂方法模式只有一个产品类型，因此，工厂方法模式是抽象工厂模式的退化。</p></blockquote><p><a href="https://imgse.com/i/p9NPnAO"><img src="https://s1.ax1x.com/2023/05/04/p9NPnAO.png" alt="p9NPnAO.png"></a></p><h2 id="4-2-单例模式">4.2 单例模式</h2><h3 id="模式动机："><strong>模式动机</strong>：</h3><p>对于系统中的某些类来说，有且只能有一个实例。</p><p>（1）一个系统只能有一个窗口管理器。</p><p>（2）系统中可以有许多打印机，但是只能有一个打印机正在工作。</p><h3 id="模式定义：">模式定义：</h3><p>单例模式（Singleton Pattern）定义：确保一个类只有一个实例，并提供一个全局访问点来访问这个唯一实例。</p><p>单例模式属于对象创建型模式。</p><p>单例负责类的实例的创建，且是唯一的。因此，在单例类的外部无法使用new创建。否则，该类的实例对象就不是单例。</p><h3 id="模式结构：">模式结构：</h3><p><a href="https://imgse.com/i/p9NPa4g"><img src="https://s1.ax1x.com/2023/05/04/p9NPa4g.png" alt="p9NPa4g.png"></a></p><h3 id="模式示例">模式示例</h3><p><a href="https://imgse.com/i/p9NPyD0"><img src="https://s1.ax1x.com/2023/05/04/p9NPyD0.png" alt="p9NPyD0.png"></a></p><h2 id="4-3-原型模式">4.3 原型模式</h2><h3 id="模式动机">模式动机</h3><p>有些对象的创建过程较为复杂，而且有时候需要频繁创建，原型模式通过给出一个原型对象来指明所要创建的对象的类型，然后用复制这个原型对象的办法创建出更多同类型的对象。这就是原型模式的动机。</p><h3 id="模式应用场景：">模式应用场景：</h3><p>原型模式用以实现类型相同、内存地址不同的对象复制。</p><p>原型模式通过复制一个已有实例简化对象的创建过程。</p><p>很多软件提供的复制、粘贴功能都是原型模式的应用。</p><h3 id="模式定义">模式定义</h3><p>原型模式（Prototype Pattern）定义：采用原型实例指定创建对象的种类，并且通过<strong>拷贝</strong>这些原型创建新的对象。原型模式允许<strong>一个对象再创建另外一个可定制的对象</strong>，无需知道任何创建的细节。</p><h3 id="模式结构：-2">模式结构：</h3><p><a href="https://imgse.com/i/p9NiFIS"><img src="https://s1.ax1x.com/2023/05/04/p9NiFIS.png" alt="p9NiFIS.png"></a></p><h3 id="模式实现">模式实现</h3><p>原型模式的实现表现在重写的抽象方法，可以划分为通用和专用两种实现方式。</p><p>原型模式的通用实现方式是在抽象方法里使用new运算符创建原型对象，将相关参数传入新建的原型对象后再返回。</p><p>通过克隆方法创建的对象是全新的对象，在内存中拥有新的地址。</p><p>原型模式的专用实现方式使用Java语言中顶级对象Object定义的克隆方法clone()和不含任何抽象方法的克隆接口java.lang. Cloneable。</p><h2 id="4-4-建造者模式">4. 4 建造者模式</h2><blockquote><p><strong>建造者模式</strong>考虑复杂产品的构建，实现产品构建与它的表示分离。</p><p>使得同样的构建过程可以创建不同的表示。</p><p>允许用户通过指定复杂对象的类型和内容就可以构建完成，而不需要知道内部的具体构建细节。</p><p>建造者模式与工厂方法模式的出发点不同、类图部分相同（泛化-依赖） 。</p><p><strong>装饰模式</strong>属于结构型，用于动态地给已有对象添加额外的功能。</p><p>建造者模式与命令模式有一定的相似性（存在三种关系：聚合-泛化-依赖）。</p></blockquote><h3 id="模式动机-2">模式动机</h3><p>模式动机：在某些情况下，一个对象会有一些重要的属性，在它们没有恰当的值之前，对象不能作为一个完整的产品使用。比如，一个电子邮件有发件人地址、收件人地址、主题、内容、附录等部分，至少收件人地址未被赋值之前，这个电子邮件不能发出。</p><h3 id="模式定义-2">模式定义</h3><p>建造者模式（<strong>Builder Pattern</strong>）：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p><p>建造者模式是一步一步创建一个复杂的对象，它允许用户通过指定复杂对象的类型和内容就可以构建完成，而不需要知道内部的具体构建细节。</p><h3 id="模式结构">模式结构</h3><p><a href="https://imgse.com/i/p9NFeYD"><img src="https://s1.ax1x.com/2023/05/04/p9NFeYD.png" alt="p9NFeYD.png"></a></p><p><strong>产品指挥者****Director</strong>的引入，使得客户端不需要了解产品的构建细节。</p><p>通过<strong>Director</strong>控制复杂产品的建造过程。相同的建造过程，通过使用不同的建造者，可以得到不同的产品表示。</p><p>实际应用本模式时，需要在ConcreteBuilder里定义与Product相同的字段，以便返回完整的产品。</p><h1>5 结构型模式</h1><p>在GoF提出的23种设计模式中，依次包含了<strong>外观、适配器、组合、代理、桥接、装饰和享元</strong>七种。</p><p>结构型设计模式描述如何<strong>将类或对象结合在一起形成更大的结构，并可划分为类结构型模式和对象结构型模式</strong>。只有类适配器模式是类结构型，其他结构型模式都是对象结构型模式。</p><p>类结构型模式关心类的组合，由多个类可以组合成更大的系统，一般只存在继承关系和实现关系。</p><p>对象结构型模式关心类与对象的组合，通过关联关系使得在一个类中定义另一个类的实例对象，然后通过该对象调用其方法。</p><p>根据合成-聚合复用原则，在系统中尽量使用关联关系来替代继承关系。</p><h2 id="5-1-外观模式">5.1 外观模式</h2><h3 id="模式动机-3">模式动机</h3><p>只需要与外观对象打交道，不需要与子系统内部的很多对象打交道。</p><blockquote><p>一台计算机由CPU、内存和硬盘等子系统组成，机箱聚合了其它子系统，只需要按机箱上的电源就可以让整个系统正常工作。</p><p>外观类屏蔽了各个子系统的内部细节，客户端Client只需要与外观类Façade对象打交道。</p><p>外观模式是迪米特法则的典型应用。其中，外观类对象充当Client各个与SubSystem的第三者。参见<strong>中介者</strong>模式。</p></blockquote><h3 id="模式定义-3">模式定义</h3><p>外观模式（<strong>Facade  Pattern</strong>）又称门面模式，定义：外部与一个子系统的通信必须通过一个统一的外观对象进行，为子系统中的一组接口提供一个一致的界面。外观模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。</p><p>在外观模式中，一个子系统的外部与其内部的通信通过一个统一的外观类进行，外观类将客户端与子系统的内部复杂性隔离开，使得客户端只需要与外观类角色打交道，而不需要与子系统内部的许多对象打交道。</p><h3 id="模式结构与角色">模式结构与角色</h3><p><a href="https://imgse.com/i/p9NFr7V"><img src="https://s1.ax1x.com/2023/05/04/p9NFr7V.png" alt="p9NFr7V.png"></a></p><h3 id="示例">示例</h3><p><a href="https://imgse.com/i/p9NFOcd"><img src="https://s1.ax1x.com/2023/05/04/p9NFOcd.png" alt="p9NFOcd.png"></a></p><h2 id="5-2-适配器模式">5.2 适配器模式</h2><h3 id="模式动机-4">模式动机</h3><p>将一个接口转换成客户希望的另一个接口，使接口不兼容的那些对象可以一起工作。例如，笔记本电脑的工作电压是DC 20V，我们的生活用电是220V。正常使用笔记本电脑，必须有一个电源适配器。</p><p>在软件开发中，适配器模式将现有的接口<strong>转换</strong>为客户类期望的接口，用以保证对现有类的重用，或扩展现有类的功能。</p><h3 id="模式定义-4">模式定义</h3><p>适配器模式（<strong>Adapter Pattern</strong>）定义：将一个接口转换成客户希望的另一个接口，适配器模式使接口不兼容的那些类可以一起工作，其别名为包装器（Wrapper）。</p><p>在使用上，适配器模式可以划分为类适配器和对象适配器两种。类适配器使用类继承方式，对象适配器不使用类继承方式，而是使用关联（通常是组合或聚合）方式。</p><p>角色1：适配者Adaptee，是已存在且具有特定功能但不符合目标接口的类，表示需要被适配的对象。</p><p>角色2：目标Target，表示被适配后的对象。</p><p>角色3：适配器Adapter，表示适配器对象。</p><h3 id="类适配器">类适配器</h3><p>适配器模式将现有的接口<strong>转换</strong>为客户类期望的接口，用以保证对现有类的重用，或扩展现有类的功能。</p><p>适配器模式有2种使用方式：类适配器和对象适配器。</p><p>类适配器的特点是：Adapter继承Adaptee。与桥接模式辨析。</p><p>适配器模式使接口不兼容的那些类可以一起工作，其别名为包装器（Wrapper）。装饰模式的别名也是<strong>包装器</strong>。</p><p><a href="https://imgse.com/i/p9NFxBt"><img src="https://s1.ax1x.com/2023/05/04/p9NFxBt.png" alt="p9NFxBt.png"></a></p><h3 id="对象适配器">对象适配器</h3><p><a href="https://imgse.com/i/p9Nki9g"><img src="https://s1.ax1x.com/2023/05/04/p9Nki9g.png" alt="p9Nki9g.png"></a></p><p>对象适配器与类适配器角色相同，而类（接口）间关系不同。</p><p>​    Adapter是Target的子类， Adapter聚合Adaptee。</p><p>对象适配器模式中的Target也可以被设计为接口。</p><h2 id="5-3-组合模式">5.3 组合模式</h2><h3 id="模式动机-5">模式动机</h3><p>树形结构在软件开发中随处可见，如操作系统的文件目录结构、应用软件中的菜单结构和公司组织机构等。</p><h3 id="模式定义-5">模式定义</h3><p>组合模式（<strong>Composite Pattern</strong>）定义：组合多个对象形成<strong>树形结构</strong>以表示具有部分—整体关系的层次结构。组合模式让客户端可以统一地对待单个对象和组合对象。</p><p>组合模式又称部分—整体（Part—Whole）模式，它将对象组织到树形结构中，用以描述整体与部分的关系。</p><p>组合模式存在子类聚合父类，参见<strong>装饰</strong>模式和解释器模式。</p><p>组合模式是对象结构型模式。</p><p>组合模式根据抽象构件的定义形式，可划分为透明组合模式和安全组合模式。</p><h3 id="透明组合模式">透明组合模式</h3><p>透明组合模式<strong>一致地看待</strong>叶子结点和容器结点。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/62eb3e1c0c5ee913.png" alt=""></p><h3 id="安全组合模式">安全组合模式</h3><p><strong>在安全组合模式里，<strong>叶子结点和容器结点拥有的</strong>方法有差异</strong>。</p><p>在测试程序里，使用Composite创建容器结点。</p><p>安全组合模式中“<strong>安全</strong>”的含义是叶子构件不具有容器构件特有的add(component)等方法。</p><p>根据透明组合模式的代码，<strong>改写</strong>成安全组合模式的代码，是重点。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/e19c592d90db5754.png" alt=""></p><h2 id="5-4-代理模式">5.4 代理模式</h2><h3 id="模式动机-6">模式动机</h3><p>模式动机：在网页上查看一张图片，由于网速等原因图片不能立即显示，我们可以在图片传输过程中先把一些简单的用于描述图片的文字传输到客户端，此时这些文字就成为了图片的代理。</p><h3 id="应用场景">应用场景</h3><p>一个客户不想或者不能够直接引用一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用，去掉客户不能看到的内容和服务或者增添客户需要的额外服务。</p><h3 id="模式定义-6">模式定义</h3><p>n代理模式（<strong>Proxy Pattern</strong>）定义： 给某一个对象提供一个代理，并由代理对象控制对原对象的引用。代理模式的英文叫做Proxy或Surrogate。</p><h3 id="模式结构-2">模式结构</h3><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/7848fbe2ccaa1b3a.png" alt=""></p><p>**静态代理：**代理类所实现的接口和代理方法都已确定，代理类在编译后都会生成一个.class文件，我们称这种代理为静态代理（Static Proxy）。</p><p>静态代理使用的局限性主要表现在如下方面：</p><p>（1）如果需要为不同的真实主题类提供代理或者代理一个真实主题类中的不同方法，都需要增加新的代理类，即静态代理可能产生类爆炸。</p><p>（2）如果需要代理的方法很多且使用增强方法，则导致代理类的不同方法里存在大量相同的代码，即静态代理的重用性不强。</p><p><strong>动态代理</strong>可以让系统在运行时根据实际需要来动态创建代理类，让同一个代理类能够代理多个不同的目标类及不同的方法。</p><p>动态代理在事务管理和AOP（Aspect Oriented Programming，面向切面编程）等领域都有很广泛的应用。</p><p><strong>远程代理</strong>（Remote Proxy）是一种常见的代理模式，它隐藏了网络的通信细节，使得客户端可以访问在远程主机里的对象。通俗地说，远程代理是远程对象的本地代表，更一般地说，远程代理是在不同地址空间运行的远程对象。</p><h2 id="5-5-桥接模式">5.5 桥接模式</h2><h3 id="模式动机-7">模式动机</h3><p>以使用手机打电话功能为例：从<strong>品牌</strong>和<strong>外观样式</strong>实现两个维度考虑。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/8e6dbc44ce1f2f02.png" alt=""></p><h3 id="模式定义-7">模式定义</h3><p>桥接模式（<strong>Bridge Pattern</strong>）定义：将抽象部分与它的实现部分分离，使它们都可以独立地变化。</p><p>多层继承可能引起类爆炸，桥接模式是比多层继承更好的解决方案。</p><h3 id="模式结构-3">模式结构</h3><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/4014814bef637f12.png" alt=""></p><h2 id="5-6-装饰">5.6 装饰</h2><p>**模式动机/定义：**不改变原有对象的前提下，给某个对象而不是整个类添加一些功能。</p><p><strong>应用背景</strong>：例如，一个图形用户界面工具箱允许对任意一个用户界面组件添加一些特性，如边框、或是一些行为（如窗口滚动）。</p><p>装饰模式在运行时动态扩展一个对象的功能，比使用继承（编译时期就已经确定关系）更加灵活，在Java IO中有广泛的应用。</p><p>装饰模式与组合模式和解释器模式类似，也存在子类（装饰器）聚合抽象的父类。</p><p>与适配器模式一样，装饰模式的别名也是<strong>包装器</strong>。</p><blockquote><p>n抽象类Decorator作为抽象类Component的子类，可以不重写父类的抽象方法，而是延迟到具体类！</p><p>n抽象装饰类Decorator 是装饰模式的核心类，维护一个抽象构件（父类Component ）的成员对象，并使用构造器注入。</p><p>n装饰者和被装饰者可以独立变化。用户可以根据需要增加新的装饰类，在使用时再对其进行组合，原有代码无须改变，符合开闭原则。</p><p>n装饰者模式可以在运行时动态扩展一个对象的功能，比继承（编译时期就已经确定关系）更加灵活。</p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/486fd80431ffd825.png" alt=""></p><h2 id="5-7-享元">5.7 享元</h2><p><strong>模式动机</strong>：在进行共享单车平台软件设计时，按照单车的种类创建对象，需要使用享元模式，以减少创建对象的数量和内存消耗。</p><p>享元模式运用共享技术有效地支持大量细粒度对象的复用。系统只使用少量的对象，而这些对象都很近，状态变化很小，对象使用次数增多。</p><p><img src="https://s3.bmp.ovh/imgs/2023/05/04/90f82e8ec5ea0c6b.png" alt=""></p><h1>6. 行为型模式</h1><p>在GoF 23种设计模式中，依次包含了<strong>策略、模板方法、备忘录、观察者、迭代器、命令、状态、职责链、中介者、访问者和解释器</strong>等11种行为型设计模式（Behavioral Design Pattern） ，它们的使用频率由高向低，学习难度由低向高。</p><p>行为型设计模式关注系统中对象的交互，研究系统在运行时对象之间的相互通信与协作，进一步明确对象的职责。行为型模式不仅关注类与对象本身，还重点关注它们之间的相互作用和职责划分。</p><p>行为型模式可划分为<strong>类行为型模式</strong>和<strong>对象行为型</strong>模式两种。类行为型模式使用继承关系在若干类之间分配行为，主要通过多态等方式来分配父类与子类的职责，模板方法和解释器模式属于类行为型模式。对象行为型模式使用对象之间的关联关系来分配行为。由于要坚持合成-聚合复用原则，因此，大部分行为型模式属于对象行为型设计模式。</p><blockquote><p>行为型设计模式主要解决的就是“类或对象之间的交互”问题。</p><p>策略模式用于算法的自由切换和扩展。</p><p>模板方法模式是基于继承的代码复用技术，可以引入钩子方法使得子类可以控制父类的行为。</p><p>命令模式和备忘录模式都可以实现多次的撤销和恢复功能。</p><p>观察者模式是一种使用频率非常高的设计模式，凡是涉及到一对一或者一对多的对象交互场景都可以使用观察者模式。MVC架构是观察者模式的典型应用。</p><p>命令模式和职责链模式都实现了请求发送者与处理者的解耦。例如：命令模式中的Invoker调用Command, Command调用Receiver。</p><p>中介者模式是迪米特法则的典型应用，只是做一系列对象之间的消息转发，本身不产生消息。</p></blockquote><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/7a592150063bd6e5.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/8f1a79a88ff0b342.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/10fe2b63fef0fb94.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/16360774f787893a.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/04c103ca1c42da46.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/d38b985ec33b2e5d.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/bfa1818d8bd11251.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/f725f113768b3ff3.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/16628ffc96d08a8d.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/e31e13732df25c2b.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2023/05/05/e8f7eb4483938cce.png" alt=""></p><h1>复习</h1><h2 id="继承、合成、聚合的差别">继承、合成、聚合的差别</h2><p>继承、合成和聚合是三种常见的代码复用方式，它们之间的区别如下：</p><ol><li>继承（Inheritance）：子类继承父类的属性和方法，子类可以重载父类的方法或者新增自己的方法。继承使得子类与父类之间形成一种“is-a”(是一个)的关系，即子类是父类的一种具体化。</li><li>合成（Composition）：通过将多个对象实例组合在一起，来实现新的功能。例如，一个“汽车”对象由“发动机”、“轮胎”、“座位”等组成。合成使得对象之间形成了一种“has-a”（有一个）的关系。</li><li>聚合（Aggregation）：聚合与合成相似，但聚合的组成部分是可以单独存在的，不一定依赖于组合对象。例如一个“公司”对象由多个“员工”对象组成，但员工可以独立于公司存在。聚合也是“has-a”关系。</li></ol><p>继承具有类似“父子”间的层级关系，而合成和聚合则更多地强调“组合”关系。在具体的设计和实现中，应选择合适的代码复用方式。</p>]]></content>
      
      
      <categories>
          
          <category> 科目学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腐蚀与膨胀</title>
      <link href="/2023/04/26/%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/"/>
      <url>/2023/04/26/%E8%85%90%E8%9A%80%E4%B8%8E%E8%86%A8%E8%83%80/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/whiteBearClimb/article/details/123711281">(197条消息) 腐蚀与膨胀算法_腐蚀膨胀_凉拌海蜇丝的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_31568011/article/details/115413974">(197条消息) 图像腐蚀和膨胀的原理_腐蚀膨胀原理_WitransFer的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件架构实验</title>
      <link href="/2023/04/24/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/"/>
      <url>/2023/04/24/%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>2023年广东工业大学软件体系架构实验。</p><p>2023年春</p><h1>lab1：socket运用</h1><blockquote><p>使用原始socket()实现一个C/S架构的应用，支持服务器时间回显示；<br>要求：从客户端发送命令，接收服务器的时间并显示到终端；</p></blockquote><h2 id="sever-c-代码">sever.c 代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;ws2_32.lib&quot;</span>) <span class="comment">//链接ws2_32.lib库</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sockaddr_in</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr</span> <span class="title">sockaddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    WSADATA wsaData;</span><br><span class="line">    <span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>) <span class="comment">//初始化WinSock库</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WSAStartup failed!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建套接字</span></span><br><span class="line">    SOCKET server_sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">    <span class="keyword">if</span> (server_sockfd == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Create socket failed!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置套接字选项（可选）</span></span><br><span class="line">    <span class="type">int</span> opt = <span class="number">1</span>;</span><br><span class="line">    setsockopt(server_sockfd, SOL_SOCKET, SO_REUSEADDR, (<span class="type">const</span> <span class="type">char</span>*)&amp;opt, <span class="keyword">sizeof</span>(opt));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定端口</span></span><br><span class="line">    sockaddr_in server_addr;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;server_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(server_addr));</span><br><span class="line">    server_addr.sin_family = AF_INET;</span><br><span class="line">    server_addr.sin_port = htons(<span class="number">9999</span>); <span class="comment">//绑定端口号</span></span><br><span class="line">    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">    <span class="keyword">if</span> (bind(server_sockfd, (sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Bind port failed!\n&quot;</span>);</span><br><span class="line">        closesocket(server_sockfd); <span class="comment">//关闭套接字</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听端口</span></span><br><span class="line">    <span class="keyword">if</span> (listen(server_sockfd, <span class="number">5</span>) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Listen failed!\n&quot;</span>);</span><br><span class="line">        closesocket(server_sockfd); <span class="comment">//关闭套接字</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Server is listening...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 等待客户端连接</span></span><br><span class="line">        sockaddr_in client_addr;</span><br><span class="line">        <span class="type">int</span> client_len = <span class="keyword">sizeof</span>(client_addr);</span><br><span class="line">        SOCKET conn_sockfd = accept(server_sockfd, (sockaddr*)&amp;client_addr, &amp;client_len);</span><br><span class="line">        <span class="keyword">if</span> ( conn_sockfd == INVALID_SOCKET )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Accept failed!\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取客户端数据</span></span><br><span class="line">        <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">        <span class="built_in">memset</span>(buff, <span class="number">0</span>, <span class="keyword">sizeof</span>(buff));</span><br><span class="line">        recv(conn_sockfd, buff, <span class="keyword">sizeof</span>(buff), <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Received command from client: %s\n&quot;</span>, buff);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断客户端发送的命令，并发送对应的响应</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(buff, <span class="string">&quot;time&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">time_t</span> now = time(<span class="literal">NULL</span>);</span><br><span class="line">            <span class="type">char</span>* timeStr = ctime(&amp;now);</span><br><span class="line">            send(conn_sockfd, timeStr, <span class="built_in">strlen</span>(timeStr), <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Sent time to client: %s&quot;</span>, timeStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">const</span> <span class="type">char</span>* errMsg = <span class="string">&quot;Invalid command!&quot;</span>;</span><br><span class="line">            send(conn_sockfd, errMsg, <span class="built_in">strlen</span>(errMsg), <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Sent error message to client: %s&quot;</span>, errMsg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭连接套接字</span></span><br><span class="line">        closesocket(conn_sockfd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭监听套接字</span></span><br><span class="line">    closesocket(server_sockfd);</span><br><span class="line">    WSACleanup(); <span class="comment">//释放WinSock库</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="client-c-代码">client.c 代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;ws2_32.lib&quot;</span>) <span class="comment">//链接ws2_32.lib库</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sockaddr_in</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr</span> <span class="title">sockaddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123; </span><br><span class="line">WSADATA wsaData;</span><br><span class="line"><span class="keyword">if</span> (WSAStartup(MAKEWORD(<span class="number">2</span>,<span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>) <span class="comment">//初始化WinSock库 </span></span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;WSAStartup failed!\n&quot;</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建套接字</span></span><br><span class="line">SOCKET client_sockfd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line"><span class="keyword">if</span> (client_sockfd == INVALID_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Create socket failed!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接服务器</span></span><br><span class="line">sockaddr_in server_addr;</span><br><span class="line"><span class="built_in">memset</span>(&amp;server_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(server_addr));</span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(<span class="number">9999</span>); <span class="comment">//连接到服务器的端口号</span></span><br><span class="line">server_addr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>); <span class="comment">//连接到服务器的IP地址</span></span><br><span class="line"><span class="keyword">if</span> (connect(client_sockfd, (sockaddr*)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Connect server failed!\n&quot;</span>);</span><br><span class="line">    closesocket(client_sockfd); <span class="comment">//关闭套接字</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送命令</span></span><br><span class="line"><span class="type">char</span> command[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter command (time): &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, command);</span><br><span class="line">send(client_sockfd, command, <span class="built_in">strlen</span>(command), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收响应</span></span><br><span class="line"><span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">memset</span>(buff, <span class="number">0</span>, <span class="keyword">sizeof</span>(buff));</span><br><span class="line">recv(client_sockfd, buff, <span class="keyword">sizeof</span>(buff), <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Received message from server: %s\n&quot;</span>, buff);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭套接字</span></span><br><span class="line">closesocket(client_sockfd);</span><br><span class="line">WSACleanup(); <span class="comment">//释放WinSock库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="演示步骤">演示步骤</h2><p>以下是基于 Windows 操作系统的演示步骤，具体步骤可能因环境不同而有所不同：</p><ol><li><p>打开两个命令提示符窗口，分别用作服务器端和客户端。</p></li><li><p>在服务器端窗口中，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc server.c -o server.exe -lws2_32</span><br></pre></td></tr></table></figure><p>该命令将编译 server.c 文件，并生成可执行文件 server.exe。</p></li><li><p>在服务器端窗口中，输入以下命令启动服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.exe</span><br></pre></td></tr></table></figure><p>该命令将启动服务器，监听 9999 端口，并等待客户端连接。如果启动成功，将会输出以下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Server started, waiting for connection...</span><br></pre></td></tr></table></figure></li><li><p>在客户端窗口中，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc client.c -o client.exe -lws2_32</span><br></pre></td></tr></table></figure><p>该命令将编译 client.c 文件，并生成可执行文件 client.exe。</p></li><li><p>在客户端窗口中，输入以下命令启动客户端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client.exe</span><br></pre></td></tr></table></figure><p>此时将会提示输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please enter command (time):</span><br></pre></td></tr></table></figure></li><li><p>在客户端窗口中，输入 <code>time</code> 命令并回车，等待服务器响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time</span><br></pre></td></tr></table></figure><p>如果连接成功，客户端将会收到服务器返回的时间信息，并输出到控制台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Received message from server: Tue Sep 28 04:59:36 2021</span><br></pre></td></tr></table></figure></li><li><p>可以在客户端窗口中多次输入命令以观察不同的服务器响应。</p></li><li><p>在客户端窗口中输入 <code>exit</code> 命令退出客户端：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>或直接关闭客户端窗口。</p></li><li><p>如果服务器端不再需要运行，可以在服务器端窗口中按 Ctrl+C 组合键退出服务器程序。</p></li></ol><p>注意：在使用命令行输入命令和输出响应时，请确保程序不会受到缓冲区溢出攻击等风险。建议使用安全的输入函数和输出函数，例如 <code>fgets()</code> 和 <code>printf_s()</code>。</p><h2 id="注意事项">注意事项</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1. 代码中使用了 WinSock 库，需要链接 ws2_32.lib 库，否则会报错。</span><br><span class="line"></span><br><span class="line">2. 代码中使用了 SOCK_STREAM 协议，即 TCP 协议，因此需要在服务器端先监听端口，而在客户端连接之前，先绑定端口并监听。</span><br><span class="line"></span><br><span class="line">3. 代码中使用了命令行输入和输出，因此需要在控制台中运行程序。</span><br><span class="line"></span><br><span class="line">4. 代码中只实现了一个简单的 C/S 应用，其他功能需要自行扩展。</span><br><span class="line">5. 代码中使用了原始的 socket() 函数，需要注意以下几点：</span><br><span class="line"></span><br><span class="line">socket() 函数返回的是一个套接字描述符，需要通过该描述符来操作套接字。</span><br><span class="line"></span><br><span class="line">网络字节序是大端序，需要注意数据在传输过程中是否需要进行大小端转换。</span><br><span class="line"></span><br><span class="line">send() 和 recv() 函数返回的是实际发送或接收的字节数，需要考虑分包发送和接收的情况，避免数据丢失和粘包等问题。</span><br><span class="line"></span><br><span class="line">6. 代码中使用了 time() 函数获取当前时间，需要注意该函数返回的是自 1970 年 1 月 1 日 00:00:00 GMT 到当前时间的秒数，因此需要使用 ctime() 函数将其转换为可读的时间字符串。</span><br><span class="line"></span><br><span class="line">7. 代码中使用了 scanf() 函数从命令行读取用户输入的命令，需要注意该函数容易受到缓冲区溢出攻击，建议使用 fgets() 等安全的输入函数。</span><br><span class="line"></span><br><span class="line">8. 密传输等，来保障网络传输的安全性。在实际应用中，需要考虑网络连接的安全问题，如身份验证、加密传输等，来保障网络传输的安全性。</span><br></pre></td></tr></table></figure><h1>lab2：enroll 方式</h1><ul><li>注意要求linux的操作系统！</li></ul><blockquote><p>EPoll是Linux专属的一种I/O多路复用方式，因此不能在Windows环境下使用。在Windows上可以使用select等其他的I/O多路复用方式，</p></blockquote><h2 id="server-py"><a href="http://server.py">server.py</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line">SERVER_HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">SERVER_PORT = <span class="number">8000</span></span><br><span class="line">EOL1 = <span class="string">b&#x27;\n\n&#x27;</span></span><br><span class="line">EOL2 = <span class="string">b&#x27;\n\r\n&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建套接字</span></span><br><span class="line">server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">server_socket.setblocking(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绑定套接字，开始监听</span></span><br><span class="line">server_socket.bind((SERVER_HOST, SERVER_PORT))</span><br><span class="line">server_socket.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建epoll对象，并注册server_socket</span></span><br><span class="line">epoll = select.epoll()</span><br><span class="line">epoll.register(server_socket.fileno(), select.EPOLLIN)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储客户端连接信息</span></span><br><span class="line">client_sockets = &#123;&#125;</span><br><span class="line">client_data = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Server started at <span class="subst">&#123;SERVER_HOST&#125;</span>:<span class="subst">&#123;SERVER_PORT&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        events = epoll.poll(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> fileno, event <span class="keyword">in</span> events:</span><br><span class="line">            <span class="comment"># 如果是server_socket事件，表示有新的客户端连接请求</span></span><br><span class="line">            <span class="keyword">if</span> fileno == server_socket.fileno():</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        conn, client_addr = server_socket.accept()</span><br><span class="line">                        conn.setblocking(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">                        <span class="comment"># 注册新的客户端连接</span></span><br><span class="line">                        epoll.register(conn.fileno(), select.EPOLLIN)</span><br><span class="line">                        client_sockets[conn.fileno()] = conn</span><br><span class="line">                        client_data[conn.fileno()] = <span class="built_in">bytearray</span>()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">except</span> socket.error:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 如果是已连接的客户端事件，表示有消息传入</span></span><br><span class="line">            <span class="keyword">elif</span> event &amp; select.EPOLLIN:</span><br><span class="line">                client_socket = client_sockets[fileno]</span><br><span class="line">                data = client_socket.recv(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 如果客户端关闭，则注销epoll事件并关闭连接</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    epoll.unregister(fileno)</span><br><span class="line">                    client_socket.close()</span><br><span class="line">                    <span class="keyword">del</span> client_sockets[fileno]</span><br><span class="line">                    <span class="keyword">del</span> client_data[fileno]</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 将客户端发来的消息转发给其他客户端</span></span><br><span class="line">                data = client_data[fileno] + data  <span class="comment"># 拼接接收到的消息</span></span><br><span class="line">                <span class="keyword">if</span> EOL1 <span class="keyword">in</span> data <span class="keyword">or</span> EOL2 <span class="keyword">in</span> data:</span><br><span class="line">                    client_data[fileno] = <span class="built_in">bytearray</span>()</span><br><span class="line">                    <span class="keyword">for</span> socket_fileno, socket_obj <span class="keyword">in</span> client_sockets.items():</span><br><span class="line">                        <span class="keyword">if</span> socket_fileno != fileno:</span><br><span class="line">                            socket_obj.sendall(data)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    client_data[fileno] = data</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Server stopped&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    epoll.unregister(server_socket.fileno())</span><br><span class="line">    epoll.close()</span><br><span class="line">    server_socket.close()</span><br></pre></td></tr></table></figure><h2 id="client-py"><a href="http://client.py">client.py</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Client</span>:</span><br><span class="line">    HOST = <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">    PORT = <span class="number">8000</span></span><br><span class="line">    EOL = <span class="string">b&#x27;\n\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.socket.connect((self.HOST, self.PORT))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send</span>(<span class="params">self, data</span>):</span><br><span class="line">        self.socket.sendall(data + self.EOL)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_receive</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                data = self.socket.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="built_in">print</span>(data.decode())</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            self.socket.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        threading.Thread(target=self.handle_receive).start()</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data = <span class="built_in">input</span>(<span class="string">&#x27;Enter message: &#x27;</span>)</span><br><span class="line">            self.send(data.encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    client = Client()</span><br><span class="line">    client.start()</span><br></pre></td></tr></table></figure><h2 id="说明">说明</h2><p>说明：</p><p>该示例代码实现了一个简单的聊天室样例，服务器可以同时支持多个客户端连接，一个客户端发送消息，服务器会将消息转发到其他客户端并回显消息。</p><p>在服务端中，使用epoll进行I/O多路复用。当有新的客户端连接请求时，服务端会接受连接，并注册新的epoll事件。当有已连接客户端发来消息时，服务端会将消息转发给其他客户端并回显消息。客户端代码中，创建一个Client对象，通过send方法发送消息，同时开启一个线程监听服务端发来的消息。当接受到服务端发来的消息后，打印出消息内容。</p><p>需要注意的是，该示例代码只是提供了一个简单的例子，实际应用中还需要考虑线程安全、异常处理等情况。</p><h2 id="演示操作：">演示操作：</h2><p>该示例代码需要在两台或多台计算机上运行，下面演示如何在本地环境中运行该示例代码：</p><ol><li>打开两个终端窗口分别作为客户端和服务端，进入到示例代码所在的目录。</li><li>在服务端窗口中执行 <code>python server.py</code> 命令启动服务端。</li><li>在客户端窗口中执行 <code>python client.py</code> 命令启动客户端。</li></ol><p>启动客户端后，每次输入消息并按回车键发送消息，服务端会将该消息转发给其他已连接的客户端，并在客户端窗口打印出服务端转发回来的消息。可以同时在多个客户端窗口中开启客户端，并模拟多个客户端发送消息。</p><h1>lab3：libevent在linux</h1><ol><li><strong>使用libevent</strong>在linux（或windows）下实现一个WEB服务器，支持简单的<br>网页和图片的请求(C/C++)；</li><li>使用springboot实现一个支持RESTful接口的WEB应用服务器（java）；</li><li>使用<strong>django</strong>实现一个支持RESTful接口的WEB应用服务器（python);<br>要求：从浏览器发送消息，可以回显示消息和图片；</li></ol><blockquote><p>当使用makefile编译链接完成之后，即可得到server可执行文件<br>在终端下输入命令 ./server “自己定义一个端口号” “自己设定的根目录” 即可启动服务器.</p></blockquote><h2 id="makefile">makefile</h2><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">src = <span class="variable">$(<span class="built_in">wildcard</span> ./*.c)</span>  </span><br><span class="line">obj = <span class="variable">$(<span class="built_in">patsubst</span> ./%.c, ./%.o, <span class="variable">$(src)</span>)</span> </span><br><span class="line"></span><br><span class="line">myArgs= -Wall -g </span><br><span class="line">target=server</span><br><span class="line">CC=gcc</span><br><span class="line"></span><br><span class="line"><span class="section">ALL:<span class="variable">$(target)</span></span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(target)</span>:<span class="variable">$(obj)</span></span><br><span class="line"><span class="variable">$(CC)</span> <span class="variable">$^</span> -o <span class="variable">$@</span> <span class="variable">$(myArgs)</span> -levent</span><br><span class="line"></span><br><span class="line"><span class="variable">$(obj)</span>:%.o:%.c</span><br><span class="line"><span class="variable">$(CC)</span> -c <span class="variable">$^</span> -o <span class="variable">$@</span> <span class="variable">$(myArgs)</span> -levent</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">-rm -rf <span class="variable">$(obj)</span> <span class="variable">$(target)</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean ALL</span></span><br></pre></td></tr></table></figure><h2 id="main-c">main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/bufferevent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/listener.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/event.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;libevent_http.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;./event_http port path\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(chdir(argv[<span class="number">2</span>]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;dir is not exists: %s\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">        perror(<span class="string">&quot;chdir err:&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">event_base</span> *<span class="title">base</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">evconnlistener</span> *<span class="title">listener</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">event</span> *<span class="title">signal_event</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">sin</span>;</span></span><br><span class="line">    base = event_base_new();</span><br><span class="line">    <span class="keyword">if</span> (!base)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Could not initialize libevent!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(&amp;<span class="built_in">sin</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="built_in">sin</span>));</span><br><span class="line">    <span class="built_in">sin</span>.sin_family = AF_INET;</span><br><span class="line">    <span class="built_in">sin</span>.sin_port = htons(atoi(argv[<span class="number">1</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建监听的套接字，绑定，监听，接受连接请求</span></span><br><span class="line">    listener = evconnlistener_new_bind(base, listener_cb, (<span class="type">void</span> *)base,</span><br><span class="line">                    LEV_OPT_REUSEABLE | LEV_OPT_CLOSE_ON_FREE, <span class="number">-1</span>,</span><br><span class="line">                    (<span class="keyword">struct</span> sockaddr*)&amp;<span class="built_in">sin</span>, <span class="keyword">sizeof</span>(<span class="built_in">sin</span>));</span><br><span class="line">    <span class="keyword">if</span> (!listener)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Could not create a listener!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建信号事件, 捕捉并处理</span></span><br><span class="line">    signal_event = evsignal_new(base, SIGINT, signal_cb, (<span class="type">void</span> *)base);</span><br><span class="line">    <span class="keyword">if</span> (!signal_event || event_add(signal_event, <span class="literal">NULL</span>)&lt;<span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Could not create/add a signal event!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件循环</span></span><br><span class="line">    event_base_dispatch(base);</span><br><span class="line"></span><br><span class="line">    evconnlistener_free(listener);</span><br><span class="line">    event_free(signal_event);</span><br><span class="line">    event_base_free(base);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;done\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="libevent-http-c">libevent_http.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dirent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/bufferevent.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/buffer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/listener.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;libevent_http.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _HTTP_CLOSE_ <span class="string">&quot;Connection: close\r\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">response_http</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">const</span> <span class="type">char</span> *method, <span class="type">char</span> *path)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(strcasecmp(<span class="string">&quot;GET&quot;</span>, method) == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//get method ...</span></span><br><span class="line">        strdecode(path, path);</span><br><span class="line">        <span class="type">char</span> *pf = &amp;path[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(path, <span class="string">&quot;/&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(path, <span class="string">&quot;/.&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            pf=<span class="string">&quot;./&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;***** http Request Resource Path =  %s, pf = %s\n&quot;</span>, path, pf);</span><br><span class="line"></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">sb</span>;</span></span><br><span class="line">        <span class="keyword">if</span>(stat(pf,&amp;sb) &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;open file err:&quot;</span>);</span><br><span class="line">            send_error(bev);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(S_ISDIR(sb.st_mode))<span class="comment">//澶勭悊鐩綍</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//搴旇鏄剧ず鐩綍鍒楄〃</span></span><br><span class="line">            send_header(bev, <span class="number">200</span>, <span class="string">&quot;OK&quot;</span>, get_file_type(<span class="string">&quot;.html&quot;</span>), <span class="number">-1</span>);</span><br><span class="line">            send_dir(bev, pf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//澶勭悊鏂囦欢</span></span><br><span class="line">        &#123;</span><br><span class="line">            send_header(bev, <span class="number">200</span>, <span class="string">&quot;OK&quot;</span>, get_file_type(pf), sb.st_size);</span><br><span class="line">            send_file_to_http(pf, bev);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     *charset=iso-8859-1瑗挎鐨勭紪鐮侊紝璇存槑缃戠珯閲囩敤鐨勭紪鐮佹槸鑻辨枃锛?</span></span><br><span class="line"><span class="comment">     *charset=gb2312璇存槑缃戠珯閲囩敤鐨勭紪鐮佹槸绠€浣撲腑鏂囷紱</span></span><br><span class="line"><span class="comment">     *charset=utf-8浠ｈ〃涓栫晫閫氱敤鐨勮瑷€缂栫爜锛?</span></span><br><span class="line"><span class="comment">     *鍙互鐢ㄥ埌涓枃銆侀煩鏂囥€佹棩鏂囩瓑涓栫晫涓婃墍鏈夎瑷€缂栫爜涓?</span></span><br><span class="line"><span class="comment">     *charset=euc-kr璇存槑缃戠珯閲囩敤鐨勭紪鐮佹槸闊╂枃锛?</span></span><br><span class="line"><span class="comment">     *charset=big5璇存槑缃戠珯閲囩敤鐨勭紪鐮佹槸绻佷綋涓枃锛?</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *浠ヤ笅鏄緷鎹紶閫掕繘鏉ョ殑鏂囦欢鍚嶏紝浣跨敤鍚庣紑鍒ゆ柇鏄綍绉嶆枃浠剁被鍨?</span></span><br><span class="line"><span class="comment">     *灏嗗搴旂殑鏂囦欢绫诲瀷鎸夌収http瀹氫箟鐨勫叧閿瓧鍙戦€佸洖鍘?</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *<span class="title function_">get_file_type</span><span class="params">(<span class="type">char</span> *name)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span>* dot;</span><br><span class="line"></span><br><span class="line">    dot = <span class="built_in">strrchr</span>(name, <span class="string">&#x27;.&#x27;</span>);<span class="comment">//鑷彸鍚戝乏鏌ユ壘鈥?鈥欏瓧绗?濡備笉瀛樺湪杩斿洖NULL</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dot == (<span class="type">char</span>*)<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;text/plain; charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.html&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.htm&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;text/html; charset=utf-8&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.jpg&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.jpeg&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/jpeg&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.gif&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/gif&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.png&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/png&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.css&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.au&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;audio/basic&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>( dot, <span class="string">&quot;.wav&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;audio/wav&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.avi&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;video/x-msvideo&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.mov&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.qt&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;video/quicktime&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.mpeg&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.mpe&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;video/mpeg&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.vrml&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.wrl&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;model/vrml&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.midi&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(dot, <span class="string">&quot;.mid&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;audio/midi&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.mp3&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;audio/mpeg&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.ogg&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;application/ogg&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(dot, <span class="string">&quot;.pac&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;application/x-ns-proxy-autoconfig&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;text/plain; charset=utf-8&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_file_to_http</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *filename, <span class="keyword">struct</span> bufferevent *bev)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> fd = open(filename, O_RDONLY);</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">4096</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((ret = read(fd, buf, <span class="keyword">sizeof</span>(buf)) ) )</span><br><span class="line">    &#123;</span><br><span class="line">        bufferevent_write(bev, buf, ret);</span><br><span class="line">        <span class="built_in">memset</span>(buf, <span class="number">0</span>, ret);</span><br><span class="line">    &#125;</span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_header</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">int</span> no, <span class="type">const</span> <span class="type">char</span>* desp, <span class="type">const</span> <span class="type">char</span> *type, <span class="type">long</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">256</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span>(buf, <span class="string">&quot;HTTP/1.1 %d %s\r\n&quot;</span>, no, desp);</span><br><span class="line">    <span class="comment">//HTTP/1.1 200 OK\r\n</span></span><br><span class="line">    bufferevent_write(bev, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">    <span class="comment">// 鏂囦欢绫诲瀷</span></span><br><span class="line">    <span class="built_in">sprintf</span>(buf, <span class="string">&quot;Content-Type:%s\r\n&quot;</span>, type);</span><br><span class="line">    bufferevent_write(bev, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">    <span class="comment">// 鏂囦欢澶у皬</span></span><br><span class="line">    <span class="built_in">sprintf</span>(buf, <span class="string">&quot;Content-Length:%ld\r\n&quot;</span>, len);</span><br><span class="line">    bufferevent_write(bev, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">    <span class="comment">// Connection: close</span></span><br><span class="line">    bufferevent_write(bev, _HTTP_CLOSE_, <span class="built_in">strlen</span>(_HTTP_CLOSE_));</span><br><span class="line">    <span class="comment">//send \r\n</span></span><br><span class="line">    bufferevent_write(bev, <span class="string">&quot;\r\n&quot;</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_error</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev)</span></span><br><span class="line">&#123;</span><br><span class="line">    send_header(bev,<span class="number">404</span>, <span class="string">&quot;File Not Found&quot;</span>, <span class="string">&quot;text/html&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">    send_file_to_http(<span class="string">&quot;404.html&quot;</span>, bev);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_dir</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev,<span class="type">const</span> <span class="type">char</span> *dirname)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> encoded_name[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">char</span> path[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">char</span> timestr[<span class="number">64</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">sb</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">dirent</span> **<span class="title">dirinfo</span>;</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> buf[<span class="number">4096</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">sprintf</span>(buf, <span class="string">&quot;&lt;html&gt;&lt;head&gt;&lt;meta charset=\&quot;utf-8\&quot;&gt;&lt;title&gt;%s&lt;/title&gt;&lt;/head&gt;&quot;</span>, dirname);</span><br><span class="line">    <span class="built_in">sprintf</span>(buf+<span class="built_in">strlen</span>(buf), <span class="string">&quot;&lt;body&gt;&lt;h1&gt;The current directory: %s&lt;/h1&gt;&lt;table&gt;&quot;</span>, dirname);</span><br><span class="line">    <span class="comment">//娣诲姞鐩綍鍐呭</span></span><br><span class="line">    <span class="type">int</span> num = scandir(dirname, &amp;dirinfo, <span class="literal">NULL</span>, alphasort);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;num; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 缂栫爜</span></span><br><span class="line">        strencode(encoded_name, <span class="keyword">sizeof</span>(encoded_name), dirinfo[i]-&gt;d_name);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sprintf</span>(path, <span class="string">&quot;%s%s&quot;</span>, dirname, dirinfo[i]-&gt;d_name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;############# path = %s\n&quot;</span>, path);</span><br><span class="line">        <span class="keyword">if</span> (lstat(path, &amp;sb) &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(buf+<span class="built_in">strlen</span>(buf), </span><br><span class="line">                    <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;%s\&quot;&gt;%s&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>, </span><br><span class="line">                    encoded_name, dirinfo[i]-&gt;d_name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            strftime(timestr, <span class="keyword">sizeof</span>(timestr), </span><br><span class="line">                     <span class="string">&quot;  %d  %b   %Y  %H:%M&quot;</span>, localtime(&amp;sb.st_mtime));</span><br><span class="line">            <span class="keyword">if</span>(S_ISDIR(sb.st_mode))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf+<span class="built_in">strlen</span>(buf), </span><br><span class="line">                        <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;%s/\&quot;&gt;%s/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%ld&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>,</span><br><span class="line">                        encoded_name, dirinfo[i]-&gt;d_name, timestr, sb.st_size);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(buf+<span class="built_in">strlen</span>(buf), </span><br><span class="line">                        <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&lt;a href=\&quot;%s\&quot;&gt;%s&lt;/a&gt;&lt;/td&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;%ld&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>, </span><br><span class="line">                        encoded_name, dirinfo[i]-&gt;d_name, timestr, sb.st_size);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bufferevent_write(bev, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">        <span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(buf+<span class="built_in">strlen</span>(buf), <span class="string">&quot;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>);</span><br><span class="line">    bufferevent_write(bev, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;################# Dir Read OK !!!!!!!!!!!!!!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">conn_readcb</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">void</span> *user_data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** begin call %s.........\n&quot;</span>,__FUNCTION__);</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">4096</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> method[<span class="number">50</span>], path[<span class="number">4096</span>], protocol[<span class="number">32</span>];</span><br><span class="line">    bufferevent_read(bev, buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;buf[%s]\n&quot;</span>, buf);</span><br><span class="line">    <span class="built_in">sscanf</span>(buf, <span class="string">&quot;%[^ ] %[^ ] %[^ \r\n]&quot;</span>, method, path, protocol);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;method[%s], path[%s], protocol[%s]\n&quot;</span>, method, path, protocol);</span><br><span class="line">    <span class="keyword">if</span>(strcasecmp(method, <span class="string">&quot;GET&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        response_http(bev, method, path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** end call %s.........\n&quot;</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">conn_eventcb</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">short</span> events, <span class="type">void</span> *user_data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** begin call %s.........\n&quot;</span>, __FUNCTION__);</span><br><span class="line">    <span class="keyword">if</span> (events &amp; BEV_EVENT_EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Connection closed.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (events &amp; BEV_EVENT_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Got an error on the connection: %s\n&quot;</span>,</span><br><span class="line">               strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bufferevent_free(bev);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** end call %s.........\n&quot;</span>, __FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">signal_cb</span><span class="params">(<span class="type">evutil_socket_t</span> sig, <span class="type">short</span> events, <span class="type">void</span> *user_data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">event_base</span> *<span class="title">base</span> =</span> user_data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">delay</span> =</span> &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Caught an interrupt signal; exiting cleanly in one seconds.\n&quot;</span>);</span><br><span class="line">    event_base_loopexit(base, &amp;delay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">listener_cb</span><span class="params">(<span class="keyword">struct</span> evconnlistener *listener, </span></span><br><span class="line"><span class="params">                 <span class="type">evutil_socket_t</span> fd, <span class="keyword">struct</span> sockaddr *sa, <span class="type">int</span> socklen, <span class="type">void</span> *user_data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** begin call-------%s\n&quot;</span>,__FUNCTION__);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">event_base</span> *<span class="title">base</span> =</span> user_data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">bufferevent</span> *<span class="title">bev</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;fd is %d\n&quot;</span>,fd);</span><br><span class="line">    bev = bufferevent_socket_new(base, fd, BEV_OPT_CLOSE_ON_FREE);</span><br><span class="line">    <span class="keyword">if</span> (!bev)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error constructing bufferevent!&quot;</span>);</span><br><span class="line">        event_base_loopbreak(base);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    bufferevent_flush(bev, EV_READ | EV_WRITE, BEV_NORMAL);</span><br><span class="line">    bufferevent_setcb(bev, conn_readcb, <span class="literal">NULL</span>, conn_eventcb, <span class="literal">NULL</span>);</span><br><span class="line">    bufferevent_enable(bev, EV_READ | EV_WRITE);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;******************** end call-------%s\n&quot;</span>,__FUNCTION__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 杩欓噷鐨勫唴瀹规槸澶勭悊%20涔嬬被鐨勪笢瑗匡紒鏄?瑙ｇ爜&quot;杩囩▼銆?</span></span><br><span class="line"><span class="comment"> * %20 URL缂栫爜涓殑鈥?鈥?space)</span></span><br><span class="line"><span class="comment"> * %21 &#x27;!&#x27; %22 &#x27;&quot;&#x27; %23 &#x27;#&#x27; %24 &#x27;$&#x27;</span></span><br><span class="line"><span class="comment"> * %25 &#x27;%&#x27; %26 &#x27;&amp;&#x27; %27 &#x27;&#x27;&#x27; %28 &#x27;(&#x27;......</span></span><br><span class="line"><span class="comment"> * 鐩稿叧鐭ヨ瘑html涓殑鈥?鈥?space)鏄?nbsp</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">strdecode</span><span class="params">(<span class="type">char</span> *to, <span class="type">char</span> *from)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> ( ; *from != <span class="string">&#x27;\0&#x27;</span>; ++to, ++from)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (from[<span class="number">0</span>] == <span class="string">&#x27;%&#x27;</span> &amp;&amp; <span class="built_in">isxdigit</span>(from[<span class="number">1</span>]) &amp;&amp; <span class="built_in">isxdigit</span>(from[<span class="number">2</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 渚濇鍒ゆ柇from涓?%20 涓変釜瀛楃</span></span><br><span class="line">            *to = hexit(from[<span class="number">1</span>])*<span class="number">16</span> + hexit(from[<span class="number">2</span>]);</span><br><span class="line">            <span class="comment">// 绉昏繃宸茬粡澶勭悊鐨勪袱涓瓧绗?%21鎸囬拡鎸囧悜1),琛ㄨ揪寮?鐨?+from杩樹細鍐嶅悜鍚庣Щ涓€涓瓧绗?</span></span><br><span class="line">            from += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            *to = *from;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//16杩涘埗鏁拌浆鍖栦负10杩涘埗, return 0涓嶄細鍑虹幇</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">hexit</span><span class="params">(<span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> c - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> c - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// &quot;缂栫爜&quot;锛岀敤浣滃洖鍐欐祻瑙堝櫒鐨勬椂鍊欙紝灏嗛櫎瀛楁瘝鏁板瓧鍙?_.-~浠ュ鐨勫瓧绗﹁浆涔夊悗鍥炲啓銆?</span></span><br><span class="line"><span class="comment">// strencode(encoded_name, sizeof(encoded_name), name);</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">strencode</span><span class="params">(<span class="type">char</span>* to, <span class="type">size_t</span> tosize, <span class="type">const</span> <span class="type">char</span>* from)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> tolen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (tolen = <span class="number">0</span>; *from != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; tolen + <span class="number">4</span> &lt; tosize; ++from)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalnum</span>(*from) || <span class="built_in">strchr</span>(<span class="string">&quot;/_.-~&quot;</span>, *from) != (<span class="type">char</span>*)<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            *to = *from;</span><br><span class="line">            ++to;</span><br><span class="line">            ++tolen;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sprintf</span>(to, <span class="string">&quot;%%%02x&quot;</span>, (<span class="type">int</span>) *from &amp; <span class="number">0xff</span>);</span><br><span class="line">            to += <span class="number">3</span>;</span><br><span class="line">            tolen += <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="libevent-h">libevent.h</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _LIBEVENT_HTTP_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _LIBEVENT_HTTP_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;event2/event.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">conn_eventcb</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">short</span> events, <span class="type">void</span> *user_data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">conn_readcb</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">void</span> *user_data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *<span class="title function_">get_file_type</span><span class="params">(<span class="type">char</span> *name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">hexit</span><span class="params">(<span class="type">char</span> c)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">listener_cb</span><span class="params">(<span class="keyword">struct</span> evconnlistener *listener, <span class="type">evutil_socket_t</span> fd,</span></span><br><span class="line"><span class="params">                 <span class="keyword">struct</span> sockaddr *sa, <span class="type">int</span> socklen, <span class="type">void</span> *user_data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">response_http</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">const</span> <span class="type">char</span> *method, <span class="type">char</span> *path)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_dir</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev,<span class="type">const</span> <span class="type">char</span> *dirname)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_error</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_file_to_http</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *filename, <span class="keyword">struct</span> bufferevent *bev)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">send_header</span><span class="params">(<span class="keyword">struct</span> bufferevent *bev, <span class="type">int</span> no, <span class="type">const</span> <span class="type">char</span>* desp, <span class="type">const</span> <span class="type">char</span> *type, <span class="type">long</span> len)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">signal_cb</span><span class="params">(<span class="type">evutil_socket_t</span> sig, <span class="type">short</span> events, <span class="type">void</span> *user_data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">strdecode</span><span class="params">(<span class="type">char</span> *to, <span class="type">char</span> *from)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">strencode</span><span class="params">(<span class="type">char</span>* to, <span class="type">size_t</span> tosize, <span class="type">const</span> <span class="type">char</span>* from)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="示例操作">示例操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make  # lab3文件夹里</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 软件架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12猫分类学习笔记四（优化+知识篇）</title>
      <link href="/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B%EF%BC%88%E4%BC%98%E5%8C%96-%E7%9F%A5%E8%AF%86%E7%AF%87%EF%BC%89/"/>
      <url>/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B%EF%BC%88%E4%BC%98%E5%8C%96-%E7%9F%A5%E8%AF%86%E7%AF%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>12猫分类学习笔记四（优化+知识篇）</h1><h2 id="附加指标">附加指标</h2><p><strong>模型参数：25,557,032</strong></p><p><strong>FLOPs: 3.51G 。</strong></p><p><strong>引用论文：Deep Residual Learning for Image Recognition 2015</strong></p><p><a href="https://arxiv.org/abs/1512.03385">论文原文</a></p><blockquote><p>该论文由何凯明（Kaiming He）、张学工（Xiangyu Zhang）、Ren Shaoqing 以及 Sun Jian 等人撰写。论文中提出了残差学习的概念，将残差块（Residual Block）引入到深度神经网络中，通过其解决了深度神经网络训练中出现的梯度消失和梯度爆炸等问题。同时，通过使用深度残差网络，ResNet 在2015年 ImageNet 图像分类竞赛中夺得冠军，成为了当时最先进的图像分类模型。</p></blockquote><h2 id="优化方向">优化方向</h2><ul><li>在接下来的工作中，可以考虑增加图像增强操作，例如图像裁剪，图像亮度调整，图像对比度调整等待，从而丰富训练集，防止过拟合。</li><li>可以考虑使用其他残差网络，例如ResNet101，ResNet152进行改进。或者对Resnet的网络进行调参，进一步细化。</li><li>可以从超参数的角度进一步优化，比如调整学习率，自适应学习率策略，训练轮数等。</li><li>还没有使用过不同的优化器，只是使用了较强的Adam。</li></ul><p><a href="https://imgse.com/i/p9Vqbwt"><img src="https://s1.ax1x.com/2023/04/22/p9Vqbwt.png" alt="p9Vqbwt.png"></a></p><h2 id="思考问题">思考问题</h2><h3 id="Q1-dropout与残差网络的差别">Q1:dropout与残差网络的差别</h3><p>Dropout 和残差网络（ResNet）是深度神经网络中两个独立的概念，它们的作用和效果也不完全相同。下面是它们的区别和相同点：</p><p>区别：</p><ol><li>作用不同：Dropout主要可以用于提高神经网络的泛化能力，防止过拟合。而残差网络主要用于解决深度神经网络的退化问题和提高网络效果。</li><li>使用位置不同：Dropout 层通常在深层网络中加入，而残差连接则是在不同层之间引入。</li></ol><p>相同点：</p><ol><li>都可以用于提高深度神经网络的性能和泛化能力。</li><li>都是对深度神经网络进行正则化的一种方式。</li><li>在深度神经网络训练时，都可以缓解过拟合的问题。</li></ol><p>需要特别注意的是，在训练深度神经网络时，应保持谨慎，在合适的时间和地点使用 dropout 和残差连接，以避免过拟合和过度复杂化。</p><h3 id="Q2-什么样的数据集适合残差神经网络？">Q2: 什么样的数据集适合残差神经网络？</h3><p>残差神经网络（ResNet）是一种非常强大的深度学习模型，适用于大多数图像分类、目标检测、分割等任务。但是，并不是所有的数据集都适合使用 ResNet，下面是一些数据集适合使用 ResNet 的特点：</p><ol><li>复杂数据集：ResNet由于具有深度网络等结构，使得它具有很强的特征表达能力，适合处理复杂的图片数据集，比如CIFAR-10、CIFAR-100、ImageNet等数据集。</li><li>大规模数据集：ResNet是一种深度卷积神经网络，需要大量的样本数据来训练，才能避免过拟合的问题。因此，ResNet适用于大规模图像数据集，这些数据集包含了大量的样本信息，如ImageNet等。</li><li>需要解决梯度消失问题的数据集：ResNet提出了残差模块，使得模型能够更好地训练，避免了梯度消失的问题，因此适用于需要解决梯度消失问题的复杂数据集。</li></ol><p>综上所述，ResNet适合处理大规模、复杂的图片数据集，其中需要解决梯度消失问题的数据集更加适合使用 ResNet。除此之外，如果其它模型在处理该数据集时表现不佳或出现了梯度消失、梯度爆炸等问题，可以考虑使用 ResNet 进行尝试。</p><h3 id="Q3-对于猫的分类这类单一物种分类的数据集，使用什么样的神经网络比较好？">Q3: 对于猫的分类这类单一物种分类的数据集，使用什么样的神经网络比较好？</h3><p>针对猫的分类这类单一物种分类的数据集，可以考虑使用如下两种神经网络：</p><ol><li>浅层神经网络：对于图片数量不多或者图片较为简单的数据集，浅层神经网络可能会表现得更好。浅层神经网络具有较少的层数和参数，训练速度较快，对于简单的数据集可能在分类效果上仍旧不错。</li><li>迁移学习的卷积神经网络：通常卷积神经网络在图像分类问题上表现非常好，使用迁移学习技术，可以将预训练好的模型权重复用在猫的分类这个任务上，让模型更快速地收敛，提升训练效果。常见的预训练模型包括VGG、ResNet、Inception等。</li><li>卷积神经网络（CNN）：CNN是深度学习中最常用的一种神经网络，它可以自动学习图像中的特征，从而实现对图像分类任务。对于猫的分类这类相似的数据集，使用卷积神经网络是比较常见的选择。</li><li>残差神经网络（ResNet）：ResNet在CNN的基础上提出了残差连接与深度残差网络，在语音识别等领域已经证明该模型效果出色。ResNet模型可以直接从低深度模型训练到更深的模型阶段，更能够有效地提升模型性能，适用于相似的数据集分类任务。</li></ol><p>此外，还有其他一些网络模型，比如AlexNet等，在图像分类任务上也有很好的表现，可以酌情选择。综合考虑模型的准确率、复杂度、训练速度等因素，可以选择一个最合适的模型来处理猫的分类这类单一物种分类的数据集。同时，可以对数据集进行必要的增强技术，如数据增强，来改善模型的性能和泛化能力。</p><h3 id="Q3-如何证明自己的数据增强方法是合适的，较优的？">Q3:如何证明自己的数据增强方法是合适的，较优的？</h3><p>以下是几个证明自己数据增强方法合适、较优的方法：</p><ol><li>分割分析法：将数据分为训练集与测试集两部分，统计经过数据增强方法的训练集上的准确率、F-score等指标情况，并与未经过数据增强处理的训练集进行比较，如果经过增强处理的数据集表现更优，则说明数据增强方法较优。</li><li>决策曲线分析法：该方法基于Vallecula曲线，通过使用经过数据增强处理的数据集、未经过数据增强处理的数据集和干净数据集训练模型，并对模型进行测试，绘制出曲线图，较优的数据增强方法在曲线上的面积应最大。</li><li>T-SNE可视化方法：使用T-SNE降维算法将数据集数据可视化，观察不同类别数据点是否在不同的区域内，在不同区域内重叠情况如何，及不同类别之间的距离是否越来越远，如果经过数据增强处理的数据集表现更优，则说明数据增强方法较优。</li><li><strong>对比实验法</strong>：通过选用多种不同的数据增强方法，将训练数据集分别经过这些方法的增强处理，并对模型进行测试，找到正确率更高的数据增强方法。</li></ol><p>需要注意的是，数据增强方法的优劣与任务有很大关系，直接使用一种数据增强方法在所有任务中都表现良好是不可能的。最好的方法是根据具体任务和数据特点，选择或尝试多种数据增强方法进行测试，以找到最适合的数据增强方法，并证明其优劣。</p><h3 id="Q4-为什么选择了pytorch，而不是paddle？它们差异在哪？">Q4:为什么选择了pytorch，而不是paddle？它们差异在哪？</h3><p>以下是PyTorch和Paddle的优缺点及不同点：</p><p>PyTorch的优点：</p><ol><li>易于使用和学习：PyTorch的API简单、灵活，具有清晰的文档和较少的代码。它的API很容易理解和学习，因此在深度学习社区中拥有大量的支持者和开发者。</li><li>动态图机制：PyTorch使用动态计算图机制，能够更加灵活地构建、改变和调试模型结构，使用起来非常方便。</li><li>建模速度快：PyTorch的灵活性和简单的API极大地提高了建模速度，软件设计和开发人员可以快速构建复杂的神经网络。</li><li>大型模型训练：能够轻松地训练深度神经网络模型，能够轻松地处理大型模型训练以及从海量数据中学习。</li></ol><p>Paddle的优点：</p><ol><li>高性能的分布式训练：Paddle可以在大规模分布式集群上运行，提供高效的模型并行和数据并行算法，因此它非常适合大规模数据和复杂的模型。</li><li>动态图和静态图：Paddle不像PyTorch只使用动态图。Paddle同时支持静态图和动态图优势。用户可以根据需要选择任何功能。</li><li>与硬件的高度优化：Paddle是为深度学习和高性能计算而生的。它通过与自主研发的AI芯片和配套的软件生态系统紧密集成，以便更好地满足业界的需求。</li></ol><p>PyTorch和Paddle的不同点：</p><ol><li>计算图：Pytorch的计算图是动态图，很适合在迭代式环境中工作，在开发过程中具有更大的灵活性。Paddle的计算图是静态的，很适合在实时系统和大型开发中使用。</li><li>硬件支持：Paddle具有更强的硬件支持，可以很好地与NVIDIA的一些GPU卡片和自主研发的AI芯片等硬件环境相集成。PyTorch支持广泛，但在硬件上没有这样先进的支持。</li><li>教育支持：PyTorch的吸引力和使用方法非常适合教育用途，Paddle更适合于科研和工业应用。</li></ol><p>总体而言，PyTorch更适合用于小规模和中等规模的实验和研究，并适合初学者快速上手。而Paddle更适合于大型工业应用或需要高效处理分布式训练的科研团队。</p><h2 id="Resnet网络详细解释">Resnet网络详细解释</h2><blockquote><p>强烈建议去看原论文，很好懂而且对比实验数据很详细。<a href="https://arxiv.org/abs/1512.03385">Deep Residual Learning for Image Recognition</a></p></blockquote><p><a href="https://blog.csdn.net/weixin_43082868/article/details/94313597">论文解读</a></p><p>本项目使用典型的图片分类网络ResNet50，ResNet是2015年提出的结合残差模块的更深层神经网络，在图像分类问题上达到很好的效果。</p><p>ResNet50有两个基本的块，分别是Conv Block和Identity Block：</p><ul><li>Conv Block输入和输出的维度是不一样的，所以不能连续串联，它的作用是改变网络的维度；</li><li>Identity Block输入维度和输出维度相同，可以串联，用于加深网络的。</li></ul><h4 id="什么是残差网络？">什么是残差网络？</h4><p><a href="https://so.csdn.net/so/search?q=%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C&amp;spm=1001.2101.3001.7020">神经网络</a>可以视为一个非线性的拟合函数，由<em>x</em>映射为<em>H(x)</em>。那么假如我的网络输出不是<em>H(x)</em>，而是<em>H(x)</em>- x，记为<em>F(x)</em>,即为残差网络，网络的输出为输出与输入的残差。那么新的网络设计对网络有什么改变呢？</p><p>假设一个模型所需的层次比较浅，如果用一个较深层次的模型实现这个模型，可以认为在浅层次网络的基础上添加了许多层恒等映射，即H(x) = x，对于残差网络而言，即为F(x) = 0。训练一个输出为零的映射要比训练一个恒等映射难得多，因此可以认为这样的网络应该对于深层次的神经网络构造有所帮助。当然实际情况会比恒等映射复杂，但是我们有理由认为深层次网络是在恒等映射附近范围浮动。引入残差网络我们就不是把恒等映射当成一个要去学习的函数了，而是将恒等映射作为预处理在基础上进行微小的浮动优化。原来我们要训练的是恒等映射与一小部分浮动，现在我们只需要训练一个零附近的映射，这应该会更加精确。</p><p>ResNet网络中的残差组件，其实就是将靠前若干层的某一层数据输出直接跳过多层引入到后面数据层的输入部分。从而为了克服网络深度加深而产生的学习效率变低，以及随着网络加深，准确率下降的问题。残差组件如下图所示：</p><p><img src="https://ai-studio-static-online.cdn.bcebos.com/639ba120eee94c0ab2f05bea916ea587421a36c297174b9ab18b45801d3cb48c" alt=""></p><p>ResNet网络是参考了VGG19网络，在其基础上进行了修改，并通过短路机制加入了残差单元，如图5所示。变化主要体现在ResNet直接使用stride=2的卷积做下采样，并且用global average pool层替换了全连接层。ResNet的一个重要设计原则是：当feature map大小降低一半时，feature map的数量增加一倍，这保持了网络层的复杂度。从图5中可以看到，ResNet相比普通网络每两层间增加了短路机制，这就形成了残差学习，其中虚线表示feature map数量发生了改变。图5展示的34-layer的ResNet，还可以构建更深的网络如表1所示。从表中可以看到，对于18-layer和34-layer的ResNet，其进行的两层间的残差学习，当网络更深时，其进行的是三层间的残差学习，三层卷积核分别是1x1，3x3和1x1，一个值得注意的是隐含层的feature map数量是比较小的，并且是输出feature map数量的1/4。</p><p><a href="https://imgse.com/i/p9SCMLV"><img src="https://s1.ax1x.com/2023/04/14/p9SCMLV.png" alt="p9SCMLV.png"></a></p><p>各个不同级别地Resnet层数表（截取自原论文）:</p><p><a href="https://imgse.com/i/p9SCsFe"><img src="https://s1.ax1x.com/2023/04/14/p9SCsFe.png" alt="p9SCsFe.png"></a></p><blockquote><p>对于在ImageNet的数据中。我们可以看出网络神经越深，效果越好，这很有可能是因为残差网络的设计，导致了训练不至于过拟合。</p></blockquote><p><a href="https://imgse.com/i/p9SC2QI"><img src="https://s1.ax1x.com/2023/04/14/p9SC2QI.png" alt="p9SC2QI.png"></a></p><h2 id="学习率，batchsize，epoch">学习率，batchsize，epoch</h2><p><a href="https://imgse.com/i/p9VqWFK"><img src="https://s1.ax1x.com/2023/04/22/p9VqWFK.png" alt="p9VqWFK.png"></a></p><p><a href="https://imgse.com/i/p9VqIQH"><img src="https://s1.ax1x.com/2023/04/22/p9VqIQH.png" alt="p9VqIQH.png"></a></p><p><a href="https://imgse.com/i/p9VqHeI"><img src="https://s1.ax1x.com/2023/04/22/p9VqHeI.png" alt="p9VqHeI.png"></a></p><h2 id="模型的创新之处：">模型的创新之处：</h2><ol><li>借用了别人的数据集参数，改变了参数计算默认值，也就是因为Resnet是在ImageNet的训练集下，而不是我们的猫的训练集。</li><li>进行数据处理时，进行了<strong>样本平衡问题检验</strong>，观察出训练集所给样本，每种类别猫的数量相同，都为180，不需要进行额外处理。</li></ol><h2 id="计算模型参数">计算模型参数</h2><p>在PyTorch中，可以使用<code>torchsummary</code>来计算模型的参数量。<code>torchsummary</code>是一个辅助计算PyTorch模型参数量的库。</p><p>首先通过如下命令安装<code>torchsummary</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install torchsummary</span><br></pre></td></tr></table></figure><p>然后，通过以下代码即可计算模型的总参数量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">from torchsummary import summary</span><br><span class="line"></span><br><span class="line">model = YourModel() #将YourModel替换为你自己的模型</span><br><span class="line">summary(model, (input_shape,))</span><br></pre></td></tr></table></figure><p>在上述代码中，需要将<code>YourModel()</code>替换为你自己的模型，<code>(input_shape,)</code>是模型输入的形状，可以是一个元组或列表。<code>summary</code>函数会打印出模型的结构和参数量信息。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------------------------------------</span><br><span class="line">        Layer (type)               Output Shape         Param #</span><br><span class="line">================================================================</span><br><span class="line">            Conv2d-1         [-1, 32, 28, 28]             320</span><br><span class="line">              ReLU-2         [-1, 32, 28, 28]               0</span><br><span class="line">         MaxPool2d-3         [-1, 32, 14, 14]               0</span><br><span class="line">            Conv2d-4         [-1, 64, 12, 12]          18,496</span><br><span class="line">              ReLU-5         [-1, 64, 12, 12]               0</span><br><span class="line">         MaxPool2d-6           [-1, 64, 6, 6]               0</span><br><span class="line">           Dropout-7                 [-1, 2304]               0</span><br><span class="line">            Linear-8                   [-1, 10]          23,050</span><br><span class="line">================================================================</span><br><span class="line">Total params: 41,866</span><br><span class="line">Trainable params: 41,866</span><br><span class="line">Non-trainable params: 0</span><br><span class="line">----------------------------------------------------------------</span><br><span class="line">Input size (MB): 0.01</span><br><span class="line">Forward/backward pass size (MB): 0.90</span><br><span class="line">Params size (MB): 0.16</span><br><span class="line">Estimated Total Size (MB): 1.07</span><br><span class="line">----------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>上面参数信息中的<code>Total params</code>即为模型的总参数量。</p><blockquote><p>我这里input_size = (3,196,196) # 3为通道数</p></blockquote><h2 id="求FLOPS">求FLOPS</h2><p>在PyTorch中，可以使用<code>thop</code> （PyTorch-OpCounter）来计算模型的 FLOPs。<code>thop</code> 是一个轻量级但功能强大的库，可以计算模型的 FLOPs、参数量以及模型各个层的信息。</p><p>首先需要用如下命令安装 <code>thop</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install thop</span><br></pre></td></tr></table></figure><p>然后，在你的代码中，使用如下代码即可计算模型的 FLOPs：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> thop <span class="keyword">import</span> profile</span><br><span class="line"><span class="keyword">from</span> thop <span class="keyword">import</span> clever_format</span><br><span class="line"></span><br><span class="line">sample = <span class="built_in">next</span>(<span class="built_in">iter</span>(dataloader))</span><br><span class="line">data = sample[<span class="number">0</span>]</span><br><span class="line">data = transform(data)</span><br><span class="line"><span class="built_in">input</span> = data.unsqueeze(<span class="number">0</span>)</span><br><span class="line">flops, params = torch.profiler.profile(</span><br><span class="line">    model, inputs=(<span class="built_in">input</span>, ), </span><br><span class="line">    <span class="comment"># 以下为选项参数，可以根据具体需求改变</span></span><br><span class="line">    profiler_kwargs=&#123;</span><br><span class="line">        <span class="string">&quot;use_cuda&quot;</span>: <span class="literal">True</span>,         <span class="comment"># 是否使用gpu进行运算</span></span><br><span class="line">        <span class="string">&quot;profile_memory&quot;</span>: <span class="literal">False</span>,  <span class="comment"># 是否需要记录内存使用情况</span></span><br><span class="line">        <span class="string">&quot;record_shapes&quot;</span>: <span class="literal">False</span>,   <span class="comment"># 是否记录每一层的输出形状</span></span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;With Transform: FLOPs %.2fB, Params %dM&#x27;</span> % (flops / <span class="number">1e9</span>, params / <span class="number">1e6</span>))</span><br></pre></td></tr></table></figure><p>其中，<code>YourModel()</code>需要替换为你自己的模型，<code>batch_size</code>、<code>in_channels</code>、<code>input_size</code>是输入数据的维度，<code>flops</code>为计算得到的 FLOPs 量，<code>params</code> 是参数。</p>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12猫分类学习笔记三（预测篇）</title>
      <link href="/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%EF%BC%88%E9%A2%84%E6%B5%8B%E7%AF%87%EF%BC%89/"/>
      <url>/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89%EF%BC%88%E9%A2%84%E6%B5%8B%E7%AF%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>12猫分类学习笔记三（预测篇）</h1><p>训练的代码集中在cat_test.py里。编译执行该文件即可进行预测。</p><p>基本上就是调用model.eval，然后进行格式整理，导出对应格式的csv即可。</p><h2 id="cat-test-py-源代码">cat_test.py 源代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn,optim</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="comment">#  种类数</span></span><br><span class="line">num_classes = <span class="number">12</span>  <span class="comment"># 分类别数量</span></span><br><span class="line"><span class="comment">#  模型文件名称</span></span><br><span class="line">cat_model_name = <span class="string">&quot;cat_model.pth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义transform</span></span><br><span class="line">test_transform = transforms.Compose([</span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">196</span>),</span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean =[<span class="number">0.4848</span>, <span class="number">0.4435</span>, <span class="number">0.4023</span>], std=[<span class="number">0.2744</span>, <span class="number">0.2688</span>, <span class="number">0.2757</span>]),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myRes</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(myRes, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.resnet = torchvision.models.resnet50(pretrained=<span class="literal">False</span>)</span><br><span class="line">        self.add_module(<span class="string">&#x27;add_Linear&#x27;</span>, nn.Linear(<span class="number">1000</span>, num_classes))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.resnet(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetFiles</span>(<span class="params">file_dir, file_type, IsCurrent=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        功能：获取指定文件路径&amp;文件类型下的所有文件名</span></span><br><span class="line"><span class="string">        传入：</span></span><br><span class="line"><span class="string">            file_dir   文件路径,</span></span><br><span class="line"><span class="string">            file_type  文件类型,</span></span><br><span class="line"><span class="string">            IsCurrent  是否只获取当前文件路径下的文件，默认False</span></span><br><span class="line"><span class="string">        返回：含文件名的列表</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    file_list = []</span><br><span class="line">    <span class="keyword">for</span> parent, dirnames, filenames <span class="keyword">in</span> os.walk(file_dir):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            <span class="keyword">if</span> filename.endswith((<span class="string">&#x27;.%s&#x27;</span> % file_type)):  <span class="comment"># 判断文件类型</span></span><br><span class="line">                file_list.append(filename)</span><br><span class="line">        <span class="keyword">if</span> IsCurrent == <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> file_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模型加载</span></span><br><span class="line">    device = torch.device(<span class="string">&quot;cuda:0&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">    model =  myRes().to(device)</span><br><span class="line">    model.load_state_dict(torch.load(cat_model_name))</span><br><span class="line">    <span class="comment"># 切换至预测模式</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    class_names = [<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;11&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    labels = []</span><br><span class="line"></span><br><span class="line">    names = GetFiles(<span class="string">&#x27;data/cat_12_test&#x27;</span>,<span class="string">&#x27;jpg&#x27;</span>)</span><br><span class="line">    error_names = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> names:</span><br><span class="line">        img_path = <span class="string">&#x27;data/cat_12_test/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            img = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line">            img_ = test_transform(img).unsqueeze(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            img_ = img_.to(device)</span><br><span class="line">            outputs = model(img_)</span><br><span class="line"></span><br><span class="line">            _, indices = torch.<span class="built_in">max</span>(outputs, <span class="number">1</span>)</span><br><span class="line">            percentage = torch.nn.functional.softmax(outputs, dim=<span class="number">1</span>)[<span class="number">0</span>] * <span class="number">100</span></span><br><span class="line">            perc = percentage[<span class="built_in">int</span>(indices)].item()</span><br><span class="line">            result = class_names[indices]</span><br><span class="line">            labels.append(result)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            labels.append(<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">            error_names.append(img_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    df1 = pd.DataFrame(names)</span><br><span class="line">    df2 = pd.DataFrame(labels)</span><br><span class="line">    df = pd.concat([df1, df2],axis=<span class="number">1</span>,join=<span class="string">&#x27;outer&#x27;</span>)</span><br><span class="line">    df.to_csv(<span class="string">&#x27;result.csv&#x27;</span>, header=<span class="literal">False</span>, index=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12猫分类学习笔记二（训练篇）</title>
      <link href="/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%EF%BC%88%E8%AE%AD%E7%BB%83%E7%AF%87%EF%BC%89/"/>
      <url>/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%EF%BC%88%E8%AE%AD%E7%BB%83%E7%AF%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>12猫分类学习笔记二（训练篇）</h1><p>训练的代码集中在cat_trian.py里。编译执行该文件即可进行训练</p><h2 id="1-导包">1 导包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn,optim</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br></pre></td></tr></table></figure><h2 id="2-全局变量">2 全局变量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  种类数</span></span><br><span class="line">num_classes = <span class="number">12</span>  <span class="comment"># 分类别数量</span></span><br><span class="line"><span class="comment">#  导出模型文件名称</span></span><br><span class="line">cat_model_name = <span class="string">&quot;cat_model.pth&quot;</span></span><br><span class="line"><span class="comment">#  超参数？</span></span><br><span class="line">batch_size = <span class="number">32</span>  <span class="comment"># 一次批数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()  <span class="comment"># 损失函数设置</span></span><br><span class="line">epochs = <span class="number">3</span>  <span class="comment"># 训练迭代次数设置</span></span><br></pre></td></tr></table></figure><h2 id="3-transform-数据处理，数据增强">3 transform(数据处理，数据增强)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义transform</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.ColorJitter(brightness=<span class="number">0.05</span>, contrast=<span class="number">0.05</span>, saturation=<span class="number">0.05</span>, hue=<span class="number">0.05</span>),</span><br><span class="line">    <span class="comment"># transforms.ColorJitter 改变图像的属性：亮度（brightness）、对比度（contrast）、饱和度（saturation）和色调（hue)。</span></span><br><span class="line">    <span class="comment"># 数值表示上下浮动的百分比。比如：0.05，原亮度100 -&gt;(95,105)范围内。</span></span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">196</span>),   <span class="comment"># 中心随机裁剪</span></span><br><span class="line">    transforms.RandomHorizontalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率水平翻转</span></span><br><span class="line">    transforms.RandomVerticalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率垂直翻转</span></span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean=[<span class="number">0.4848</span>, <span class="number">0.4435</span>, <span class="number">0.4023</span>], std=[<span class="number">0.2744</span>, <span class="number">0.2688</span>, <span class="number">0.2757</span>]),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">eval_transform = transforms.Compose([</span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">196</span>),   <span class="comment"># 中心随机裁剪</span></span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean =[<span class="number">0.4848</span>, <span class="number">0.4435</span>, <span class="number">0.4023</span>], std=[<span class="number">0.2744</span>, <span class="number">0.2688</span>, <span class="number">0.2757</span>]),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：本次为了提高准确率，都尝试了很多的方法，这个是我根据直觉，以及网上推荐的一些博客进行选择的。</p><p><a href="https://aistudio.baidu.com/aistudio/projectdetail/5951901">第二名方案</a></p><p><a href="https://blog.csdn.net/lmx1458070445/article/details/122378497">猫十二分类</a></p><blockquote><p>这个第二名方案很值得看看，也对基本的处理方法有一定的讲解。我在自己的电脑炮，batch_size连64都达不到，如果训练420次，估计得算个天荒黑夜。</p></blockquote><h2 id="4-神经网络的搭建（Resnet50）">4 神经网络的搭建（Resnet50）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myRes</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(myRes, self).__init__()</span><br><span class="line">        <span class="comment">#  当前文件夹没有模型时，就导入resnet50原的训练参数True。有模型，直接导入已有模型False。即迁移学习</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(cat_model_name):</span><br><span class="line">            a = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = <span class="literal">True</span></span><br><span class="line">        self.resnet = torchvision.models.resnet50(pretrained=a)</span><br><span class="line">        self.add_module(<span class="string">&#x27;add_Linear&#x27;</span>, nn.Linear(<span class="number">1000</span>, num_classes))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.resnet(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-训练函数">5 训练函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">train_dataloader, model, loss_fn, optimizer</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        训练网络</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        输入:</span></span><br><span class="line"><span class="string">            train_dataloader:   训练集的dataloader</span></span><br><span class="line"><span class="string">            model:              网络模型</span></span><br><span class="line"><span class="string">            loss_fn:            损失函数</span></span><br><span class="line"><span class="string">            optimizer:          优化器</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 切换到train模式</span></span><br><span class="line">    model.train(<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 遍历dataloader</span></span><br><span class="line">    <span class="keyword">for</span> images, labels <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        <span class="comment"># 将数据和标签加载到device上</span></span><br><span class="line">        images, labels = images.to(device), labels.to(device)</span><br><span class="line">        <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        pred = model(images)</span><br><span class="line">        <span class="comment"># 计算输出和标签的loss</span></span><br><span class="line">        loss = loss_fn(pred, labels)</span><br><span class="line">        <span class="comment"># 反向推导</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        <span class="comment"># 步进优化器</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">    size = <span class="built_in">len</span>(train_dataloader.dataset)</span><br><span class="line">    <span class="comment"># 测试集的batch数量</span></span><br><span class="line">    num_batches = <span class="built_in">len</span>(train_dataloader)</span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 梯度截断</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> images, labels <span class="keyword">in</span> train_dataloader:  <span class="comment"># 遍历batch</span></span><br><span class="line">            <span class="comment"># 加载到device</span></span><br><span class="line">            images, labels = images.to(device), labels.to(device)</span><br><span class="line">            <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">            pred = model(images)</span><br><span class="line">            <span class="comment"># 累加loss</span></span><br><span class="line">            test_loss += loss_fn(pred, labels).item()</span><br><span class="line">            <span class="comment"># 累加正确率</span></span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == labels).<span class="built_in">sum</span>().item()</span><br><span class="line">    <span class="comment"># 计算平均loss和准确率</span></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Train_Accuracy: <span class="subst">&#123;(<span class="number">100</span> * correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Train_Avg_loss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> correct, test_loss  <span class="comment"># 用于绘制图片用</span></span><br></pre></td></tr></table></figure><h2 id="6-验证函数">6 验证函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">val</span>(<span class="params">val_dataloader, model, loss_fn</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        测试网络</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        输入:</span></span><br><span class="line"><span class="string">            test_dataloader:    测试集的dataloader</span></span><br><span class="line"><span class="string">            model:              网络模型</span></span><br><span class="line"><span class="string">            loss_fn:            损失函数</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 测试集大小</span></span><br><span class="line">    size = <span class="built_in">len</span>(val_dataloader.dataset)</span><br><span class="line">    <span class="comment"># 测试集的batch数量</span></span><br><span class="line">    num_batches = <span class="built_in">len</span>(val_dataloader)</span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 梯度截断</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> images, labels <span class="keyword">in</span> val_dataloader:  <span class="comment"># 遍历batch</span></span><br><span class="line">            <span class="comment"># 加载到device</span></span><br><span class="line">            images, labels = images.to(device), labels.to(device)</span><br><span class="line">            <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">            pred = model(images)</span><br><span class="line">            <span class="comment"># 累加loss</span></span><br><span class="line">            test_loss += loss_fn(pred, labels).item()</span><br><span class="line">            <span class="comment"># 累加正确率</span></span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == labels).<span class="built_in">sum</span>().item()</span><br><span class="line">    <span class="comment"># 计算平均loss和准确率</span></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Val_Accuracy: <span class="subst">&#123;(<span class="number">100</span> * correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Val_Avgloss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> correct, test_loss</span><br></pre></td></tr></table></figure><h2 id="7-绘图">7 绘图</h2><p>主要作用是，在每次训练完后，能得到训练集和验证集中的准确率和loss。</p><p>代码写的比较冗余，不过问题不大。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train_correct_plt</span>(<span class="params">epochs, X, Y1, Y2, Y3, Y4</span>):</span><br><span class="line">    plt.figure(figsize=(epochs*<span class="number">2</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">    plt.plot(X, Y1, label=<span class="string">&quot;val_correct&quot;</span>, color=<span class="string">&quot;#FC331D&quot;</span>, marker=<span class="string">&#x27;*&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    plt.plot(X, Y3, label=<span class="string">&quot;train_correct&quot;</span>, color=<span class="string">&quot;#1D3162&quot;</span>, marker=<span class="string">&#x27;*&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y1):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y3):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    plt.xticks(X, X)</span><br><span class="line">    plt.gca().yaxis.set_major_formatter(ticker.PercentFormatter(xmax=<span class="number">1</span>, decimals=<span class="number">1</span>))</span><br><span class="line">    plt.ylim(<span class="number">0.0</span>, <span class="number">1.1</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&quot;epoch&quot;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;correct&quot;</span>)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.show()</span><br><span class="line">    plt.clf()  <span class="comment"># 清图。</span></span><br><span class="line">    plt.cla()  <span class="comment"># 清坐标轴。</span></span><br><span class="line"></span><br><span class="line">    plt.plot(X, Y2, label=<span class="string">&quot;val_loss&quot;</span>, color=<span class="string">&quot;#F3991F&quot;</span>, marker=<span class="string">&#x27;o&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    plt.plot(X, Y4, label=<span class="string">&quot;train_loss&quot;</span>, color=<span class="string">&quot;#22a9Fd&quot;</span>, marker=<span class="string">&#x27;o&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y2):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y4):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;train_result&quot;</span>)</span><br><span class="line">    plt.ylim(<span class="number">0</span>,<span class="built_in">max</span>(Y2))</span><br><span class="line">    plt.xlabel(<span class="string">&quot;epoch&quot;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;loss&quot;</span>)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h2 id="8-主函数">8 主函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 加载数据集</span></span><br><span class="line">    trian_folder_path = <span class="string">&#x27;data\cat_12_train_new&#x27;</span><span class="comment"># 文件夹路径</span></span><br><span class="line">    train_dataset = ImageFolder(trian_folder_path, transform=transform)</span><br><span class="line">    <span class="built_in">print</span>(train_dataset)</span><br><span class="line">    train_dataloader = DataLoader(train_dataset, batch_size=batch_size,shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加载验证集</span></span><br><span class="line">    val_folder_path = <span class="string">&#x27;data\cat_12_val_new&#x27;</span><span class="comment"># 文件夹路径</span></span><br><span class="line">    val_dataset = ImageFolder(val_folder_path, transform=eval_transform)</span><br><span class="line">    <span class="built_in">print</span>(val_dataset)</span><br><span class="line">    val_dataloader = DataLoader(val_dataset, batch_size=batch_size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历dataloader</span></span><br><span class="line">    <span class="keyword">for</span> images, labels <span class="keyword">in</span> val_dataloader:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shape of X [N, C, H, W]: &quot;</span>, images.shape)  <span class="comment"># 每个batch数据的形状</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shape of y: &quot;</span>, labels.shape)  <span class="comment"># 每个batch标签的形状</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------模型----------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用gpu或者cpu进行训练</span></span><br><span class="line">    device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">    <span class="comment"># 打印使用的是gpu/cpu</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Using &#123;&#125; device&quot;</span>.<span class="built_in">format</span>(device))</span><br><span class="line">    <span class="comment"># 实例化模型</span></span><br><span class="line">    model = myRes().to(device)</span><br><span class="line">    <span class="comment"># 打印模型结构</span></span><br><span class="line">    <span class="built_in">print</span>(model)</span><br><span class="line"></span><br><span class="line">    optim = optim.Adam(model.parameters(), lr=<span class="number">0.001</span>)            <span class="comment"># 优化器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------训练/测试----------</span></span><br><span class="line">    <span class="comment"># ----------有模型直接导入------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(cat_model_name):</span><br><span class="line">        model.load_state_dict(torch.load(cat_model_name))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -----绘图配置------</span></span><br><span class="line">    X = []   <span class="comment"># epochs</span></span><br><span class="line">    Y1 = []  <span class="comment"># val correct</span></span><br><span class="line">    Y2 = []  <span class="comment"># val loss</span></span><br><span class="line">    Y3 = []  <span class="comment"># train correct</span></span><br><span class="line">    Y4 = []  <span class="comment"># train loss</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开始训练</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(epochs):     <span class="comment"># 迭代epochs次</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Epoch <span class="subst">&#123;t+<span class="number">1</span>&#125;</span>\n-------------------------------&quot;</span>)</span><br><span class="line">        <span class="comment"># 训练</span></span><br><span class="line">        correct_y3, test_loss_y4 = train(train_dataloader, model, loss_fn, optim)</span><br><span class="line">        <span class="comment"># 当次训练完后测试目前模型在测试集上的表现</span></span><br><span class="line">        correct_y1, test_loss_y2 = val(val_dataloader, model, loss_fn)</span><br><span class="line"></span><br><span class="line">        X.append(t+<span class="number">1</span>)</span><br><span class="line">        Y1.append(<span class="built_in">round</span>(correct_y1,<span class="number">3</span>))</span><br><span class="line">        Y2.append(<span class="built_in">round</span>(test_loss_y2,<span class="number">2</span>))</span><br><span class="line">        Y3.append(<span class="built_in">round</span>(correct_y3,<span class="number">3</span>))</span><br><span class="line">        Y4.append(<span class="built_in">round</span>(test_loss_y4,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘图</span></span><br><span class="line">    train_correct_plt(epochs, X, Y1, Y2, Y3, Y4)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br><span class="line">    <span class="comment"># 计算附加指标标准 参数量 FLOPS</span></span><br><span class="line">    input_size = (<span class="number">3</span>, <span class="number">196</span>, <span class="number">196</span>)</span><br><span class="line">    in_channels = <span class="number">3</span>  <span class="comment"># （通道数，彩图）</span></span><br><span class="line">    <span class="comment"># print(summary(model,input_size, device=device ))  # 模型架构+参数量</span></span><br><span class="line">    <span class="keyword">from</span> thop <span class="keyword">import</span> profile</span><br><span class="line">    <span class="keyword">from</span> thop <span class="keyword">import</span> clever_format</span><br><span class="line"></span><br><span class="line">    model = model  <span class="comment"># 将YourModel替换为你自己的模型</span></span><br><span class="line">    input_size = (<span class="number">196</span>,<span class="number">196</span>)</span><br><span class="line">    <span class="built_in">input</span> = torch.randn(batch_size, in_channels, input_size, input_size)</span><br><span class="line">    flops, params = profile(model, inputs=(<span class="built_in">input</span>,))</span><br><span class="line">    flops, params = clever_format([flops, params], <span class="string">&#x27;%.3f&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Flops: &#x27;</span> + flops + <span class="string">&#x27;, Params: &#x27;</span> + params)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------保存模型----------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存模型</span></span><br><span class="line">    torch.save(model.state_dict(), cat_model_name)</span><br></pre></td></tr></table></figure><h2 id="cat-train-py-源代码">cat_train.py 源代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn,optim</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset, DataLoader</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> ticker</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision.datasets <span class="keyword">import</span> ImageFolder, DatasetFolder</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> torchsummary <span class="keyword">import</span> summary  <span class="comment"># 用于参看模型参数数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  种类数</span></span><br><span class="line">num_classes = <span class="number">12</span>  <span class="comment"># 分类别数量</span></span><br><span class="line"><span class="comment">#  导出模型文件名称</span></span><br><span class="line">cat_model_name = <span class="string">&quot;cat_model.pth&quot;</span></span><br><span class="line"><span class="comment">#  超参数？</span></span><br><span class="line">batch_size = <span class="number">32</span>  <span class="comment"># 一次批数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()  <span class="comment"># 损失函数设置</span></span><br><span class="line">epochs = <span class="number">1</span>  <span class="comment"># 训练迭代次数设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义transform</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.ColorJitter(brightness=<span class="number">0.05</span>, contrast=<span class="number">0.05</span>, saturation=<span class="number">0.05</span>, hue=<span class="number">0.05</span>),</span><br><span class="line">    <span class="comment"># transforms.ColorJitter 改变图像的属性：亮度（brightness）、对比度（contrast）、饱和度（saturation）和色调（hue)。</span></span><br><span class="line">    <span class="comment"># 数值表示上下浮动的百分比。比如：0.05，原亮度100 -&gt;(95,105)范围内。</span></span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">196</span>),   <span class="comment"># 中心随机裁剪</span></span><br><span class="line">    transforms.RandomHorizontalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率水平翻转</span></span><br><span class="line">    transforms.RandomVerticalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率垂直翻转</span></span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean=[<span class="number">0.4848</span>, <span class="number">0.4435</span>, <span class="number">0.4023</span>], std=[<span class="number">0.2744</span>, <span class="number">0.2688</span>, <span class="number">0.2757</span>]),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">eval_transform = transforms.Compose([</span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">196</span>),   <span class="comment"># 中心随机裁剪</span></span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean =[<span class="number">0.4848</span>, <span class="number">0.4435</span>, <span class="number">0.4023</span>], std=[<span class="number">0.2744</span>, <span class="number">0.2688</span>, <span class="number">0.2757</span>]),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">myRes</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(myRes, self).__init__()</span><br><span class="line">        <span class="comment">#  当前文件夹没有模型时，就导入resnet50原的训练参数True。有模型，直接导入已有模型False。</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(cat_model_name):</span><br><span class="line">            a = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = <span class="literal">True</span></span><br><span class="line">        self.resnet = torchvision.models.resnet50(pretrained=a)</span><br><span class="line">        self.add_module(<span class="string">&#x27;add_Linear&#x27;</span>, nn.Linear(<span class="number">1000</span>, num_classes))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.resnet(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">train_dataloader, model, loss_fn, optimizer</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        训练网络</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        输入:</span></span><br><span class="line"><span class="string">            train_dataloader:   训练集的dataloader</span></span><br><span class="line"><span class="string">            model:              网络模型</span></span><br><span class="line"><span class="string">            loss_fn:            损失函数</span></span><br><span class="line"><span class="string">            optimizer:          优化器</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 切换到train模式</span></span><br><span class="line">    model.train(<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 遍历dataloader</span></span><br><span class="line">    <span class="keyword">for</span> images, labels <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        <span class="comment"># 将数据和标签加载到device上</span></span><br><span class="line">        images, labels = images.to(device), labels.to(device)</span><br><span class="line">        <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        pred = model(images)</span><br><span class="line">        <span class="comment"># 计算输出和标签的loss</span></span><br><span class="line">        loss = loss_fn(pred, labels)</span><br><span class="line">        <span class="comment"># 反向推导</span></span><br><span class="line">        loss.backward()</span><br><span class="line">        <span class="comment"># 步进优化器</span></span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">    size = <span class="built_in">len</span>(train_dataloader.dataset)</span><br><span class="line">    <span class="comment"># 测试集的batch数量</span></span><br><span class="line">    num_batches = <span class="built_in">len</span>(train_dataloader)</span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 梯度截断</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> images, labels <span class="keyword">in</span> train_dataloader:  <span class="comment"># 遍历batch</span></span><br><span class="line">            <span class="comment"># 加载到device</span></span><br><span class="line">            images, labels = images.to(device), labels.to(device)</span><br><span class="line">            <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">            pred = model(images)</span><br><span class="line">            <span class="comment"># 累加loss</span></span><br><span class="line">            test_loss += loss_fn(pred, labels).item()</span><br><span class="line">            <span class="comment"># 累加正确率</span></span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == labels).<span class="built_in">sum</span>().item()</span><br><span class="line">    <span class="comment"># 计算平均loss和准确率</span></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Train_Accuracy: <span class="subst">&#123;(<span class="number">100</span> * correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Train_Avg_loss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> correct, test_loss</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">val</span>(<span class="params">val_dataloader, model, loss_fn</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        测试网络</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        输入:</span></span><br><span class="line"><span class="string">            test_dataloader:    测试集的dataloader</span></span><br><span class="line"><span class="string">            model:              网络模型</span></span><br><span class="line"><span class="string">            loss_fn:            损失函数</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 测试集大小</span></span><br><span class="line">    size = <span class="built_in">len</span>(val_dataloader.dataset)</span><br><span class="line">    <span class="comment"># 测试集的batch数量</span></span><br><span class="line">    num_batches = <span class="built_in">len</span>(val_dataloader)</span><br><span class="line">    <span class="comment"># 切换到测试模型</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    <span class="comment"># 记录loss和准确率</span></span><br><span class="line">    test_loss, correct = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="comment"># 梯度截断</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> images, labels <span class="keyword">in</span> val_dataloader:  <span class="comment"># 遍历batch</span></span><br><span class="line">            <span class="comment"># 加载到device</span></span><br><span class="line">            images, labels = images.to(device), labels.to(device)</span><br><span class="line">            <span class="comment"># 输入数据到模型里得到输出</span></span><br><span class="line">            pred = model(images)</span><br><span class="line">            <span class="comment"># 累加loss</span></span><br><span class="line">            test_loss += loss_fn(pred, labels).item()</span><br><span class="line">            <span class="comment"># 累加正确率</span></span><br><span class="line">            correct += (pred.argmax(<span class="number">1</span>) == labels).<span class="built_in">sum</span>().item()</span><br><span class="line">    <span class="comment"># 计算平均loss和准确率</span></span><br><span class="line">    test_loss /= num_batches</span><br><span class="line">    correct /= size</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Test Error: \n Val_Accuracy: <span class="subst">&#123;(<span class="number">100</span> * correct):&gt;<span class="number">0.1</span>f&#125;</span>%, Val_Avgloss: <span class="subst">&#123;test_loss:&gt;8f&#125;</span> \n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> correct, test_loss</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_correct_plt</span>(<span class="params">epochs, X, Y1, Y2, Y3, Y4</span>):</span><br><span class="line">    plt.figure(figsize=(epochs*<span class="number">2</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">    plt.plot(X, Y1, label=<span class="string">&quot;val_correct&quot;</span>, color=<span class="string">&quot;#FC331D&quot;</span>, marker=<span class="string">&#x27;*&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    plt.plot(X, Y3, label=<span class="string">&quot;train_correct&quot;</span>, color=<span class="string">&quot;#1D3162&quot;</span>, marker=<span class="string">&#x27;*&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y1):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y3):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    plt.xticks(X, X)</span><br><span class="line">    plt.gca().yaxis.set_major_formatter(ticker.PercentFormatter(xmax=<span class="number">1</span>, decimals=<span class="number">1</span>))</span><br><span class="line">    plt.ylim(<span class="number">0.0</span>, <span class="number">1.1</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;result&quot;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&quot;epoch&quot;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;correct&quot;</span>)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.show()</span><br><span class="line">    plt.clf()  <span class="comment"># 清图。</span></span><br><span class="line">    plt.cla()  <span class="comment"># 清坐标轴。</span></span><br><span class="line"></span><br><span class="line">    plt.plot(X, Y2, label=<span class="string">&quot;val_loss&quot;</span>, color=<span class="string">&quot;#F3991F&quot;</span>, marker=<span class="string">&#x27;o&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    plt.plot(X, Y4, label=<span class="string">&quot;train_loss&quot;</span>, color=<span class="string">&quot;#22a9Fd&quot;</span>, marker=<span class="string">&#x27;o&#x27;</span>, linestyle=<span class="string">&quot;-&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y2):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> x_, y_ <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y4):</span><br><span class="line">        plt.text(x_, y_, y_, ha=<span class="string">&#x27;left&#x27;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&quot;train_result&quot;</span>)</span><br><span class="line">    plt.ylim(<span class="number">0</span>,<span class="built_in">max</span>(Y2))</span><br><span class="line">    plt.xlabel(<span class="string">&quot;epoch&quot;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;loss&quot;</span>)</span><br><span class="line">    plt.legend()</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 加载数据集</span></span><br><span class="line">    trian_folder_path = <span class="string">&#x27;data\cat_12_train_new&#x27;</span><span class="comment"># 文件夹路径</span></span><br><span class="line">    train_dataset = ImageFolder(trian_folder_path, transform=transform)</span><br><span class="line">    <span class="built_in">print</span>(train_dataset)</span><br><span class="line">    train_dataloader = DataLoader(train_dataset, batch_size=batch_size,shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加载验证集</span></span><br><span class="line">    val_folder_path = <span class="string">&#x27;data\cat_12_val_new&#x27;</span><span class="comment"># 文件夹路径</span></span><br><span class="line">    val_dataset = ImageFolder(val_folder_path, transform=eval_transform)</span><br><span class="line">    <span class="built_in">print</span>(val_dataset)</span><br><span class="line">    val_dataloader = DataLoader(val_dataset, batch_size=batch_size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历dataloader</span></span><br><span class="line">    <span class="keyword">for</span> images, labels <span class="keyword">in</span> val_dataloader:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shape of X [N, C, H, W]: &quot;</span>, images.shape)  <span class="comment"># 每个batch数据的形状</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shape of y: &quot;</span>, labels.shape)  <span class="comment"># 每个batch标签的形状</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------模型----------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用gpu或者cpu进行训练</span></span><br><span class="line">    device = <span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span></span><br><span class="line">    <span class="comment"># 打印使用的是gpu/cpu</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Using &#123;&#125; device&quot;</span>.<span class="built_in">format</span>(device))</span><br><span class="line">    <span class="comment"># 实例化模型</span></span><br><span class="line">    model = myRes().to(device)</span><br><span class="line">    <span class="comment"># 打印模型结构</span></span><br><span class="line">    <span class="built_in">print</span>(model)</span><br><span class="line"></span><br><span class="line">    optim = optim.Adam(model.parameters(), lr=<span class="number">0.001</span>)            <span class="comment"># 优化器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------训练/测试----------</span></span><br><span class="line">    <span class="comment"># ----------有模型直接导入------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(cat_model_name):</span><br><span class="line">        model.load_state_dict(torch.load(cat_model_name))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># -----绘图配置------</span></span><br><span class="line">    X = []   <span class="comment"># epochs</span></span><br><span class="line">    Y1 = []  <span class="comment"># val correct</span></span><br><span class="line">    Y2 = []  <span class="comment"># val loss</span></span><br><span class="line">    Y3 = []  <span class="comment"># train correct</span></span><br><span class="line">    Y4 = []  <span class="comment"># train loss</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开始训练</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(epochs):     <span class="comment"># 迭代epochs次</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Epoch <span class="subst">&#123;t+<span class="number">1</span>&#125;</span>\n-------------------------------&quot;</span>)</span><br><span class="line">        <span class="comment"># 训练</span></span><br><span class="line">        correct_y3, test_loss_y4 = train(train_dataloader, model, loss_fn, optim)</span><br><span class="line">        <span class="comment"># 当次训练完后测试目前模型在测试集上的表现</span></span><br><span class="line">        correct_y1, test_loss_y2 = val(val_dataloader, model, loss_fn)</span><br><span class="line"></span><br><span class="line">        X.append(t+<span class="number">1</span>)</span><br><span class="line">        Y1.append(<span class="built_in">round</span>(correct_y1,<span class="number">3</span>))</span><br><span class="line">        Y2.append(<span class="built_in">round</span>(test_loss_y2,<span class="number">2</span>))</span><br><span class="line">        Y3.append(<span class="built_in">round</span>(correct_y3,<span class="number">3</span>))</span><br><span class="line">        Y4.append(<span class="built_in">round</span>(test_loss_y4,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘图</span></span><br><span class="line">    train_correct_plt(epochs, X, Y1, Y2, Y3, Y4)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算附加指标标准 参数量 FLOPS</span></span><br><span class="line">    input_size = (<span class="number">3</span>, <span class="number">196</span>, <span class="number">196</span>)</span><br><span class="line">    in_channels = <span class="number">3</span>  <span class="comment"># （通道数，彩图）</span></span><br><span class="line">    <span class="comment">#  print(summary(model,input_size, device=device ))  # 模型架构+参数量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#  FLOPS</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    from thop import profile</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    flops_transform = transforms.Compose([</span></span><br><span class="line"><span class="string">        transforms.Resize((256, 256)),  # 缩放到指定大小</span></span><br><span class="line"><span class="string">        transforms.CenterCrop(196),  # 中心随机裁剪</span></span><br><span class="line"><span class="string">        transforms.Normalize(mean=[0.4848, 0.4435, 0.4023], std=[0.2744, 0.2688, 0.2757]),  # 归一化</span></span><br><span class="line"><span class="string">    ])</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    input_size = (1, 3, 196, 196)</span></span><br><span class="line"><span class="string">    input = torch.randn(input_size).to()</span></span><br><span class="line"><span class="string">    transformed_input = flops_transform(input)</span></span><br><span class="line"><span class="string">    model = myRes()</span></span><br><span class="line"><span class="string">    flops, params = profile(model, inputs=(transformed_input,))</span></span><br><span class="line"><span class="string">    print(&#x27;FLOPs: %.2fG&#x27; % (flops / 1e9))</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----------保存模型----------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存模型 注意FLOPS生成了新的空模型</span></span><br><span class="line">    torch.save(model.state_dict(), cat_model_name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Done!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="参考文献：">参考文献：</h2><p><a href="https://aistudio.baidu.com/aistudio/projectdetail/5951901">第二名方案</a></p><p><a href="https://blog.csdn.net/lmx1458070445/article/details/122378497">猫十二分类</a></p><p><a href="https://blog.csdn.net/m0_56945333/article/details/123262247">迁移学习+ResNet50</a></p><p><a href="https://arxiv.org/abs/1512.03385">Deep Residual Learning for Image Recognition</a></p>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12猫分类学习笔记一（配置篇）</title>
      <link href="/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%88%E9%85%8D%E7%BD%AE%E7%AF%87%EF%BC%89/"/>
      <url>/2023/04/22/12%E7%8C%AB%E5%88%86%E7%B1%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%EF%BC%88%E9%85%8D%E7%BD%AE%E7%AF%87%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>12猫分类学习笔记一（配置篇）</h1><h2 id="0-背景介绍">0 背景介绍</h2><p>飞桨PaddlePaddle大赛：猫的十二种分类问题。</p><p>本场比赛要求参赛选手对十二种猫进行分类，属于CV方向经典的图像分类任务。图像分类任务作为其他图像任务的基石，可以让大家更快上手计算机视觉。</p><p>结合深度学习框架Pytorch和AI平台Paddle，使用分类模型，对这十二种猫进行分类。从第二次实验课开始，全部实验课用来完成这个比赛。</p><p>比赛地址：</p><p><a href="https://aistudio.baidu.com/aistudio/competition/detail/588/0/introduction">旧地址</a></p><p><a href="https://aistudio.baidu.com/aistudio/competition/detail/136/0/introduction">2023新地址</a></p><p>官网有数据集和对应的baseline视频和博客，都可以参考一下。</p><h2 id="1-环境安装">1 环境安装</h2><blockquote><p>有同学问我，为什么不用飞桨的那个BML平台呀？</p><p>我的评价是：休想从我身上撸一毛钱，而且我用个conda虚拟环境+pycharm自己用的熟的工具多香啊~。要不是老师要求用那个什么AI平台Paddle，我都懒得搞它。</p></blockquote><p>我的配置如下：</p><p>anaconda</p><p>pycharm</p><p>pytouch 1.12.0</p><p>Paddle</p><p>cuda+cudnn：11.6，8.0.0</p><p>pyecharts <code>pip install pyecharts</code></p><p>pandas <code>pip install pandas</code></p><h3 id="1-1-conda-虚拟环境的建立与激活">1.1 conda 虚拟环境的建立与激活</h3><p>可以参考我自己的博客，有基本的操作。</p><p><a href="https://cjh0220.github.io/">CJH’s blog - CJH’s blog (cjh0220.github.io)</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n cat python=<span class="number">3</span>.<span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate cat</span><br></pre></td></tr></table></figure><p>这样就进入了这个虚拟环境并完成激活。</p><h3 id="1-2-CUDA-cudnn（windows）">1.2* CUDA + cudnn（windows）</h3><blockquote><p>请注意，请注意，该内容非常的难受，要跟紧了！！！</p></blockquote><p><a href="https://blog.csdn.net/m0_45447650/article/details/123704930">CSDN博客</a></p><h3 id="1-3-飞桨安装">1.3 飞桨安装</h3><p><a href="https://www.paddlepaddle.org.cn/install/quick?docurl=/documentation/docs/zh/install/conda/windows-conda.html">官网</a></p><blockquote><p>官网很详细，选择自己对应的内容在即可。尽量在自己的虚拟环境下。</p></blockquote><p>结果如下。</p><p><a href="https://imgse.com/i/ppNBhWR"><img src="https://s1.ax1x.com/2023/03/20/ppNBhWR.md.png" alt="ppNBhWR.md.png"></a></p><h3 id="1-4-Pytorch-安装">1.4 Pytorch 安装</h3><p><a href="https://www.bilibili.com/video/BV1hE411t7RN/?spm_id_from=333.337.search-card.all.click">2019参考的老教程</a></p><p><a href="https://pytorch.org/get-started/previous-versions/">pytorch历史版本</a></p><p>注意按着自己的CUDA版本下载，它官方给的代码是自动帮你建立一个虚拟环境。但是如果你已经在虚拟环境下的命令行里，只需要去除尾端的 <code>-nvidia</code>。</p><blockquote><p>可能会出现命令行报错，出现一堆大于号等于号，可能就是你自己的python版本不对应，只需要换一个pytorch版本即可。</p></blockquote><h3 id="1-5-pycharm-环境配置">1.5 pycharm 环境配置</h3><p>在对应的文件夹中，使用pycharm以project方式打开文件夹。</p><p>点击左上角file或者<code>crtl+alt+s</code>。进入settings界面。</p><p><a href="https://imgse.com/i/ppNB5S1"><img src="https://s1.ax1x.com/2023/03/20/ppNB5S1.png" alt="ppNB5S1.png"></a></p><p>点Project 并点<code>Project Interpreter</code>，然后在左边下滑栏中 <code>show all</code>。+号添加Interpreter。选择<code>conda Environment</code> 然后<code>Existing environment</code>。找到自己的虚拟环境python文件即可。</p><p><a href="https://imgse.com/i/ppNBIQx"><img src="https://s1.ax1x.com/2023/03/20/ppNBIQx.png" alt="ppNBIQx.png"></a></p><p><a href="https://imgse.com/i/ppNBTOK"><img src="https://s1.ax1x.com/2023/03/20/ppNBTOK.md.png" alt="ppNBTOK.md.png"></a></p><blockquote><p>建议点亮 Make available to all project.会使你的该项目所有python文件都按照这个环境来。</p></blockquote><h3 id="Jupyter-notebook-添加conda虚拟环境">Jupyter notebook 添加conda虚拟环境</h3><p>解决方法：</p><ul><li>首先激活之前创建好的虚拟环境：<code>conda activate 环境名称</code></li><li>安装ipykernel：<code>conda install ipykernel</code></li><li>将环境写入notebook的kernel中：<br><code>python -m ipykernel install --user --name 环境名称 --display-name “Python (环境名称)”</code></li><li>打开notebook服务器：<code>jupyter notebook</code></li></ul><p><a href="https://blog.csdn.net/fxt579810/article/details/116863616">博客</a></p><h2 id="2-image库学习">2 image库学习</h2><p><a href="https://www.cnblogs.com/xiaozx/p/10698852.html">python之PIL库(Image模块) - 噼里巴啦 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/weixin_42475060/article/details/126175837">https://blog.csdn.net/weixin_42475060/article/details/126175837</a></p><h2 id="3-数据集的构建（文件夹）">3 数据集的构建（文件夹）</h2><h3 id="3-1-下载文件">3.1 下载文件</h3><p><a href="https://aistudio.baidu.com/aistudio/datasetdetail/10954">下载链接</a></p><p>在代码项目<code>cat</code>文件夹中，建立一个<code>data</code>文件夹，将下载内容解压至data文件夹内。</p><p><a href="https://imgse.com/i/ppvDZyd"><img src="https://s1.ax1x.com/2023/04/13/ppvDZyd.md.png" alt="ppvDZyd.md.png"></a></p><h3 id="3-2-Data-processing-ipynb-代码">3.2 Data_processing.ipynb 代码</h3><h4 id="导包">导包</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 路径操作</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 文件操作</span></span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="comment"># torch相关</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment"># 绘图展示工具</span></span><br><span class="line"><span class="comment"># 计算机视觉cv2</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment"># 图像处理</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageEnhance</span><br></pre></td></tr></table></figure><h4 id="观察图片结构">观察图片结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用Python的Pillow库来获取图片的大小信息，</span></span><br><span class="line">folder_path = <span class="string">&#x27;data/cat_12_train&#x27;</span>  <span class="comment"># 文件夹路径</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> os.listdir(folder_path):</span><br><span class="line">    <span class="keyword">if</span> file_name.endswith(<span class="string">&#x27;.jpg&#x27;</span>):</span><br><span class="line">        file_path = os.path.join(folder_path, file_name)</span><br><span class="line">        <span class="keyword">with</span> Image.<span class="built_in">open</span>(file_path) <span class="keyword">as</span> img:</span><br><span class="line">            width, height = img.size</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;file_name&#125;</span>: <span class="subst">&#123;width&#125;</span> x <span class="subst">&#123;height&#125;</span> pixels&#x27;</span>)</span><br></pre></td></tr></table></figure><p>预期结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">02WsuJX3pImwcyEKjFvkQqDSAaV8HoG5.jpg: 333 x 500 pixels</span><br><span class="line">03j9aZ5Gkq7vMDRnVQFwfbrHx8TEeoch.jpg: 500 x 402 pixels</span><br><span class="line">04Iv3QNKtu2DAfRTgs9XZwBMb1Cm7l6P.jpg: 500 x 327 pixels</span><br><span class="line">07FlA9MgYrTXDSaoQZuOzf6NWLyI3mR4.jpg: 200 x 200 pixels</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><strong>S1</strong>：图片大小不一，需要进行图像处理。</p><p><strong>Q1</strong>：如何确定该将图像缩放/裁剪，处理到 几x几？</p><p><strong>A1</strong>：缩放或裁剪？</p><p>图像缩放的基本原理就是根据原图像的像素值通过一定的规则计算得到目标图像的像素值。<br>在图像缩放的过程中，最重要的就是确定下面两个问题：</p><ul><li>一是计算目的图像中的每一个像素值时，应该选取原图像中哪些像素值；</li><li>二是这些选取出的像素值在计算目的像素时权重如何确定。</li></ul><p>数据增广（Data Augmentation）指的是在训练模型时，对原始数据进行一定的变换，以产生新的训练样本，从而扩大数据集的规模，有效地提高模型的泛化能力和鲁棒性。数据增广是一种常用的预处理方法，可以用于图像分类、目标检测、语音识别等任务。<br>常见的数据增广操作包括旋转、平移、缩放、裁剪、翻转、加噪声等。这些操作可以使样本具有不变性，提高模型的泛化能力。例如，对于图像分类任务，可以通过随机旋转、水平翻转、随机裁剪等操作，产生多个不同的图像样本，从而提高模型的鲁棒性和准确率。<br>需要注意的是，数据增广应该根据具体任务来选择合适的操作，不能过度增广。过度增广可能会导致数据样本的多样性过大，使得模型难以从中学到有用的特征，反而影响模型的泛化性能。</p><blockquote><p>这里面操作方法很多，可以再下一篇章具体讲解并优化，pytorch里面就是transform 这一个东东。可以调用来，不用自己手写。</p></blockquote><h4 id="观察是否出现样本不平衡问题">观察是否出现样本不平衡问题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 统计训练集各类猫的数目，防止样本不平衡问题。</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data/train_list.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    labels = f.readlines()</span><br><span class="line">    labels = [<span class="built_in">int</span>(i.split()[-<span class="number">1</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> labels]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">counts = pd.Series(labels).value_counts().sort_index().to_list()</span><br><span class="line">names = [<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">12</span>))]</span><br><span class="line">data = <span class="built_in">list</span>(<span class="built_in">zip</span>(counts, names))</span><br><span class="line">source = [<span class="built_in">list</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> data]</span><br><span class="line">source  <span class="comment"># 每个都是180个数据，不存在样本不平衡问题</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">[[180, &#x27;0&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;1&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;2&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;3&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;4&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;5&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;6&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;7&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;8&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;9&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;10&#x27;],</span></span><br><span class="line"><span class="string"> [180, &#x27;11&#x27;]]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="数据集的构建">数据集的构建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导包</span></span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torchvision.datasets <span class="keyword">import</span> ImageFolder</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># pytorch的手册及源码有讲解。</span><br><span class="line">torchvision.datasets.ImageFolder()要求根目录下建立分类标签子文件夹，每个子文件夹下归档对应标签的图片，因此需要给每个标签建立文件夹，并且遍历样本，将每个样本复制到对应的文件夹中。</span><br><span class="line">    &quot;&quot;&quot;A generic data loader where the images are arranged in this way by default: ::</span><br><span class="line"></span><br><span class="line">        root/dog/xxx.png</span><br><span class="line">        root/dog/xxy.png</span><br><span class="line">        root/dog/[...]/xxz.png</span><br><span class="line"></span><br><span class="line">        root/cat/123.png</span><br><span class="line">        root/cat/nsdf3.png</span><br><span class="line">        root/cat/[...]/asd932_.png</span><br><span class="line">        </span><br><span class="line">    This class inherits from :class:`~torchvision.datasets.DatasetFolder` so</span><br><span class="line">    the same methods can be overridden to customize the dataset.&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="生成文件夹，使用ImageFolder来构建数据库">生成文件夹，使用ImageFolder来构建数据库</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换文件夹格式</span></span><br><span class="line">train_ratio = <span class="number">0.9</span>  <span class="comment"># 训练集占0.9，验证集占0.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">folder_path = <span class="string">&#x27;data/cat_12_train&#x27;</span>  <span class="comment"># 原文件夹路径</span></span><br><span class="line">train_list_path = <span class="string">&#x27;data/train_list.txt&#x27;</span> <span class="comment"># 分割集txt路径</span></span><br><span class="line"></span><br><span class="line">train_paths, train_labels = [], []</span><br><span class="line">train_paths_new = []</span><br><span class="line"><span class="comment"># 读取分割集，并进行分割</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(train_list_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    lines = f.readlines()</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        train_paths.append(line.split(<span class="string">&#x27;&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">        train_paths_new.append(line.split(<span class="string">&#x27;&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line">        label = line.split(<span class="string">&#x27;&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        train_labels.append(<span class="built_in">int</span>(line.split(<span class="string">&#x27;&#x27;</span>)[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先新建一个文件夹，防止数据错乱</span></span><br><span class="line">newfolder_name = <span class="string">&#x27;cat_12_train_new&#x27;</span>  <span class="comment"># 新文件夹名称</span></span><br><span class="line">newfolder_path = <span class="string">&#x27;data/&#x27;</span> <span class="comment"># 新文件夹路径</span></span><br><span class="line">os.makedirs(os.path.join(newfolder_path, newfolder_name), exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一种猫类建立一个文件夹</span></span><br><span class="line">train_labels_new = <span class="built_in">list</span>(<span class="built_in">set</span>(train_labels))</span><br><span class="line">train_labels_new.sort(key=train_labels.index)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> train_labels_new:</span><br><span class="line">    newfolder_name = <span class="built_in">str</span>(i)</span><br><span class="line">    newfolder_path = <span class="string">&#x27;data/cat_12_train_new/&#x27;</span> <span class="comment"># 新文件夹路径</span></span><br><span class="line">    os.makedirs(os.path.join(newfolder_path, newfolder_name), exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先新建一个文件夹，防止数据错乱</span></span><br><span class="line">newfolder_name = <span class="string">&#x27;cat_12_val_new&#x27;</span>  <span class="comment"># 新文件夹名称</span></span><br><span class="line">newfolder_path = <span class="string">&#x27;data/&#x27;</span> <span class="comment"># 新文件夹路径</span></span><br><span class="line">os.makedirs(os.path.join(newfolder_path, newfolder_name), exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一种猫类建立一个文件夹</span></span><br><span class="line">train_labels_new = <span class="built_in">list</span>(<span class="built_in">set</span>(train_labels))</span><br><span class="line">train_labels_new.sort(key=train_labels.index)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> train_labels_new:</span><br><span class="line">    newfolder_name = <span class="built_in">str</span>(i)</span><br><span class="line">    newfolder_path = <span class="string">&#x27;data/cat_12_val_new/&#x27;</span> <span class="comment"># 新文件夹路径</span></span><br><span class="line">    os.makedirs(os.path.join(newfolder_path, newfolder_name), exist_ok=<span class="literal">True</span>)    </span><br><span class="line">    </span><br><span class="line"><span class="comment"># 将对应猫片复制入对应猫文件夹</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(train_paths)):</span><br><span class="line">    <span class="keyword">if</span> random.uniform(<span class="number">0</span>, <span class="number">1</span>) &lt; train_ratio:</span><br><span class="line">        src_img_path = <span class="string">&#x27;data/&#x27;</span> + <span class="built_in">str</span>(train_paths[i]) <span class="comment"># 源图片路径</span></span><br><span class="line">        cat_type = <span class="built_in">str</span>(train_labels[i])</span><br><span class="line">        dst_folder_path = <span class="string">&quot;data/cat_12_train_new/&quot;</span> + cat_type <span class="comment">#目标文件路径</span></span><br><span class="line">        img_name = os.path.basename(src_img_path)  <span class="comment"># 获取图片文件名</span></span><br><span class="line">        dst_path = os.path.join(dst_folder_path, img_name) <span class="comment"># 构造目标文件路径</span></span><br><span class="line">        shutil.copy(src_img_path, dst_path) <span class="comment"># 复制</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        src_img_path = <span class="string">&#x27;data/&#x27;</span> + <span class="built_in">str</span>(train_paths[i]) <span class="comment"># 源图片路径</span></span><br><span class="line">        cat_type = <span class="built_in">str</span>(train_labels[i])</span><br><span class="line">        dst_folder_path = <span class="string">&quot;data/cat_12_val_new/&quot;</span> + cat_type <span class="comment">#目标文件路径</span></span><br><span class="line">        img_name = os.path.basename(src_img_path)  <span class="comment"># 获取图片文件名</span></span><br><span class="line">        dst_path = os.path.join(dst_folder_path, img_name) <span class="comment"># 构造目标文件路径</span></span><br><span class="line">        shutil.copy(src_img_path, dst_path) <span class="comment"># 复制</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>请注意请注意请注意，听说这个分类如果你以数字去分类，且使用了ImageFolder。会有奇怪的bug。我这里参考了网上的博客进行了分类的名字调整。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path = <span class="string">&#x27;data\cat_12_val_new&#x27;</span></span><br><span class="line">file_list = os.listdir(path)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> file_list:</span><br><span class="line">    <span class="comment"># 补0 4表示补0后名字共4位 针对imagnet-1000足以</span></span><br><span class="line">    filename = file.zfill(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># print(filename)</span></span><br><span class="line">    new_name = <span class="string">&#x27;&#x27;</span>.join(filename)</span><br><span class="line">    os.rename(path + <span class="string">&#x27;\\&#x27;</span> + file, path + <span class="string">&#x27;\\&#x27;</span> + new_name)</span><br><span class="line">path = <span class="string">&#x27;data\cat_12_train_new&#x27;</span></span><br><span class="line">file_list = os.listdir(path)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> file_list:</span><br><span class="line">    <span class="comment"># 补0 4表示补0后名字共4位 针对imagnet-1000足以</span></span><br><span class="line">    filename = file.zfill(<span class="number">4</span>)</span><br><span class="line">    <span class="comment"># print(filename)</span></span><br><span class="line">    new_name = <span class="string">&#x27;&#x27;</span>.join(filename)</span><br><span class="line">    os.rename(path + <span class="string">&#x27;\\&#x27;</span> + file, path + <span class="string">&#x27;\\&#x27;</span> + new_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/ppzgBpq"><img src="https://s1.ax1x.com/2023/04/14/ppzgBpq.md.png" alt="ppzgBpq.md.png"></a></p><h2 id="数据观察">数据观察</h2><p>代码续着Data_processing.ipynb里头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义transform</span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.ColorJitter(brightness=<span class="number">0.05</span>, contrast=<span class="number">0.05</span>, saturation=<span class="number">0.05</span>, hue=<span class="number">0.05</span>),</span><br><span class="line">    <span class="comment"># transforms.ColorJitter 改变图像的属性：亮度（brightness）、对比度（contrast）、饱和度（saturation）和色调（hue)。</span></span><br><span class="line">    <span class="comment"># 数值表示上下浮动的百分比。比如：0.05，原亮度100 -&gt;(95,105)范围内。</span></span><br><span class="line">    transforms.Resize((<span class="number">256</span>, <span class="number">256</span>)),  <span class="comment"># 缩放到指定大小</span></span><br><span class="line">    transforms.CenterCrop(<span class="number">224</span>),   <span class="comment"># 中心随机裁剪</span></span><br><span class="line">    transforms.RandomHorizontalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率水平翻转</span></span><br><span class="line">    transforms.RandomVerticalFlip(p=<span class="number">0.5</span>),  <span class="comment"># 0.5 概率垂直翻转</span></span><br><span class="line">    transforms.ToTensor(),  <span class="comment"># 转换为张量</span></span><br><span class="line">    transforms.Normalize(mean=<span class="number">0</span>, std=<span class="number">1</span>),  <span class="comment"># 归一化</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载数据集</span></span><br><span class="line">folder_path = <span class="string">&#x27;data\cat_12_train_new&#x27;</span><span class="comment"># 文件夹路径</span></span><br><span class="line">dataset = ImageFolder(folder_path, transform=transform)</span><br><span class="line"><span class="built_in">print</span>(dataset)</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">1</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 随机展示3张图</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">16</span>, <span class="number">16</span>))</span><br><span class="line"><span class="keyword">for</span> i, (img, label) <span class="keyword">in</span> <span class="built_in">enumerate</span>(dataloader):</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    img = img.squeeze().numpy().transpose((<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>))  <span class="comment"># 将张量转换为图像</span></span><br><span class="line">    ax = fig.add_subplot(<span class="number">1</span>, <span class="number">3</span>, i+<span class="number">1</span>)</span><br><span class="line">    ax.imshow(img)</span><br><span class="line">    ax.set_title(<span class="string">f&#x27;Label: <span class="subst">&#123;dataset.classes[label.item()]&#125;</span>&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/ppvsWRO"><img src="https://s1.ax1x.com/2023/04/13/ppvsWRO.md.png" alt="ppvsWRO.md.png"></a></p><blockquote><p>看起来猫模猫样的，凑合着先</p></blockquote><p>当然后续的训练代码和预测代码，可能会对transform有所改变，只要保证维度一样其实问题不大。</p>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图像分类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嫦娥奔月改编版</title>
      <link href="/2023/03/08/%E5%AB%A6%E5%A8%A5%E5%A5%94%E6%9C%88%E6%94%B9%E5%8F%98%E7%89%88/"/>
      <url>/2023/03/08/%E5%AB%A6%E5%A8%A5%E5%A5%94%E6%9C%88%E6%94%B9%E5%8F%98%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1>一、嫦娥奔月各个版本</h1><h2 id="1-1原装正版">1.1原装正版</h2><p>相传在远古的时候，天上突然出现了十个太阳，晒得大地直冒烟，老百姓实在无法生活下去了。</p><p>有一个力大无比的英雄名叫后羿，他决心为老百姓解除这个苦难。后羿登上昆仑山顶，运足气力，拉满神弓，“嗖——嗖——嗖——”一口气射下九个太阳。他对天上最后一个太阳说：“从今以后，你每天必须按时升起，按时落下，为民造福。”</p><p>后羿为老百姓除了害，大伙儿都很敬重他。很多人拜他为师，跟他学习武艺。有个叫逄蒙的人，为人奸诈贪婪，也随着众人拜在后羿的门下。</p><p>后羿的妻子嫦娥（原名：姮娥），是个美丽善良的女子。她经常接济生活贫苦的乡亲，乡亲们都非常喜欢她。一天，昆仑山上的西王母送给后羿一丸仙药。据说，人吃了这种药，不但能长生不老，还可以升天成仙哩。可是，后羿不愿意离开嫦娥，就让她将仙药藏在百宝匣里。</p><p>这件事不知怎么被逄蒙知道了，他一心想把后羿的仙药弄到手。八月十五这天清晨，后羿要带弟子出门去，逄蒙假装生病，留了下来。到了晚上，逄蒙手提宝剑，迫不及待地闯进后羿家里，威逼嫦娥把仙药交出来。嫦娥心里想，让这样的人吃了长生不老药，不是要害更多的人吗。于是，她便机智地与逄蒙周旋。逄蒙见嫦娥不肯交出仙药，就翻箱倒柜，四处搜寻。眼看就要搜到百宝匣了，嫦娥疾步向前，取出仙药，一口吞了下去。</p><p>嫦娥吃了仙药，突然飘飘悠悠地飞了起来。她飞出了窗子，飞过了洒满银辉的郊野，越飞越高。碧蓝碧蓝的夜空挂着一轮明月，嫦娥一直朝着月亮飞去。</p><p>后羿外出回来，不见了妻子嫦娥。他焦急地冲出门外，只见皓月当空，圆圆的月亮上树影婆娑，一只玉兔在树下跳来跳去。啊，妻子正站在一棵桂树旁深情地凝望着自己呢。“嫦娥，嫦娥”后羿连声呼唤，不顾一切地朝着月亮追去。可是他向前追三步，月亮就向后退三步，怎么也追不上。</p><p>乡亲们很想念好心的嫦娥，在院子里摆上嫦娥平日爱吃的食品，遥遥地为她祝福。从此以后，每年八月十五，就成了人们企盼团圆的中秋佳节。</p><h2 id="1-2-其他版本">1.2 其他版本</h2><p><strong>抛夫独吞版</strong></p><p>嫦娥知道丈夫后羿从<a href="https://baike.baidu.com/item/%E8%A5%BF%E7%8E%8B%E6%AF%8D/278798">西王母</a>那儿讨来了不死之药，就生了服药成仙之心。有一天，就趁着后羿不注意，偷吃了不死药，然后就飞到<a href="https://baike.baidu.com/item/%E6%9C%88%E5%AE%AB/9369">月宫</a>。 [4]</p><p><strong>后羿赠药版</strong></p><p>据古籍《墉城集仙录》记载：“吴<a href="https://baike.baidu.com/item/%E5%A7%AE%E5%A8%A5/2341327">姮娥</a>，羿妻也，羿司射卫黄帝之宫，入宫得琼药之丹以与姮娥，服之，飞入<a href="https://baike.baidu.com/item/%E6%9C%88%E5%AE%AB/9369">月宫</a>，为月中之官。” [5]</p><p><strong>拯救黎民版</strong></p><p>羿是远古时期有穷国的国王，力大无穷，勇武善射，但性格暴戾，滥施苛政，弄得民不聊生。羿想长生不老，他于是从王母娘娘那里拿来了可以成仙得道的灵药。美丽善良的妻子嫦娥得知此事，为使百姓免受羿长期的残暴统治，就偷偷把仙药吃了，化作仙女飘向月宫，成了月宫中的神女。 [6]</p><p><strong>后羿不忠版</strong></p><p><a href="https://baike.baidu.com/item/%E5%B1%88%E5%8E%9F/6109">屈原</a>的《<a href="https://baike.baidu.com/item/%E5%A4%A9%E9%97%AE/14813">天问</a>》中说：后羿成为射日英雄后，对嫦娥有不忠行为，和河伯的妻子发生暧昧关系，因而引起嫦娥极大的不满，一气之下就离开后羿跑到天上去了。</p><p>​       注：人物解析只以嫦娥奔月正版故事为参照，其他版本不做考虑。</p><h1>二、  改编前人物解析</h1><p><strong>后羿</strong>：身强体壮，为人正直，被凡人们拥戴，十分心爱妻子，不愿直接用永生药。</p><p><strong>嫦娥</strong>：美丽善良机智，受老百姓尊敬爱戴。</p><p><strong>逄蒙</strong>：狡诈凶狠，不讲武德。</p><h1>三、改编剧情</h1><h2 id="届不到的日月"><strong>届不到的日月</strong></h2><p>远古时期，天空中出现十个太阳。她们是天神10女（10姐妹），她们好奇心旺盛，也正值青春年华。她们不顾天神劝阻，一心想见美丽的华夏大地，便从天府来到凡间的天空。</p><p>她们耀眼的光明使得大地焚烧，也无法回到天上。无奈之下，天帝只能将神力赐予凡间最有潜力的男人，也就是后羿。</p><p>后羿为了拯救世界，张弓搭箭，向那9个太阳射去。只见天空出现爆裂的火球最后，天上只留下一个太阳，人民因此将后羿誉为英雄。</p><p>其实后羿一共射了10只箭。后羿因射箭热汗直流，最后一个太阳在他眼里也是炎热的罪犯，他继续拉开弓箭，射向最后的太阳。但是此时，西方的小代表爱神丘比特此时匆忙来到搭弓现场，他眼见大事不妙，他挥动自己的小翅膀，追逐神箭，将在空中的神箭削弱伤害。但是在削弱之中，不小心顺手施加了自己的buff，涂上了爱情的毒药。</p><p>后羿连射九日的猛男模式结束后，恢复清醒，就此作罢。留下一日，照明世界足以。后羿从此进入贤者模式。</p><p>最后一个太阳之女，受情箭所伤，只得将灵魂脱离化为人体坠入凡间，太阳之力则留在天空，随着时间东升西落，但是受了一点小伤，使得每365个周期，太阳强度有所不同。</p><p>落入凡尘的仙女嫦娥，在经历英雄救美等环节后成功与后羿相识相爱，冥冥之中自有天意。她两结为夫妻，相敬如宾。成为村里的模范夫妻。</p><p>​       但是有一个巨大的问题在她们结亲后展现出来，后羿为了拯救世界过度使用力量，遭到阳物的反噬，成为一个阳痿男孩。</p><p>​       但是身强体壮的后羿不服，继续坚持锻炼，并认为这是自身锻炼的不足，也可能是心理的脆弱。他广结善缘，乐善好施，同时也寻找治疗的方法。</p><p>​       即使后羿再起不能，嫦娥也不过多介意，这点距离届不到就算了，相爱才是最重要的。时间不知不觉过去，过去了几年，她耐心的陪着后羿寻找治疗方法，后羿慢慢老去，但是嫦娥还是依旧貌美如花，青春动人。后羿的名声越来越广，收了几个学武的徒弟，其中一人便是逄蒙。</p><p>​       嫦娥可是人间尤物，如此美丽之人，令无数男人幻想。后羿身强体壮，但是几年未能产下一子，令众人不解，也让逄蒙动了坏心思。</p><p>​       一天，后羿做梦，梦到昆仑山上有法宝可寻，他起身前往昆仑山，历经九九八十一难，他来到了昆仑山遇见了王母。原来，后羿曾射下的九女是王母娘娘的女儿们。但是王母娘娘也知道后羿也是为了拯救苍生不得已而为。为了女婿和女儿的未来，天帝希望她能将药赠与后羿。</p><p>​       但是她又想起了她逝去的九个女儿，决定偷偷使坏。她对后羿说，这是永生药，喝了便能让自己血脉永传时间。后羿学识并非深厚，只听得懂永生，长生不老的意思。他虽已步入中年，年轻面貌不复当年，但是他希望能与爱妻白头偕老，而不是孤独永生。</p><p>​       其实这个药确实能治疗他的阳痿，能补充后羿的神力，让他能够重振雄风，一展男儿本色。但是他错义王母娘娘之言，只将“长生不老”药带回家，并交予嫦娥保管。</p><p>这件事不知怎么被逄蒙知道了，他一心想把后羿的仙药弄到手。八月十五这天清晨，后羿要带弟子出门去，逄蒙假装生病，留了下来。到了晚上，逄蒙手提宝剑，迫不及待地闯进后羿家里，威逼嫦娥把仙药交出来。嫦娥心里想，让这样的人吃了长生不老药，不是要害更多的人吗。于是，她便机智地与逄蒙周旋。逄蒙见嫦娥不肯交出仙药，就翻箱倒柜，四处搜寻。眼看就要搜到百宝匣了，嫦娥疾步向前，取出仙药，一口吞了下去。</p><p>嫦娥吃了仙药，突然飘飘悠悠地飞了起来。她飞出了窗子，飞过了洒满银辉的郊野，越飞越高。碧蓝碧蓝的夜空挂着一轮明月，嫦娥一直朝着月亮飞去。</p><p>​       原来嫦娥本是落入凡尘的仙女，吃下仙药后，神力大增。一路飘向自己原来得归属，太阳。但是啊她害怕像从前一样太过耀眼。她来到了太阳的背面，月亮。</p><p>​       急忙回到家里的后羿望着天上的月亮，心生愤怒与悔恨，他想要用他的生命再制作一只箭，将月亮射下，找回他的爱妻。正当他拉起最后的弓对着无边的黑夜中唯一的光明时。</p><p>​       群星闪耀，凄冷而明亮，它们铺在嫦娥飞升之路。一颗颗明星正如一滴滴泪珠般，寄托着嫦娥对后羿的爱恋，只是这份爱恋已传达不到。</p><p>​       后羿举起了最后的弓箭，但此刻弓上的箭头早已放下，他射去的是自己的思念，届不到的爱恋。（苏醒了，猎杀时刻）</p><p>​       后羿因最后失去神力而亡，死后他的灵魂来到天庭，他找到天帝，请求一个与爱妻重逢的机会，告诉她：我爱她。</p><p>​       有那么一个地方，它离月亮最近却又最遥远，它给予了她光明，却又陷入黑暗，明明彼此永远地在追逐，却只能见到她的背影，也不能在同一片天空中。</p><p>​       后羿来到了它未能射下的最后的太阳，一天天过去了，东升西落，它永远在追随着月亮。</p><p>​       古人云：人有悲欢离合，月有阴晴圆缺。此事古难全。但愿人长久，千里共婵娟。两情若在长久时，又岂在朝朝暮暮。彼此的爱恋无法传达，但是他们的爱情却是永恒的。</p><p>​       天上的星星是嫦娥奔月的泪珠；划过的流星，是后羿射去的思念。永恒而冰冷的爱，点亮了黑夜。</p><p>​       他们的相逢总在明天，日月天，明天。但是日日月月盼明天，可知今昔是何年？</p><p>人们在八月十五这天团圆地过节，而天上两个孤独的星体，依旧追逐着她们的爱人。</p><p>​       届不到的日月，届不到的爱恋。</p>]]></content>
      
      
      <categories>
          
          <category> 文学创作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学创作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24考研计划</title>
      <link href="/2023/02/20/24%E8%80%83%E7%A0%94%E8%AE%A1%E5%88%92/"/>
      <url>/2023/02/20/24%E8%80%83%E7%A0%94%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>24考研计划</h1><p>广东工业大学软件工程20届学生，计划23年2月开始准备考研。保研由于卷王过多且本人绩点不高，没有过多两眼的科创加分，所以准备考研了呜呜呜。</p><h2 id="英语复习计划">英语复习计划</h2><h3 id="时间安排">时间安排</h3><ul><li>2-3月：每天15分钟字帖，20分钟左右的背单词。一周写一套六级真题。</li><li>3~6月：每天15分钟字帖，20分钟左右的背单词。一周写两套左右六级真题，也可以针对部分内容强化复习。</li><li>7~10月：稳固复习，强化作文等专项训练。</li><li>10~12月：冲刺。</li></ul><h3 id="资料安排">资料安排</h3><h4 id="英文字帖：">英文字帖：</h4><p><a href="https://detail.tmall.com/item.htm?_u=k207sg6kbn39ba&amp;id=644410011669&amp;spm=a1z09.2.0.0.5ecb2e8dFHznfa">墨点字帖</a></p><p><a href="https://imgse.com/i/pSXKZfP"><img src="https://s1.ax1x.com/2023/02/20/pSXKZfP.png" alt="pSXKZfP.png"></a></p><h4 id="考研真相：">考研真相：</h4><p><a href="https://detail.tmall.com/item.htm?_u=k207sg6kbncf03&amp;id=646754757926&amp;spm=a1z09.2.0.0.5ecb2e8dFHznfa">【全部现货】2024考研真相英语一/24考研 英语二全套2023圣经一二历年真题英语解析试卷 基础研读版+高分突破+考前冲刺 搭词汇闪过-tmall.com天猫</a></p><p><a href="https://imgse.com/i/pSXKQmQ"><img src="https://s1.ax1x.com/2023/02/20/pSXKQmQ.png" alt="pSXKQmQ.png"></a></p><h2 id="数学复习计划">数学复习计划</h2><h3 id="时间安排-2">时间安排</h3><ul><li>2~3月：成功过一遍金榜的所有数学基础题，并开始写些老年代的原题。</li><li>3~6月：做提高篇，</li><li>7~10月：强化，刷题</li><li>10~12月：补充，冲刺</li></ul><blockquote><p>因为22年11月为了参加数学竞赛，已经算是狠狠过了一遍高数。，所以可以多花点时间在薄弱的学科里。</p></blockquote><h3 id="资料">资料</h3><p><a href="https://item.jd.com/12884817.html">《【限时包邮赠历年真题＋公式手册】2023李永乐考研数学复习全书基础篇+基础过关660题+历年真题·基础篇（数一）可搭张宇肖秀荣1000题徐涛核心考案汤家凤1800题》(李永乐，王式安)【摘要 书评 试读】- 京东图书 (jd.com)</a></p><blockquote><p>当时着急买的是23年的考研基础篇，后面可以转24年的，问题不大。</p></blockquote><p><a href="https://imgse.com/i/pSXKU6U"><img src="https://s1.ax1x.com/2023/02/20/pSXKU6U.png" alt="pSXKU6U.png"></a></p><p>几个老师的网课也可以看看，</p><p>武忠祥，李永乐，宋浩，等等。不过你买了金榜考研，看对应的题目就行。</p><h2 id="408复习计划">408复习计划</h2><h3 id="时间安排-3">时间安排</h3><p>基础阶段：**4 月-7 月，4 门课的第一轮复习，看教材、听网课，基本学完 408 的所有知识点，构建基础知识框架，教材课后习题完成。一定要把所有的参考书都过一遍。</p><p>**提高阶段：**7 月-8 月，开始第二轮复习，这两个月是大三暑假，建议留校复习，这个阶段主要以刷题和查缺补漏为主。</p><p>**强化阶段：**9 月-11 月上旬，专题重点难点突破，第一遍做真题，错题分类，以专题进行真题演练，可以着重考试难点（比如数据结构等）。同时关注招生简章，408 考研大纲的变化，还有千万不难忘了报名！！</p><p><strong>冲刺阶段</strong>：11 月中旬-12 月中旬，开始第三轮复习，第二遍做真题卷，同时可以刷市面上的预测题和押题卷，学习做题技巧。</p><p>**考试阶段：**12 月最后一个周末，靠前复习一下之前的错题，少做一两题，保持手感，调整心态。</p><h3 id="资料安排-2">资料安排</h3><blockquote><p>除了已经有的几本教材，还买了王道考研4件套。</p></blockquote><ul><li>计算机网路（第7版），谢希仁</li><li>计算机组成原理（第4版）</li><li>计算机操作系统（第四版）</li><li>数据结构，吴伟民</li></ul><p><a href="https://imgse.com/i/pSXK47d"><img src="https://s1.ax1x.com/2023/02/20/pSXK47d.png" alt="pSXK47d.png"></a></p><h2 id="政治复习计划">政治复习计划</h2><p>暑假在说hhhh</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据预处理概念</title>
      <link href="/2023/01/29/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%A6%82%E5%BF%B5/"/>
      <url>/2023/01/29/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1>数据预处理概念篇</h1><p>数据预处理的目的是，对原始数据进行预处理，以提高数据质量，提高学习算法的准确性、有效性和可伸缩性，达到简化学习模型和提高算法的泛化能力。</p><p>常用的数据预处理技术包括：</p><ul><li>数据清理</li><li>数据变换</li><li>数据归约</li><li>数据离散化</li><li>特征选择</li></ul><h2 id="1、数据集类型">1、数据集类型</h2><p>三个重要特征</p><ul><li>维度：数据集中的对象具有的属性个数总合</li><li>稀疏性：有意义数据的占比。</li><li>分辨率：观察深度。</li></ul><p>三类数据集：</p><ul><li>记录数据：<ul><li>事物数据/购物篮数据</li><li>数据矩阵</li></ul></li><li>基于图形的数据</li><li>有序数据：<ul><li>时序数据：</li><li>序列数据：生物学序列，购物单</li><li>时间序列数据：股票，库存控制</li><li>空间数据：空间自相关，地理系统，医学图像</li><li>流数据：电力供应，银行</li></ul></li></ul><h2 id="2、数据统计特性">2、数据统计特性</h2><p>数据统计又称为汇总统计</p><p>中心趋势度量：</p><h3 id="均值（mean）">均值（mean）</h3><h4 id="算术均值：">算术均值：</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>N</mi></mfrac><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>x</mi><mi>N</mi></msub></mrow><mi>N</mi></mfrac></mrow><annotation encoding="application/x-tex">\overline{x} = \frac{\sum_{i=1}^{N}{x_i}}{N} = \frac{x_1 + x_2 + \ldots + x_N}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6306em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3569em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6709em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="加权算数均值（带权重）：">加权算数均值（带权重）：</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>w</mi><mi>i</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>w</mi><mi>N</mi></msub><msub><mi>x</mi><mi>N</mi></msub></mrow><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><mo>+</mo><mo>…</mo><mo>+</mo><msub><mi>w</mi><mi>N</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\overline{x} = \frac{\sum_{i=1}^{N}{w_ix_i}}{\sum_{i=1}^{N}{w_i}} = \frac{w_1x_1 + w_2x_2 + \ldots + w_Nx_N}{w_1+w_2 + \ldots + w_N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6306em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.8419em;vertical-align:-1.1709em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6709em;"><span style="top:-2.1288em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1709em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0963em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="截断均值：">截断均值：</h4><p>指定0~100内的百分位数p，丢弃高端低端的2%的数据再计算均值。</p><h3 id="中位数（median）">中位数（median）</h3><p>有序集的中间值，偶数集中是中间两个值的平均值。</p><h3 id="众数（mode）">众数（mode）</h3><p>集合中出现频率最高的值。</p><h3 id="中列数（midrange）">中列数（midrange）</h3><p>中列数可用来评估数据集的中心趋势，是数据集的最大最小值的平均值。</p><h3 id="极差：">极差：</h3><p>max - min</p><h3 id="方差：">方差：</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>S</mi><mi>x</mi><mn>2</mn></msubsup><mo>=</mo><mfrac><mn>1</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">S_x^2 = \frac{1}{m-1} \sum_{i=1}^{m}{(x - \overline{x})^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="3、数据清理">3、数据清理</h2><h4 id="（1）缺失值处理">（1）缺失值处理</h4><ul><li><strong>忽略元组</strong>，即放弃该单位</li><li><strong>忽略属性列</strong>：放弃该属性</li><li><strong>人工填写</strong>缺失值：</li><li><strong>自动填充</strong>缺失值：<ul><li><strong>0填充</strong>：全部补0。</li><li><strong>众数/中位数/均值</strong>：根据数据情况大致填充。</li><li><strong>常数填充</strong>：自己设定一个常数填充。</li><li><strong>基于回归/推理/决策树</strong>：更高级的做法，代价大</li></ul></li></ul><h3 id="（2）噪声数据平滑方法">（2）噪声数据平滑方法</h3><blockquote><p>建议先绘制箱型图，检验正态分布。</p></blockquote><ul><li><strong>3sigma原则</strong>：若数据集满足正态分布，则可根据3sigma原则淘汰离群点。</li></ul><blockquote><p>如果数据服从正态分布，在3σ原则下，异常值被定义为一组测定值中与平均值的偏差超过三倍标准差的值。在正态分布下，距离平均值3σ之外的值出现的概率为 P(|x-μ|&gt;3σ)&lt;=0.003，属于极个别的小概率事件。如果数据不服从正态分布，也可以用远离平均值的多少倍标准差来描述。</p></blockquote><p>​如果数据不服从正态分布，那么可以用远离平均值的多少倍标准差来描述，倍数就是Z-score。Z-score以标准差为单位去度量某一原始分数偏离平均数的距离，它回答了一个问题：“一个给定分数距离平均数多少个标准差?”，Z-score的公式是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Z</mi><mo>=</mo><mfrac><mrow><mi>X</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">Z = \frac{X -\mu }{\sigma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">μ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li><strong>IQR方法</strong>：四分位点内距是指在第75个百分点与第25个百分点的差值，或者说，上、下四分位数之间的差，计算IQR的公式是：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>Q</mi><mi>R</mi><mo>=</mo><mi>Q</mi><mn>3</mn><mo>−</mo><mi>Q</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">IQR = Q3 − Q1 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mord">1</span></span></span></span></span></p><p>IQR是统计分散程度的一个度量，分散程度通过需要借助箱线图来观察，通常把小于 Q1 - 1.5 * IQR 或者大于 Q3 + 1.5 * IQR的数据点视作离群点，探测离群点的公式是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>o</mi><mi>u</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi>s</mi><mo>=</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>&lt;</mo><mo stretchy="false">(</mo><mi>Q</mi><mn>1</mn><mo>−</mo><mn>1.5</mn><mo>∗</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo stretchy="false">)</mo><mi>o</mi><mi>r</mi><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mo>&gt;</mo><mo stretchy="false">(</mo><mi>Q</mi><mn>3</mn><mo>+</mo><mn>1.5</mn><mo>∗</mo><mi>I</mi><mi>Q</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">outliers =  value &lt; ( Q1 - 1.5 * IQR )  or value &gt; ( Q3 + 1.5 * IQR )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">tl</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ers</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">QR</span><span class="mclose">)</span></span></span></span></span></p><ul><li><strong>箱型图分析法</strong>：一般采用此方法分析异常值</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/5eeac7272131f7cc7456eeaa264fe23b.png" alt="箱型图"></p><p>箱线图可以直观地看出数据集的以下重要特性：</p><p><strong>中心位置</strong>：中位数所在的位置就是数据集的中心，从中心位置向上或向下看，可以看出数据的倾斜程度。<br><strong>散布程度</strong>：箱线图分为多个区间，区间较短时，表示落在该区间的点较集中；<br><strong>对称性</strong>：如果中位数位于箱子的中间位置，那么数据分布较为对称；如果极值离中位数的距离较大，那么表示数据分布倾斜。<br><strong>离群点</strong>：离群点分布在箱线图的上下边缘之外。</p><ul><li><strong>分箱</strong>：等深分箱法、等宽分箱法、最小熵法和用户自定义区间法。</li><li><strong>数据平滑方法</strong>：有3种<ul><li>按平均值平滑：对同一箱值中的数据求平均值，用平均值替代该箱子中的所有数据</li><li>按边界值平滑：用距离较小的边界值替代箱中每一数据</li><li>按中值平滑：取箱子的中值，用来替代箱子中的所有数据。</li></ul></li></ul><p><a href="https://imgse.com/i/vvsxjf"><img src="https://s1.ax1x.com/2022/09/14/vvsxjf.md.png" alt="vvsxjf.md.png"></a></p><p><a href="https://blog.csdn.net/weixin_42859280/article/details/93486998">数据挖掘如何分箱以及如何对每个箱子中的数据进行平滑处理</a></p><p><a href="https://blog.csdn.net/Happy_change/article/details/110502518">python分箱法</a></p><ul><li>**聚类：**聚类将类似的值组织成群或”簇“。离群点可以被聚类检测，直观地，落在簇集合之外的值被视为异常值。通过删除离群点来平滑数据。</li><li>**回归：**线性非线性回归来拟合函数平滑数据。</li></ul><h2 id="4、数据聚合">4、数据聚合</h2><p>将冗余数据删除，如一个人的出生年龄和出生日期。</p><p>一般根据具体特征意义来进行聚合。</p><h2 id="5、数据变换">5、数据变换</h2><p>数据转换的方法有下面三种：</p><ul><li>数据泛化（Data Generalization）：将底层数据抽象到更高的概念层。</li><li>数据标准化（Data Standardization）：将数据按比例缩放，使数据都落在一个特定的区间</li><li>数据离散化（Data Discretization）：将数据用区间或者类别的概念替换。</li></ul><h3 id="数据泛化">数据泛化</h3><blockquote><p>从概念上讲，数据立方体可以看做一种多维数据泛化。数据泛化通过把相对低层的值（例如，属性年龄的数值）用较高层概念（例如，青年、中年和老年）替换来汇总数据。</p><ul><li>数据特征化的面向属性的归纳</li><li>面向属性归纳的有效实现</li><li>类比较的面向属性归纳</li></ul></blockquote><h3 id="数据规范化">数据规范化</h3><p>是原来的度量值转换为无量纲的值。对于使用距离度量的分类方法，如神经网络，KNN分类和聚类算法，规范化起到很好的效果。</p><p>对于基于距离的方法，规范化可以帮助平衡具有较大初始值域的属性与具有较小初始值域的属性可比性。</p><p><strong>常见方法：</strong></p><h4 id="（1）最小-最大规范化">（1）最小-最大规范化</h4><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Z</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><mi>m</mi><mi>i</mi><msub><mi>n</mi><mi>f</mi></msub></mrow><mrow><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>f</mi></msub><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>f</mi></mrow></mfrac><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">Z_{ij} = \frac{x_{ij}- min_{f}}{max_{f}-min{f}}(b-a) + a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3086em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3365em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">min</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">mi</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></span></p><p>做了线性变换，将值转换至[a,b]中</p><p>最小-最大规范化保持原有数据，若产生新的数据，会发生“越界错误”。</p><h4 id="（2）z-score规范化">（2）z-score规范化</h4><p>其中EX为评价值，sigma为标准差。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Z</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><mo>−</mo><mi>E</mi><msub><mi>X</mi><mi>f</mi></msub></mrow><msub><mi>σ</mi><mi>f</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">Z_{if} = \frac{x_{if} - EX_f}{\sigma_f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3324em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="（3）小数点定标规范化">（3）小数点定标规范化</h4><h3 id="特征构造">特征构造</h3><p>特征提取，指标建立</p><h3 id="数据离散化">数据离散化</h3><p>等宽等频离散化。</p><blockquote><p>比如：5，10，15，19，24</p><p>变化为：1，2，3，4，5。以5为宽</p></blockquote><p>基于聚类分析的离散化。</p><p>基于熵的离散化。</p><h3 id="数据归约">数据归约</h3><p>维度规约 是指通过使用数据编码或变换，得到原始数据的归约或“压缩”表示。</p><p>维归约的好处：</p><ul><li>降低时间空间复杂度</li><li>模型更容易理解</li></ul><h4 id="离散小波变换（DWT">离散小波变换（DWT )</h4><p>离散傅里叶变换</p><h4 id="主成分分析（PCA">主成分分析（PCA)</h4><h4 id="抽样">抽样</h4><h4 id="特征选择">特征选择</h4><p>​        特征选择是指从一组已知特征集合中选择最具有代表性的特征子集，使其保留原有数据的大部分信息，即选择的特征子集可以像原来的全部特征一样用来正确区分数据集中的每个数据对象。</p><p>分为三种方法：过滤，，封装，嵌入</p>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片爬取</title>
      <link href="/2022/12/15/%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/"/>
      <url>/2022/12/15/%E5%9B%BE%E7%89%87%E7%88%AC%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h1>图片爬取</h1><p>在爬得书本数据后，不是有一个图片的img地址嘛~</p><p>我们还可以把他保存至本地，本次就教大家将网上的图片，批量拉进自己的电脑</p><h2 id="1-库与数据的导入">1 库与数据的导入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">data = pd.read_csv(<span class="string">&quot;book_data_2.csv&quot;</span>)</span><br></pre></td></tr></table></figure><p>其中国<code>data.iloc[0][4]</code>为图片地址</p><p>类似:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;https://img2.doubanio.com/view/subject/s/public/s34327482.jpg&#x27;</span><br></pre></td></tr></table></figure><h2 id="2-爬取并转换为二进制保存">2 爬取并转换为二进制保存</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>,<span class="built_in">len</span>(data)):</span><br><span class="line">    url = data.iloc[i][<span class="number">4</span>]</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    time.sleep(<span class="number">0.2</span>) <span class="comment"># 防止被捕</span></span><br><span class="line">    path = <span class="string">&quot;./image/&quot;</span> + <span class="built_in">str</span>(data.iloc[i][<span class="number">0</span>]) + <span class="string">&quot;.jpg&quot;</span> <span class="comment"># 名字与地址</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(r.content)<span class="comment">##二进制形式</span></span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片爬取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云从业者认证学习笔记</title>
      <link href="/2022/11/29/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/29/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1>腾讯云从业者认证学习笔记前言</h1><h3 id="我的成绩">我的成绩</h3><p><a href="https://imgse.com/i/zdwGEd"><img src="https://s1.ax1x.com/2022/11/29/zdwGEd.md.png" alt="zdwGEd.md.png"></a><br>相关链接：</p><p><a href="https://cloud.tencent.com/edu/training/cert/detail?type=practitioner">腾讯云从业者认证</a></p><p><a href="https://cloud.tencent.com/edu/learning/course-1998-23905">【限时免费】腾讯云从业者认证课程 - 腾讯产业互联网学堂 (tencent.com)</a></p><p><a href="https://tschool.kaoshixing.com/login/exam/exam_skip_login/867845/1">模拟考试</a></p><h2 id="认证概述">认证概述</h2><p>腾讯云从业者认证是云计算行业从业者的初级技能认证, 通过该认证可有效验证您是否具备掌握云计算基础知识以及理解腾讯云基础产品的功能和使用场景的能力。适用于初入云计算行业, 计划从事售前工作, 或逐步向运维、架构等角色提升的人员。该认证需要学员提前报名, 在腾讯云官方授权的考试中心进行。</p><h2 id="适合对象">适合对象</h2><ul><li>正在从事或有志于从事云计算相关岗位的学生或IT从业者；</li><li>具有计算机、网络通信、数据处理等领域的学习或工作经验；</li><li>对虚拟化、服务器、存储、网络、数据库、安全等基本概念有所了解；</li></ul><h2 id="课程目录">课程目录</h2><p><a href="https://imgse.com/i/zn31Ug"><img src="https://s1.ax1x.com/2022/11/18/zn31Ug.png" alt="zn31Ug.png"></a></p><h2 id="考试内容">考试内容</h2><table><thead><tr><th style="text-align:left">知识域</th><th style="text-align:left">百分比</th><th style="text-align:left">知识点</th></tr></thead><tbody><tr><td style="text-align:left">云计算基础</td><td style="text-align:left">30%</td><td style="text-align:left">1.1 计算发展历史 1.2 云计算的技术架构 1.3 云计算的影响 1.4 业界主流云产品</td></tr><tr><td style="text-align:left">腾讯云产品基础知识</td><td style="text-align:left">70%</td><td style="text-align:left">2.1 腾讯云云网络, 云CDN, 云存储, 云数据库, 云安全产品功能、优势和适用场景 2.2 腾讯云云网络, 云CDN, 云存储, 云数据库, 云安全产品计费方案</td></tr></tbody></table><p><a href="https://main.qcloudimg.com/raw/84235eeb1c66575eb7fa536e88b0934f/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%88%97%E8%A1%A8V1.2.pdf">知识点列表</a></p><p><a href="https://main.qcloudimg.com/raw/40d40b75dc1b29ac5e9173cf63809f5a/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81-%E8%80%83%E8%AF%95%E6%A0%B7%E9%A2%98V1.2.pdf">考试样题</a></p><h2 id="试题结构">试题结构</h2><p><a href="https://imgse.com/i/zn3VCd"><img src="https://s1.ax1x.com/2022/11/18/zn3VCd.png" alt="zn3VCd.png"></a></p><p>60道单选20道多选，70分通过。</p><h2 id="1-1-云从导学。">1.1 云从导学。</h2><p>市场增速迅猛，国家推动，厂商发力。</p><p><a href="https://imgse.com/i/zn3sPJ"><img src="https://s1.ax1x.com/2022/11/18/zn3sPJ.png" alt="zn3sPJ.png"></a></p><h1>腾讯云从业者认证学习笔记（一）</h1><h2 id="2-1-企业自建EDC">2.1 企业自建EDC</h2><p>企业数据中心 （<strong>EDC–Enterprise Data Center</strong>）</p><blockquote><p>互联网<a href="https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83&amp;spm=1001.2101.3001.7020">数据中心</a>（IDC–Internet Data Center）</p><p>企业数据中心 （EDC–Enterprise Data Center）</p><p>外包数据中心 （ODC–Outsourcing data center）</p><p>主数据中心（DC–Data Center）</p><p>DC机房：提供INTERNET 网络服务，数据竞带；提供互联网+的业务；提供场地出租、设备托管、资源出租等；运行带维；</p><p>EDC机房：企业<a href="https://so.csdn.net/so/search?q=%E7%BA%A7%E6%95%B0&amp;spm=1001.2101.3001.7020">级数</a>据中心，通常为企业自建自行运维。稳定性要求较高，多采用相对成熟的技术；</p><p>对IDC、EDC的数据中心都包含了基础设施的运维和自有业务系统的运行维护，即使同一类型的数据中心各自个性化的自有系统的运行维护的要求都是有很大的差异，比如不同银行的金融数据中心研发和测试、运行的环境、对外服务的要求都大不相同。（源自中国工程建设标准化协会）</p><p>ODC机房：提供场地出租、设备托管、资源出租、运行带维；</p><p>DC机房：一级节点，建设在特大城市。</p></blockquote><p>建设难度高、运营维护管理复杂<br>扩展调整不变、上线周期长<br>TCO（Total Cost of Ownership 即总体拥有成本）总拥有<strong>成本较高</strong>：从产品采购到后期使用、维护等的成本。TCO=CapE采购与部署成本+OpeEx运维成本+OppCost机会成本故障<br>TVO（Total Cost of Ownership 即总体拥有价值）总拥有<strong>价值不明显</strong>：TVO = IT带来的业务价值与收益。IT如何为业务贡献更多，并实现IT收益的最大化。</p><p><a href="https://imgse.com/i/zn8JoD"><img src="https://s1.ax1x.com/2022/11/18/zn8JoD.png" alt="zn8JoD.png"></a></p><blockquote><p><strong>TCO</strong> 总所有成本 (Total cost of ownership)是一种公司经常采用的技术评价标准，它的核心思想是在一定时间范围内所拥有的包括置业成本（acquisition cost）和每年总成本在内的总体成本。在某些情况下，这一总体成本是一个为获得可比较的现行开支而对3到5年时间范围内的成本进行平均的值。</p><p><a href="http://t.csdn.cn/ROsTg">TCO(总所有成本)</a></p><p>CAPEX 是指资金、固定资产的投入.对电信运营商来说,有关的网络设备、计算机、仪器等一次性支出的项目都属于CAPEX,其中网络设备占最大的部分。</p><p><strong>CAPEX</strong>（Capital Expenditure）即资本性支出，计算公式为：CAPEX=战略性投资+滚动性投资。</p><p>资本性投资支出指用于基础建设、扩大再生产等方面的需要在多个会计年度分期摊销的资本性支出。</p></blockquote><p>可用性 = 承诺服务时间-宕机时间  / 承诺服务时间 <code>* </code>100%</p><p>腾讯云DC必须在T3级以上。</p><p><a href="https://imgse.com/i/zn8WSs"><img src="https://s1.ax1x.com/2022/11/18/zn8WSs.png" alt="zn8WSs.png"></a></p><h2 id="2-2-IDC托管-租用">2.2 IDC托管/租用</h2><p><strong>IDC</strong>–Internet Data Center：互联网[数据中心。</p><p><a href="https://imgse.com/i/znGm0f"><img src="https://s1.ax1x.com/2022/11/18/znGm0f.png" alt="znGm0f.png"></a></p><h2 id="2-3-云计算对比">2.3 云计算对比</h2><p><a href="https://imgse.com/i/znGGXq"><img src="https://s1.ax1x.com/2022/11/18/znGGXq.png" alt="znGGXq.png"></a></p><h2 id="2-4-云计算">2.4 云计算</h2><p>按需服务、按量计算</p><p>NIST定义：云计算是一种按需使用，按量付费的服务模式，提供可用的，便捷的，按需的网络访问，可配置的计算资源。</p><p>像电一样用电。</p><p><a href="https://imgse.com/i/zndxot"><img src="https://s1.ax1x.com/2022/11/18/zndxot.png" alt="zndxot.png"></a></p><h2 id="2-5-云计算参考模型">2.5 云计算参考模型</h2><p><a href="https://imgse.com/i/znw8m9"><img src="https://s1.ax1x.com/2022/11/18/znw8m9.png" alt="znw8m9.png"></a></p><h2 id="2-6-云计算五大关键特点">2.6 云计算五大关键特点</h2><ul><li>按需服务：资源/时间</li><li>资源池化：提升利用率/可用性</li><li>弹性扩展：业务需求/成本均衡</li><li>泛网络访问：随时随地/高质量</li><li>服务可度量：服务计费/精细化运营</li></ul><h2 id="2-7-云计算三大服务模式">2.7 云计算三大服务模式</h2><p>服务模式</p><ul><li>SaaS：Software as a Service软件即服务</li><li>PaaS：Platform as a Service 平台即服务</li><li>IaaS：Infrastructure as a Service 基础设施即服务</li></ul><p><a href="https://imgse.com/i/znwo0s"><img src="https://s1.ax1x.com/2022/11/18/znwo0s.png" alt="znwo0s.png"></a></p><p>技术架构：</p><p><a href="https://imgse.com/i/zn0Ptx"><img src="https://s1.ax1x.com/2022/11/18/zn0Ptx.png" alt="zn0Ptx.png"></a></p><h2 id="2-8-云计算四种部署方式">2.8 云计算四种部署方式</h2><p>公有云，私有云，混合云，行业云。</p><p><a href="https://imgse.com/i/zn0Vje"><img src="https://s1.ax1x.com/2022/11/18/zn0Vje.png" alt="zn0Vje.png"></a></p><h3 id="共有云-私有云">共有云/私有云</h3><p><a href="https://imgse.com/i/zn0338"><img src="https://s1.ax1x.com/2022/11/18/zn0338.png" alt="zn0338.png"></a></p><h3 id="混合云">混合云</h3><p><a href="https://imgse.com/i/zn0gb9"><img src="https://s1.ax1x.com/2022/11/18/zn0gb9.png" alt="zn0gb9.png"></a></p><h3 id="行业云">行业云</h3><p>公有云定制化成本高，业务理解复杂，技术储备不够，成本高。</p><p>解决方案：</p><ul><li>行业云：是针对特定行业深度优化的公有云，可以理解为产业互联网。</li><li>类型一：共有云厂商带领行业伙伴搞行业解决方案，如腾讯云智慧零售。</li><li>类型二：行业头部厂商整合IT能力出租给其他企业使用、如招银云创。</li></ul><h2 id="2-9-计算虚拟化">2.9 计算虚拟化</h2><h3 id="计算虚拟化原理">计算虚拟化原理</h3><p><a href="https://imgse.com/i/znBPbj"><img src="https://s1.ax1x.com/2022/11/18/znBPbj.png" alt="znBPbj.png"></a></p><h3 id="计算虚拟化分类">计算虚拟化分类</h3><p><a href="https://imgse.com/i/znBtxO"><img src="https://s1.ax1x.com/2022/11/18/znBtxO.png" alt="znBtxO.png"></a></p><h3 id="计算虚拟化对比">计算虚拟化对比</h3><p><a href="https://imgse.com/i/znB2QS"><img src="https://s1.ax1x.com/2022/11/18/znB2QS.png" alt="znB2QS.png"></a></p><h3 id="KVM">KVM</h3><p><a href="https://imgse.com/i/znB7WV"><img src="https://s1.ax1x.com/2022/11/18/znB7WV.png" alt="znB7WV.png"></a></p><p>按需服务</p><h2 id="2-10-分布式数据存储ServerSAN">2.10 分布式数据存储ServerSAN</h2><p><strong>原理：</strong></p><ul><li>通过分布存储层将服务器上分散的本地盘整合成统一的存储资源池。</li><li>读写元承接应用I/O，控制元通过hash算法确保I/O均匀分布到各节点，存储元负责写数据到对应的存储块。</li></ul><p><strong>优势：</strong></p><ul><li>性价比：普通服务器上本地盘可保障高性能</li><li>易扩展：实时线性的增加或减少节点或存储</li><li>高可靠性：数据保存3副本，快速故障迁移/修复</li></ul><p><a href="https://imgse.com/i/zuj7Tg"><img src="https://s1.ax1x.com/2022/11/19/zuj7Tg.png" alt="zuj7Tg.png"></a></p><blockquote><p>SAN存储 （存储区域网络Storage Area Network）也即存储区域网络，这个是通过某种交换机（例如光纤交换机或者IB交换机等）连接存储阵列和服务器主机等设备，形成一个专用的存储网络。其概念的核心是形成一个存储网络，该网络是专有网络，所谓的专用存储网络主要体现在通信设备和协议上，目前主流的是FC-SAN，也就是基于FC设备及通信协议的存储区域网络。<br>————————————————<br>版权声明：本文为CSDN博主「souy_c」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/cyq6239075/article/details/105909136">https://blog.csdn.net/cyq6239075/article/details/105909136</a></p></blockquote><p><strong>分布式存储</strong><br>分布式存储是可以将分散开来的磁盘聚集起来组成一个虚拟的存储设备，在不增加专业的存储设备情况下为企业提供大容量高性能的存储服务。为什么会产生分布式存储？还是因为传统存储存在几点问题：成本原因，使用专用的存储网络无疑会增加企业负担。<br>存储弹性，上面我们看到了存储阵列的存储扩展柜是级联在机头上，如果资源有不同要求的时候，很难方便地做出调整，包括性能和容量资源的弹性调配。容错性，在规模很大的云计算环境下，需要具备跨机房、跨机柜、跨服务器的数据保护机制，即使在机柜故障等场景下，数据仍然不丢失，仍然可访问。</p><p>扩展性，如机头、前后端网络、磁盘与CPU/MEM资源等，都是传统存储无法做到线性扩展的几个关键因素。分布式网络存储系统采用可扩展的系统结构，利用多台存储服务器分担存储负荷，利用位置服务器定位存储信息，它不但提高了系统的可靠性、可用性和存取效率，还易于扩展。</p><p>分布式存储是一个大的概念，其包含的种类繁多，除了传统意义上的分布式文件系统、分布式块存储和分布式对象存储外，还包括分布式数据库和分布式缓存等。本文局限在分布式文件系统等传统意义上的存储架构，对于数据库等不做介绍。</p><p><strong>分布式存储分类</strong><br>分布式存储分为三大类：<strong>块存储、文件存储、对象存储</strong>。</p><p>这三者的本质差别是使用数据的“用户”不同：块存储的用户是可以读写块设备的软件系统，例如传统的文件系统、数据库；文件存储的用户是自然人；对象存储的用户则是其它计算机软件。</p><p>文件存储：分布式存储中的文件存储就是前面讲的nas，这里不再详述。</p><p>块存储：分布式存储中的块存储和前面讲的san存储一样，这里也不再详述。</p><p>对象存储：对象存储出现得晚一些，相关产品一直也不温不火。一直到云计算和大数据的火爆，才慢慢进入公众视野。前面说到的块存储和文件存储，基本上都还是在专有的局域网络内部使用，而对象存储的优势场景却是互联网或者公网，主要解决海量数据，海量并发访问的需求。例如网盘就是典型的对象存储。对象存储的访问通常是在互联网，走HTTP协议，性能方面，单独看一个连接的是不高的（还要解决掉线断点续传之类的可靠性问题），主要强大的地方是支持的并发数量，聚合起来的性能带宽就非常可观了。</p><p>之所以出现了对象存储这种东西，是为了克服块存储与文件存储各自的缺点，发扬它俩各自的优点。对象做为一个整体进行整存整取，不需要像文件系统那样将数据切片管理元数据，我们只需要给他一个唯一标识，使用这个表示来查询和删除该对象。因此对象存储只能存取删（put/get/delete），而没有修改。</p><p><strong>Server SAN</strong><br>WIKIBON对Server SAN 的定义是：Server SAN is defined as a pooled storage resource comprising more than one storage device directly attached to separate multiple servers (more than one).</p><p>简单说Server SAN是有多个独立的服务器带的存储组成的一个存储资源池。wikibon把现在的存储的架构分成下面几个部分：</p><p>DAS，SAN/NAS大家都比较熟悉，前面也有介绍。云存储现在也广为人知了，比如亚马逊的AWS，国内的阿里云，大家应该也了解。但Hyperscale指的是超大规模存储，不是我们要介绍的忽略。最后一类存储架构，就是Server SAN了。这类存储最著名的就是VMWARE VSAN了，当然也包含HP的StoreVirtual VSA，华为的FusionStorage都算这种类型。根据上面的图我们可以看到Server SAN和传统SAN、分布式存储的区别。Server SAN使用通用硬件+软件，有着良好的性价比和扩展性。</p><h2 id="2-11-网络虚拟化-SDN">2.11 网络虚拟化-SDN</h2><p><a href="https://imgse.com/i/zuvNB8"><img src="https://s1.ax1x.com/2022/11/19/zuvNB8.png" alt="zuvNB8.png"></a></p><blockquote><p>SDN字面意思是软件定义网络，其试图摆脱硬件对网络<a href="https://so.csdn.net/so/search?q=%E6%9E%B6%E6%9E%84&amp;spm=1001.2101.3001.7020">架构</a>的限制，这样便可以像升级、安装软件一样对网络进行修改，便于更多的APP（应用程序）能够快速部署到网络上。</p><p>SDN网络关键的地方是在网络架构中增加了一个SDN控制器，把原来的分布式控制平面集中到一个SDN控制器上，由这个集中的控制器来实现网络集中控制。SDN网络架构具备3个基本特征：转控分离、集中控制、开放接口。</p><p><a href="https://blog.csdn.net/AtlanSI/article/details/95613225">SDN介绍</a></p></blockquote><p><a href="https://imgse.com/i/zuv5C9"><img src="https://s1.ax1x.com/2022/11/19/zuv5C9.png" alt="zuv5C9.png"></a></p><blockquote><p>一、耦合</p><p>1、耦合是指两个或两个以上的体系或两种运动形式间通过相互作用而彼此影响以至联合起来的现象。</p><p>2、在软件工程中，对象之间的<a href="https://so.csdn.net/so/search?q=%E8%80%A6%E5%90%88%E5%BA%A6&amp;spm=1001.2101.3001.7020">耦合度</a>就是对象之间的依赖性。对象之间的耦合越高，维护成本越高，因此对象的设计应使类和构件之间的耦合最小。</p><p>3、分类：有软硬件之间的耦合，还有软件各模块之间的耦合。耦合性是程序结构中各个模块之间相互关联的度量。它取决于各个模块之间的接口的复杂程度、调用模块的方式以及哪些信息通过接口。</p><p>二、<a href="https://so.csdn.net/so/search?q=%E8%A7%A3%E8%80%A6&amp;spm=1001.2101.3001.7020">解耦</a></p><p>1、解耦，字面意思就是解除耦合关系。</p><p>2、在软件工程中，降低耦合度即可以理解为解耦，模块间有依赖关系必然存在耦合，理论上的绝对零耦合是做不到的，但可以通过一些现有的方法将耦合度降至最低。</p><p>3、设计的核心思想：尽可能减少代码耦合，如果发现代码耦合，就要采取解耦技术。让数据模型，业务逻辑和视图显示三层之间彼此降低耦合，把关联依赖降到最低，而不至于牵一发而动全身。原则就是A功能的代码不要写在B的功能代码中，如果两者之间需要交互，可以通过接口，通过消息，甚至可以引入框架，但总之就是不要直接交叉写。</p><p>4、观察者模式：观察者模式存在的意义就是「解耦」，它使观察者和被观察者的逻辑不再搅在一起，而是彼此独立、互不依赖。比如网易新闻的夜间模式，当用户切换成夜间模式之后，被观察者会通知所有的观察者「设置改变了，大家快蒙上遮罩吧」。QQ消息推送来了之后，既要在通知栏上弹个推送，又要在桌面上标个小红点，也是观察者与被观察者的巧妙配合。</p><p><a href="http://t.csdn.cn/uPk8Z">http://t.csdn.cn/uPk8Z</a></p></blockquote><h2 id="2-12-云管理平台">2.12 云管理平台</h2><h3 id="Openstack">Openstack</h3><p>云计算管理平台：</p><p><strong>优势：</strong></p><p>开源项目，兼容各种云平台，标准统一规范</p><p><strong>劣势：</strong></p><p>部署运维升级复杂，性能与扩展性较差，容灾能力不足。</p><p><a href="https://imgse.com/i/zuxpvt"><img src="https://s1.ax1x.com/2022/11/19/zuxpvt.png" alt="zuxpvt.png"></a></p><h3 id="腾讯云管理平台-VStation">腾讯云管理平台 VStation</h3><p><a href="https://imgse.com/i/zuxib8"><img src="https://s1.ax1x.com/2022/11/19/zuxib8.png" alt="zuxib8.png"></a></p><p>对比：</p><p><a href="https://imgse.com/i/zuzKWd"><img src="https://s1.ax1x.com/2022/11/19/zuzKWd.png" alt="zuzKWd.png"></a></p><h2 id="2-13-应用虚拟化">2.13 应用虚拟化</h2><p><strong>容器技术</strong> 是一种轻量级虚拟化技术，通过进程隔离，将应用软件及其运行所依赖的资源与配置打包封装，提供独立可移植的运行环境。</p><p><a href="https://imgse.com/i/zK1Qpj"><img src="https://s1.ax1x.com/2022/11/19/zK1Qpj.png" alt="zK1Qpj.png"></a></p><p>Docker容器：</p><p>最流行的容器技术、标准化、强移植，目标：Build，Ship and Run Any APP，Anywhere</p><blockquote><p><a href="http://t.csdn.cn/nMOxl">http://t.csdn.cn/nMOxl</a></p><p><a href="http://t.csdn.cn/X6ZNB">http://t.csdn.cn/X6ZNB</a></p><p>容器技术:有效的将单个操作系统的资源划分到孤立的组中，以便更好的在孤立的组之间平衡有冲突的资源使用需求，这种技术就是容器技术。</p></blockquote><p><img src="C:%5CUsers%5CCJH%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1668913427734.png" alt="1668913427734"></p><h2 id="2-14-大数据与AI">2.14 大数据与AI</h2><p><a href="https://imgse.com/i/zKzt5F"><img src="https://s1.ax1x.com/2022/11/20/zKzt5F.png" alt="zKzt5F.png"></a></p><h2 id="2-15-云计算发展的阶段">2.15 云计算发展的阶段</h2><p><a href="https://imgse.com/i/zKzBK1"><img src="https://s1.ax1x.com/2022/11/20/zKzBK1.png" alt="zKzBK1.png"></a></p><h2 id="2-16-云计算产业影响">2.16 云计算产业影响</h2><p><a href="https://imgse.com/i/zMS9aT"><img src="https://s1.ax1x.com/2022/11/20/zMS9aT.png" alt="zMS9aT.png"></a></p><p><a href="https://imgse.com/i/zMSVMR"><img src="https://s1.ax1x.com/2022/11/20/zMSVMR.png" alt="zMSVMR.png"></a></p><p><a href="https://imgse.com/i/zMSeqx"><img src="https://s1.ax1x.com/2022/11/20/zMSeqx.png" alt="zMSeqx.png"></a></p><h2 id="2-17-云计算组织">2.17 云计算组织</h2><p><a href="https://imgse.com/i/zMSudK"><img src="https://s1.ax1x.com/2022/11/20/zMSudK.png" alt="zMSudK.png"></a></p><p><a href="https://imgse.com/i/zMSKIO"><img src="https://s1.ax1x.com/2022/11/20/zMSKIO.png" alt="zMSKIO.png"></a></p><h2 id="2-18-中国云市场规模">2.18 中国云市场规模</h2><p>公有云，私有云的份额不断增长，云计算市场两位数增长。</p><p><a href="https://imgse.com/i/zMSYLt"><img src="https://s1.ax1x.com/2022/11/20/zMSYLt.png" alt="zMSYLt.png"></a></p><h2 id="2-19-腾讯云发展阶段">2.19 腾讯云发展阶段</h2><p><a href="https://imgse.com/i/zMSwFS"><img src="https://s1.ax1x.com/2022/11/20/zMSwFS.png" alt="zMSwFS.png"></a></p><h2 id="2-20-腾讯云竞争优势">2.20 腾讯云竞争优势</h2><p><a href="https://imgse.com/i/zMS6Lq"><img src="https://s1.ax1x.com/2022/11/20/zMS6Lq.png" alt="zMS6Lq.png"></a></p><h2 id="2-21-腾讯云成功案例">2.21 腾讯云成功案例</h2><p><a href="https://imgse.com/i/zMShYF"><img src="https://s1.ax1x.com/2022/11/20/zMShYF.png" alt="zMShYF.png"></a></p><p><a href="https://imgse.com/i/zMSol9"><img src="https://s1.ax1x.com/2022/11/20/zMSol9.png" alt="zMSol9.png"></a></p><h1>腾讯云从业者认证学习笔记（二）</h1><h2 id="3-1-地域与可用区">3.1 地域与可用区</h2><p>**可用区：**同一地域内电力合网络互相独立的物理数据中心。命名 【城市+编号】</p><p>**地域：**一个独立的地理区域，命名【覆盖范围+机房所在城市】</p><p>可用区是地域下的一个物理位置；地域包含多个可用区，每个可用区下包含多个实例</p><p>可用区特点：</p><ul><li>就近接入</li><li>隔离故障点</li><li>负载均衡</li><li>保证高可用</li></ul><h2 id="3-2-云服务器实例">3.2 云服务器实例</h2><p><a href="https://imgse.com/i/zMSjYD"><img src="https://s1.ax1x.com/2022/11/20/zMSjYD.png" alt="zMSjYD.png"></a></p><p>**实例：**一台完整的云服务器（虚拟机），包含CPU、内存、磁盘、网络、操作系统等组件。</p><p>**命名：**系列。机型。规格。</p><p>**管理：**实例可通过控制台或API管理；实力配置可在线调整重启生效。</p><p>**安全：**策略控制，安全组、登录控制</p><p><a href="https://imgse.com/i/zMpEtS"><img src="https://s1.ax1x.com/2022/11/20/zMpEtS.png" alt="zMpEtS.png"></a></p><p><strong>实例类型</strong>：通过不同的配置（CPU,内存、IO、网络等）提供不同的IO、计算、存储或网络能力，不同的应用场景。实例族指某一类实例类型的集合。</p><p><strong>实力类型特点与应用</strong>：</p><p><a href="https://imgse.com/i/zMpw0x"><img src="https://s1.ax1x.com/2022/11/20/zMpw0x.png" alt="zMpw0x.png"></a></p><h2 id="3-3-云服务器镜像">3.3 云服务器镜像</h2><p><strong>云服务器镜像定义</strong>：镜像就像创建云服务器的模板（装机盘），提供云服务器实例所需的操作系统与软件配置等信息。</p><p>**作用：**批量部署环境，特点软件部署，运行环境备份</p><p><strong>镜像类型与优势</strong></p><p><a href="https://imgse.com/i/zM9ZE6"><img src="https://s1.ax1x.com/2022/11/20/zM9ZE6.png" alt="zM9ZE6.png"></a></p><h2 id="3-4-云服务器存储">3.4 云服务器存储</h2><p>按存储介质分：普通云硬盘、高性能硬盘、SSD云硬盘</p><p>按使用场景：系统盘、数据盘</p><ul><li>系统盘：与服务器共同存在</li><li>数据盘：最小50G，最多10个</li></ul><p>按架构模式：本地盘、云硬盘、对象存储</p><h2 id="3-5-云服务演进">3.5 云服务演进</h2><p><a href="https://imgse.com/i/zMCkRg"><img src="https://s1.ax1x.com/2022/11/20/zMCkRg.png" alt="zMCkRg.png"></a></p><h2 id="3-6-云服务器CVM">3.6 云服务器CVM</h2><p>云服务器CVM一种简单高效、安全可靠、处理能力可弹性伸缩的计算服务。其管理方式比物理服务器更简单高效。用户无需提前购买硬件，即可迅速创建或释放任意多台云服务器。云服务器帮助让你快速构建更稳定、安全的应用，降低开发运维的难度和整体IT成本，更专注于核心业务的创新。</p><p>一个<strong>云服务器实例</strong>等同于一台<a href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E6%9C%BA&amp;spm=1001.2101.3001.7020">虚拟机</a>，包含 CPU、内存、操作系统、网络、磁盘等最基础的计算组件。你可以方便的定制、更改实例的配置。对该虚拟机拥有完全的控制权，和本地服务器的区别在于，你只需要登录到云服务器，就可以进行独立的管理、顶级配置等操作。</p><p><a href="https://imgse.com/i/zMkt1O"><img src="https://s1.ax1x.com/2022/11/20/zMkt1O.png" alt="zMkt1O.png"></a></p><p>应用之一：电商促销业务</p><p><a href="https://imgse.com/i/zMkwBd"><img src="https://s1.ax1x.com/2022/11/20/zMkwBd.png" alt="zMkwBd.png"></a></p><h2 id="3-7-GPU云服务器">3.7 GPU云服务器</h2><p>基于GPU应用的计算服务，具有实时高速的并行计算合浮点计算能力。</p><p>突破传统CPU限制、具有高并行、高吞吐、低时延等特点，科学计算中性能比传统架构提高50倍。</p><p><a href="https://imgse.com/i/zMEgmQ"><img src="https://s1.ax1x.com/2022/11/20/zMEgmQ.png" alt="zMEgmQ.png"></a></p><p>两种类型的GPU</p><p><a href="https://imgse.com/i/zMERTs"><img src="https://s1.ax1x.com/2022/11/20/zMERTs.png" alt="zMERTs.png"></a></p><p><a href="https://imgse.com/i/zMEL79"><img src="https://s1.ax1x.com/2022/11/20/zMEL79.png" alt="zMEL79.png"></a></p><h2 id="3-8-FPGA">3.8 FPGA</h2><blockquote><p>FPGA 器件属于专用集成电路中的一种半定制电路，是可编程的逻辑列阵，能够有效的解决原有的器件门电路数较少的问题。FPGA 的基本结构包括可编程输入输出单元，可配置逻辑块，数字时钟管理模块，嵌入式块RAM，布线资源，内嵌专用硬核，底层内嵌功能单元。由于FPGA具有布线资源丰富，可重复编程和集成度高，投资较低的特点，在数字电路设计领域得到了广泛的应用。FPGA的设计流程包括算法设计、代码仿真以及设计、板机调试，设计者以及实际需求建立算法架构，利用EDA建立设计方案或HD编写设计代码，通过代码仿真保证设计方案符合实际要求，最后进行板级调试，利用配置电路将相关文件下载至FPGA芯片中，验证实际运行效果</p><p>FPGA采用了逻辑单元阵列LCA（Logic Cell Array）这样一个概念，内部包括可配置逻辑模块<br>————————————————<br>版权声明：本文为CSDN博主「DemonHunter211」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/kwame211/article/details/110376000">https://blog.csdn.net/kwame211/article/details/110376000</a></p></blockquote><p>基于FPGA现场可编程阵列的计算服务。可使用FPGA镜像在几分钟内部署FPGA实例，实现硬件加速。</p><p><strong>优势：</strong></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/da812e949e58f5f2.png" alt=""></p><h2 id="3-9-专用宿主机CDH">3.9 专用宿主机CDH</h2><blockquote><p>CDH，全称Cloudera’s Distribution, including Apache Hadoop。由美国的Cloudera公司推出的<a href="https://so.csdn.net/so/search?q=%E5%A4%A7%E6%95%B0%E6%8D%AE&amp;spm=1001.2101.3001.7020">大数据</a>产品；CDH是基于稳定版本的Apache Hadoop构建而成，也是目前市场上应用比较广泛的大数据产品。</p><p>CDH 是一个拥有集群自动化安装、中心化管理、集群监控、报警功能的一个工具（软件），使得集群的安装可以从几天的时间缩短为几个小时，运维人数也会从数十人降低到几个人，极大的提高了集群管理的效率。</p></blockquote><p><strong>产品优势：</strong></p><ul><li>物理隔离</li><li>资源独享</li><li>安全合规</li><li>灵活配置</li></ul><h2 id="3-10-黑石服务器CPM">3.10 黑石服务器CPM</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/74784a0aa376f944.png" alt=""></p><p><a href="https://blog.csdn.net/sunhf_csdn/article/details/80131261">腾讯黑石服务器</a></p><blockquote><p>黑石（Cloud Physical Machine），是腾讯云推出的所谓的“云物理服务器”， 是一种按需购买、按量付费的物理服务器租赁服务。听到这个定义，可能很多人都会和老孙一样有一个疑问，通常在我们说“云服务器“或者“云主机”的时候，实际上是指通过虚拟化软件在物理服务器上虚拟出的“虚拟服务器”， “虚拟服务器”用户所请求的资源来自与“云”，而不是固定的物理服务器，应用在“云”中某处运行，但实际上用户无需了解、也不用关心应用运行的具体物理服务器到底在哪里，这也是云的典型特征。既然是这样，那么腾讯的“云物理服务器”又如何解释呢？</p><p>实际上，黑石非常类似于以前咱们在IDC购买的主机租用服务，主机租用是指由IDC提供物理服务器，负责基本软件的安装、配置，负责服务器上基本服务功能的正常运行，然后让用户独享服务器的资源，并服务其自行开发运行的程序，而黑石除了拥有像主机租用一样的特点外，更重要的是，黑石还具有云计算的弹性扩容、私有网络、负载均衡和BGP网络特性以及高稳定、高性能的特点，按俺老孙的话讲，黑石就是具备了“云计算特性的主机租用服务”。</p></blockquote><h2 id="3-10-云服务计费模式">3.10 云服务计费模式</h2><h3 id="云服务器购买渠道">云服务器购买渠道</h3><p>官网购买：通过登录腾讯云官网控制台进行云服务的配置购买</p><p>API购买：通过API接口输入对应参数，购买CVM服务器。</p><h3 id="计费模式">计费模式</h3><p>包月包年，持续稳定。</p><p>按流量计费，灵活方便。</p><p>阶梯计价，越多越省。</p><h3 id="包年包月计费">包年包月计费</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/669f9f2669f18759.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/0bde9936f895dac2.png" alt=""></p><h2 id="3-13-按量计费模式">3.13 按量计费模式</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/cba489e93e609274.png" alt=""></p><p><strong>冻结机制</strong></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/e654193cc30cdacc.png" alt=""></p><p><strong>停服回收机制</strong></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/7f3e19c6bb9fec9d.png" alt=""></p><ul><li>不支持代理商代付</li><li>不支持代金卷</li><li>不支持五天无理由退款</li><li>不支持切换为包年包月</li></ul><h2 id="3-14-云服务计费方案。">3.14 云服务计费方案。</h2><p>CVM费用 = 实例费用（CPU+内存）+存储费用 + 带宽费用。</p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/30abd3ebc266f17f.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/20/6da9cfcfcf2b6081.png" alt=""></p><h1>腾讯云从业者认证学习笔记（三）</h1><ul><li>私有网络</li><li>网络连接</li><li>负载均衡</li><li>网络产品计费方案</li></ul><h2 id="4-1-私有网络VPC">4.1 私有网络VPC</h2><p>私有网络（Virtual Private Cloud）使用户自定义的、逻辑隔离的专属云上网络空间。</p><p>具有地域性。参考计算机网络噢。</p><p>组成：</p><ul><li>IP/网卡：通过VLAN去连接网</li><li>子网：内部联通<ul><li>云资源（CVM，CDB等）需要部署在子网内；</li><li>通过DHCP获得私有IP，不能在公网路由；</li><li>每个子网可用IP数2^n - 3 （n为主机位的位数）</li></ul></li><li>私有网段：<ul><li>不同公司可以用相同的私有网段，再用NAT地址转换进行网络信息交换。腾讯云私有网段不与一样</li><li>A类 10.0.0.0 掩码16-28</li><li>B类172.16.0.0 掩码16-28</li><li>C类 192.168.0.0 掩码16-28</li></ul></li><li>路由表：与外网相接</li><li>安全组/ACL：保证安全性</li></ul><h3 id="IP子网划分">IP子网划分</h3><p><a href="https://imgse.com/i/zle4pR"><img src="https://s1.ax1x.com/2022/11/21/zle4pR.png" alt="zle4pR.png"></a></p><p>-3 是因为有三个地址：</p><p>网络地址，广播地址，网关地址（实现跨子网通信）</p><h3 id="VPC路由表">VPC路由表</h3><p>VPC内网互通，不同VPC内网不通。通过路由表实现子网间、子网与外部的路由通信。</p><p>**路由表种类：**默认路由表，自定义路由表</p><p>**路由策略：**目的端，下一条类型，下一跳</p><h3 id="VPC访问控制">VPC访问控制</h3><p>**网络ACL：**控制进出子网的数据流（入站/出站）</p><p>**安全组：**配置放通或拒绝的端口/协议。</p><p><a href="https://imgse.com/i/zlngJJ"><img src="https://s1.ax1x.com/2022/11/21/zlngJJ.png" alt="zlngJJ.png"></a></p><h3 id="安全组与网络ACL">安全组与网络ACL</h3><p>安全组：</p><ul><li>CVM实例级别的流量控制（第一防御层）</li><li>支持允许规则和拒绝规则</li><li>有状态：返回数据流会被自动允许，不受任何规则影响</li><li>只有在启动CVM实例的同时，指定安全组或稍后将安全组与实例关联的情况下，操作才会被应用到实例。</li></ul><p>网络ACL：</p><ul><li>子网级别的流量控制（第二防御层）</li><li>支持允许规则和拒绝规则</li><li>无状态：返回数据流必须被规则明确允许</li><li>自动应用到关联子网内的所有CVM实例（备份防御层，若CVM实例为绑定安全组，此处可以做备份防御）</li></ul><h2 id="弹性网卡ENI">弹性网卡ENI</h2><p>我可以绑定某个主机，然后解除，绑定到别的主机。</p><p>弹性网卡（Elastic Network Interface）绑定私有网络内云服务器的一种弹性网络接口，可在云服务器间自由迁移。</p><p>优势：多网卡/IP 灵活迁移 网络隔离。</p><p><a href="https://imgse.com/i/zluMY4"><img src="https://s1.ax1x.com/2022/11/21/zluMY4.png" alt="zluMY4.png"></a></p><h2 id="4-6-网络连接产品">4.6 网络连接产品</h2><p><a href="https://imgse.com/i/zlu3lR"><img src="https://s1.ax1x.com/2022/11/21/zlu3lR.png" alt="zlu3lR.png"></a></p><h2 id="4-7-公网接入">4.7 公网接入</h2><h3 id="弹性IP">弹性IP</h3><p>VPC里的服务器分配私有IP ，无法访问公网，可以绑定公网IP来实现</p><p><a href="https://imgse.com/i/zlut0K"><img src="https://s1.ax1x.com/2022/11/21/zlut0K.png" alt="zlut0K.png"></a></p><h3 id="公网网关">公网网关</h3><ul><li>没有公网IP云服务器，可通过位于不同子网的公网网关访问Internet。</li><li>公网网关就是开启了公网转发功能的云主机。</li><li>只能在购买服务器时进行设置。</li><li>需要建立独立的网关子关。</li></ul><h3 id="NAT网关">NAT网关</h3><ul><li>通过IP地址转换提供Internet 访问服务</li><li>SNAT（源网络地址转换，一个私IP换一个公网IP，浪费资源）</li><li>DNAT（目的网络地址转换，不同IP = 公网IP + 不同端口号）</li><li>网关流控、流量告警、共享带宽包。</li><li>网关类型：小、中、大型（最大连接数：100万，300万，1000万）</li></ul><p><a href="https://imgse.com/i/zlKGCQ"><img src="https://s1.ax1x.com/2022/11/21/zlKGCQ.png" alt="zlKGCQ.png"></a></p><h2 id="4-8-企业DC连接">4.8 企业DC连接</h2><h3 id="专线接入：">专线接入：</h3><p><a href="https://imgse.com/i/zlKRDx"><img src="https://s1.ax1x.com/2022/11/21/zlKRDx.png" alt="zlKRDx.png"></a></p><h3 id="VPN连接">VPN连接</h3><p><a href="http://t.csdn.cn/lEglu">http://t.csdn.cn/lEglu</a></p><blockquote><p>VPN(全称：Virtual Private Network)虚拟专用网络，是依靠ISP和其他的NSP，在公共网络中建立专用的数据通信的网络技术，可以为企业之间或者个人与企业之间提供安全的数据传输隧道服务。在VPN中任意两点之间的链接并没有传统专网所需的端到端的物理链路，而是利用公共网络资源动态组成的，可以理解为通过私有的隧道技术在公共数据网络上模拟出来的和专网有同样功能的点到点的专线技术，所谓虚拟是指不需要去拉实际的长途物理线路，而是借用了公共Internet网络实现的。</p></blockquote><p><strong>应用场景</strong></p><ol><li>只能企业员工登录公司服务器</li><li>要求在任何网络下都能够登录</li><li>离职员工删除登录权限</li><li>权限管理</li></ol><p><strong>VPN的作用</strong></p><p>VPN的功能是帮助公司的远程用户(出差，在家)、公司的分支机构、商业合作伙伴及供应商等公司和自己的公司内部网络之间建立可信的安全连接或者是局域网连接，确保数据的加密安全传输和业务访问，对于运维工程师来说，还可以连接不同的机房为局域网来处理相关事宜。</p><p><strong>VPN的分类</strong></p><p>根据不同的划分标准，VPN可以按几个标准进行分类划分：</p><p>按VPN的协议分类</p><ul><li>VPN的隧道协议主要有三种，</li><li>PPTP：PPTP属于点对点应用，比较适合远程的企业用户拨号到企业进行办公等应用，工作在OSI模型的第二层，只适合windows系统。</li><li>L2TP：第2等隧道协议(L2TP)是IETF基于L2F开发的PPTP的后续版本，工作在OSI模型的第二层。</li><li>IPSec：第三层隧道协议，也是最常见的协议。当隧道模式使用IPSEC时，其只为通讯提供封装。使用IPSec隧道模式主要是为了与其他不支持IPSec上的L2TP或或者PPTP VPN隧道技术的路由器、网关或终端系统之间的互相操作。</li></ul><p>其中PPTP和L2TP协议工作在OSI模型的第二层，又称为二层隧道协议； IPSec是第三层隧道协议，也是最常见的协议。L2TP和IPSec配合使用是目前性能最好，应用最广泛的一种。</p><p>按VPN的应用分类</p><ul><li>Access VPN (远程接入VPN)：客户端到网关,使用公网作为骨干网在设备之间传输VPN的数据流量</li><li>Intranet VPN (内联网VPN)：网关到网关,通过公司的网络架构连接来自同公司的资源</li><li>Extranet VPN (外联网VPN)：与合作伙伴企业网构成Extranet,将一个公司与另一个公司的资源进行连接</li></ul><p>按所用的设备类型进行分类：</p><ul><li>路由器式VPN：路由器式VPN部署较容易，只要在路由器上添加VPN服务即可；</li><li>交换机式VPN：主要应用于连接用户较少的VPN网络；</li><li>防火墙式VPN：防火墙式VPN是最常见的一种VPN的实现方式，许多厂商都提供这种配置类型</li></ul><p><a href="https://imgse.com/i/zlM1qx"><img src="https://s1.ax1x.com/2022/11/21/zlM1qx.png" alt="zlM1qx.png"></a></p><h3 id="专线接入对比VPN连接">专线接入对比VPN连接</h3><p><a href="https://imgse.com/i/zlMJIO"><img src="https://s1.ax1x.com/2022/11/21/zlMJIO.png" alt="zlMJIO.png"></a></p><h2 id="4-9-对等连接">4.9 对等连接</h2><p>对等连接（Peering Connection,PC）是一种大带宽、高质量的云上资源互通服务，支持多VPC、多区域、多账户、异构网络互通等。对等连接互通性不传递。</p><p>对等连接是一种用于办公数据同步的跨 VPC 网络互联服务，可以使两个 VPC 间路由互通，就像它们属于同一网络一样。通过在两端配置路由策略，可实现同地域或跨地域之间，相同或不同用户的 VPC 互联。对等连接不依赖于某个独立硬件，因而不存在单点故障或带宽瓶颈问题。</p><p><a href="https://imgse.com/i/zlMazd"><img src="https://s1.ax1x.com/2022/11/21/zlMazd.png" alt="zlMazd.png"></a></p><p>限制：</p><ul><li>VPC对等连接的互通性不传递</li><li>跨账号对等连接需要对端确认</li><li>对等连接两端VPC网段不能重叠</li></ul><p><a href="https://imgse.com/i/zlMsdf"><img src="https://s1.ax1x.com/2022/11/21/zlMsdf.png" alt="zlMsdf.png"></a></p><h2 id="4-10-云联网CCN">4.10 云联网CCN</h2><p><a href="https://imgse.com/i/zlMRzj"><img src="https://s1.ax1x.com/2022/11/21/zlMRzj.png" alt="zlMRzj.png"></a></p><p>限制：</p><p><a href="https://imgse.com/i/zlMowV"><img src="https://s1.ax1x.com/2022/11/21/zlMowV.png" alt="zlMowV.png"></a></p><p>应用：</p><ul><li>混合云：一次接入、全网互联</li><li>游戏加速：全球布局、就近接入</li></ul><h2 id="4-11-负载均衡CLB">4.11 负载均衡CLB</h2><p><a href="https://blog.csdn.net/wanghangzhen/article/details/118554304">负载均衡文章</a></p><p>大型网站都要面对庞大的用户量，<a href="https://so.csdn.net/so/search?q=%E9%AB%98%E5%B9%B6%E5%8F%91&amp;spm=1001.2101.3001.7020">高并发</a>，海量数据等挑战。为了提升系统整体的性能，可以采用垂直扩展和水平扩展两种方式。</p><p><strong>垂直扩展</strong>：在网站发展早期，可以从单机的角度通过增加硬件处理能力，比如 CPU 处理能力，<a href="https://so.csdn.net/so/search?q=%E5%86%85%E5%AD%98&amp;spm=1001.2101.3001.7020">内存</a>容量，磁盘等方面，实现服务器处理能力的提升。但是，单机是有性能瓶颈的，一旦触及瓶颈，再想提升，付出的成本和代价会极高。这显然不能满足大型分布式系统（网站）所有应对的大流量，高并发，海量数据等挑战。</p><p><strong>水平扩展</strong>：通过集群来分担大型网站的流量。集群中的应用服务器（节点）通常被设计成无状态，用户可以请求任何一个节点，这些节点共同分担访问压力。水平扩展有两个要点：</p><ul><li>应用集群：将同一应用部署到多台机器上，组成处理集群，接收负载均衡设备分发的请求，进行处理，并返回相应数据。</li><li>负载均衡：将用户访问请求，通过某种算法，分发到集群中的节点。</li></ul><p>负载均衡（Load Balance，简称 LB）是高并发、高可用系统必不可少的关键组件，目标是 尽力将网络流量平均分发到多个服务器上，以提高系统整体的响应速度和可用性。</p><p>负载均衡的主要作用如下：</p><p>**高并发：**负载均衡通过算法调整负载，尽力均匀的分配应用集群中各节点的工作量，以此提高应用集群的并发处理能力（吞吐量）。</p><p>**伸缩性：**添加或减少服务器数量，然后由负载均衡进行分发控制。这使得应用集群具备伸缩性。</p><p>**高可用：**负载均衡器可以监控候选服务器，当服务器不可用时，自动跳过，将请求分发给可用的服务器。这使得应用集群具备高可用的特性。</p><p>**安全防护：**有些负载均衡软件或硬件提供了安全性功能，如：黑白名单处理、防火墙，防 DDos 攻击等。</p><hr><p>云负载均衡：CLB</p><p>负载均衡（Cloud Load Balancer,CLB）提供安全快捷的流量分发服务。</p><p>CLB 云负载均衡 工作原理：</p><ul><li>虚拟VIP：统一对外服务IP，接收访问请求</li><li>CLB实例：通过监听器监听请并分发流量；</li><li>后端CVM：处理访问请求并返回结果；</li><li>健康检查：探测后端CVM的健康状态；</li></ul><p><a href="https://imgse.com/i/zlQKk8"><img src="https://s1.ax1x.com/2022/11/21/zlQKk8.png" alt="zlQKk8.png"></a></p><p>腾讯云负载均衡的优势：<br><strong>高性能/高吞吐</strong>：</p><ul><li>单集群最大支持1.2亿连接数</li><li>单集群流量峰值40Gb/s，每秒处理包量600万；</li></ul><p><strong>高可用性99.95%</strong></p><ul><li>节点健康检查、自动切换；</li><li>跨可用区部署，机房级容灾；</li></ul><p><strong>安全保障</strong></p><ul><li>对每个租户的流量进行严格隔离；</li><li>提供主动DDoS保护能力。</li></ul><h2 id="4-12-流量分发算法">4.12 流量分发算法</h2><p>多协议转发：</p><p><a href="https://imgse.com/i/zlQN7V"><img src="https://s1.ax1x.com/2022/11/21/zlQN7V.png" alt="zlQN7V.png"></a></p><p><a href="https://imgse.com/i/zlQwhF"><img src="https://s1.ax1x.com/2022/11/21/zlQwhF.png" alt="zlQwhF.png"></a></p><h2 id="4-13-负载均衡类型">4.13 负载均衡类型</h2><p><strong>应用型与传统型</strong></p><p><a href="https://imgse.com/i/zlQIcd"><img src="https://s1.ax1x.com/2022/11/21/zlQIcd.png" alt="zlQIcd.png"></a></p><p><strong>公网CLB与内网CLB</strong></p><p><a href="https://imgse.com/i/zlQzcj"><img src="https://s1.ax1x.com/2022/11/21/zlQzcj.png" alt="zlQzcj.png"></a></p><h2 id="4-14-负载均衡应用场景">4.14 负载均衡应用场景</h2><h3 id="流量分发-扩展">流量分发/扩展</h3><p><strong>需求：</strong></p><ul><li>业务波峰波谷明显，弹性调控后端资源；</li><li>业务流量峰值高，需构建低成本架构；</li><li>如电商促销、金融系统、游戏服务等。</li></ul><p><strong>方案：</strong></p><ul><li>负载均衡与弹性伸缩；</li><li>按需横向扩展/收缩。</li></ul><h3 id="业务访问分离">业务访问分离</h3><p><a href="https://imgse.com/i/zllWbq"><img src="https://s1.ax1x.com/2022/11/21/zllWbq.png" alt="zllWbq.png"></a></p><h3 id="出入流量分离">出入流量分离</h3><p><a href="https://imgse.com/i/zll55T"><img src="https://s1.ax1x.com/2022/11/21/zll55T.png" alt="zll55T.png"></a></p><h3 id="混合云-2">混合云</h3><p>通过负载均衡将业务流量分发到企业数据中心、或公有云上。</p><h2 id="4-15-网络产品计费方案">4.15 网络产品计费方案</h2><h3 id="免费产品">免费产品</h3><p><a href="https://imgse.com/i/zl1pGD"><img src="https://s1.ax1x.com/2022/11/21/zl1pGD.png" alt="zl1pGD.png"></a></p><h3 id="公网IP计费方案">公网IP计费方案</h3><p><a href="https://imgse.com/i/zl1iMd"><img src="https://s1.ax1x.com/2022/11/21/zl1iMd.png" alt="zl1iMd.png"></a></p><p>收闲置费用。</p><p><a href="https://imgse.com/i/zl1kqI"><img src="https://s1.ax1x.com/2022/11/21/zl1kqI.png" alt="zl1kqI.png"></a></p><p><a href="https://imgse.com/i/zl1EZt"><img src="https://s1.ax1x.com/2022/11/21/zl1EZt.png" alt="zl1EZt.png"></a></p><p><a href="https://imgse.com/i/zl1mi8"><img src="https://s1.ax1x.com/2022/11/21/zl1mi8.png" alt="zl1mi8.png"></a></p><p><a href="https://imgse.com/i/zl1HFf"><img src="https://s1.ax1x.com/2022/11/21/zl1HFf.png" alt="zl1HFf.png"></a></p><p><a href="https://imgse.com/i/zl1OSg"><img src="https://s1.ax1x.com/2022/11/21/zl1OSg.png" alt="zl1OSg.png"></a><a href="https://imgse.com/i/zl3Swq"><img src="https://s1.ax1x.com/2022/11/21/zl3Swq.png" alt="zl3Swq.png"></a></p><p><a href="https://imgse.com/i/zl3pT0"><img src="https://s1.ax1x.com/2022/11/21/zl3pT0.png" alt="zl3pT0.png"></a></p><h1>腾讯云从业者认证学习笔记（四）</h1><h2 id="课程目标">课程目标</h2><p>了解CDN加速基础知识、访问原理</p><p>熟悉腾讯云CDN加速系统架构</p><p>熟悉腾讯云CDN加速安全机制</p><p>熟悉腾讯云CDN加速产品介绍</p><p>熟悉腾讯云CDN加速计费方案</p><h2 id="5-1-CDN简介">5.1 CDN简介</h2><p>CDN的全称是Content Delivery Network，即内容分发网络。其目的是通过在现有的internet中增加一层新的网络<a href="https://so.csdn.net/so/search?q=%E6%9E%B6%E6%9E%84&amp;spm=1001.2101.3001.7020">架构</a>，**将网站的内容发布到最接近用户的网络边缘，使用户可以就近取得所需的内容，**提高用户访问网站的响应速度。CDN有别于镜像，因为它比镜像更智能，或者可以做这样一个比喻：CDN=更智能的镜像+缓存+流量导流。因而，CDN可以明显提高Internet网络中信息流动的效率。从技术上全面解决由于网络带宽小、用户访问量大、网点分布不均等问题，提高用户访问网站的响应速度。</p><p>为更好地理解CDN，让我们看一下CDN的工作流程。当用户访问已经加入CDN服务的网站时，首先通过DNS重定向技术确定最接近用户的最佳CDN节点，同时将用户的请求指向该节点。当用户的请求到达指定节点时，CDN的服务器（节点上的高速缓存）负责将用户请求的内容提供给用户。具体流程为: 用户在自己的浏览器中输入要访问的网站的域名，浏览器向本地DNS请求对该域名的解析，本地DNS将请求发到网站的主DNS，主DNS根据一系列的策略确定当时最适当的CDN节点，并将解析的结果（IP地址）发给用户，用户向给定的CDN节点请求相应网站的内容。</p><p>由于用户访问源站业务有性能瓶颈，通过cdn技术把源站的内容缓存到多个节点。用户向源站域名发起请求时，请求会被调度至最接近用户的服务节点，直接由服务节点直接快速响应，有效降低用户访问延迟，提升可用性。</p><p>CDN的优势很明显：<br>（1）CDN节点解决了跨运营商和跨地域访问的问题，访问延时大大降低；<br>（2）大部分请求在CDN边缘节点完成，CDN起到了分流作用，减轻了源站的负载。</p><p><strong>解决问题：</strong></p><ul><li>物理距离远，多次网络转发，延时高不稳定；</li><li>所在运营商不同，需运营商之间转发绕行；</li><li>网络带宽处理能力有限，海量请求时，相应速度与可用性降低。</li></ul><p>关键：<strong>提前就近缓存业务内容</strong></p><h2 id="5-2-CDN访问原理">5.2 CDN访问原理</h2><p><a href="https://imgse.com/i/zl8J8U"><img src="https://s1.ax1x.com/2022/11/21/zl8J8U.png" alt="zl8J8U.png"></a></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/e1a759aaffd84ad2.png" alt=""></p><p>比普通的CDN访问，腾讯多了个中间源，更多的存储源站数据。</p><h2 id="5-3-CDN发展阶段">5.3 CDN发展阶段</h2><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/831d5ae11fa8ddf7.png" alt=""></p><h3 id="发展趋势">发展趋势</h3><ul><li>价格更低（规模大价格低）<ul><li>痛击专打CDN的小厂商</li></ul></li><li>行业方案<ul><li>不同行业定制化。提高性价比</li></ul></li><li>智能CDN<ul><li>加人工智能技术啥的，技术辅助</li></ul></li><li>边缘计算<ul><li>集中处理，集中管控。压力大</li><li>把一些预处理放在边缘处理</li></ul></li><li>标准化<ul><li>牌照之类的，可靠性等。</li></ul></li></ul><h3 id="市场格局">市场格局</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/a18efddd790d686f.png" alt=""></p><h2 id="5-4-CDN系统架构">5.4 CDN系统架构</h2><p>腾讯云CDN架构涵盖：<strong>管理系统、内容系统、监控系统</strong></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/46292ad42223b613.png" alt=""></p><h3 id="内容系统：">内容系统：</h3><ul><li>中间源：提升响应速度、减少源站压力；</li><li>双层缓存：均衡容量、性能与成本；</li><li>DiskTank3存储引擎：兼顾海量小文件与大文件访问；</li><li>NWS服务器：功能与性能优化；</li><li>TGW负载均衡：多网统一接入。</li></ul><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/839d8720d90ef510.png" alt=""></p><h3 id="缓存刷新：">缓存刷新：</h3><p>缓存过期：默认30天。自由源域名接入时常规动态文件国企时间为0.</p><p>缓存刷新：</p><ul><li>URL刷新：以文件为单位进行缓存刷新</li><li>目录刷新：以目录为单位，将目录下所有文件进行缓存刷新。</li></ul><p>URL预热：以文件为单位提前将热点资源缓存到边缘结点。</p><h3 id="监控系统">监控系统</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/9e0ea35e9531c915.png" alt=""></p><h3 id="GSLB智能调度">GSLB智能调度</h3><p>腾讯自研GSLB调度系统，探测获取全网链路质量，实时调整调度策略。</p><p>最优接入：用户请求会动态调度至最近最优的CDN结点。</p><p>最优回源：根据全网实时状态监控以及智能路由，选择最优回源链路。</p><p>动态加速：为动态请求提供最优链路，有效避开质量差，拥堵的链路</p><h3 id="管理系统">管理系统</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/21/b6f77149865ce78c.png" alt=""></p><h2 id="5-8-CDN-接入步骤">5.8 CDN 接入步骤</h2><p><a href="https://imgse.com/i/z1Yyp6"><img src="https://s1.ax1x.com/2022/11/22/z1Yyp6.png" alt="z1Yyp6.png"></a></p><h2 id="5-9-CDN-安全机制">5.9 CDN 安全机制</h2><p>SSL安全证书：HTTPS支持</p><p>移动解析HttpDNS：防域名劫持</p><p>CDN访问控制：授权访问</p><p>大禹DDoS防护：攻击防护</p><h3 id="移动解析HttpDNS">移动解析HttpDNS</h3><p><strong>域名劫持：</strong></p><p>传统域名解析使用DNS协议向运营商Local DNS发起解析请求，可能造成运营商的域名劫持（解析到错误的IP）或跨网访问问题。</p><p><strong>解决方案：移动解析（HttpDNS）</strong></p><p>使用Http协议向腾讯云Public DNS服务器发送域名解析请求，获取正确的/最佳IP。</p><p>使用HttpDNS时建议保留Local DNS备份。</p><h3 id="SSL安全证书">SSL安全证书</h3><p>HTTP的挑战：无加密，明文，用于再Web浏览器和网站服务器之间传递信息</p><p>HTTPS = HTTP + SSL</p><p>通过加密传输保障数据安全</p><p>通过身份认证保证网站安全。</p><p><strong>腾讯云SSL证书</strong></p><p>提供一站式证书服务，为网站、移动应用等提供HIIPS解决方案。</p><p>顶级CA机构，100%兼容性，提升搜索排名，数据加密传输。</p><p><a href="https://imgse.com/i/z1dMid"><img src="https://s1.ax1x.com/2022/11/22/z1dMid.png" alt="z1dMid.png"></a></p><h3 id="CDN访问控制">CDN访问控制</h3><p>过滤参数配置</p><p>防盗链设置</p><p>IP黑白名单</p><p>IP访问限频</p><h2 id="5-13-CDN加速产品">5.13 CDN加速产品</h2><h3 id="静态内容加速SCD">静态内容加速SCD</h3><p><a href="https://imgse.com/i/z1w1k4"><img src="https://s1.ax1x.com/2022/11/22/z1w1k4.png" alt="z1w1k4.png"></a></p><h3 id="下载分发加速DD">下载分发加速DD</h3><p><a href="https://imgse.com/i/z1wY11"><img src="https://s1.ax1x.com/2022/11/22/z1wY11.png" alt="z1wY11.png"></a></p><h3 id="海外加速GCD">海外加速GCD</h3><p>Global Content Delivery 海外加速 解决跨国访问问题，有效降低访问延迟，支持业务平滑出海。</p><p>覆盖50多个国家200+个海外节点，总20T+ 带宽资源储备。</p><h3 id="动态加速网络DSA">动态加速网络DSA</h3><p>动态加速网络，解决跨运营商、跨国、网络不稳定等因素导致的响应慢，丢包、服务不稳定等问题。</p><p>腾讯自研的最优链路算法及协议层优化，使动态内容通过安全可靠额最优传输路径快速分发给用户。</p><p>DSA还支持多链路冗余传输，保障数据在传输过程中的可靠性。</p><h3 id="全球应用加速GAAP">全球应用加速GAAP</h3><p><a href="https://imgse.com/i/z1wxN4"><img src="https://s1.ax1x.com/2022/11/22/z1wxN4.png" alt="z1wxN4.png"></a></p><h2 id="5-17-边缘计算CDN">5.17 边缘计算CDN</h2><p>CDN边缘计算 CDN能力从缓存分发延申至边缘计算，通过编程配置等方式将部分处理功能下沉至CDN边缘节点。</p><p>产品优势：减少搞网络延时、传输负载、以及后端计算处理压力。</p><p>应用场景：定制化应用、灰度发布、动态源选择、访问控制。</p><h2 id="5-18-智能CDN">5.18 智能CDN</h2><p>X-P2P：</p><p>假设50用户500M，每个人1/50，互相共享。拿到的完整，对服务器压力小。</p><p><a href="https://imgse.com/i/z1BNdO"><img src="https://s1.ax1x.com/2022/11/22/z1BNdO.png" alt="z1BNdO.png"></a></p><h2 id="5-19-带宽计费方案">5.19 带宽计费方案</h2><p><a href="https://imgse.com/i/z1BWFg"><img src="https://s1.ax1x.com/2022/11/22/z1BWFg.png" alt="z1BWFg.png"></a></p><p>到达的那一部分，以那一部分计算</p><h3 id="日峰带宽取月均">日峰带宽取月均</h3><p><a href="https://imgse.com/i/z1BXY4"><img src="https://s1.ax1x.com/2022/11/22/z1BXY4.png" alt="z1BXY4.png"></a></p><h3 id="月95带宽">月95带宽</h3><p><a href="https://imgse.com/i/z1DZpd"><img src="https://s1.ax1x.com/2022/11/22/z1DZpd.png" alt="z1DZpd.png"></a></p><h2 id="5-20-流量计费方案">5.20 流量计费方案</h2><p><a href="https://imgse.com/i/z1DQ78"><img src="https://s1.ax1x.com/2022/11/22/z1DQ78.png" alt="z1DQ78.png"></a></p><h2 id="5-21-计费方案选择">5.21 计费方案选择</h2><p><a href="https://imgse.com/i/z1DBAU"><img src="https://s1.ax1x.com/2022/11/22/z1DBAU.png" alt="z1DBAU.png"></a></p><p><a href="https://imgse.com/i/z1Dy9J"><img src="https://s1.ax1x.com/2022/11/22/z1Dy9J.png" alt="z1Dy9J.png"></a></p><h1>腾讯云从业者认证学习笔记（五）</h1><p>腾讯云存储产品介绍</p><h2 id="课程目标：">课程目标：</h2><p>了解存储基础知识，存储类型</p><p>熟悉腾讯云存储产品的功能、原理与优势</p><p>熟悉腾讯云存储产品计费方案</p><h2 id="6-1-存储发展">6.1 存储发展</h2><h3 id="发展历程">发展历程</h3><p>合久必分，分久必合</p><p><a href="https://imgse.com/i/z1rpCQ"><img src="https://s1.ax1x.com/2022/11/22/z1rpCQ.png" alt="z1rpCQ.png"></a></p><p><a href="https://imgse.com/i/z1rCgs"><img src="https://s1.ax1x.com/2022/11/22/z1rCgs.png" alt="z1rCgs.png"></a></p><h2 id="6-2-存储类型和特点">6.2 存储类型和特点</h2><p><a href="https://imgse.com/i/z1rGVK"><img src="https://s1.ax1x.com/2022/11/22/z1rGVK.md.png" alt="z1rGVK.md.png"></a></p><h2 id="6-3-存储介质">6.3 存储介质</h2><p><a href="https://imgse.com/i/z1rWxs"><img src="https://s1.ax1x.com/2022/11/22/z1rWxs.png" alt="z1rWxs.png"></a></p><h2 id="6-4-存储分级">6.4 存储分级</h2><p><a href="https://imgse.com/i/z1sJLq"><img src="https://s1.ax1x.com/2022/11/22/z1sJLq.png" alt="z1sJLq.png"></a></p><p><a href="https://imgse.com/i/z1srl9"><img src="https://s1.ax1x.com/2022/11/22/z1srl9.png" alt="z1srl9.png"></a></p><p><a href="https://imgse.com/i/z1sgw6"><img src="https://s1.ax1x.com/2022/11/22/z1sgw6.png" alt="z1sgw6.png"></a></p><h2 id="6-5-腾讯云存储服务">6.5 腾讯云存储服务</h2><p><a href="https://imgse.com/i/z1sxpQ"><img src="https://s1.ax1x.com/2022/11/22/z1sxpQ.png" alt="z1sxpQ.png"></a></p><h2 id="6-6-云硬盘CBS">6.6 云硬盘CBS</h2><p>云硬盘使CVM使用的持久性块级存储服务。</p><p>类型：系统盘/数据盘；普通云硬盘/高性能云硬盘/SSD云硬盘。</p><p>可靠性99.9999999%,同可用区内数据保存3副本。</p><p><a href="https://imgse.com/i/z16Abt"><img src="https://s1.ax1x.com/2022/11/22/z16Abt.png" alt="z16Abt.png"></a></p><h3 id="云硬盘快照">云硬盘快照</h3><p><a href="https://imgse.com/i/z16dxJ"><img src="https://s1.ax1x.com/2022/11/22/z16dxJ.png" alt="z16dxJ.png"></a></p><h3 id="产品优势">产品优势</h3><p><a href="https://imgse.com/i/z16oZt"><img src="https://s1.ax1x.com/2022/11/22/z16oZt.png" alt="z16oZt.png"></a></p><h2 id="6-7-文件存储CFS">6.7 文件存储CFS</h2><p>文件存储提供安全可靠、可扩展的共享文件存储服务。</p><p>支持NFS v3.0/v4.0 ，CIFS/SMB协议，支持POSIX访问语义（例如强数据一致性和文件锁定）。</p><p>用户可以使用标准操作系统挂载命令来挂在文件系统。</p><p><a href="https://imgse.com/i/z1cQJO"><img src="https://s1.ax1x.com/2022/11/22/z1cQJO.png" alt="z1cQJO.png"></a></p><p>应用场景：</p><p>企业文件共享</p><p>流媒体处理</p><p>Web服务及内容管理</p><p>大数据应用</p><h2 id="6-8-对象存储COS">6.8 对象存储COS</h2><p>对象存储是无数据格式限制，可容纳海量数据且支持HTTP/HTTPS协议访问的分布式存储服务。</p><p>数据以对象Object形式存放在用户自助创建的存储桶Bucket中。</p><p>可通过按地域分配的域名对COS中的数据直接进行数据访问、下载或管理。</p><p>不需要挂载就可以使用。</p><p><a href="https://imgse.com/i/z1WZ9K"><img src="https://s1.ax1x.com/2022/11/22/z1WZ9K.png" alt="z1WZ9K.png"></a></p><h3 id="产品优势-2">产品优势</h3><p><strong>高安全性–全民防护，分权管理</strong></p><ul><li>防盗链功能，用以屏蔽恶意来源的访问</li><li>DDOS攻击防护和CC攻击防护</li><li>过滤恶意攻击数据包，清洗出正常流量</li><li>多级分权限管理系统</li></ul><p><strong>高性能–智能调度，访问可靠</strong></p><ul><li>智能调度：访问可靠COS支持分块和并发发起请求。</li><li>最优的BGP链路上传</li><li>结合CDN降低时延，提高下载速度</li></ul><h3 id="应用场景">应用场景</h3><p>COS主要存储非结构化数据，如视频、音频、图片、文件等。</p><p>应用场景：内容分发、UGC应用数据存储、大数据分析与处理等。</p><h2 id="6-9-归档存储CAS">6.9 归档存储CAS</h2><p>CAS归档存储，是低成本、高可靠且易管理的云端离线存储服务。</p><p>CAS通过文件库Vault（存储容器）来存取档案Archive（存储对象）。</p><h3 id="CAS数据取回">CAS数据取回</h3><p><a href="https://imgse.com/i/z1WTC6"><img src="https://s1.ax1x.com/2022/11/22/z1WTC6.png" alt="z1WTC6.png"></a></p><h3 id="CAS对比COS">CAS对比COS</h3><p><a href="https://imgse.com/i/z1WODH"><img src="https://s1.ax1x.com/2022/11/22/z1WODH.png" alt="z1WODH.png"></a></p><h3 id="产品优势-3">产品优势</h3><p>安全性，扩展性，成本低。</p><p>三副本存储，扩展性（存无限大），弹性（理论上无限大的存储空间）</p><h3 id="应用场景：保存很久的数据">应用场景：保存很久的数据</h3><p>比如金融、医疗数据</p><h2 id="6-10-存储网关CSG">6.10 存储网关CSG</h2><p>一种混合云存储方案，即插即用，屏蔽后端存储差异，实现本地存储与公有云存储的无缝衔接。</p><p><a href="https://imgse.com/i/z1fnP0"><img src="https://s1.ax1x.com/2022/11/22/z1fnP0.png" alt="z1fnP0.png"></a></p><h3 id="CSG网关类型">CSG网关类型</h3><p><a href="https://imgse.com/i/z1fK2T"><img src="https://s1.ax1x.com/2022/11/22/z1fK2T.png" alt="z1fK2T.png"></a></p><h3 id="产品优势-4">产品优势</h3><p><a href="https://imgse.com/i/z1fxL4"><img src="https://s1.ax1x.com/2022/11/22/z1fxL4.png" alt="z1fxL4.png"></a></p><h3 id="应用场景-2">应用场景</h3><p>混合云负载、备份及容灾、数据分发、数据迁移</p><h2 id="6-11-云数据迁移CDM">6.11 云数据迁移CDM</h2><p>云数据迁移是TB~PB级别安全可靠的离线迁移上云服务。</p><p>CDM优势：高校传输、安全保护、状态跟踪</p><p>CDM设备类型：</p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/6d82d98e284e8bda.png" alt=""></p><h2 id="6-12-日志服务CLS">6.12 日志服务CLS</h2><p>日志采集+日志检索+日志投递。</p><p>日志类型：系统日志、应用日志、移动端日志、嵌入式设备日志等。</p><p>产品优势：高速检索，弹性扩容，高性价比</p><p>应用场景：通过日志采集与分析，解决故障排查定位，业务指标监控、客户行为分析、安全审计等。</p><h2 id="6-13-6-17计费方案">6.13~6.17计费方案</h2><h3 id="CBS计费方案">CBS计费方案</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/66c5c70a311f862d.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/8780fedcdec43a5f.png" alt=""></p><h3 id="CFS计费方案：">CFS计费方案：</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/75bd431e21dfd489.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/a875afdaf199a29a.png" alt=""></p><h3 id="COS计费方案">COS计费方案</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/1c14cc465c693db6.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/8826d2d0afa2541d.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/9b0a1ef47341d0e9.png" alt=""></p><h3 id="CAS计费方案（重点较多）">CAS计费方案（重点较多）</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/45a7423604a05f5b.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/cc06c49274f9222f.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/e56768b5bba23bd4.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/f8dd21229cf5ca59.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/06f08b62694a1904.png" alt=""></p><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/981ecf0146840967.png" alt=""></p><h3 id="CDM计费方案">CDM计费方案</h3><p><img src="https://s3.uuu.ovh/imgs/2022/11/22/4f0a26677849bd45.png" alt=""></p><p><img src="C:%5CUsers%5CCJH%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1669120593312.png" alt="1669120593312"></p><p><a href="https://imgse.com/i/z3i5dJ"><img src="https://s1.ax1x.com/2022/11/22/z3i5dJ.png" alt="z3i5dJ.png"></a></p><h1>腾讯云从业者认证学习笔记（六）</h1><p>了解不同数据库的类型（SQL/NoSQL）及特点</p><p>熟悉腾讯云数据库产品的功能、优势和应用场景</p><p>熟悉腾讯云数据库产品的计费方案</p><p>数据组织方式：关系型数据库、非关系型数据库；<br>数据库架构：集中式数据库、分布式数据库</p><h2 id="7-1-数据库类型对比">7.1 数据库类型对比</h2><table><thead><tr><th>对比项</th><th>关系型SQL</th><th>非关系型NoSQL</th></tr></thead><tbody><tr><td>数据存储</td><td>关系表</td><td>数据集</td></tr><tr><td>模式结构</td><td>结构化、提前定义表结构</td><td>动态调整模式，非结构式</td></tr><tr><td>扩展方式</td><td>纵向扩展、提高处理能力</td><td>横向扩展、增加分布式节点</td></tr><tr><td>关键特性</td><td>ACID，原子性，一致性，隔离性，持久性</td><td>CAP一致可用容错其中两个，BASE：基本可用软状态</td></tr><tr><td>主要优势</td><td>结构化、事务处理、易于维护使用</td><td>扩展性、灵活调整、大数据分析</td></tr><tr><td>主要劣势</td><td>扩展性、高并发场景、大数据分析</td><td>事务支持较弱，标准不统一</td></tr></tbody></table><p><strong>主流关系型数据库</strong>：MySQL，ORACLE，SQL Server（微软），IBM Db2，PostgreSQL。</p><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagee48761b009c30a9c.png" alt="imagee48761b009c30a9c.png"></p><h2 id="7-2-数据库排名">7.2 数据库排名</h2><p><img src="https://s1.imagehub.cc/images/2022/11/23/image5d1666d05401f8a3.png" alt="image5d1666d05401f8a3.png"></p><h3 id="发展趋势-2">发展趋势</h3><p><strong>融合：</strong></p><p>软件与硬件融合：数据库一体机</p><p>NoSQL与SQL融合：NewSQL</p><p>OLAP与OLTP融合：HTAP</p><p>DBMS与AI融合</p><p><strong>突破：</strong></p><p>海量数据处理：大数据分析。</p><p>高性能：集群/分布式/低延迟。</p><p>稳定性：数据复制，备份容灾。</p><p>架构突破：内核优化/云原生DB。</p><h3 id="腾讯云数据库TencentDB">腾讯云数据库TencentDB</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image93e9f01d9c95bbb9.png" alt="image93e9f01d9c95bbb9.png"></p><h2 id="7-4-云数据库MySQL">7.4 云数据库MySQL</h2><p>TencentDB for MySQL 让用户在云端部署使用MySQL数据库。</p><p><strong>兼容性</strong></p><ul><li>100%兼容开源MySQL协议</li></ul><p><strong>性能优化：</strong></p><ul><li>深度优化MySQL内核</li><li>使用PCI-e SSD 提升I/O性能；</li><li>单实例24万QPS，6TB存储空间；</li><li>一主多从、支持读写分离。</li></ul><p><strong>安全保障</strong></p><ul><li>数据加密、数据库审计；</li></ul><p><strong>高可用性</strong></p><ul><li>实时热备，基于binlog 5日内无损恢复数据</li><li>自动容灾，自动故障检测、主备切换/迁移对用户透明；</li></ul><h3 id="MySQL应用">MySQL应用</h3><p>游戏应用场景：</p><ul><li>业务需求：基于玩家数量变化分派资源；多时间点的数据保留与回档。</li><li>应对方案：弹性扩容、快速回档</li></ul><p>移动APP场景：</p><ul><li>业务特点：高并发访问、多读少写</li><li>应对方案：读写分离、性能优化</li></ul><h2 id="7-5-云数据库SQL-Server">7.5 云数据库SQL Server</h2><p>TencentDB for SQL Server 具有微软正版授权，可在云端轻松使用。</p><p>目前支持：</p><p>SQL Server 2008 R2 sp3</p><p>SQL Server 2012 sp3</p><p>SQL Server 2016</p><p><strong>产品功能</strong></p><p>预配置参数</p><ul><li>快速启动与连接实例</li><li>简化初始化与参数调优</li></ul><p>数据库镜像</p><ul><li>易主一镜像</li><li>宕机自检与秒级切换</li></ul><p>备份回档</p><ul><li>定时自动备份保留7天</li><li>随时回档到指定时间</li></ul><h3 id="镜像机制">镜像机制</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image3a9e4a41ebad2aa5.png" alt="image3a9e4a41ebad2aa5.png"></p><p>应用场景：Windows平台</p><h2 id="7-6-云数据库-PostgreSQL">7.6 云数据库 PostgreSQL</h2><p>PostgreSQK是开源NewSQL数据库，结合SQL和NoSQL特性，已成为商用首选开源关系数据库。</p><p>TencentDB for PostgreSQL 让用户在云端轻松设置、操作和扩展PostgreSQL数据库：</p><ul><li>更多的功能特性支持</li><li>商用级数据强一致</li><li>超高性能</li><li>高可靠性</li></ul><h3 id="应用场景-3">应用场景</h3><p>强大计算性能、空间地理信息处理能力，适用于面向企业复杂SQL处理的OLAP或OLTP场景：</p><blockquote><p>操作型处理，叫联机事务处理OLTP（On-Line TransactionProcessing），也可以称面向交易的处理系统，它是针对具体业务在数据库联机的日常操作，通常对少数记录进行查询、修改。用户较为关心操作的响应时间、数据的安全性、完整性和并发支持的用户数等问题。传统的数据库系统作为数据管理的主要手段，主要用于操作型处理。</p><p>分析型处理，叫联机分析处理OLAP（On-Line Analytical Processing）一般针对某些主题的历史数据进行分析，支持管理决策。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200629171428658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMjI1MDQ3,size_16,color_FFFFFF,t_70" alt=""></p><p>企业核心应用：如ERP、交易系统、财务系统；</p><p>含LBS的应用：大型游戏、O2O等应用；</p><p>数据仓库和大数据：支持更多数据类型和高级分析功能</p><p>建站或APP：自定义函数、数据格式；全文搜索功能</p><h2 id="7-7-MariaDB-TDSQL">7.7 MariaDB/TDSQL</h2><p>MariaDB由MySQL创始人创立，承诺永远开源，高度兼容MySQL.</p><p>TencentDB for MariaDB 定位于高性能高安全性的企业级云数据库。</p><p>分布式数据库TDSQL：</p><p>TDSQL是腾讯云维护的金融级分布式架构MariaDB内核分支；支持自动水平拆分，业务感受完整的逻辑表，数据均匀拆分到物理分片中。TDSQL解决如下难题：</p><ul><li>单机数据库到达瓶颈</li><li>应用层分片开发工作量大</li><li>开源NoSQL运维支持不足</li></ul><h3 id="MariaDB-产品优势">MariaDB 产品优势</h3><p>强同步MAR 异步多线程强同步复制方案</p><ul><li>保障数据一致性：每个节点都包含完整数据副本</li><li>改造线程池模型提升性能：串行同步线程异步化</li><li>业务层透明：业务层面无需读写分离或同步强化工作</li><li>满足金融强一致性要求</li><li>自动管控：支持自动成员控制，故障节点自动从集群中移除</li></ul><p>高可用</p><ul><li>一主多从透明故障切换；</li><li>实时自动实例监控与回复</li><li>多可用区部署、备份回档。</li></ul><p>高性能</p><ul><li>面向OLTP场景</li><li>深度定制优化内核</li><li>读写分离扩展性能。</li></ul><h3 id="数据复制方式">数据复制方式</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image37ba1dd58d0ea6da.png" alt="image37ba1dd58d0ea6da.png"></p><p><strong>TDSQL 水平拆分</strong></p><blockquote><p>垂直切分：按业务应用切分不同内容分派到不同数据库中</p><p>水平切分：将一个表的数据分散到多个物理独立的数据库服务器中</p></blockquote><p><strong>TDSQL Share-Nothing</strong></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagea467f2c4743e22f5.png" alt="imagea467f2c4743e22f5.png"></p><p>MariaDB 应用场景： 金融业务</p><p>TDSQL 应用场景：大型应用（超高并发实时交易场景），物联网数据（PB级存储），文件索引（万亿行数据毫秒级存取），高性价比商业数据库解决方案。</p><h2 id="7-8-CynosDB">7.8 CynosDB</h2><p>CynosDB是腾讯云自研的企业级云原生分布式云数据库：</p><p><a href="https://www.imagehub.cc/image/JOrkgJ"><img src="https://s1.imagehub.cc/images/2022/11/23/imageb418d6c5432acd86.png" alt="imageb418d6c5432acd86.png"></a></p><h3 id="CynosDB架构">CynosDB架构</h3><ul><li>内核定制优化：60多项数据库内核优化，实现诸多企业级特性。</li><li>日志即数据库：将WAL LOG下沉到存储层，网络IO减少到最低。</li><li>新硬件与软件优化：SPDK和RDMA零拷贝技术，减少系统切换性能损耗。</li><li>弹性扩展：CynosFS 可计算智能存储，自动扩缩容与故障检测。</li></ul><blockquote><p>RDMA是一种概念，在两个或者多个计算机进行通讯的时候使用DMA， 从一个主机的内存直接访问另一个主机的内存。</p><p>明确spdk是一个框架，而不是一个分布式系统，spdk的基石（官网用了bedrock 这个词）是用户态（<code>user space</code>）、轮询（<code>polled-mode</code>）、异步（<code>asynchronous</code>）、无锁（<code>lockless</code>）的NVMe驱动，其提供了零拷贝、高并发直接从用户态访问ssd的特性。其最初的目的是为了优化块存储落盘。但随着spdk的持续演进，大家发现spdk可以优化存储软件栈的各个方面。</p><p><a href="https://zhuanlan.zhihu.com/p/362978954">SPDK参考博客</a></p><p><a href="https://blog.csdn.net/sdc20102010/article/details/118413300">RDMA参考博客</a></p></blockquote><p><strong>应用场景</strong>：企业核心应用，互联网或游戏业务</p><h2 id="7-9-云数据库MongoDB">7.9 云数据库MongoDB</h2><p>TencentDB for MongoDB 基于开源MongoDB打造的高性能、分布式文档数据库服务。</p><p>兼容开源MongoDB协议，DynamoDB协议</p><p>腾讯自研的MongoDB分布式集群；</p><p>模式自由schema-free；</p><p>自动容灾 备份回档。</p><h3 id="容灾架构">容灾架构</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagea0ff9b8366b2fcf4.png" alt="imagea0ff9b8366b2fcf4.png"></p><p>应用：游戏开发场景</p><p>游戏需求变化快，版本迭代快，需要频繁修改数据库表结构。</p><p>方案”：MongoDB无固定模式，大幅缩短版本迭代周期。</p><h2 id="7-10-云数据库Redis">7.10 云数据库Redis</h2><p>提供兼容开源Redis 协议的弹性缓存和存储服务</p><p>支持主从热备，自动容灾切换，数据备份，故障迁移等功能。</p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image49401af82b78b80e.png" alt="image49401af82b78b80e.png"></p><h2 id="7-11-云数据库Memcached">7.11 云数据库Memcached</h2><p>提供兼容Memcached协议、高性能、高可靠、易用的弹性缓存和存储服务。</p><p>提供主从热备、自动容灾切换、在线扩容、数据备份、等实例监控全套数据库服务。</p><h3 id="自动容灾">自动容灾</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image617b7f51d9b92728.png" alt="image617b7f51d9b92728.png"></p><h3 id="在线扩容">在线扩容</h3><p>自动扩容以保证用户实例始终有20%的可用空间。</p><p><strong>实例需要扩容时</strong></p><ul><li>检查实例当前所在存储节点的剩余空间是否满足扩容需求；</li><li>如果满足则直接原地扩容，否则需要增加额外的存储节点。</li></ul><p><strong>应用场景</strong>：存储需要告诉访问的热点数据</p><ul><li>游戏行业场景：积分排行榜</li><li>互联网/APP：热点访问/下载数据</li><li>电商场景：商品分类数据/图片、商品搜索结果</li></ul><h2 id="7-12-时序数据库CTSDB">7.12 时序数据库CTSDB</h2><p><strong>时序数据库</strong>主要用于处理带时间标签的数据。</p><p>TencentDB for CTSDB 提供高性能、分布式、安全、稳定的云端时序数据库。</p><p>高并发写入：写内存-Dump-批量写入</p><p>低成本存储：Rollup数据聚合、数据压缩</p><p>聚合分析能力：丰富聚合查询与分析方式。</p><p><strong>应用场景</strong>：</p><p><strong>IoT监控环境</strong>：PB级数据，CTSDB实时写入，快速查询。</p><p><strong>互联网业务监控分析</strong>：CTSDB生成日志报表提供问题分析排查</p><h2 id="7-13-数据库-一体机TData">7.13 数据库_一体机TData</h2><p>软硬件融合的体现。</p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image30c41089cb45bff6.png" alt="image30c41089cb45bff6.png"></p><p><strong>产品优势</strong></p><p>金融安全/合规，高可靠性/性价比高，快速部署/扩展，打包后变成整机。<br>支持</p><p><strong>应用场景</strong></p><p>OLAP,OLTP以及混合负载等场景。</p><p><strong>两地三中心</strong>：同城双活、异地灾备，如金融行业。</p><p>TData一体机支持MySQL 、Oracle 、PostgreSQL 、SQL Server，并且提供比CDB For MySQL更多的特性，例如高性能计算、热插拔闪存、Infiniband 网络、RDMA 远程直接存取数据的数据库解决方案，但是成本较CDB For MySQL会较高，在可靠性方面，腾讯云 TData 具备完善的保障机制，可选择不同磁盘冗余度策略、数据备份策略及自建灾备等手段实现数据的高可靠性。并不会由于是物理机就降低了可靠性</p><h2 id="7-14-数据传输服务DTS">7.14 数据传输服务DTS</h2><p>数据迁移，数据同步，数据定义：</p><p><a href="https://www.imagehub.cc/image/JO6OQJ"><img src="https://s1.imagehub.cc/images/2022/11/23/imagecf7726ea63b13205.png" alt="imagecf7726ea63b13205.png"></a></p><h3 id="DTS迁移要求">DTS迁移要求</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image5c5ca0dcaf5b21b0.png" alt="image5c5ca0dcaf5b21b0.png"></p><h3 id="数据库灾备">数据库灾备</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/imageec4cd31c06a5f88f.png" alt="imageec4cd31c06a5f88f.png"></p><h3 id="数据上云-归档">数据上云/归档</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/imageecedb5c242d670f4.png" alt="imageecedb5c242d670f4.png"></p><h2 id="7-15-7-18云数据库计费方案">7.15 ~7.18云数据库计费方案</h2><h3 id="关系型数据库计费">关系型数据库计费</h3><p>实例费用 = 实例规格费用（内存大小）+ 存储空间费用（磁盘容量）</p><h4 id="MySQL计费方案">MySQL计费方案</h4><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagee773323b09fec1b9.png" alt="imagee773323b09fec1b9.png"></p><h4 id="MariaDB，SQL-Server，PostgreSQL-计费方案">MariaDB，SQL Server，PostgreSQL 计费方案</h4><p><img src="https://s1.imagehub.cc/images/2022/11/23/image55e90300aad9b9c3.png" alt="image55e90300aad9b9c3.png"></p><h4 id="包年包月计费示例"><strong>包年包月计费示例</strong></h4><p><a href="https://www.imagehub.cc/image/JOVCOc"><img src="https://s1.imagehub.cc/images/2022/11/23/image41bd7f0559e722fb.png" alt="image41bd7f0559e722fb.png"></a></p><h4 id="TDSQL计费方案">TDSQL计费方案</h4><p><img src="https://s1.imagehub.cc/images/2022/11/23/image8b8fb071835a2e8e.png" alt="image8b8fb071835a2e8e.png"></p><h3 id="升级案例">升级案例</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/imageb889ef2ba59f9f68.png" alt="imageb889ef2ba59f9f68.png"></p><h3 id="MongoDB计费方案">MongoDB计费方案</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image7eab02c60df83f63.png" alt="image7eab02c60df83f63.png"></p><p><strong>计费案例</strong></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image1cc841c4e42faa44.png" alt="image1cc841c4e42faa44.png"></p><h3 id="Redis计费方案">Redis计费方案</h3><p><img src="https://s1.imagehub.cc/images/2022/11/23/image679e475290e07aee.png" alt="image679e475290e07aee.png"></p><p><strong>Redis计费示例</strong></p><p><img src="C:%5CUsers%5CCJH%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1669194330111.png" alt="1669194330111"></p><h2 id="7-18-Memcached-计费方案">7.18 Memcached 计费方案</h2><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagef46a7ece12b1e205.png" alt="imagef46a7ece12b1e205.png"></p><h1>腾讯云从业者认证学习笔记（七）</h1><p><strong>腾讯云安全产品介绍</strong></p><ul><li>了解云安全体系与标准</li><li>熟悉腾讯云安全产品功能</li><li>了解腾讯云安全产品技术原理</li><li>熟悉腾讯云安全产品使用场景</li><li>熟悉腾讯云安全产品适用场景</li><li>熟悉腾讯云安全产品计费方案</li></ul><h2 id="8-1-安全责任共担模型">8.1 安全责任共担模型</h2><h3 id="云安全基本原则">云安全基本原则</h3><p><a href="https://www.imagehub.cc/image/JOQRt1"><img src="https://s1.imagehub.cc/images/2022/11/23/image4d445bd99cd2f4ee.png" alt="image4d445bd99cd2f4ee.png"></a></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagee9885273e899b038.png" alt="imagee9885273e899b038.png"></p><h2 id="8-2-云安全指南">8.2 云安全指南</h2><p><img src="https://s1.imagehub.cc/images/2022/11/23/image63a34aa29a523f09.png" alt="image63a34aa29a523f09.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image47a761faf8b9db7c.png" alt="image47a761faf8b9db7c.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image427c84107a1a4412.png" alt="image427c84107a1a4412.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagef1d9e7bdc58e2070.png" alt="imagef1d9e7bdc58e2070.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/imaged517cd5a728a59ec.png" alt="imaged517cd5a728a59ec.png"></p><h2 id="8-3-常见安全威胁">8.3 常见安全威胁</h2><ul><li>病毒攻击</li><li>DDoS网络攻击</li><li>木马攻击WebShell</li><li>渗透攻击数据拖取</li><li>APP漏洞</li><li>营销撸羊毛</li></ul><blockquote><p>DDOS(Distributed Denial of Service)，即分布式拒绝服务，是一种针对于网络服务的攻击行为。对于 DDOS 我们可以这样通俗地理解，假如有一家商店在售卖商品，突然涌过来一大帮人说要买东西，这里面有的人是真正的顾客，有的人只是过来捣乱的，但是售货员可能就会崩溃了（不知道该卖给谁），就会导致一种拒绝服务攻击了。而分布式拒绝服务攻击，则是因为黑客控制了很多台肉鸡来发动攻击。</p><p>分布式拒绝服务（DDoS）攻击是通过大规模互联网流量淹没目标服务器或其周边基础设施，以破坏目标服务器、服务或网络正常流量的恶意行为。</p><p>DDoS 攻击利用多台受损计算机系统作为攻击流量来源以达到攻击效果。利用的机器可以包括计算机，也可以包括其他联网资源（如 IoT 设备）。</p><p>总体而言，DDoS 攻击好比高速公路发生交通堵塞，妨碍常规车辆抵达预定目的地。<br><a href="https://blog.csdn.net/qq_38428356/article/details/124471354">DDoS科普</a></p></blockquote><p><img src="https://s1.imagehub.cc/images/2022/11/23/imagebacd880b7f8b4155.png" alt="imagebacd880b7f8b4155.png"></p><h2 id="8-4-腾讯云安全体系">8.4 腾讯云安全体系</h2><p><a href="https://www.imagehub.cc/image/JOk13v"><img src="https://s1.imagehub.cc/images/2022/11/23/imagef37a989c4e3d1391.png" alt="imagef37a989c4e3d1391.png"></a></p><h2 id="8-5-8-8-网络安全产品大禹">8.5~8.8 网络安全产品大禹</h2><h3 id="DDoS攻击挑战">DDoS攻击挑战</h3><p>门槛很低：攻击工具可以在网上下载/购买；</p><p>成本低廉：数百元可获得100G的攻击流量；</p><p>团队作战：已形成组织化分工明确黑色产业链。</p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image868d272bc6dbfe5e.png" alt="image868d272bc6dbfe5e.png"></p><h3 id="大禹基本功能">大禹基本功能</h3><p><a href="https://imgse.com/i/z85p2q"><img src="https://s1.ax1x.com/2022/11/23/z85p2q.png" alt="z85p2q.png"></a></p><h3 id="大禹技术原理">大禹技术原理</h3><p><a href="https://imgse.com/i/z85FqU"><img src="https://s1.ax1x.com/2022/11/23/z85FqU.png" alt="z85FqU.png"></a><br>监测到攻击后用BGP牵引的方式，将所有流量引导至清洗集群进行清洗。</p><p><a href="https://imgse.com/i/z85lqO"><img src="https://s1.ax1x.com/2022/11/23/z85lqO.png" alt="z85lqO.png"></a></p><h3 id="大禹产品优势">大禹产品优势</h3><p><img src="C:%5CUsers%5CCJH%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1669201887868.png" alt="1669201887868"></p><h3 id="大禹应用场景">大禹应用场景</h3><p><a href="https://imgse.com/i/z8IY0U"><img src="https://s1.ax1x.com/2022/11/23/z8IY0U.png" alt="z8IY0U.png"></a></p><h3 id="大禹计费方案">大禹计费方案</h3><p><a href="https://imgse.com/i/z8IatJ"><img src="https://s1.ax1x.com/2022/11/23/z8IatJ.png" alt="z8IatJ.png"></a></p><p><a href="https://imgse.com/i/z8oab8"><img src="https://s1.ax1x.com/2022/11/23/z8oab8.png" alt="z8oab8.png"></a></p><p><a href="https://imgse.com/i/z8oB5Q"><img src="https://s1.ax1x.com/2022/11/23/z8oB5Q.png" alt="z8oB5Q.png"></a></p><h2 id="8-9-8-12-主机安全产品云镜">8.9 ~ 8.12 主机安全产品云镜</h2><h3 id="主机安全挑战">主机安全挑战</h3><p><a href="https://imgse.com/i/z8HLq0"><img src="https://s1.ax1x.com/2022/11/23/z8HLq0.png" alt="z8HLq0.png"></a></p><h3 id="基本功能">基本功能</h3><p>木马文件检测</p><p>密码破解检测</p><p>登录行为审计</p><p>漏洞检测预警</p><p>资产组件识别</p><h3 id="云镜防护版本">云镜防护版本</h3><p><a href="https://imgse.com/i/z8vNWT"><img src="https://s1.ax1x.com/2022/11/23/z8vNWT.png" alt="z8vNWT.png"></a></p><h3 id="技术原理">技术原理</h3><p><strong>基于“云 + 端”</strong>：主机端轻量级Agent，检测计算和防护在云端进行。</p><p><a href="https://imgse.com/i/z8xCt0"><img src="https://s1.ax1x.com/2022/11/23/z8xCt0.png" alt="z8xCt0.png"></a></p><p><strong>基于云镜强大漏洞策略库</strong></p><p><strong>基于腾讯电脑管家的恶意文件检测能力</strong></p><p><strong>基于AI的WebShell检测技术</strong></p><table><thead><tr><th>基础型</th><th>通用型</th><th>AI型</th></tr></thead><tbody><tr><td>字符串匹配</td><td>正则匹配、上下文逻辑匹配</td><td>机器学习、海量样本库</td></tr></tbody></table><p><strong>对密码破解行为进行检测告警</strong></p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image1faecd1142b1cef6.png" alt="image1faecd1142b1cef6.png"></p><h3 id="优势和应用">优势和应用</h3><ul><li>全面的漏洞监控<ul><li>基于腾讯全网威胁情报数据源</li><li>腾讯电脑管家海量恶意样本资源</li></ul></li><li>基于AI的检测引擎<ul><li>新一代TAV反病毒引擎及哈勃分析系统</li><li>基于机器学习的WebShell检测引擎</li></ul></li><li>低资源占用<ul><li>轻量级Agent\计算与防护在云端</li><li>CPU使用率&lt;2%,内存占用&lt;30M</li></ul></li><li>高效资产管理<ul><li>自动化获取主机资产信息,统一管理</li><li>安全事件统一管理,可视化运维平台</li></ul></li></ul><h3 id="应用场景-4">应用场景</h3><p>公有云场景</p><p>私有云场景</p><h3 id="计费方案">计费方案</h3><p><strong>基础防护</strong>:免费使用,功能受限</p><p><strong>专业防护</strong>:</p><ul><li>按量计费<ul><li>按开通专业防护的主机数量计费</li><li>按天计费,北京时间每日凌晨两点扣费.</li></ul></li><li>包年包月:预付费,xx元/月</li></ul><h2 id="8-13-8-16-网站管家功能WAF">8.13~8.16 网站管家功能WAF</h2><p><img src="https://s1.imagehub.cc/images/2022/11/23/image24fcf6d194349d3d.png" alt="image24fcf6d194349d3d.png"></p><p>网站管家WAF</p><p><img src="https://s1.imagehub.cc/images/2022/11/23/image047355de1a874b6c.png" alt="image047355de1a874b6c.png"></p><h3 id="网站管家功能">网站管家功能</h3><p>腾讯云网站管家为WAF为智能一站式网站安全防护平台:</p><p><a href="https://imgse.com/i/zGSxne"><img src="https://s1.ax1x.com/2022/11/23/zGSxne.png" alt="zGSxne.png"></a></p><h3 id="WAF技术原理">WAF技术原理</h3><p>攻击前: 24h实时监测分析安全隐患;</p><p>攻击中: 识别与拦截恶意攻击,垃圾访问;</p><p>攻击后: 通过云备份保障网页内容的正常显示 .</p><p><strong>反向代理 + 检测云</strong></p><p>业务测更改DNS记录后,将流量转发给反向代理;</p><p>反向代理的安全模块接收到用户请求,封装后发送到检测云.</p><p>检测云收到请求并进行检测处理.</p><h3 id="WAF常用策略"><strong>WAF常用策略</strong></h3><p>特征识别:</p><ul><li>识别攻击行为特征;</li><li>如识别病毒,蠕虫.</li></ul><p>算法识别:</p><ul><li>基于语义理解识别</li><li>如SQL注入\DDoS等.</li></ul><p>模式匹配</p><ul><li>攻击行为归纳成一定模式,匹配后能确定是入侵行为.</li></ul><h3 id="WAF产品优势">WAF产品优势</h3><p>久经考验的Web业务安全防护实践体系</p><p>AI + 规则 双引擎检测.</p><h3 id="WAF应用场景">WAF应用场景</h3><p>政务网站防护</p><ul><li>保障政务网站内容不被黑篡改,民生数据不被入侵窃取.</li><li>保障民生服务正常可用,民众访问满意畅通.</li></ul><p>电商网站防护</p><ul><li>智能过滤恶意攻击及垃圾访问,保障正常访问业务流畅</li><li>防止恶意爬虫竞争比价,库存查询,数据爬取分析,黑产SEO.</li></ul><p>金融网站防护</p><ul><li>监测DNS链路劫持,防止网站流量被恶意指向.</li><li>有效检测撞库等异常访问,数据不篡改,窃取或泄露.</li></ul><h3 id="WAF计费方案">WAF计费方案</h3><p><strong>WAF费用</strong>:基础防护套餐+扩展包</p><p><strong>付费方式</strong>:按月预付费</p><p>基础套餐+扩展包</p><p>高级版,企业版.旗舰版</p><p>域名包,带宽包,QPS包</p><h2 id="8-17-Web漏洞扫描">8.17 Web漏洞扫描</h2><p>腾讯云Web漏洞扫描是用于监测网站漏洞的安全服务,为企业提供全天全面</p><p>准确的漏洞监测和专业的修复建议.</p><p>Web漏洞扫描按域名的扫描次数进行收费,预付费.</p><h2 id="8-18天御防刷服务">8.18天御防刷服务</h2><p>业务挑战:黑产(撸羊毛)以及产业化</p><p><a href="https://imgse.com/i/zGi1IJ"><img src="https://s1.ax1x.com/2022/11/24/zGi1IJ.png" alt="zGi1IJ.png"></a></p><p>注册保护流程:</p><p><a href="https://imgse.com/i/zGi8i9"><img src="https://s1.ax1x.com/2022/11/24/zGi8i9.png" alt="zGi8i9.png"></a></p><h3 id="天御防刷流程">天御防刷流程</h3><p><a href="https://imgse.com/i/zGiGGR"><img src="https://s1.ax1x.com/2022/11/24/zGiGGR.png" alt="zGiGGR.png"></a></p><h3 id="天御技术原理">天御技术原理</h3><p><a href="https://imgse.com/i/zGiaqO"><img src="https://s1.ax1x.com/2022/11/24/zGiaqO.png" alt="zGiaqO.png"></a></p><h3 id="优势-大量经验">优势:大量经验</h3><h2 id="8-19-天御反欺诈服务">8.19 天御反欺诈服务</h2><p><a href="https://imgse.com/i/zGFpWR"><img src="https://s1.ax1x.com/2022/11/24/zGFpWR.png" alt="zGFpWR.png"></a></p><h3 id="天御反欺诈AF专注于识别金融行业的欺诈风险">天御反欺诈AF专注于识别金融行业的欺诈风险</h3><p>技术原理:</p><p><a href="https://imgse.com/i/zGFXct"><img src="https://s1.ax1x.com/2022/11/24/zGFXct.png" alt="zGFXct.png"></a></p><p>优势:AI + 大数据</p><p>应用场景:</p><p>申请贷款:适用于银行.互金 ,P2P等金融行业.</p><h3 id="天御计费方案">天御计费方案</h3><p><a href="https://imgse.com/i/zGkPhj"><img src="https://s1.ax1x.com/2022/11/24/zGkPhj.png" alt="zGkPhj.png"></a></p><h2 id="8-21-移动应用安全MS">8.21 移动应用安全MS</h2><h3 id="应用安全挑战">应用安全挑战</h3><p><a href="https://imgse.com/i/zGkAcq"><img src="https://s1.ax1x.com/2022/11/24/zGkAcq.png" alt="zGkAcq.png"></a></p><p><a href="https://imgse.com/i/zGkEj0"><img src="https://s1.ax1x.com/2022/11/24/zGkEj0.png" alt="zGkEj0.png"></a></p><h3 id="移动安全应用安全MS">移动安全应用安全MS</h3><p><a href="https://imgse.com/i/zGk13R"><img src="https://s1.ax1x.com/2022/11/24/zGk13R.png" alt="zGk13R.png"></a></p><p>应用加固服务</p><p>MS场景优势:</p><p><a href="https://imgse.com/i/zGkJu6"><img src="https://s1.ax1x.com/2022/11/24/zGkJu6.png" alt="zGkJu6.png"></a><br>移动应用安全使用场景包括如下：应用开发中、应用开发完毕、应用待上线、应用上线后几个阶段</p><p>应用场景:</p><ul><li>应用自主研发</li><li>应用外包研发</li><li>应用分发</li></ul><h2 id="8-23-计费方案总结">8.23 计费方案总结</h2><p><a href="https://imgse.com/i/zGk6Df"><img src="https://s1.ax1x.com/2022/11/24/zGk6Df.png" alt="zGk6Df.png"></a></p><h1>腾讯云从业者认证学习笔记（八）</h1><p><strong>腾讯云视频与通信服务</strong></p><ul><li>了解音视频的主要场景与技术原理</li><li>熟悉视频产品的功能,优势,场景与计费方案</li><li>熟悉通信产品的功能,优势,场景与计费方案</li></ul><h2 id="9-1-音视频主要场景">9.1 音视频主要场景</h2><p><a href="https://imgse.com/i/zGk7rV"><img src="https://s1.ax1x.com/2022/11/24/zGk7rV.png" alt="zGk7rV.png"></a></p><p><a href="https://imgse.com/i/zGAFaD"><img src="https://s1.ax1x.com/2022/11/24/zGAFaD.md.png" alt="zGAFaD.md.png"></a></p><p><a href="https://imgse.com/i/zGAEPH"><img src="https://s1.ax1x.com/2022/11/24/zGAEPH.png" alt="zGAEPH.png"></a></p><p><a href="https://imgse.com/i/zGAVGd"><img src="https://s1.ax1x.com/2022/11/24/zGAVGd.png" alt="zGAVGd.png"></a></p><p><a href="https://imgse.com/i/zGAZRA"><img src="https://s1.ax1x.com/2022/11/24/zGAZRA.png" alt="zGAZRA.png"></a></p><h2 id="9-2-音视频技术原理">9.2 音视频技术原理</h2><p><a href="https://imgse.com/i/zGAQZ8"><img src="https://s1.ax1x.com/2022/11/24/zGAQZ8.md.png" alt="zGAQZ8.md.png"></a></p><p><a href="https://imgse.com/i/zGAldS"><img src="https://s1.ax1x.com/2022/11/24/zGAldS.md.png" alt="zGAldS.md.png"></a></p><p><img src="https://s1.imagehub.cc/images/2022/11/24/image21f6866cf2b64c55.md.png" alt="https://s1.imagehub.cc/images/2022/11/24/image21f6866cf2b64c55.md.png"></p><h2 id="9-3-音视频基本参数">9.3 音视频基本参数</h2><p><img src="https://s1.imagehub.cc/images/2022/11/24/image178cdb5751d976e8.md.png" alt="https://s1.imagehub.cc/images/2022/11/24/image178cdb5751d976e8.md.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/24/imageec87dbf3cfed1a8e.md.png" alt="https://s1.imagehub.cc/images/2022/11/24/imageec87dbf3cfed1a8e.md.png"></p><h2 id="9-4-即时通信基础知识">9.4 即时通信基础知识</h2><p><img src="https://s1.imagehub.cc/images/2022/11/24/imagef5e55a6de6df12d9.png" alt="imagef5e55a6de6df12d9.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/24/image0789de42dc3d0ae1.png" alt="image0789de42dc3d0ae1.png"></p><h2 id="9-5-云直播产品介绍">9.5 云直播产品介绍</h2><p><strong>云直播LVB</strong>:提供高并发,低延迟,易接入,安全可靠稳定的直播推流,转码,分发及播放服务.</p><p><strong>直播推流/播放SDK</strong>:提供端到端的一站式音视频直播解决方案.</p><h3 id="云直播系统架构">云直播系统架构</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image2510316a63a3737f.png" alt="image2510316a63a3737f.png"></p><h3 id="云直播主要功能">云直播主要功能</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/imagea4be2d6f6848f8a5.png" alt="imagea4be2d6f6848f8a5.png"></p><h3 id="云直播应用场景">云直播应用场景</h3><p>业务特点:要求视频的实时录制播放,及时分发到大量用户</p><p>也就是各类直播.</p><h3 id="云直播计费方案">云直播计费方案</h3><p>基于观看直播时产生的下行流量/带宽费用进行计费.</p><ul><li>后付费日结<ul><li>流量日结:到达阶梯;费用 = 日流量 * 阶梯单价</li><li>带宽日结:到达阶梯;费用= 日峰带宽 * 阶梯单价</li></ul></li><li>预付费资源包<ul><li>流量资源包</li><li>移动直播 SDK License</li><li>移动直播连麦资源包</li></ul></li><li>增值服务计费:<ul><li>录制\截图\鉴黄\转码 默认关闭 ,开启付费</li><li>转码费用 = 价格 * 转码时长 ,  日结</li><li>录制费用 = 价格 * 录制路数峰值 , 月结</li><li>截图费用 = 价格 * (截图数量 - 1000免费额度) ,月结</li><li>鉴黄费用 = 价格 * (鉴黄数量 - 1000免费额度) ,月结</li></ul></li></ul><p>计费示例:</p><p><img src="https://s1.imagehub.cc/images/2022/11/24/image4449e6e7270051f0.png" alt="image4449e6e7270051f0.png"></p><h2 id="9-6-云点播产品介绍">9.6 云点播产品介绍</h2><h3 id="云点播系统架构">云点播系统架构</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/imageba522362f1c7e0c6.png" alt="imageba522362f1c7e0c6.png"></p><h2 id="云点播主要功能">云点播主要功能</h2><p><img src="https://s1.imagehub.cc/images/2022/11/24/imaged6c81dab17c401c1.png" alt="imaged6c81dab17c401c1.png"></p><h3 id="云点播应用场景">云点播应用场景</h3><p>业务特点:大量音视频需要上传处理和存储;能保障各地的用户高质量的播放观看体验.(视频门户,在线教育,短视频应用)</p><h3 id="云点播计费方案">云点播计费方案</h3><p>基于点播存储容量,转码规格时长与视频加速下行流量计费.</p><ul><li>后付费日结<ul><li>视频存储:按容量计费</li><li>视频转码:按规格和时长计费</li><li>视频加速:按下行流量计费</li></ul></li><li>预付费资源包<ul><li>视频存储资源包</li><li>视频转码资源包</li><li>视频加速资源包</li></ul></li><li>增值服务计费</li></ul><p><a href="https://www.imagehub.cc/image/JOmgHK"><img src="https://s1.imagehub.cc/images/2022/11/24/imageaaed457f49986c39.png" alt="imageaaed457f49986c39.png"></a></p><h3 id="云点播计费实例">云点播计费实例</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image50f0b647cfd8c677.png" alt="image50f0b647cfd8c677.png"></p><h2 id="9-7-实现音视频介绍">9.7 实现音视频介绍</h2><p>腾讯实时音视频TRTC</p><p><img src="https://s1.imagehub.cc/images/2022/11/24/image79cd14e79b9e71ce.png" alt="image79cd14e79b9e71ce.png"></p><h3 id="功能">功能</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image1f02a0ceea0a33a7.png" alt="image1f02a0ceea0a33a7.png"></p><h3 id="应用场景-5">应用场景</h3><p>业务需求:实时播放与观看,同时进行互动交流</p><p>视频客服,在线招聘,在线会议,在线医疗</p><h3 id="计费方案-2">计费方案</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image64acd77b1d7d619a.png" alt="image64acd77b1d7d619a.png"></p><h2 id="9-8-短信产品介绍">9.8 短信产品介绍</h2><p>腾讯云短信SMS.支持国内短信,语音短信,国际短信</p><h3 id="产品优势-5">产品优势</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/imagea7f3bbae5635489f.png" alt="imagea7f3bbae5635489f.png"></p><h3 id="请求流程">请求流程</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image93d90dca3d82d1b8.png" alt="image93d90dca3d82d1b8.png"></p><h3 id="短信内容组成">短信内容组成</h3><p>签名+短信内容</p><p><img src="https://s1.imagehub.cc/images/2022/11/24/image184bfde02e3b7ca8.png" alt="image184bfde02e3b7ca8.png"></p><h3 id="应用场景-6">应用场景</h3><p>验证码发送 消息通知 营销推广</p><h3 id="计费方案-3">计费方案</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image4937c487f6828952.png" alt="image4937c487f6828952.png"></p><h2 id="9-9-云通信产品IM介绍">9.9 云通信产品IM介绍</h2><p>QQ 微信这类.</p><h3 id="产品优势-6">产品优势</h3><p>丰富社交能力 支持多类型数据等</p><p>稳定高可用</p><p>一站式解决方案.</p><p><img src="https://s1.imagehub.cc/images/2022/11/24/imagec5f9e78ae7eeaea4.png" alt="imagec5f9e78ae7eeaea4.png"></p><h3 id="功能架构">功能架构</h3><p><a href="https://www.imagehub.cc/image/JOmmir"><img src="https://s1.imagehub.cc/images/2022/11/24/image83d3fe6542b0b714.png" alt="image83d3fe6542b0b714.png"></a></p><h3 id="应用场景-7">应用场景</h3><p>应用内社交 ,客服咨询,企业协同办公,竞技游戏沟通</p><h3 id="计费方案-4">计费方案</h3><p><img src="https://s1.imagehub.cc/images/2022/11/24/image2c5c931ebba8c981.png" alt="image2c5c931ebba8c981.png"></p><h2 id="计费示例">计费示例</h2><p><img src="https://s1.imagehub.cc/images/2022/11/24/image9fd503a782ffe875.png" alt="image9fd503a782ffe875.png"></p><p><img src="https://s1.imagehub.cc/images/2022/11/24/imagef63e90a531caed15.png" alt="imagef63e90a531caed15.png"></p>]]></content>
      
      
      <categories>
          
          <category> 腾讯实验班 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云从业者 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云人工智能从业者认证（TCA）学习笔记</title>
      <link href="/2022/11/29/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81%EF%BC%88TCA%EF%BC%89%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/29/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81%EF%BC%88TCA%EF%BC%89%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1>腾讯云从业者认证学习笔记前言</h1><p>相关链接：</p><p><a href="https://cloud.tencent.com/edu/training/cert/detail?type=practitioner">腾讯云从业者认证</a></p><p><a href="https://cloud.tencent.com/edu/learning/course-1998-23905">【限时免费】腾讯云从业者认证课程 - 腾讯产业互联网学堂 (tencent.com)</a></p><p><a href="https://tschool.kaoshixing.com/login/exam/exam_skip_login/867845/1">模拟考试</a></p><h2 id="认证概述">认证概述</h2><p>腾讯云从业者认证是云计算行业从业者的初级技能认证, 通过该认证可有效验证您是否具备掌握云计算基础知识以及理解腾讯云基础产品的功能和使用场景的能力。适用于初入云计算行业, 计划从事售前工作, 或逐步向运维、架构等角色提升的人员。该认证需要学员提前报名, 在腾讯云官方授权的考试中心进行。</p><h2 id="适合对象">适合对象</h2><ul><li>正在从事或有志于从事云计算相关岗位的学生或IT从业者；</li><li>具有计算机、网络通信、数据处理等领域的学习或工作经验；</li><li>对虚拟化、服务器、存储、网络、数据库、安全等基本概念有所了解；</li></ul><h2 id="我的得分">我的得分</h2><p><a href="https://imgse.com/i/zddzhq"><img src="https://s1.ax1x.com/2022/11/29/zddzhq.png" alt="zddzhq.png"></a></p><h2 id="课程目录">课程目录</h2><p><a href="https://imgse.com/i/zn31Ug"><img src="https://s1.ax1x.com/2022/11/18/zn31Ug.png" alt="zn31Ug.png"></a></p><h2 id="考试内容">考试内容</h2><table><thead><tr><th style="text-align:left">知识域</th><th style="text-align:left">百分比</th><th style="text-align:left">知识点</th></tr></thead><tbody><tr><td style="text-align:left">云计算基础</td><td style="text-align:left">30%</td><td style="text-align:left">1.1 计算发展历史 1.2 云计算的技术架构 1.3 云计算的影响 1.4 业界主流云产品</td></tr><tr><td style="text-align:left">腾讯云产品基础知识</td><td style="text-align:left">70%</td><td style="text-align:left">2.1 腾讯云云网络, 云CDN, 云存储, 云数据库, 云安全产品功能、优势和适用场景 2.2 腾讯云云网络, 云CDN, 云存储, 云数据库, 云安全产品计费方案</td></tr></tbody></table><p><a href="https://main.qcloudimg.com/raw/84235eeb1c66575eb7fa536e88b0934f/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%88%97%E8%A1%A8V1.2.pdf">知识点列表</a></p><p><a href="https://main.qcloudimg.com/raw/40d40b75dc1b29ac5e9173cf63809f5a/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%BB%8E%E4%B8%9A%E8%80%85%E8%AE%A4%E8%AF%81-%E8%80%83%E8%AF%95%E6%A0%B7%E9%A2%98V1.2.pdf">考试样题</a></p><h2 id="试题结构">试题结构</h2><p><a href="https://imgse.com/i/zn3VCd"><img src="https://s1.ax1x.com/2022/11/18/zn3VCd.png" alt="zn3VCd.png"></a></p><p>60道单选20道多选，70分通过。</p><h2 id="1-1-云从导学。">1.1 云从导学。</h2><p>市场增速迅猛，国家推动，厂商发力。</p><p><a href="https://imgse.com/i/zn3sPJ"><img src="https://s1.ax1x.com/2022/11/18/zn3sPJ.png" alt="zn3sPJ.png"></a></p><h1>腾讯云人工智能从业者认证（TCA）学习笔记（一）</h1><h2 id="背景概述">背景概述</h2><p>腾讯云人工智能从业者认证（TCA）是腾讯公司基于腾讯云产品, 面向社会推出的一项专业认证, 旨在推动人工智能的普及、AI入门知识的学习和应用, 推动AI领域初级人才的培养。</p><p>参考资料如下：</p><p><a href="https://cloud.tencent.com/edu/training/cert/detail?type=sai&amp;from=10680">腾讯云人工智能从业者认证</a></p><p><a href="https://cloud.tencent.com/developer/article/1948556">腾讯云-人工智能-从业资格认证-学习笔记 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://cloud.tencent.com/developer/article/2146708">腾讯云人工智能从业者考试攻略 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://cloud.tencent.com/edu/training/cert/detail?type=sai">腾讯云人工智能从业者认证 - 培训认证中心 - 腾讯产业互联网学堂 (tencent.com)</a></p><h2 id="备考指南">备考指南</h2><p>腾讯云人工智能从业者认证现行考试大纲共包括4个知识模块：<strong>人工智能基础导论</strong>、<strong>人工智能项目开发</strong>、腾<strong>讯云AI能力架构</strong>、<strong>人工智能发展趋势和产业岗位</strong>。在备考策略上，我们建议先查阅好认证的<a href="https://cloud.tencent.com/edu/training/cert/detail?type=sai&amp;from=10680">考试大纲</a>，了解考试的知识点范围；然后再学习<a href="https://cloud.tencent.com/edu/learning/course-3460-61198?from=10680">视频课程</a>，系统性地了解认证考试的全部知识点；最后查阅相关产品文档，进一步理解产品并加深印象。然后通过考试一举拿下认证。备考的准备时间建议两周以上。知识点整理如下：</p><p>大纲如下：</p><p><a href="https://imgse.com/i/zVVu5D"><img src="https://s1.ax1x.com/2022/11/15/zVVu5D.md.png" alt="zVVu5D.md.png"></a></p><p>第一模块：人工智能基础导论，主要需要掌握人工智能的基础概念，了解人工智能的定义、应用与产业发展，具体概念有机器学习、深度学习、监督学习、无监督学习等。</p><p><a href="https://imgse.com/i/zVVMPe"><img src="https://s1.ax1x.com/2022/11/15/zVVMPe.md.png" alt="zVVMPe.md.png"></a></p><p>第二模块人工智能项目开发，主要是理解人工智能项目的主要内容和生命周期，以及在人工智能项目开发中一般涉及的技术概念，例如数据预处理、特征工程、项目验收等内，常见机器学习框架、深度学习框架、常见开源网站、GPU在AI中的应用等。</p><p><a href="https://imgse.com/i/zVVJqP"><img src="https://s1.ax1x.com/2022/11/15/zVVJqP.md.png" alt="zVVJqP.md.png"></a></p><p>第三模块腾讯云AI能力架构。本模块主要需要了解腾讯云支持的AI能力有哪些，主要内容包括腾讯云基础算法能力，腾讯云Ti平台，腾讯云AI解决方案和腾讯云内容安全应用等。</p><p><a href="https://imgse.com/i/zVVNa8"><img src="https://s1.ax1x.com/2022/11/15/zVVNa8.md.png" alt="zVVNa8.md.png"></a></p><p>第四模块人工智能发展趋势和产业岗位，本模块主要是需要考生理解人工智能发展趋势带来的产业岗位分布以及岗位能力要求。</p><p><a href="https://imgse.com/i/zVVwGQ"><img src="https://s1.ax1x.com/2022/11/15/zVVwGQ.md.png" alt="zVVwGQ.md.png"></a></p><h2 id="考试内容-2">考试内容</h2><table><thead><tr><th style="text-align:left">知识域</th><th style="text-align:left">百分比</th><th style="text-align:left">知识点</th></tr></thead><tbody><tr><td style="text-align:left">人工智能导论</td><td style="text-align:left">10%</td><td style="text-align:left">1.1 人工智能概述 1.2 人工智能应用 1.3 人工智能产业发展</td></tr><tr><td style="text-align:left">人工智能基础</td><td style="text-align:left">20%</td><td style="text-align:left">2.1 人工智能发展的成功要素 2.2 人工智能迅速发展的技术领域 2.3 人工智能的基础知识</td></tr><tr><td style="text-align:left">人工智能项目开发实战</td><td style="text-align:left">40%</td><td style="text-align:left">3.1 人工智能项目开发规划与准备 3.2 机器学习开发任务实例（房价预测） 3.3 深度学习开发任务实例（无人小车 3.4 人工智能项目开发验收与维护 3.5 机器学习开发框架 3.6 如何使用开源代码仓库 3.7 对CPU、GPU 与云计算服务的依赖</td></tr><tr><td style="text-align:left">腾讯云AI能力</td><td style="text-align:left">25%</td><td style="text-align:left">4.1 腾讯云AI基础算法能力 4.2 腾讯云TI平台 4.3 腾讯云AI解决方案 4.4 腾讯云AI案例解析</td></tr><tr><td style="text-align:left">人工智能的发展趋势和行业岗位</td><td style="text-align:left">5%</td><td style="text-align:left">5.1 人工智能的未来发展趋势 5.2 人工智能产业岗位分布 5.3 人工智能典型岗位对能力的要求</td></tr></tbody></table><h2 id="知识点学习">知识点学习</h2><h3 id="1-1-人工智能概述">1.1 人工智能概述</h3><p>发展：</p><ul><li>1936年，图灵发布《论可计算数及其判定问题上的应用》里，提出算法和计算机概念</li><li>1950年，发布论文《计算机器与智能》，提出&quot;图灵测试&quot;</li><li>1956年，美国达特茅斯会议:“人工智能”概念诞生 人工智能(Artificial Intelligence，AI)是研究、开发用于模拟、延伸和扩展人的智能 的理论、方法、技术及应用系统的一门新技术科学。</li></ul><p>人工智能是研究、开发用于<strong>模拟、延伸和扩展人的智能</strong>的理论、方法】技术及应用系统的一门新技术科学。</p><p><strong>三个层面：</strong></p><ul><li>计算智能<ul><li>快速计算和记忆存储</li></ul></li><li>感知智能<ul><li>能听会说，能看会认，视觉听觉触觉等能力。</li></ul></li><li>认知智能<ul><li>能理解、思考、决策</li></ul></li></ul><p><strong>人工智能的应用领域和主流方法：</strong></p><p><img src="https://s1.ax1x.com/2022/11/15/zVnCe1.png" alt="AI基本方法和技术领域"></p><p><strong>人工智能领域常见概念：</strong></p><ul><li><code>人工智能(Artificial intelligence)</code> 人工智能亦称智械、机器智能，指由人制造出来的机器所表现出来的智能。通常人工智能是指通过普通计算机程序来呈现人类智能的技术。</li><li><code>机器学习(Machine learning)</code>： 设计和分析一些让计算机可以自动“学习”的算法。机器学习是一类从数据中自动分析获得规律并利用规律对未知数据进行预测的算法</li><li><code>深度学习(Deep learning)</code>： 深度学习是机器学习中一种基于对数据进行表征学习的算法。深度学习的好处是用非监督式或半监督式的特征学习和分层特征提取高效算法来替代手工获取特征。</li><li><code>神经网络(NN)</code> 现代神经网络是一种非线性统计性数据建模工具，神经网络通常是通过一个基于数学统计学类型的学习方法得以优化，所以也是数学统计学方法的一种实际应用。</li><li><code>监督学习(Supervised learning)</code> 机器学习的一种方法，可以由训练资料中学到 或建立一个模式(函数 / learning model)， 并依此模式推测新的实例。</li><li><code>无监督学习(Unsupervised learning)</code> 机器学习的一种方法，没有给定事先标记过的 训练示例，自动对输入的资料进行分类或分群</li></ul><blockquote><p>监督、无监督：“有答案”去学习还是“没有答案”去学习</p></blockquote><p>从业者推荐入门人工智能路线：</p><p><a href="https://imgse.com/i/zVnO0I"><img src="https://s1.ax1x.com/2022/11/15/zVnO0I.md.png" alt="zVnO0I.md.png"></a></p><h3 id="1-2-人工智能应用">1.2 人工智能应用</h3><p><strong>生活中的人工智能应用：</strong></p><p>指纹识别：指纹采集，指纹评估，提取特征，指纹匹配</p><p>刷脸解锁屏幕：样本采样，图片识别，样本比对</p><p>真人核身检验：</p><ul><li><p>目前活体检测支持光线、读数、动作、静默等多种活体模式</p><ol><li>动作活体: 皱纹</li><li>唇语活体: 数字和唇部口型</li><li>静默活体: 无需交互动作<ul><li>通过检测<code>屏幕摩尔纹</code>、 <code>屏幕边缘检测</code>，通过<code>大量活体</code>和<code>非活体</code>的局部区域训练，实现客户不做动作， 也能判断活体</li></ul></li><li>光线活体: 屏幕发出<code>随机光信号</code>同时采集图像，通过<code>随机光不同的波长</code>，照射脸部，验证 是否为人脸的<code>三维形状和质感</code>，再基于<code>漫反射模型</code>，算法先对人脸上的反射光增量进行建模，提取面部隐式含有的法向量信息，增强并重建人脸深度图。摄像头接收光信号序列，只有当<code>前光特征、序列、面容特性全部匹配</code>，并且验证 <code>采集的时效性</code>，最后与<code>防翻拍</code>进行集合，全部匹配后才会返回成功结果。</li></ol></li><li><p>人脸活体检测主要是通过识别活体上的生理信息来进行，它把生理信息作为生 命特征来区分用照片、硅胶、塑料等非生命物质伪造的生物特征。</p><ul><li><p>介质攻击，类型可以分为三种:</p><p>2D屏幕攻击</p><p>3D立体攻击</p><p>降级攻击</p><ul><li>降级攻击比较特殊，该攻击类型通过<code>镜面反射、投影、 注入等方式，破坏多模态数据之间的一致性，从而绕过部分活体模块，实现安全系统降级，达到攻击的目的</code></li><li>最具挑战性的就是高成本制作的高精头模/面具</li></ul></li></ul></li></ul><p>从行业使用率看，金融行业人工智能使用率最高。</p><p>智慧金融，智慧零售，智慧交通，智慧教育，智慧医疗，智慧制造，智慧健康。</p><p><strong>健康码</strong>：</p><p><a href="https://imgse.com/i/zVMOB9"><img src="https://s1.ax1x.com/2022/11/15/zVMOB9.md.png" alt="zVMOB9.md.png"></a></p><p>背后技术：活体检测技术</p><h3 id="1-3-人工智能产业发展">1.3 人工智能产业发展</h3><p><strong>政策：支持人工智能走向&quot;泛在&quot;</strong></p><p><a href="https://imgse.com/i/zVQe4P"><img src="https://s1.ax1x.com/2022/11/15/zVQe4P.md.png" alt="zVQe4P.md.png"></a></p><p><strong>需求：智能应用场景持续涌现</strong></p><ul><li>转型需求：人口红利转化为创新红利</li><li>场景丰富：超大规模且多样的应用场景</li><li>抗疫加速：黑天鹅事件催生需求。</li></ul><p><strong>供给：智能产业生态不断丰富</strong></p><ul><li>技术：从实验室到商业应用</li><li>数据：数据成为国家生产要素</li><li>时长：供需互促的正向循环</li><li>资本：走出炒作泡沫</li><li>平台：大厂开房平台促进生态</li></ul><h3 id="1-4-人工智能发展的成功要素">1.4 人工智能发展的成功要素</h3><p>三大要素：<strong>算法 + 数据 + 硬件</strong></p><h4 id="算法">算法</h4><p>核心要素：不断优化的人工智能算法。</p><p><a href="https://imgse.com/i/zVQagU"><img src="https://s1.ax1x.com/2022/11/15/zVQagU.md.png" alt="zVQagU.md.png"></a></p><p><strong>AI算法极简史</strong>：</p><ul><li>感知器：1957年<ul><li>算力不足，环境不佳，核冬天。</li></ul></li><li>AI教父：1970年 Geoffrey Hinton 研究神经网络。</li><li>算法长足进步：1986.7</li><li>卷积神经网络：1989，开发</li><li>技术瓶颈：<ul><li>计算机性能不足</li><li>数据流严重缺失</li><li>问题的复杂性</li></ul></li><li>2004年，Hinton改名神经网络为深度学习。</li><li>后面就逐渐起飞咯，老的三巨头也获得了图灵奖。</li></ul><h4 id="数据">数据</h4><p>年均增速极高，</p><p>2005年大数据hadoop技术诞生。</p><p>ImageNet大规模数据集。2009年，李飞飞团队发论文，宣布建立了超大型图像数据库。2010年，以ImageNet 为基础的大型图像识别竞赛第一届举办。</p><p>图像分类：ILSVRC竞赛。深度学习表现优异，错误率只有15.3%</p><blockquote><p>深度学习需要海量数据支持</p></blockquote><h4 id="硬件">硬件</h4><p>高性能芯片组成的计算能力。</p><p>后面神经网络参数太多了，GPU硬件却很适合处理这类数据。</p><p>GPU（Graphics Processing Unit）的主要任务是在最短时间内显示上百万、千万甚至更多的像素。这个计算工作的核心特点是，是要同时并行处理海量的数据。</p><p>一个GPU，往往包含几百个算数逻辑单元（ALU），并行计算能力极强。所以尽管内核的时钟素的往往比CPU的还慢，但对大规模并行处理的计算工作，速度比CPU快很多。</p><blockquote><p>神经网络的计算工作，本质上就是大量的矩阵计算的操作，因此GPU很适合。</p></blockquote><p>英伟达 ALL in AI。</p><h3 id="1-5-人工智能迅速发展的技术领域">1.5 人工智能迅速发展的技术领域</h3><ul><li>计算机视觉</li><li>语音技术</li><li>自然语言处理</li></ul><p><a href="https://imgse.com/i/zVltZd"><img src="https://s1.ax1x.com/2022/11/15/zVltZd.png" alt="zVltZd.png"></a></p><h4 id="计算机视觉">计算机视觉</h4><p>计算机视觉（Computer Vision ，CV）是一门研究如何让计算机达到人类那样”看“的学科。达到一种代替视力的效果。</p><p>主要应用场景：<strong>图像分类，图像重建，目标检测，图像搜索，图像分割，目标跟踪。</strong></p><p>人脸识别：脸部辨识系统。</p><p>图像分类：根据图像的语义信息将不同类别图像区分开来。</p><p>目标检测：旨在从图像中定位感兴趣的目标，准确判定每个目标的类别，并给出每个目标的边界框。难在小目标和多类别物体。</p><p>图像分割：将数字图像细分为多个图像子区域，其目的是简化或改变图像的表示形式。分为大致三类：语义分割，实例分割，全景分割。</p><h4 id="语音技术">语音技术</h4><p>语音技术就是让智能设备能够听得懂人话，也可以让机器说人话的一种技术。涉及数字信号处理，人工智能，语言学等领域。</p><p>主要应用场景：<strong>语音识别，语音合成，声纹识别</strong></p><h4 id="自然语言处理">自然语言处理</h4><p>自然语言处理（Natural Language Processing，NLP）是人工智能和语言学领域的分支学科作为人工智能技术的分支，其使用机器学习来处理和解释文本和数据。自然语言识别和自然语言生成是NLP的类型。目的是用计算机代替人工<strong>处理大规模的自然语言信息</strong>。</p><p>主要应用场景： 文本分类，机器翻译，知识图谱，对话系统，信息检索，文本生成</p><h3 id="1-6-人工智能的基础知识">1.6 人工智能的基础知识</h3><p>人工智能&gt; 机器学习&gt; 深度学习。</p><p><a href="https://imgse.com/i/zV161K"><img src="https://s1.ax1x.com/2022/11/15/zV161K.md.png" alt="zV161K.md.png"></a></p><h4 id="机器学习">机器学习</h4><p>机器学习是对能通过经验自动改进的计算机算法的研究。</p><p>机器学习是用数据或以往的经验，优化计算机程序的性能标准。</p><p><a href="https://imgse.com/i/zV15tI"><img src="https://s1.ax1x.com/2022/11/15/zV15tI.md.png" alt="zV15tI.md.png"></a></p><p>找到不同特征维度，与标签之间的映射关系。</p><p>根据训练数据标签与环境交互的方式分为：监督学习，无监督学习，强化学习。对应 有标签，无标签，动态变化的标签</p><h4 id="深度学习">深度学习</h4><p>一种基于对数据进行表征学习的算法。以神经网络为计算模型。</p><p>深度一般说的是神经网络的层数。权重，神经元数，等为参数。</p><h4 id="深度学习vs机器学习">深度学习vs机器学习</h4><ul><li><strong>特征处理</strong><ul><li>所有机器学习：需要可准确识别且有人工提取的特征。</li><li>仅限深度学习：从数据中习得高级特征，并自行创建新的特征。</li></ul></li><li><strong>学习方法</strong><ul><li>所有机器学习：将学习过程划分为较小的步骤。然后，将每个步骤的结果合并成一个输出。</li><li>仅限深度学习：通过端到端地解决问题来完成学习过程。</li></ul></li><li><strong>数据依赖性</strong><ul><li>所有机器学习：可以使用少规模的数据来做出预测</li><li>仅限深度学习：需要使用大量地训练数据来做出预测</li></ul></li><li><strong>硬件依赖</strong><ul><li>所有机器学习：低端机器即可，无需大量计算能力</li><li>深度学习：大量的矩阵乘法运算的高端机器，GPU，我要GPU!!!</li></ul></li></ul><p><img src="https://s1.ax1x.com/2022/11/15/zV3MjO.png" alt=""></p><h1>腾讯云人工智能从业者认证（TCA）学习笔记（二）</h1><h2 id="知识点学习-2">知识点学习</h2><h3 id="2-1-人工智能项目开发规划与准备">2.1 人工智能项目开发规划与准备</h3><p><strong>人工智能开发周期：</strong></p><p><a href="https://imgse.com/i/zZSrIs"><img src="https://s1.ax1x.com/2022/11/16/zZSrIs.md.png" alt="zZSrIs.md.png"></a></p><p><strong>人工智能项目工作时间统计</strong></p><p>数据准备最久，也很重要。</p><p><a href="https://imgse.com/i/zZpky8"><img src="https://s1.ax1x.com/2022/11/16/zZpky8.md.png" alt="zZpky8.md.png"></a></p><p>目前数据采集渠道已经扩展开来了，有时是受限于时间和算力。在短时间内训练出合适的模型是十分关键的。而现在的深度学习就很对口。</p><h4 id="数据准备：">数据准备：</h4><ul><li>数据采集<ul><li>观测数据：自动化获取，传感器等</li><li>人工收集：低效，灵活</li><li>调查问卷：数字化录入比较搞笑</li><li>线上数据库</li></ul></li><li>数据清洗<ul><li>缺失数据/重复数据/格式错误数据/无用数据</li></ul></li><li>数据标注<ul><li>对数据进行标注特征工作，生成标签文件。</li><li>通过分类、画框、标注、注释等方法。</li></ul></li><li>数据划分<ul><li>训练集：用于完成模型训练任务</li><li>测试集：用于对模型的泛化效果进行检验</li><li>拆分比：根据具体任务而定，一般8：2.</li></ul></li><li>数据验收<ul><li>合法性：数据符合业务规则或约束程度</li><li>准确性：数据接近真实值的程度</li><li>完整性：所有必须数据的已知程度</li><li>一致性：数据在同一数据集内或跨多个数据集的一致程度。</li></ul></li><li>数据管理：<ul><li>有效的存储、处理和应用。让数据产生价值。</li><li><a href="https://imgse.com/i/zZ9uHe"><img src="https://s1.ax1x.com/2022/11/16/zZ9uHe.md.png" alt="zZ9uHe.md.png"></a></li></ul></li><li>数据交付</li></ul><p>与数据相关的问题：</p><ul><li>数据不足</li><li>隐私暴露</li><li>分类质量低<ul><li>数据不平衡</li><li>标签错误、不清晰</li></ul></li><li>数据质量低</li></ul><h4 id="特征工程">特征工程</h4><p>特征工程是指从原始数据转换为特征向量的过程。是机器学习中最重要的起始步骤。</p><p>数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限。</p><p><strong>常用基本方法：</strong></p><ul><li>特征选择：从给定的特征集合中选出相关特征子集。降低学习难度，模型复杂度。可能会降低一定的模型性能</li><li>特征提取：原始数据转换为新的特征。降维之类的方法。</li><li>特征构建：人工构建新特征，需要启发式算法和观察数据。</li></ul><p><a href="https://imgse.com/i/zZVk6A"><img src="https://s1.ax1x.com/2022/11/16/zZVk6A.md.png" alt="zZVk6A.md.png"></a></p><h3 id="2-2-机器学习房价预测具体实例">2.2 机器学习房价预测具体实例</h3><p>任务背景：</p><p>房产中介公司正进行房屋销售过程中，由于房屋价格各不相同，需要针对房屋进行给出一个客观的参考价格。</p><p>任务目标：</p><p>根据已有房产信息训练模型，从而预测新的价格</p><p>任务解析过程:</p><p><a href="https://imgse.com/i/zZVwp4"><img src="https://s1.ax1x.com/2022/11/16/zZVwp4.md.png" alt="zZVwp4.md.png"></a></p><p>同理参考：</p><p><a href="https://cjh0220.github.io/2022/10/30/Titanic%E7%94%9F%E5%AD%98%E9%A2%84%E6%B5%8B%E6%94%BB%E7%95%A5/">Titanic生存预测攻略 | CJH’s blog (cjh0220.github.io)</a></p><h3 id="2-3-深度学习无人小车实例">2.3 深度学习无人小车实例</h3><p>神经网络模型的特点：<strong>端对端学习</strong></p><p>深度学习相比其他方法参数更多，模型更复杂，使得模型对数据理解更深，更智能。</p><p>深度学习就是自动，学习，它能够更适合特征多的模型，比如图像。</p><p>深度学习的特征提取方法：<strong>卷积</strong></p><p>卷积是指在滑动中提取特征的过程，可以形象地理解为用放大镜把每步都放大并且拍下来，再把拍下来的图片拼接成一个新的大图片的过程。</p><p>卷积核会在其经过的所有位置上都重复以上操作，直到把输入特征矩阵转换为另一个二维的特征矩阵。简而言之，输出的特征基本上就是原输入特征的加权和（权重是卷积核自带的值），而从像素位置上看，它们所处的地方大致相同。</p><p>那么为什么输出特征的会落入这个“大致区域”呢？这取决于卷积核的大小。</p><p>卷积核的大小直接决定了在生成输出特征时，它合并了多少输入特征，也就是说：卷积核越小，输入输出的位置越接近；卷积核越大，距离就越远。</p><p>满足“线性” 和“平移不变性”。</p><blockquote><p><a href="https://blog.csdn.net/bitcarmanlee/article/details/54729807">参考博客</a></p><p><a href="https://blog.csdn.net/gyxx1998/article/details/120174325">参考博客2</a>（十分形象）</p></blockquote><h4 id="任务背景">任务背景</h4><p>模拟小车检测交通标志的能力</p><h4 id="任务目标">任务目标</h4><p>在玩具车前置摄像头采集到的图片中，检测交通标志的具体位置。</p><h4 id="任务解析过程">任务解析过程</h4><p>明确数据采集需求 制作数据 模型训练 模型评测</p><h4 id="任务需求数理">任务需求数理</h4><p><a href="https://imgse.com/i/zZn9HI"><img src="https://s1.ax1x.com/2022/11/16/zZn9HI.md.png" alt="zZn9HI.md.png"></a></p><p>一个个确认内容，如赛道样式，光照情况，俯仰角/翻滚角/偏航角范围，交通标志的内容，检测框覆盖分类和范围，最小框尺度，模糊程度要求，设备色差。</p><p><a href="https://imgse.com/i/zZnbrj"><img src="https://s1.ax1x.com/2022/11/16/zZnbrj.md.png" alt="zZnbrj.md.png"></a></p><p>再进行数据标注。labeling工具。会生成txt文件。8：2的划分。</p><h4 id="模型训练">模型训练</h4><p><strong>多隐层的深度神经网络</strong></p><ul><li>为实现目标检测的有效特征识别，构建一个含有多隐藏层的前馈神经网络。</li><li>学习的是神经元中的权重参数，可以看到神经网络模型可以有效的提取出输入图像中的特征信息。</li></ul><p><a href="https://imgse.com/i/zZMpDJ"><img src="https://s1.ax1x.com/2022/11/16/zZMpDJ.md.png" alt="zZMpDJ.md.png"></a></p><p><a href="https://imgse.com/i/zZMPER"><img src="https://s1.ax1x.com/2022/11/16/zZMPER.md.png" alt="zZMPER.md.png"></a></p><h4 id="模型训练过程">模型训练过程</h4><p>精确率（Precision）：在被识别为正分类，确实为正类别的比例是多少？</p><p><strong>预测的准。</strong></p><p>召回率（Recall）：在所有正类别样本中，被正确识别为正类别的比例是多少。<strong>预测的全。</strong></p><p>困难样本检查。</p><p><strong>最后流程总结：</strong></p><p><a href="https://imgse.com/i/zZMl5t"><img src="https://s1.ax1x.com/2022/11/16/zZMl5t.md.png" alt="zZMl5t.md.png"></a></p><h3 id="2-4-人工智能项目开发验收与维护">2.4 人工智能项目开发验收与维护</h3><h4 id="模型性能评估与测试调优">模型性能评估与测试调优</h4><p><strong>分类任务的评价指标</strong></p><ul><li>评价指标<ul><li>评价指标的选择会影响如何测量和比较机器学习算法的性能，也会影响我们在如何权衡结果中不同特征的重要性，和算法最终选择。</li><li>使用不同的性能度量往往会导致不同的评判结果。</li></ul></li><li>模型的泛化性<ul><li>机器学习模型的学习目标是从目标领域内的训练数据到任意其他数据上的性能良好，由此可以在未来对模型没有见过的数据进行预测。</li></ul></li><li>混淆矩阵<ul><li>Confusion matrix：样本的真实分类值作为一个维度，把样本预测分类值作为一个维度。</li><li><a href="https://imgse.com/i/zZlf9x"><img src="https://s1.ax1x.com/2022/11/16/zZlf9x.png" alt="zZlf9x.png"></a></li><li>真正例：预测为正，实际为正</li><li>真反例：预测为反，实际也为反。</li><li>假正例：预测为正，但实际为反</li><li>假反例：预测为反，但实际为正</li></ul></li><li>精确率（Precision）：在所有预测的正类样本中，预测正确的样本所占用的比例。 = 真正例 / （真正例 + 假正例）。 评估 <strong>准不准</strong></li><li>召回率（Recall）：在所有真实类别为正类的样本中，被正确预测为正的样本所占的比例。 =  真正例 / （真正例 + 假反例） 。评估 <strong>全不全</strong></li></ul><p><strong>过拟合与欠拟合</strong></p><p>过拟合：训练数据表现好，未知数据表现差。就是拟合太过分了，也就是泛化性很弱。</p><blockquote><p>解决方法：正则化处罚，数据丰富</p></blockquote><p>欠拟合：训练数据、未知数据表现都差，就是拟合不足，模型性能差。</p><blockquote><p>解决方法：模型复杂，增长训练时间</p></blockquote><p>调参过程：就是先进行模型构建，根据评估，人工设定“超参数”。</p><p><a href="https://imgse.com/i/zZ1bsU"><img src="https://s1.ax1x.com/2022/11/16/zZ1bsU.png" alt="zZ1bsU.png"></a></p><p><code>偏差&amp;方差</code> 偏差的含义：偏差度量了<code>学习算法的期望预测与真实结果的偏离程度</code>，即刻画了学习算法本身的拟合能力。</p><p>个人理解：<code>偏差度量的是单个模型的学习能力，而方差度量的是同一个模型在不同数据集上的稳定性。</code> 使偏差较小，即能够充分拟合数据，使方差较小，即使得数据扰动产生的影响小。</p><p><code>偏差主导了泛化错误率</code>；随着训练程度的加深，学习器的拟合能力逐渐增强，训练数据发生的扰动渐渐能被学习器学到，<code>方差逐渐主导了泛化错误率</code></p><p><code>Bias</code>是用所有可能的训练数据集训练出的所有模型的输出的<code>平均值</code>与真实模型的输出值之间的差异。</p><p><code>Variance</code>是<code>不同的训练数据集训练出的模型输出值之间的差异</code>。</p><h4 id="环境部署">环境部署</h4><p>生产环境是软件持续运行的环境，是最终用户使用的环境。</p><p>开发环境是程序员用于编码、调试和优化代码的环境 。</p><p>单机环境是一台单独相应所有请求和处理的机器；</p><p>分布式环境是多台机器通过相互协调和通信来实现共同目标，通常是通过计算机集群来实现。</p><p><strong>部署流程和挑战：</strong></p><ul><li>数据科学语言管理（开发语言与实际生产使用语言的不同）</li><li>算力和GPU的分配</li><li>可移植性</li><li>可扩展性</li><li>极限状态下机器学习计算。</li></ul><p><a href="https://imgse.com/i/zZ8fCn"><img src="https://s1.ax1x.com/2022/11/16/zZ8fCn.png" alt="zZ8fCn.png"></a></p><h3 id="2-5-机器学习开发框架">2.5 机器学习开发框架</h3><p>机器学习框架本质上是一种编程库或工具，目的是能够让开发人员更容易、更快速地构建机器学习模型。封装了大量可重用代码，可以直接调用。</p><p>本质上，机器学习框架涵盖用于分类、回归、聚类、异常检测和数据准备地各种学习方法。</p><p>机器学习框架有：<strong>Scikit-learn</strong>，Spark Mllib。</p><p>深度学习涵盖许多具有多隐藏层地各类神经网络拓扑。这些层包括模式识别地诸多复杂过程。一般来说，网络中的层数越多，可以提取到用于聚类和分类的特征就越复杂。</p><p>常见深度学习框架有：Caffe，CNTK，<strong>PyTouch</strong>，Keras，MXNet，<strong>TensorFlow</strong>。</p><h5 id="TensorFlow"><strong>TensorFlow</strong></h5><p>TensorFlow目前最流行，是Google地开源深度学习系统，使用<strong>数据流图</strong>的形式进行计算和开发。</p><ul><li>优点：<ul><li>使用人数最多，社区庞大</li><li>工作流程相对容易，API稳定，兼容性好；</li><li>能在各种类型的机器上运行，灵活性高；</li><li>谷歌老板不断完善更新</li></ul></li></ul><p><a href="https://imgse.com/i/zZJ6Yj"><img src="https://s1.ax1x.com/2022/11/16/zZJ6Yj.png" alt="zZJ6Yj.png"></a></p><h5 id="PyTorch">PyTorch</h5><p>简洁！高效！快速！</p><ul><li>PyTorch是由Facebook人工智能研究院退出并且开源的一个深度学习框架。</li><li>优点<ul><li>PyTouch不仅能够实现强大的GPU加速，同时支持动态神经网络；</li><li>追求最少的封装</li><li>设计符合人类思维，它让用户尽可能地专注于实现自己的想法。</li></ul></li></ul><h3 id="2-6-如何使用开源代码仓库">2.6 如何使用开源代码仓库</h3><p>开源软件是源代码可以任意获取的计算机软件，任何人都能查看、修改和分发他们认为合适的代码。</p><p>开源软件依托同行评审和社区生产，皆以分散、协作的方式开发。</p><ul><li>最常用的集中开源协议有:<ul><li>GPL :GNU 通用公共许可协议</li><li>LGPL :GNU 宽通用公共许可协议</li><li>BSD : 伯克利软件分发许可协议</li><li>MIT :MIT 许可协议之名源自麻省理工学院， 又称“X许可协议”或“X11许可协议”</li><li>Apache :Apache 许可协议</li><li>MPL :Mozilla 公共许可协议</li></ul></li><li>Git - 开源的分布式版本控制系统<ul><li><strong>GitHub</strong>:面向开源及私有软件项目的托管平 台 (世界上最大的代码托管平台)</li><li>GitLab:用于仓库管理系统的开源项目 (适合管理团队对仓库的访问)</li><li>Bitbucket:采用 Mercurial 做为分布式版本 控制系统 (无限制的磁盘空间可供使用) •</li><li>CODING: 面向开发者的云端开发平台 (发布以腾讯云云<a href="https://cloud.tencent.com/product/cvm?from=10680">服务器</a>为基础的国内第一款 完全基于云端的 IDE 工具:Cloud Studio， ) •</li><li>Gitee 码云:代码托管协作开发平台 (企业级代码托管服务)</li></ul></li></ul><p><a href="https://imgse.com/i/zZYDjx"><img src="https://s1.ax1x.com/2022/11/16/zZYDjx.png" alt="zZYDjx.png"></a></p><h3 id="2-7-对CPU、GPU与云计算服务的依赖">2.7 对CPU、GPU与云计算服务的依赖</h3><p>CPU</p><ul><li>Central Processing Unit,中央处理器</li><li>CPU是机器的“大脑”</li><li>CPU 擅长处理复杂的逻辑运算和不同的数据类型</li></ul><p>GPU</p><ul><li>Graphics Processing Unit ，图形处理器</li><li>运行绘图运算工作的微处理器</li><li>GPU 擅长图形计算和矩阵运算，加速了人工智能的计算速度</li><li>GPU将在数据中心长足发展。</li></ul><p>NPU、TPU</p><ul><li>其他两种常用的AI计算加速芯片</li><li>TPU是一款为机器学习定制的芯片</li><li>NPU处理器专为物联网人工智能而设计，用于加速神经网络运算。</li></ul><p><strong>AI开发与云计算</strong></p><p><a href="https://imgse.com/i/zZtwdS"><img src="https://s1.ax1x.com/2022/11/16/zZtwdS.png" alt="zZtwdS.png"></a></p><p><a href="https://imgse.com/i/zZt5i4"><img src="https://s1.ax1x.com/2022/11/16/zZt5i4.png" alt="zZt5i4.png"></a></p><h1>腾讯云人工智能从业者认证（TCA）学习笔记（三）</h1><h2 id="3-1-腾讯云AI能力矩阵">3.1 腾讯云AI能力矩阵</h2><h3 id="腾讯云-AI基础算法能力">腾讯云 AI基础算法能力</h3><p><a href="https://imgse.com/i/zZHfiT"><img src="https://s1.ax1x.com/2022/11/16/zZHfiT.md.png" alt="zZHfiT.md.png"></a></p><h3 id="人脸人体技术布局">人脸人体技术布局</h3><p><a href="https://imgse.com/i/zZHXFK"><img src="https://s1.ax1x.com/2022/11/16/zZHXFK.md.png" alt="zZHXFK.md.png"></a></p><blockquote><p>SDK的全称为 Software Development Kit，翻译过来的意思就是软件开发工具包。这是一个覆盖面相当广泛的名词，简单来说就是：辅助开发某一类软件的相关文档、演示举例和一些工具的集合，这些都可以称为 SDK。</p><p>SDK 被开发出来的意义是为了减少开发者的工作量。例如：某公司开发出某种软件的某一功能，将其封装成 SDK（例如数据分析 SDK，就是能够实现数据分析功能的SDK），出售给其他需要的公司使用。这样就可以大大减少开发应用程序的工作量。<br>原文链接：<a href="https://blog.csdn.net/weixin_47340917/article/details/124750420">https://blog.csdn.net/weixin_47340917/article/details/124750420</a></p></blockquote><h4 id="核心算法-人脸检测">核心算法 - 人脸检测</h4><p><strong>技术介绍：</strong></p><p>对任意一副给定的图像，采用一定的策略对其进行搜索以确定其中是否含有人脸，如果是则返回脸的位置、大小和姿态。</p><p><strong>技术优势</strong></p><ul><li>百万级训练样本</li><li>各种实际业务数据，更贴近应用场景</li><li>鲁棒性强。</li></ul><p>核心算法-五官定位</p><p>人脸关键点定位与追踪技术，精确定位并追踪面部的关键区域位置。</p><p>可以用来 五官变换、美化、应用贴纸</p><p><strong>技术指标</strong>：</p><ul><li>90个点五官定位</li><li>普通手机上运行平均耗时&lt;15ms</li><li>模型数据&lt;2MB，可根据不同平台灵活配置，应用范围广。</li></ul><h4 id="核心算法-人脸识别">核心算法-人脸识别</h4><p><strong>人脸验证技术</strong>（1：1验证）：人脸识别技术可以计算出两张人脸照片的相似度，从而判断是否为同一个人，即1：1身份验证。</p><p><strong>人脸检索技术</strong>（1：N检索）：给定一张照片，和数据库中N个人进行对比，给出是否为其中一个人，或给出排序结果。</p><p>技术研发：<strong>深度学习+机器学习</strong></p><p>Face CNN</p><blockquote><p><a href="https://blog.csdn.net/weixin_42137700/article/details/103033052">相关链接</a></p><p><a href="https://blog.csdn.net/moxibingdao/article/details/118166151">腾讯优图TFace</a></p></blockquote><p><strong>技术优势</strong></p><ul><li>自研领先的人脸深度祖母模型，一个基础模型应对所有场景</li><li>模型不断训练</li><li>各种准确率99%多。</li><li>LFW99.80%</li></ul><blockquote><p>LFW(Labled Faces in the Wild) 数据集 主要测试人脸识别的准确率，该数据库从中随机选择了6000对人脸组成了人脸辨识图片对，其中3000对属于同一个人2张人脸照片，3000对属于不同的人每人1张人脸照片。测试过程LFW给出一对照片，询问测试中的系统两张照片是不是同一个人，系统给出“是”或“否”的答案。通过6000对人脸测试结果的系统答案与真实答案的比值可以得到人脸识别准确率。</p><p>可以看出，在LFW 数据库中人脸的光照条件、姿态多种多样，有的人脸还存在部分遮挡的情况，因此识别难度较大。现在， LFW 数据库性能测评已经成为人脸识别算法性能的一个重要指标。这个集合被广泛应用于评价 face verification算法的性能。</p><p><a href="http://t.csdn.cn/utLC6">LFW介绍</a></p></blockquote><h4 id="核心算法-人脸验证">核心算法-人脸验证</h4><p>**技术介绍：**RealFace 是腾讯犹图自研的基于注意力机制的人脸防伪系统，该技术能够对图片或视频中的人脸真伪检测，鉴别是否为伪造人脸（能够支持全脸生成，局部编辑，换脸等多种伪造方式）</p><p>**技术优势：**在谷歌联合建立的FaceForensics Benchmark上达到了综合结果业界第一，并且再Facebook主办的Deepfake Detection Challenge榜单Top1%。</p><p>从人脸伪造的原理和本质出发，结合人脸的RGB特征和SRM特征，能够充分发掘伪造人脸所产生的伪影细节，同时利用注意力机制对人脸视频的空间信息和时序信息进行融合。</p><h4 id="核心算法-人头人体检测跟踪">核心算法-人头人体检测跟踪</h4><p>人体跟踪是对监控影像中人体移动位置的跟踪，技术核心：<strong>多目标关联算法的设计与优化。</strong></p><p>准确率99左右</p><h4 id="核心算法-Reid技术">核心算法-Reid技术</h4><p>人重识别、行人再识别、行人检索或跨境追踪。指对不同摄像头捕捉到的行人间建立身份对应关系，实现对行人行动路线的全面刻画。技术核心：<strong>训练有效的人体表征模型</strong></p><p>技术先进性：设计 corse to fine 的特征金字塔结构，融合part 与global信息设计多任务框架下的交替训练方式，降低陷入局部最优的风险。</p><p>Reid还不太成熟，有期待空间。</p><blockquote><p>corse to fine 二次编码？深度学习一种技术。由粗到精</p></blockquote><h3 id="车辆技术布局">车辆技术布局</h3><p><a href="https://imgse.com/i/zZLsQe"><img src="https://s1.ax1x.com/2022/11/16/zZLsQe.png" alt="zZLsQe.png"></a></p><h4 id="核心算法-多目标检测技术">核心算法-多目标检测技术</h4><p>计算机视觉+深度学习。</p><p>技术介绍：检测图像中的车辆、非机动车和行人目标，输出检测到的各个目标的bounding box 坐标及目标类型。</p><p>技术优势：</p><p>Coarse-to-fine 级联预测、多尺度感受野融合，多种平衡采样策略、高精度优化检测框，兼容不同大小、类型、遮挡情况。</p><h4 id="核心技术-多目标追踪算法">核心技术-多目标追踪算法</h4><p>技术介绍：对于输入的连续视频帧，关联帧与帧的同一目标到相同ID，输出按ID维度组织的一系列目标框轨迹。</p><p><a href="https://imgse.com/i/zZO3kt"><img src="https://s1.ax1x.com/2022/11/16/zZO3kt.png" alt="zZO3kt.png"></a></p><h4 id="核心技术-车辆属性识别技术">核心技术-车辆属性识别技术</h4><p><strong>技术介绍</strong></p><p>对上传车辆，识别车辆的类型、颜色、车系年款等属性标签，以及车牌号码内容。</p><p><strong>技术优势</strong></p><p>识别维度多，支持非配合场景识别。</p><p>可以用“一拍识车小程序”来识别车。也可以用来帮助公安识别嫌疑车辆。</p><h4 id="核心技术-车辆搜索技术">核心技术-车辆搜索技术</h4><p>技术介绍：实现车辆精确搜索，精准发现同一目标车辆，缩小排查范围</p><p>可以在车牌模糊不清被遮挡，甚至车牌丢失的情况下，通过抓取车上的细微特征如划痕、年检标、涂鸦、挂件来锁定目标。</p><h3 id="图像识别技术布局">图像识别技术布局</h3><p><a href="https://imgse.com/i/zZO07n"><img src="https://s1.ax1x.com/2022/11/16/zZO07n.png" alt="zZO07n.png"></a></p><h4 id="核心算法-智能鉴黄">核心算法-智能鉴黄</h4><p><strong>技术介绍</strong></p><p>优图DeepEye 智能鉴黄技术可有效帮助用户鉴别色情图片。目标图片经过系统识别之后，会给出其属于色情图片的概率，对于高置信度直接打击，次高置信度图片可按优先级交付人工审核。</p><p><strong>技术优势</strong></p><p>1、双深度网络模型级联结构，兼顾效果和性能 <strong>双模型级联架构</strong>，以及模型重点提升性价比，专注快速排除正常片，二级模型专注于细粒度鉴别可疑样本，兼顾了效果与性能。</p><p>2、高效的深度网络模型压缩和加速技术</p><p>3、训练、使用、优化形成完整迭代闭环</p><p>4、公开数据集上效果领先。</p><h4 id="核心技术-暴恐图片识别">核心技术-暴恐图片识别</h4><p>对用户上传的图片进行自动审核，返回“疑似暴恐”的字段，对疑似图片进行自动打击。</p><p><strong>技术优势</strong></p><p>主动学习机制帮助提升冷门标签效果</p><p>基于自研深度卷积神经网络的暴恐多标签分类。</p><p><a href="https://imgse.com/i/ze3Ngx"><img src="https://s1.ax1x.com/2022/11/17/ze3Ngx.png" alt="ze3Ngx.png"></a></p><h4 id="核心算法-货架商品识别">核心算法-货架商品识别</h4><p>图像识别技术，对开放式货架的陈列进行自动化检测，与人工智能相结合、快速、精准的记录与分析。</p><p><strong>细粒度识别技术</strong>，SKU识别技术</p><blockquote><p>SKU=Stock Keeping Unit(库存量单位)<br>用以区别开这些不同商品的属性，又称作SKU属性，因为它决定了SKU的绝对数量。SKU这是对于大型连锁超市DC(配送中心)物流管理的一个必要的方法。现在已经被引申为产品统一编号的简称，每种产品均对应有唯一的SKU号。单品:对一种商品而言，当其品牌、型号、配置、等级、花色、包装容量、单位、生产日期、保质期、用途、价格、产地等属性与其他商品存在不同时，可称为一个单品</p><p>一个商品SKU，表示该<strong>商品关联的若干SKU属性的的属性值的某个组合所形成的子实体</strong>。<br>如对应上面的例子，其中的一种组合 XL + 红色 就会形成一个商品SKU。然后，我们可以在该实体上管理价格、库存、专门的图片等信息。</p><p>举例：iPhone13 和iPhone13plus 是不同的SKU；<br>同是iPhone13，白色和黑色也是分属不同的SKU；<br>同是iPhone13白色，但一个是16G，另一个是32G内存，它们也还是分属不同的SKU</p></blockquote><h3 id="文字识别技术布局">文字识别技术布局</h3><p><a href="https://imgse.com/i/ze37Ps"><img src="https://s1.ax1x.com/2022/11/17/ze37Ps.png" alt="ze37Ps.png"></a></p><h4 id="核心算法-通用OCR识别">核心算法-通用OCR识别</h4><p>融合深度学习技术，研发出业界领先的OCR识别模型，支持多种场景、任意版面的整图文字识别，返回文字内容、单字位置及角度等。</p><ul><li>场景覆盖全，通用性好</li><li>计算速度快，效率高</li><li>手写识别体显著领先</li><li>客户实战场景广泛应用，经过海量服务检验。</li></ul><blockquote><p>OCR （Optical Character Recognition，光学字符识别）是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，经过检测暗、亮的模式肯定其形状，而后用字符识别方法将形状翻译成计算机文字的过程；即，针对印刷体字符，采用光学的方式将纸质文档中的文字转换成为黑白点阵的图像文件，并经过识别软件将图像中的文字转换成文本格式，供文字处理软件进一步编辑加工的技术。<br><a href="http://t.csdn.cn/pfRbx">推荐博客</a></p></blockquote><h4 id="核心算法-OCR垂直场景">核心算法-OCR垂直场景</h4><p>基于OCR算法，拓展各垂直场景能力。</p><h3 id="产业中AI技术主要解决的应用场景">产业中AI技术主要解决的应用场景</h3><p><a href="https://imgse.com/i/ze5bMn"><img src="https://s1.ax1x.com/2022/11/17/ze5bMn.png" alt="ze5bMn.png"></a></p><h3 id="AI业务现状：">AI业务现状：</h3><h4 id="碎片化">碎片化</h4><p><a href="https://imgse.com/i/zeISG4"><img src="https://s1.ax1x.com/2022/11/17/zeISG4.png" alt="zeISG4.png"></a></p><p>算法跟进不断，AI落地很难。</p><h4 id="机器学习收益慢">机器学习收益慢</h4><p><a href="https://imgse.com/i/zeIEdK"><img src="https://s1.ax1x.com/2022/11/17/zeIEdK.png" alt="zeIEdK.png"></a></p><h4 id="从0交付AI应用太麻烦">从0交付AI应用太麻烦</h4><p><a href="https://imgse.com/i/zeInRH"><img src="https://s1.ax1x.com/2022/11/17/zeInRH.png" alt="zeInRH.png"></a></p><h3 id="应对挑战：全栈AI平台，实现AI落地各环节要素的高效配合">应对挑战：全栈AI平台，实现AI落地各环节要素的高效配合</h3><p><a href="https://imgse.com/i/zeIQsI"><img src="https://s1.ax1x.com/2022/11/17/zeIQsI.png" alt="zeIQsI.png"></a></p><p><a href="https://imgse.com/i/zeoMhF"><img src="https://s1.ax1x.com/2022/11/17/zeoMhF.png" alt="zeoMhF.png"></a></p><p>避免重复造轮子，还可以生产新的模型。</p><h3 id="！腾讯云全栈-AI平台智能钛">！腾讯云全栈 AI平台智能钛</h3><p><a href="https://imgse.com/i/zeTiE6"><img src="https://s1.ax1x.com/2022/11/17/zeTiE6.png" alt="zeTiE6.png"></a></p><h4 id="快速理解AI基础平台">快速理解AI基础平台</h4><p><a href="https://imgse.com/i/zeTuDI"><img src="https://s1.ax1x.com/2022/11/17/zeTuDI.png" alt="zeTuDI.png"></a></p><p>数据中心+ 训练工坊 + 自动学习+模型管理+模型服务+应用服务编排 + 应用中心+管理中心</p><p><a href="https://imgse.com/i/zeHrjJ"><img src="https://s1.ax1x.com/2022/11/17/zeHrjJ.png" alt="zeHrjJ.png"></a></p><h2 id="3-2-腾讯云AI解决方案">3.2 腾讯云AI解决方案</h2><h3 id="AI-泛娱乐">AI+泛娱乐</h3><p><a href="https://imgse.com/i/zeOlan"><img src="https://s1.ax1x.com/2022/11/17/zeOlan.png" alt="zeOlan.png"></a></p><h3 id="AI-泛互">AI+ 泛互</h3><p><a href="https://imgse.com/i/zeOIit"><img src="https://s1.ax1x.com/2022/11/17/zeOIit.png" alt="zeOIit.png"></a></p><h4 id="AI-政务">AI + 政务</h4><p><a href="https://imgse.com/i/zeX9zT"><img src="https://s1.ax1x.com/2022/11/17/zeX9zT.png" alt="zeX9zT.png"></a></p><h4 id="AI-工业">AI+ 工业</h4><p><a href="https://imgse.com/i/zeXEw9"><img src="https://s1.ax1x.com/2022/11/17/zeXEw9.png" alt="zeXEw9.png"></a></p><h4 id="AI-支付">AI+ 支付</h4><h4 id="AI-文旅">AI+ 文旅</h4><h4 id="AI-教育">AI+ 教育</h4><h4 id="AI-金融">AI+ 金融</h4><h4 id="AI-广电">AI+ 广电</h4><h4 id="AI-硬件">AI+ 硬件</h4><p>总之就是一大堆领域</p><h2 id="3-3-腾讯云AI案例解析">3.3 腾讯云AI案例解析</h2><p>内容安全。</p><p>工业视觉场景</p><p>各种具体情况处置。</p><h1>腾讯云人工智能从业者认证（TCA）学习笔记（四）</h1><h2 id="4-1-人工智能的未来发展趋势">4.1 人工智能的未来发展趋势</h2><ul><li><strong>自动机器学习的自动化程度与可解释性得到进一步提升</strong><ul><li>自动机器学习将实现对机器学习涉及的每个环节的真正的自动化设计过程。</li><li>自动机器学习、将推动新一代普适性AutoML平台的建设，并实现机器学习的大众化。</li></ul></li><li>无监督/弱监督学习逐渐成为企业降本增效新利器。<ul><li>无监督学习和弱监督学习通过不使用标签或减少对标签数量、质量的要求来迅速降低深度模型对于数据的标注要求。</li><li>未来将有越来越多的AI企业会面临从前期的迅速扩张到稳定高效化运作的新阶段，无监督/弱监督学习将成为他们过渡到这个阶段的重要手段之一。</li></ul></li><li>3D视觉技术助力产业消费升级，淡化虚实边界。</li><li>多模态融合加速AI认知升维。</li><li>人工智能推动数字内容生成向新范式演进。</li><li>人工智能内核芯片向类脑神经计算方向演进。</li><li>算法公平性研究推动AI应有走向普惠无偏见。</li><li>隐私保护AI落地实用帮助算法可持续进化</li><li>人工智能技术向安全智能方向迈进</li></ul><h2 id="4-2-人工智能产业岗位分布。">4.2 人工智能产业岗位分布。</h2><h3 id="人工智能产业技术架构">人工智能产业技术架构</h3><p><a href="https://imgse.com/i/zmSbQ0"><img src="https://s1.ax1x.com/2022/11/17/zmSbQ0.png" alt="zmSbQ0.png"></a></p><h3 id="技术岗位分布！！！">技术岗位分布！！！</h3><p><a href="https://imgse.com/i/zmpHtH"><img src="https://s1.ax1x.com/2022/11/17/zmpHtH.png" alt="zmpHtH.png"></a></p><p><a href="https://imgse.com/i/zmpXct"><img src="https://s1.ax1x.com/2022/11/17/zmpXct.png" alt="zmpXct.png"></a></p><h2 id="4-3-人工智能典型岗位对能力的要求">4.3 人工智能典型岗位对能力的要求</h2><p>四类：</p><ul><li>综合能力</li><li>专业知识能力</li><li>技能能力</li><li>工程实践能力</li></ul><h3 id="智能芯片岗位要求：">智能芯片岗位要求：</h3><p><a href="https://imgse.com/i/zYJluV"><img src="https://s1.ax1x.com/2022/11/25/zYJluV.png" alt="zYJluV.png"></a></p><h3 id="机器学习岗位要求：">机器学习岗位要求：</h3><p><a href="https://imgse.com/i/zYJ1BT"><img src="https://s1.ax1x.com/2022/11/25/zYJ1BT.png" alt="zYJ1BT.png"></a></p><h3 id="深度学习岗位要求：">深度学习岗位要求：</h3><p><img src="https://s3.bmp.ovh/imgs/2022/11/17/6c436365fb3cb449.png" alt=""><br>](<a href="https://imgse.com/i/zYJGEF">https://imgse.com/i/zYJGEF</a>)</p><h3 id="智能语音岗位需求：">智能语音岗位需求：</h3><p><a href="https://imgse.com/i/zYJY4J"><img src="https://s1.ax1x.com/2022/11/25/zYJY4J.png" alt="zYJY4J.png"></a></p><h3 id="计算机视觉岗位需求：">计算机视觉岗位需求：</h3><p><img src="https://s3.bmp.ovh/imgs/2022/11/17/9a5c5122926b0f1d.png" alt=""></p><h3 id="NLP自然语言处理人才要求">NLP自然语言处理人才要求</h3><p><a href="https://imgse.com/i/zYJsED"><img src="https://s1.ax1x.com/2022/11/25/zYJsED.png" alt="zYJsED.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 腾讯实验班 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取豆瓣各类别书籍及处理数据（全流程）</title>
      <link href="/2022/11/08/%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E5%90%84%E7%B1%BB%E5%88%AB%E4%B9%A6%E7%B1%8D%E5%8F%8A%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%EF%BC%88%E5%85%A8%E6%B5%81%E7%A8%8B%EF%BC%89/"/>
      <url>/2022/11/08/%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E5%90%84%E7%B1%BB%E5%88%AB%E4%B9%A6%E7%B1%8D%E5%8F%8A%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%EF%BC%88%E5%85%A8%E6%B5%81%E7%A8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>豆瓣作为爬虫手们的入手网站，十分的受欢迎。这次我使用xpath这个简单的技术进行爬取。目的就是为了给数据库大作业–图书管理系统做铺垫。本次代码大概花了我4个小时，主要是中间处理数据的时候失误了，有时是标点错误，以及忘记错误处理这种好方法，最终我们爬取了将近12000本书，处理之后得到6983本书，足够我们使用。</p><p>使用工具如下：</p><p>windows 11</p><p>python 3.9</p><p>Microsoft Edge</p><p>pandas（数据处理）</p><p>math（数学计算）</p><p>time（时间库，休眠用防封IP）</p><p>requests（请求库）</p><p>lxml.etree（html文本转化）</p><p>所爬取网站（按顺序）为：</p><p><a href="https://book.douban.com/tag/">豆瓣图书标签 (douban.com)</a></p><p><a href="https://book.douban.com/tag/%E5%B0%8F%E8%AF%B4?start=20&amp;type=T">豆瓣图书标签: 小说 (douban.com)</a></p><h1>2 引入相关库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;User-Agent:Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://book.douban.com/tag&#x27;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>3 爬取标签</h1><blockquote><p>首先我们需要先观察豆瓣网站的网页结构。</p></blockquote><p>操作如下：</p><p>1、进入网站<a href="https://book.douban.com/tag/">豆瓣图书标签 (douban.com)</a></p><p>2、使用‘F12’打开开发者工具。网站样式如下：</p><p><a href="https://imgse.com/i/xzAYmq"><img src="https://s1.ax1x.com/2022/11/08/xzAYmq.md.png" alt="xzAYmq.md.png"></a></p><blockquote><p>我们需要按照大的标题 文学，流行，之后爬取小的标题，一行4个以下，且最好把括号内，书的个数也爬了，后面可以改善爬书的个数，就不会不平等。</p></blockquote><p>3、使用crtl + shirt + c 或者点击开发者工具左上角的小爬取标签。</p><p>之后你的光标就可以点击你想爬取的内容，在左侧开发者工具栏中，就会跳转到对应的元素代码。</p><p><a href="https://imgse.com/i/xzEegJ"><img src="https://s1.ax1x.com/2022/11/08/xzEegJ.md.png" alt="xzEegJ.md.png"></a></p><p>4、根据html排版，找到具体内容。进行爬取，对其右键 复制元素 完整的 xpath路径。</p><blockquote><p>你也可以先使用xpath函数，先往前推进一部分html代码。</p></blockquote><p>具体xpath如何使用，请看：</p><p><a href="https://blog.csdn.net/weixin_46297209/article/details/110127127"> 爬虫之Xpath便捷获取页面元素_猿心不灭的博客-CSDN博客_xpath提取元素</a></p><p>得到代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_categories</span>(<span class="params">url,headers</span>):</span><br><span class="line">    res = requests.get(url,headers=headers)</span><br><span class="line">    html = res.text</span><br><span class="line">    xp = etree.HTML(html)</span><br><span class="line">    lis = xp.xpath(<span class="string">&#x27;/html/body/div[3]/div[1]/div/div[1]/div[2]&#x27;</span>)<span class="comment">## 找大头</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 大分类</span></span><br><span class="line">    big_categories = []</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lis:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">6</span>):</span><br><span class="line">            a = li.xpath(<span class="string">&#x27;div/a/h2/text()&#x27;</span>)[i].strip().replace(<span class="string">&quot;·&quot;</span>,<span class="string">&quot;\t&quot;</span>).split(<span class="string">&quot;\t&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            big_categories.append(a)</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 细分类</span></span><br><span class="line">    small_categories = []</span><br><span class="line">    small_categories_num = [] <span class="comment">#书数</span></span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lis: </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>): <span class="comment"># 总共6个大类</span></span><br><span class="line">            tr_len = <span class="built_in">len</span>(li.xpath(<span class="string">&#x27;div[&#123;0&#125;]/table/tbody/tr&#x27;</span>.<span class="built_in">format</span>(i))) <span class="comment"># 查看有几行</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, tr_len + <span class="number">1</span>):  <span class="comment"># 遍历行</span></span><br><span class="line">                td_len = <span class="built_in">len</span>(li.xpath(<span class="string">&#x27;div[&#123;0&#125;]/table/tbody/tr[&#123;1&#125;]/td&#x27;</span>.<span class="built_in">format</span>(i,j)))</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, td_len + <span class="number">1</span>): <span class="comment"># 遍历个数 小于等于4</span></span><br><span class="line">                    small_category = li.xpath(<span class="string">&#x27;div[&#123;0&#125;]/table/tbody/tr[&#123;1&#125;]/td[&#123;2&#125;]/a/text()&#x27;</span>.<span class="built_in">format</span>(i,j,k))[<span class="number">0</span>].strip()</span><br><span class="line">                    small_category_num = li.xpath(<span class="string">&#x27;div[&#123;0&#125;]/table/tbody/tr[&#123;1&#125;]/td[&#123;2&#125;]/b/text()&#x27;</span>.<span class="built_in">format</span>(i,j,k))[<span class="number">0</span>].strip().replace(<span class="string">&quot;(&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;)&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">                    small_categories.append(small_category)</span><br><span class="line">                    small_categories_num.append(<span class="built_in">int</span>(small_category_num))</span><br><span class="line">                    </span><br><span class="line">    <span class="keyword">return</span> (big_categories,small_categories,small_categories_num) <span class="comment"># 返回三组内容</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">big_categories,small_categories,small_categories_num = get_categories(<span class="string">&#x27;https://book.douban.com/tag/&#x27;</span>,headers)</span><br></pre></td></tr></table></figure><p>结果如下</p><p><a href="https://imgse.com/i/xzE0VP"><img src="https://s1.ax1x.com/2022/11/08/xzE0VP.md.png" alt="xzE0VP.md.png"></a></p><h1>4 爬取对应书籍</h1><p>观察发现每个类别的网站名称为：</p><p><code>https://book.douban.com/tag/XX?start=JJ&amp;type=T</code></p><p>其中的<code>XX</code>代表标签的中文，<code>JJ</code>代表20的整数倍。也就是每一页一共20本书。</p><p>我们以”流俗地“这本书为例子，仔细观察右侧的元素表：</p><p><a href="https://imgse.com/i/xzVkqI"><img src="https://s1.ax1x.com/2022/11/08/xzVkqI.md.png" alt="xzVkqI.md.png"></a></p><p>其中，图片链接在 div class = 'pic '中 文字信息在 div class = 'info ’ 中。</p><p>对各个数据进行爬取。包含数据及注意事项如下：</p><ul><li>img_id: 图片的地址。藏在img的src属性下。</li><li>book_id: 图书id</li><li>book_address: 图书的豆瓣详情链接</li><li>star_score: 评分数。注意有些图书因为图书评分人数过少，而不显示评分。</li><li>star_nums: 评分人数：我们应该要找到对应的人数，需要对字符串做处理。</li><li>author_country: 根据豆瓣显示，国籍基本在<code>[]和【】</code>这两个框里，可以使用字符串处理，不过有非常多的特殊情况。而且外国书籍还会出现翻译者。</li><li>tranlator_name :翻译者</li><li>book_press : 出版社</li><li>book_time: 出版时间</li><li>book_money: 书的价格。由于有美元日元等等一系列，所以判定比较复杂，直接导入字符串吧。</li><li>book_abstraction：书的摘要。</li></ul><p><strong>重点！！！！</strong></p><p>以上的数据部分都可能会出现并不存在于HTML结构中，再循环爬取的途中，可能会因为不存在而产生报错。</p><p>最好使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    do</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    do</span><br></pre></td></tr></table></figure><p>这一方法来”逃避“错误。</p><p>代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">find_book</span>(<span class="params">headers ,small_categories, small_categories_num</span>):</span><br><span class="line">    bookdatas = pd.DataFrame(columns=[<span class="string">&#x27;book_id&#x27;</span>,<span class="string">&#x27;book_type&#x27;</span>,<span class="string">&#x27;book_name&#x27;</span>,<span class="string">&#x27;book_address&#x27;</span>,<span class="string">&#x27;img_id&#x27;</span>,<span class="string">&#x27;star_score&#x27;</span>,<span class="string">&#x27;star_nums&#x27;</span>,<span class="string">&#x27;author_country&#x27;</span>,<span class="string">&#x27;author_name&#x27;</span>,<span class="string">&#x27;translator_name&#x27;</span>,<span class="string">&#x27;book_press&#x27;</span>,<span class="string">&#x27;book_time&#x27;</span>,<span class="string">&#x27;book_money&#x27;</span>,<span class="string">&#x27;book_abstraction&#x27;</span>])</span><br><span class="line">    new_num = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> small_categories_num:</span><br><span class="line">        new_num.append(<span class="built_in">int</span>(<span class="number">100</span>))</span><br><span class="line">        <span class="comment">#new_num.append(int(((((int(math.log(i,1.2)*5))//40)+1)*20)))</span></span><br><span class="line">    no = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> small_categories:</span><br><span class="line">        no = <span class="number">0</span></span><br><span class="line">        book_type = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,new_num[no],<span class="number">20</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125;     &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(i,j))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                url = <span class="string">&#x27;https://book.douban.com/tag/&#123;0&#125;?start=&#123;1&#125;&amp;type=T&#x27;</span>.<span class="built_in">format</span>(i,j)</span><br><span class="line">                res = requests.get(url,headers=headers)    </span><br><span class="line">                html = res.text</span><br><span class="line">                xp = etree.HTML(html)</span><br><span class="line">                li = xp.xpath(<span class="string">&#x27;/html/body/div[3]/div[1]/div/div[1]/div/ul&#x27;</span>)</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>):</span><br><span class="line">                    img_id = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_id = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_address = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    star_score = <span class="number">0</span></span><br><span class="line">                    star_nums = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    author_country = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    author_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    translator_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_press = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_time = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_money = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    book_abstraction = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                    <span class="comment"># 照片地址</span></span><br><span class="line">                    img_id = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[1]/a/img/@src&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip()</span><br><span class="line">                    <span class="comment"># 图书ID</span></span><br><span class="line">                    book_id = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[1]/a/@href&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip().split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                    <span class="comment"># 图书地址</span></span><br><span class="line">                    book_address = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[1]/a/@href&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip()</span><br><span class="line">                    <span class="comment"># 图书名字</span></span><br><span class="line">                    book_name = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/h2/a/text()&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 评分</span></span><br><span class="line">                    <span class="keyword">if</span> li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/div[2]/span[2]/text()&#x27;</span>.<span class="built_in">format</span>(k)):</span><br><span class="line">                        star_score = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/div[2]/span[2]/text()&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip()</span><br><span class="line">                        star_score = <span class="built_in">float</span>(star_score)</span><br><span class="line">                    <span class="keyword">else</span> :</span><br><span class="line">                        star_score = <span class="built_in">float</span>(<span class="number">6.0</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 评分人数</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">                        star_nums = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/div[2]/span[3]/text()&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip().split(<span class="string">&#x27;人&#x27;</span>)[<span class="number">0</span>].replace(<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;少于&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        <span class="built_in">print</span>(star_nums)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        star_nums = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">                        <span class="built_in">print</span>(star_nums)</span><br><span class="line">                    star_nums = <span class="built_in">int</span>(star_nums)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 国家 作者名 编译者 出版社 时间 价格</span></span><br><span class="line">                    olddata = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/div[1]/text()&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip().replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                    newdata = olddata.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(newdata) == <span class="number">4</span>:</span><br><span class="line">                        author_country = <span class="string">&#x27;中&#x27;</span></span><br><span class="line">                        author_name = newdata[<span class="number">0</span>]</span><br><span class="line">                        translator_name = author_name</span><br><span class="line">                        book_press = newdata[<span class="number">1</span>]</span><br><span class="line">                        book_time = newdata[<span class="number">2</span>]</span><br><span class="line">                        book_money = newdata[<span class="number">3</span>].split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">len</span>(newdata) == <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> newdata[<span class="number">0</span>].find(<span class="string">&#x27;]&#x27;</span>) != -<span class="number">1</span>:</span><br><span class="line">                            author_country = newdata[<span class="number">0</span>].split(<span class="string">&#x27;]&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;[&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">                            author_name = newdata[<span class="number">0</span>].split(<span class="string">&#x27;]&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">                        <span class="keyword">elif</span> newdata[<span class="number">0</span>].find(<span class="string">&#x27;】&#x27;</span>) != -<span class="number">1</span>:</span><br><span class="line">                            author_country = newdata[<span class="number">0</span>].split(<span class="string">&#x27;】&#x27;</span>)[<span class="number">0</span>].split(<span class="string">&#x27;【&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">                            author_name = newdata[<span class="number">0</span>].split(<span class="string">&#x27;】&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            author_name =  newdata[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                        translator_name = newdata[<span class="number">1</span>]</span><br><span class="line">                        book_press = newdata[<span class="number">2</span>]</span><br><span class="line">                        book_time = newdata[<span class="number">3</span>]</span><br><span class="line">                        book_money = newdata[<span class="number">4</span>].split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 摘要</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        book_abstraction = li[<span class="number">0</span>].xpath(<span class="string">&#x27;li[&#123;0&#125;]/div[2]/p/text()&#x27;</span>.<span class="built_in">format</span>(k))[<span class="number">0</span>].strip()</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        book_abstraction = <span class="string">&#x27;暂无摘要&#x27;</span></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">print</span>(book_name)</span><br><span class="line">                    bookdata_1 = [book_id,book_type,book_name, book_address,img_id,star_score,star_nums,author_country,author_name,translator_name,book_press,book_time,book_money,book_abstraction]</span><br><span class="line">                    bookdata_1 = pd.DataFrame([bookdata_1],columns=[<span class="string">&#x27;book_id&#x27;</span>,<span class="string">&#x27;book_type&#x27;</span>,<span class="string">&#x27;book_name&#x27;</span>,<span class="string">&#x27;book_address&#x27;</span>,<span class="string">&#x27;img_id&#x27;</span>,<span class="string">&#x27;star_score&#x27;</span>,<span class="string">&#x27;star_nums&#x27;</span>,<span class="string">&#x27;author_country&#x27;</span>,<span class="string">&#x27;author_name&#x27;</span>,<span class="string">&#x27;translator_name&#x27;</span>,<span class="string">&#x27;book_press&#x27;</span>,<span class="string">&#x27;book_time&#x27;</span>,<span class="string">&#x27;book_money&#x27;</span>,<span class="string">&#x27;book_abstraction&#x27;</span>])</span><br><span class="line">                    bookdatas = bookdatas.append(bookdata_1)</span><br><span class="line">                    time.sleep(<span class="number">0.05</span>) <span class="comment"># 如果不休眠的话，可能会被封ip</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        no = no + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> bookdatas</span><br><span class="line">        </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">book_datas = find_book(headers ,small_categories, small_categories_num)</span><br></pre></td></tr></table></figure><p>得到数据需要大概25分钟。</p><h1>5 数据处理和保存</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">book_datas.to_excel(<span class="string">&#x27;bookdatas.xlsx&#x27;</span>,index = <span class="literal">False</span>)</span><br><span class="line">book_datas.to_csv(<span class="string">&#x27;bookdatas.csv&#x27;</span>,index = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>由于爬取时意外性很强，可以使用to_excel 导出至excel文件里，这样可以在excel里观察数据。</p><p><a href="https://imgse.com/i/xzeVC8"><img src="https://s1.ax1x.com/2022/11/08/xzeVC8.md.png" alt="xzeVC8.md.png"></a></p><p>excel观察发现，还是存在大量，空白值和重复值，以及特殊值。</p><p>也可以使用<code>book_datas.info()</code> 和<code>book_datas.head(10)</code>这些命令来观察。</p><p>不过我们已经超量爬取了数据，可以直接把这些数据去除。这是最懒最省事的方法hhhh。</p><p>而且book_time出现一些错位数据，管他的，直接删掉吧，反正出版时间在未来数据库中也没啥用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">book_datas = pd.read_csv(<span class="string">&#x27;bookdatas.csv&#x27;</span>)</span><br><span class="line"><span class="keyword">del</span>(book_datas[<span class="string">&#x27;book_time&#x27;</span>])</span><br><span class="line">book_datas.info()</span><br><span class="line"></span><br><span class="line">book_datas_1 = book_datas .drop_duplicates(subset=[<span class="string">&#x27;book_id&#x27;</span>], keep=<span class="string">&#x27;first&#x27;</span>)<span class="comment"># 删除重复值</span></span><br><span class="line">book_datas_2 = book_datas_1.dropna(axis=<span class="number">0</span>, how=<span class="string">&#x27;any&#x27;</span>)  <span class="comment"># 删除含有空白的行</span></span><br><span class="line">book_datas_2.to_csv(<span class="string">&#x27;book_data_2.csv&#x27;</span>)</span><br><span class="line">book_datas_2.to_excel(<span class="string">&#x27;book_data_2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><p>book_datas_2就是我们最终的数据。</p>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pymysql操作</title>
      <link href="/2022/11/08/pymysql%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/11/08/pymysql%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/139763027">Python进阶知识全篇-MySQL（PyMySQL） - 知乎 (zhihu.com)</a></p><h3 id="什么是-PyMySQL？">什么是 PyMySQL？</h3><p>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中则使用mysqldb。</p><p>PyMySQL 遵循 Python 数据库 API v2.0 规范，并包含了 pure-Python MySQL 客户端库。</p><h2 id="PyMySQL-安装">PyMySQL 安装</h2><p>在使用 PyMySQL 之前，我们需要确保 PyMySQL 已安装。</p><p>PyMySQL 下载地址：<a href="https://link.zhihu.com/?target=https%3A//github.com/PyMySQL/PyMySQL">https://github.com/PyMySQL/PyMySQL</a>。</p><p>如果还未安装，我们可以使用以下命令安装最新版的 PyMySQL：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install PyMySQL</span><br></pre></td></tr></table></figure><p>如果你的系统不支持 pip 命令，可以使用以下方式安装：</p><p>1、使用 git 命令下载安装包安装(你也可以手动下载)：</p><blockquote><p>$ git clone <a href="https://link.zhihu.com/?target=https%3A//github.com/PyMySQL/PyMySQL">https://github.com/PyMySQL/PyMySQL</a><br>$ cd PyMySQL/<br>$ python3 <a href="http://setup.py">setup.py</a> install</p></blockquote><p>2、如果需要制定版本号，可以使用 curl 命令来安装：</p><blockquote><p>$ # X.X 为 PyMySQL 的版本号<br>$ curl -L <a href="https://link.zhihu.com/?target=https%3A//github.com/PyMySQL/PyMySQL/tarball/pymysql-X.X">https://github.com/PyMySQL/PyMySQL/tarball/pymysql-X.X</a> | tar xz<br>$ cd PyMySQL*<br>$ python3 <a href="http://setup.py">setup.py</a> install<br>$ # 现在你可以删除 PyMySQL* 目录</p></blockquote><p>**注意：**请确保您有root权限来安装上述模块。</p><blockquote><p><em>安装的过程中可能会出现&quot;ImportError: No module named setuptools&quot;的错误提示，意思是你没有安装setuptools，你可以访问https://pypi.python.org/pypi/setuptools</em> <em>找到各个系统的安装方法。</em></p></blockquote><p><em><strong>Linux 系统安装实例：</strong></em></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">$ python3 ez_setup.py</span><br></pre></td></tr></table></figure><h2 id="数据库连接">数据库连接</h2><p>连接数据库前，请先确认以下事项：</p><ul><li>您已经创建了数据库 TESTDB.</li><li>在TESTDB数据库中您已经创建了表 EMPLOYEE</li><li>EMPLOYEE表字段为 FIRST_NAME, LAST_NAME, AGE, SEX 和 INCOME。</li><li>连接数据库TESTDB使用的用户名为 “testuser” ，密码为 “test123”,你可以可以自己设定或者直接使用root用户名及其密码，Mysql数据库用户授权请使用Grant命令。</li><li>在你的机子上已经安装了 Python MySQLdb 模块。</li></ul><h3 id="实例：">实例：</h3><p>以下实例链接 Mysql 的 TESTDB 数据库：</p><p><strong>实例(Python 3.0+):</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用 cursor() 方法创建一个游标对象</span><br><span class="line">cursorcursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># 使用 execute()  方法执行 SQL 查询 </span><br><span class="line">cursor.execute(&quot;SELECT VERSION()&quot;)</span><br><span class="line"></span><br><span class="line"># 使用 fetchone() 方法获取单条数据.</span><br><span class="line">data = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">print(&quot;Database version : %s &quot; % data)#</span><br><span class="line"></span><br><span class="line"> 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>执行以上脚本输出结果如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Database version : 5.5.20-log</span><br></pre></td></tr></table></figure><h2 id="创建数据库表">创建数据库表</h2><p>如果数据库连接存在我们可以使用execute()方法来为数据库创建表，如下所示创建表EMPLOYEE：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用 cursor() 方法创建一个游标对象 </span><br><span class="line">cursorcursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># 使用 execute() 方法执行 SQL，如果表存在则删除</span><br><span class="line">cursor.execute(&quot;DROP TABLE IF EXISTS EMPLOYEE&quot;)</span><br><span class="line"></span><br><span class="line"># 使用预处理语句创建表</span><br><span class="line">sql = &quot;&quot;&quot;CREATE TABLE EMPLOYEE (</span><br><span class="line">              FIRST_NAME  CHAR(20) NOT NULL,</span><br><span class="line">              LAST_NAME  CHAR(20),</span><br><span class="line">              AGE INT,</span><br><span class="line">              SEX CHAR(1),</span><br><span class="line">              INCOME FLOAT )&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h2 id="数据库插入操作">数据库插入操作</h2><p>以下实例使用执行 SQL INSERT 语句向表 EMPLOYEE 插入记录：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 插入语句</span><br><span class="line">sql = &quot;&quot;&quot;INSERT INTO EMPLOYEE(FIRST_NAME,</span><br><span class="line">              LAST_NAME, AGE, SEX, INCOME)</span><br><span class="line">              VALUES (&#x27;Mac&#x27;, &#x27;Mohan&#x27;, 20, &#x27;M&#x27;, 2000)&quot;&quot;&quot;</span><br><span class="line">try:</span><br><span class="line">    # 执行sql语句</span><br><span class="line">     cursor.execute(sql)</span><br><span class="line">     # 提交到数据库执行</span><br><span class="line">     db.commit()</span><br><span class="line">except:</span><br><span class="line">      # 如果发生错误则回滚</span><br><span class="line">      db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>以上例子也可以写成如下形式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标</span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 插入语句sql = &quot;INSERT INTO EMPLOYEE(FIRST_NAME, \</span><br><span class="line">                                   LAST_NAME, AGE, SEX, INCOME) \</span><br><span class="line">                                   VALUES (&#x27;%s&#x27;, &#x27;%s&#x27;,  %s,  &#x27;%s&#x27;,  %s)&quot; % \</span><br><span class="line">                                    (&#x27;Mac&#x27;, &#x27;Mohan&#x27;, 20, &#x27;M&#x27;, 2000)</span><br><span class="line">try:</span><br><span class="line">     # 执行sql语句</span><br><span class="line">     cursor.execute(sql)</span><br><span class="line">     # 执行sql语句</span><br><span class="line">     db.commit()</span><br><span class="line">except:</span><br><span class="line">      # 发生错误时回滚</span><br><span class="line">      db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接 </span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>以下代码使用变量向SQL语句中传递参数:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">..................................</span><br><span class="line">user_id = &quot;test123&quot;</span><br><span class="line">password = &quot;password&quot;</span><br><span class="line"></span><br><span class="line">con.execute(&#x27;insert into Login values( %s,  %s)&#x27; % \</span><br><span class="line">             (user_id, password))</span><br><span class="line">..................................</span><br></pre></td></tr></table></figure><h2 id="数据库查询操作">数据库查询操作</h2><p>Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p><ul><li><strong>fetchone():</strong> 该方法获取下一个查询结果集。结果集是一个对象</li><li><strong>fetchall():</strong> 接收全部的返回结果行.</li><li><strong>rowcount:</strong> 这是一个只读属性，并返回执行execute()方法后影响的行数。</li></ul><h3 id="实例：-2">实例：</h3><p>查询EMPLOYEE表中salary（工资）字段大于1000的所有数据：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 查询语句</span><br><span class="line">sql = &quot;SELECT * FROM EMPLOYEE \</span><br><span class="line">          WHERE INCOME &gt; %s&quot; % (1000)</span><br><span class="line">try:</span><br><span class="line">   # 执行SQL语句</span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   # 获取所有记录列表</span><br><span class="line">   results = cursor.fetchall()</span><br><span class="line">   for row in results:</span><br><span class="line">      fname = row[0]</span><br><span class="line">      lname = row[1]</span><br><span class="line">      age = row[2]</span><br><span class="line">      sex = row[3]</span><br><span class="line">      income = row[4]</span><br><span class="line">       # 打印结果</span><br><span class="line">      print(&quot;fname=%s,lname=%s,age=%s,sex=%s,income=%s&quot; % \</span><br><span class="line">             (fname, lname, age, sex, income))</span><br><span class="line">except:</span><br><span class="line">    print(&quot;Error: unable to fetch data&quot;)</span><br><span class="line"></span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><p>以上脚本执行结果如下：</p><blockquote><p>fname=Mac, lname=Mohan, age=20, sex=M, income=2000</p></blockquote><h2 id="数据库更新操作">数据库更新操作</h2><p>更新操作用于更新数据表的的数据，以下实例将 TESTDB 表中 SEX 为 ‘M’ 的 AGE 字段递增 1：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 更新语句</span><br><span class="line">sql = &quot;UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = &#x27;%c&#x27;&quot; % (&#x27;M&#x27;)</span><br><span class="line">try:</span><br><span class="line">    # 执行SQL语句</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    # 提交到数据库执行</span><br><span class="line">db.commit()</span><br><span class="line">except:</span><br><span class="line">     # 发生错误时回滚</span><br><span class="line">     db.rollback()</span><br><span class="line"># 关闭数据库连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h2 id="删除操作">删除操作</h2><p>删除操作用于删除数据表中的数据，以下实例演示了删除数据表 EMPLOYEE 中 AGE 大于 20 的所有数据：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python3</span><br><span class="line"></span><br><span class="line">import  pymysql</span><br><span class="line"></span><br><span class="line"># 打开数据库连接</span><br><span class="line">db = pymysql.connect(&quot;localhost&quot;,&quot;testuser&quot;,&quot;test123&quot;,&quot;TESTDB&quot;)</span><br><span class="line"></span><br><span class="line"># 使用cursor()方法获取操作游标 </span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"># SQL 删除语句</span><br><span class="line">sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; %s&quot; % (20)</span><br><span class="line">try:</span><br><span class="line">    # 执行SQL语句</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    # 提交修改db.commit()</span><br><span class="line">except:</span><br><span class="line">     # 发生错误时回滚</span><br><span class="line">     db.rollback()</span><br><span class="line"></span><br><span class="line"># 关闭连接</span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure><h2 id="执行事务">执行事务</h2><p>事务机制可以确保数据一致性。</p><p>事务应该具有4个属性：原子性、一致性、隔离性、持久性。这四个属性通常称为ACID特性。</p><ul><li>原子性（atomicity）。一个事务是一个不可分割的工作单位，事务中包括的诸操作要么都做，要么都不做。</li><li>一致性（consistency）。事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。</li><li>隔离性（isolation）。一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</li><li>持久性（durability）。持续性也称永久性（permanence），指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。</li></ul><p>Python DB API 2.0 的事务提供了两个方法 commit 或 rollback。</p><p><strong>实例:</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># SQL删除记录语句</span><br><span class="line">sql = &quot;DELETE FROM EMPLOYEE WHERE AGE &gt; %s&quot; % (20)</span><br><span class="line">try:</span><br><span class="line">    # 执行SQL语句</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    # 向数据库提交</span><br><span class="line">    db.commit()</span><br><span class="line">except:</span><br><span class="line">     # 发生错误时回滚</span><br><span class="line">     db.rollback()</span><br></pre></td></tr></table></figure><p>对于支持事务的数据库， 在Python数据库编程中，当游标建立之时，就自动开始了一个隐形的数据库事务。</p><p>commit()方法游标的所有更新操作，rollback（）方法回滚当前游标的所有操作。每一个方法都开始了一个新的事务。</p><h2 id="错误处理">错误处理</h2><p>DB API中定义了一些数据库操作的错误及异常，下表列出了这些错误和异常:</p><p>Warning</p><p>当有严重警告时触发，例如插入数据是被截断等等。必须是 StandardError 的子类。</p><p>Error</p><p>警告以外所有其他错误类。必须是 StandardError 的子类。</p><p>InterfaceError</p><p>当有数据库接口模块本身的错误（而不是数据库的错误）发生时触发。 必须是Error的子类。</p><p>DatabaseError</p><p>和数据库有关的错误发生时触发。 必须是Error的子类。</p><p>DataError</p><p>当有数据处理时的错误发生时触发，例如：除零错误，数据超范围等等。 必须是DatabaseError的子类。</p><p>OperationalError</p><p>指非用户控制的，而是操作数据库时发生的错误。例如：连接意外断开、 数据库名未找到、事务处理失败、内存分配错误等等操作数据库是发生的错误。 必须是DatabaseError的子类。</p><p>IntegrityError</p><p>完整性相关的错误，例如外键检查失败等。必须是DatabaseError子类。</p><p>InternalError</p><p>数据库的内部错误，例如游标（cursor）失效了、事务同步失败等等。 必须是DatabaseError子类。</p><p>ProgrammingError</p><p>程序错误，例如数据表（table）没找到或已存在、SQL语句语法错误、 参数数量错误等等。必须是DatabaseError的子类。</p><p>NotSupportedError</p><p>不支持错误，指使用了数据库不支持的函数或API等。例如在连接对象上 使用.rollback()函数，然而数据库并不支持事务或者事务已关闭。 必须是DatabaseError的子类。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全球反恐状况分析</title>
      <link href="/2022/11/02/%E5%85%A8%E7%90%83%E5%8F%8D%E6%81%90%E7%8A%B6%E5%86%B5%E5%88%86%E6%9E%90/"/>
      <url>/2022/11/02/%E5%85%A8%E7%90%83%E5%8F%8D%E6%81%90%E7%8A%B6%E5%86%B5%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>0 实验内容</h1><p>根据一项调查，每年约有2.18亿人受到自然和人为灾害的影响，每年约有68000人失去生活。地震、火山等自然灾害的频率基本保持不变，但在此期间恐怖活动的数量有所增加。</p><p>本实验的目的是探索世界各地的恐怖事件。我们将探讨恐怖主义的趋势、恐怖主义多发地区等。</p><h1>1 开发准备</h1><h2 id="1-1-数据集准备">1.1 数据集准备</h2><p><a href="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/globalterrorismdb_0617dist.csv">数据地址</a></p><p>数据集有1个，名字叫globalterrorismdb_0617dist.csv。原数据集记录了1970.1.1 2017.1.27之间的恐怖主义事件，由于原数据集太大，本实验的数据集截取了2016.1.1 2017.1.27之间的恐怖主义事件。</p><h2 id="1-2-数据集解释">1.2 数据集解释</h2><p>数据集存储的是恐怖主义事件的数据，包含恐怖事件发生的时间、国家、地区、攻击类型、目标人群、死亡人数、受伤人数、动机、城市、经度、维度等共135个字段。</p><p>由于数据集有135个字段，无法展示。后面的步骤会从数据集中筛选重要的字段，并展示数据集的前5行数据，同学们可以通过它了解数据集。</p><h2 id="1-3-导入包和数据集">1.3 导入包和数据集</h2><p>导入包和数据集，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">import</span> libraries</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.<span class="property">pyplot</span> <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib.<span class="property">patches</span> <span class="keyword">as</span> mpatches</span><br><span class="line"></span><br><span class="line"># <span class="keyword">import</span> dataset</span><br><span class="line">dataset = pd.<span class="title function_">read_csv</span>(<span class="string">&#x27;globalterrorismdb_0617dist.csv&#x27;</span>,encoding=<span class="string">&#x27;ISO-8859-1&#x27;</span>)</span><br></pre></td></tr></table></figure><p>数据集共有135个字段，有的字段我们根本不感兴趣。所以对自己感兴趣的字段重命名，然后筛选出自己感兴趣的17个字段。</p><p>字段的含义如下：</p><ul><li>‘Year’: 事件发生的年份</li><li>‘Month’: 事件发生的月份</li><li>‘Day’: 事件发生的日子</li><li>‘Country’: 国家</li><li>‘Region’: 地区</li><li>‘AttackType’: 攻击类型（如炸弹袭击）</li><li>‘Target’: 目标人群（如平民）</li><li>‘Killed’: 死亡人数</li><li>‘Wounded’: 受伤人数</li><li>‘Summary’: 事件概述</li><li>‘Group’: 恐怖组织（如塔利班、ISIL）</li><li>‘TargetType’: 目标人群类型</li><li>‘WeaponType’: 武器类型</li><li>‘Motive’: 攻击动机</li><li>‘City’: 城市</li><li>‘Latitude’: 纬度</li><li>'Longitude: 经度</li></ul><p>筛选出感兴趣的字段代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># selected subset <span class="keyword">of</span> dataset</span><br><span class="line">dataset.<span class="title function_">rename</span>(columns=&#123;<span class="string">&#x27;iyear&#x27;</span>:<span class="string">&#x27;Year&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;imonth&#x27;</span>:<span class="string">&#x27;Month&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;iday&#x27;</span>:<span class="string">&#x27;Day&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;country_txt&#x27;</span>:<span class="string">&#x27;Country&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;region_txt&#x27;</span>:<span class="string">&#x27;Region&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;attacktype1_txt&#x27;</span>:<span class="string">&#x27;AttackType&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;target1&#x27;</span>:<span class="string">&#x27;Target&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;nkill&#x27;</span>:<span class="string">&#x27;Killed&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;nwound&#x27;</span>:<span class="string">&#x27;Wounded&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;summary&#x27;</span>:<span class="string">&#x27;Summary&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;gname&#x27;</span>:<span class="string">&#x27;Group&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;targtype1_txt&#x27;</span>:<span class="string">&#x27;TargetType&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;weaptype1_txt&#x27;</span>:<span class="string">&#x27;WeaponType&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;motive&#x27;</span>:<span class="string">&#x27;Motive&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;city&#x27;</span>:<span class="string">&#x27;City&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;latitude&#x27;</span>:<span class="string">&#x27;Latitude&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;longitude&#x27;</span>:<span class="string">&#x27;Longitude&#x27;</span>,&#125;,inplace=<span class="title class_">True</span>)</span><br><span class="line">dataset = dataset[[<span class="string">&#x27;Year&#x27;</span>,<span class="string">&#x27;Month&#x27;</span>,<span class="string">&#x27;Day&#x27;</span>,<span class="string">&#x27;Country&#x27;</span>,<span class="string">&#x27;Region&#x27;</span>,<span class="string">&#x27;City&#x27;</span>,<span class="string">&#x27;Latitude&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;Longitude&#x27;</span>,<span class="string">&#x27;AttackType&#x27;</span>,<span class="string">&#x27;Killed&#x27;</span>,<span class="string">&#x27;Wounded&#x27;</span>,<span class="string">&#x27;Target&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;Summary&#x27;</span>,<span class="string">&#x27;Group&#x27;</span>,<span class="string">&#x27;TargetType&#x27;</span>,<span class="string">&#x27;WeaponType&#x27;</span>,<span class="string">&#x27;Motive&#x27;</span>]] # <span class="number">17</span> columns</span><br></pre></td></tr></table></figure><p>在恐怖主义事件中，经常关注死亡多少人、受伤多少人、伤亡多少人。所以新建一个字段Casualties代表伤亡人数，它是死亡人数+受伤人数。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset[<span class="string">&#x27;Casualties&#x27;</span>] = dataset[<span class="string">&#x27;Killed&#x27;</span>] + dataset[<span class="string">&#x27;Wounded&#x27;</span>]</span><br></pre></td></tr></table></figure><p>显示数据集的前5行数据，对数据集有一个初步的认识，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset.<span class="title function_">head</span>(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586204835156-2.jpg" alt="img"></p><p>截止到现在，同学们可以理解字段所代表的含义。</p><p>查看2016.1.1~2017.1.27阶段有哪些恐怖组织，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset[<span class="string">&#x27;Group&#x27;</span>].<span class="title function_">unique</span>()</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206054434-3.jpg" alt="img"></p><p>我们对Taliban（塔利班）比较熟悉，新闻上经常讲。</p><p>查看2016.1.1~2017.1.27有几起恐怖主义事件，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset.<span class="property">shape</span>[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206411736-5.jpg" alt="img"></p><p>共有13490起事件，平均每天34.41起。</p><p>统计一下字段缺数值，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># take care <span class="keyword">of</span> missing data</span><br><span class="line">missing_data_df = dataset.<span class="title function_">isnull</span>().<span class="title function_">sum</span>()</span><br><span class="line">missing_data_df</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206544791-6.jpg" alt="img"></p><p>由上图可见，动机这个字段大部分是缺失的；有1237起事件，要么死亡人数未知，要么受伤人数未知。</p><h1>2 探索数据集</h1><p>探索发生恐怖事件数量最多的国家，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># statistics by country/region</span><br><span class="line">stats_with_country = dataset[<span class="string">&#x27;Country&#x27;</span>].<span class="title function_">value_counts</span>() # count group by </span><br><span class="line">stats_with_country = stats_with_country.<span class="title function_">reset_index</span>()</span><br><span class="line">stats_with_country.<span class="title function_">rename</span>(columns=&#123;<span class="string">&#x27;index&#x27;</span>:<span class="string">&#x27;Country&#x27;</span>, <span class="string">&#x27;Country&#x27;</span>:<span class="string">&#x27;Count&#x27;</span>&#125;, inplace = <span class="title class_">True</span>)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;%s has most terrorism counts. The number is %d&#x27;</span>  %(stats_with_country.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">0</span>], stats_with_country.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206756291-7.jpg" alt="img"></p><p>我们发现伊拉克是发生恐怖袭击次数最多的国家。</p><p>探索发生恐怖事件数量最多的地区，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stats_with_region = dataset[<span class="string">&#x27;Region&#x27;</span>].<span class="title function_">value_counts</span>()</span><br><span class="line">stats_with_region = stats_with_region.<span class="title function_">reset_index</span>()</span><br><span class="line">stats_with_region.<span class="title function_">rename</span>(columns=&#123;<span class="string">&#x27;index&#x27;</span>:<span class="string">&#x27;Region&#x27;</span>, <span class="string">&#x27;Region&#x27;</span>:<span class="string">&#x27;Count&#x27;</span>&#125;, inplace = <span class="title class_">True</span>)</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;%s has most terrorism counts. The number is %d&#x27;</span>  %(stats_with_region.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">0</span>], stats_with_region.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206860995-8.jpg" alt="img"></p><p>我们发现中东&amp;北非地区是发生恐怖袭击次数最多的地区。</p><p>伊拉克是发生恐怖袭击次数最多的国家。哪个国家是死亡人数最多的国家？代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stats_with_killed = dataset.<span class="title function_">groupby</span>([<span class="string">&#x27;Country&#x27;</span>])[[<span class="string">&#x27;Killed&#x27;</span>]].<span class="title function_">sum</span>()</span><br><span class="line">stats_with_killed = stats_with_killed.<span class="title function_">reset_index</span>()</span><br><span class="line">stats_with_killed = stats_with_killed.<span class="title function_">sort_values</span>([<span class="string">&#x27;Killed&#x27;</span>], ascending=[<span class="title class_">False</span>])</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;%s killed most people. The killed people number is %d&#x27;</span>  %(stats_with_killed.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">0</span>], stats_with_killed.<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586206945202-9.jpg" alt="img"></p><p>由上图可知，死亡人数最多的国家也是伊拉克。</p><p>在发生的13490次恐怖事件中，哪次事件杀死了最多的人？代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">max_killed_index = dataset.<span class="property">loc</span>[dataset[<span class="string">&#x27;Killed&#x27;</span>].<span class="title function_">idxmax</span>()]</span><br><span class="line">max_killed_year = max_killed_index.<span class="property">Year</span></span><br><span class="line">max_killed_country = max_killed_index.<span class="property">Country</span></span><br><span class="line">max_killed_number = max_killed_index.<span class="property">Killed</span></span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;In all terrorism events, this event killed most people. In %s, %s killed %d&#x27;</span>  %(max_killed_year, max_killed_country, max_killed_number))</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586207089147-10.jpg" alt="img"></p><p>由上图可知，2016年叙利亚恐怖主义事件死亡了433人，是最惨的一次事件。</p><p>身在中国，我们很关心自己国家的状况。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">china_killed_people = stats_with_killed.<span class="title function_">query</span>(<span class="string">&#x27;Country == &quot;China&quot;&#x27;</span>).<span class="property">iloc</span>[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;In China, %d people are killed during all the terrorism events.&#x27;</span> %(china_killed_people))</span><br></pre></td></tr></table></figure><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586207232832-12.jpg" alt="img"></p><p>由上图可知，虽然中国也有恐怖主义事件，但是死亡人数非常少。</p><h1>3 可视化数据集</h1><p>可视化发生恐怖主义事件次数最多的10个国家，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># visualize them (top <span class="number">10</span>)</span><br><span class="line">plt.<span class="title function_">figure</span>()</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;Country vs Count&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">xticks</span>(rotation = <span class="number">90</span>)</span><br><span class="line">ax = sns.<span class="title function_">barplot</span>(x = <span class="string">&#x27;Country&#x27;</span>, y = <span class="string">&#x27;Count&#x27;</span>, data = stats_with_country.<span class="property">iloc</span>[<span class="number">0</span>:<span class="number">10</span>, :])</span><br></pre></td></tr></table></figure><ul><li></li></ul><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586407407303-3.jpg" alt="img">图37 执行结果</p><p>由上图可知，伊拉克排第一，叙利亚排第十。</p><p>可视化发生恐怖主义事件次数最多的10个地区，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.<span class="title function_">figure</span>()</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;Region vs Count&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">xticks</span>(rotation = <span class="number">90</span>)</span><br><span class="line">ax = sns.<span class="title function_">barplot</span>(x = <span class="string">&#x27;Region&#x27;</span>, y = <span class="string">&#x27;Count&#x27;</span>, data = stats_with_region.<span class="property">iloc</span>[<span class="number">0</span>:<span class="number">10</span>, :])</span><br></pre></td></tr></table></figure><ul><li></li></ul><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586407491850-4.jpg" alt="img">图38 执行结果</p><p>由上图可知，中东&amp;北非地区最乱。</p><p>可视化发生恐怖主义事件死亡人数最多的10个国家，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.<span class="title function_">figure</span>()</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;Country vs Killed&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">xticks</span>(rotation = <span class="number">90</span>)</span><br><span class="line">ax = sns.<span class="title function_">barplot</span>(x = <span class="string">&#x27;Country&#x27;</span>, y = <span class="string">&#x27;Killed&#x27;</span>, data = stats_with_killed.<span class="property">iloc</span>[<span class="number">0</span>:<span class="number">10</span>, :])</span><br></pre></td></tr></table></figure><ul><li></li></ul><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586407562673-5.jpg" alt="img">图39 执行结果</p><p>由上图可知，伊拉克死亡人数最高。</p><p>同学们可能会说这是美国的错。这么说不严谨。建议同学们使用1970年开始的恐怖主义数据，然后为伊拉克的恐怖主义事件数量画一条折线图。如果2003年以前数量很少，2003年开始数量暴增，这才能说明和美国有关系。</p><p>可视化恐怖主义类型排名，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># statistics by attack type</span><br><span class="line">plt.<span class="title function_">figure</span>()</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;Attacy Methods by Terrorists&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">xticks</span>(rotation = <span class="number">90</span>)</span><br><span class="line">sns.<span class="title function_">countplot</span>(x = <span class="string">&#x27;AttackType&#x27;</span>, data = dataset, order = dataset[<span class="string">&#x27;AttackType&#x27;</span>].<span class="title function_">value_counts</span>().<span class="property">index</span>)</span><br></pre></td></tr></table></figure><ul><li></li></ul><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586207636554-4.jpg" alt="img">图40 执行结果</p><p>由上图可知，炸弹袭击最普遍，可能这样造成的伤亡大。</p><p>可视化目标人群类型排名，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># statistics by target type</span><br><span class="line">plt.<span class="title function_">figure</span>()</span><br><span class="line">plt.<span class="title function_">title</span>(<span class="string">&#x27;Favorite Targets&#x27;</span>)</span><br><span class="line">plt.<span class="title function_">xticks</span>(rotation = <span class="number">90</span>)</span><br><span class="line">sns.<span class="title function_">countplot</span>(x = <span class="string">&#x27;TargetType&#x27;</span>, data = dataset, order = dataset[<span class="string">&#x27;TargetType&#x27;</span>].<span class="title function_">value_counts</span>().<span class="property">index</span>)</span><br></pre></td></tr></table></figure><ul><li></li></ul><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586207683704-5.jpg" alt="img">图41 执行结果</p><p>由上图可知，平民是最大的不幸者。</p><p><a href="https://tlab.cloud.tencent.com/sandbox/experiment/detail?accessId=b25db8e85d201dc529672f5679620ed27b51fb93e40def897b72f882eb5e4a74">腾讯云-教育云沙箱 (tencent.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 腾创实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天池汽车竞品分析攻略</title>
      <link href="/2022/10/31/%E5%A4%A9%E6%B1%A0%E6%B1%BD%E8%BD%A6%E7%AB%9E%E5%93%81%E5%88%86%E6%9E%90%E6%94%BB%E7%95%A5/"/>
      <url>/2022/10/31/%E5%A4%A9%E6%B1%A0%E6%B1%BD%E8%BD%A6%E7%AB%9E%E5%93%81%E5%88%86%E6%9E%90%E6%94%BB%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1>一、赛题内容</h1><p><a href="https://tianchi.aliyun.com/competition/entrance/531892/introduction">数据分析达人赛：汽车产品聚类分析</a></p><p>实验环境：天池notebook</p><h2 id="赛题背景">赛题背景</h2><p>赛题以竞品分析为背景，通过数据的聚类，为汽车提供聚类分类。对于指定的车型，可以通过聚类分析找到其<strong>竞品车型</strong>。通过这道赛题，鼓励学习者利用<strong>车型数据</strong>，进行<strong>车型画像</strong>的分析，为产品的<strong>定位</strong>，<strong>竞品分析</strong>提供数据决策。</p><blockquote><p>竞品：指产品在同领域的竞争对手。如肯德基与麦当劳。</p></blockquote><h2 id="赛题数据">赛题数据</h2><p>数据源：car_price.csv，数据包括了205款车的26个字段</p><table><thead><tr><th style="text-align:center">1</th><th style="text-align:center"><strong>Car_ID</strong></th><th style="text-align:center">每个观测值的唯一 ID（英格）</th></tr></thead><tbody><tr><td style="text-align:center">2</td><td style="text-align:center"><strong>Symboling</strong></td><td style="text-align:center">其分配的保险风险评级，值为+3表示汽车有风险，-3表示它可能非常安全。（分类）</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><strong>CarName</strong></td><td style="text-align:center">汽车公司名称（分类）</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><strong>fueltype</strong></td><td style="text-align:center">汽车燃料类型，即汽油或柴油（分类）</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><strong>aspiration</strong></td><td style="text-align:center">汽车中使用的吸气（分类）</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><strong>doornumber</strong></td><td style="text-align:center">汽车车门数（分类）</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><strong>carbody</strong></td><td style="text-align:center">车身（分类）</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><strong>drivewheel</strong></td><td style="text-align:center">驱动轮类型（分类）</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><strong>enginelocation</strong></td><td style="text-align:center">汽车发动机的位置（分类）</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><strong>wheelbase</strong></td><td style="text-align:center">汽车底座（数字）</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><strong>carlength</strong></td><td style="text-align:center">汽车长度（数字）</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><strong>carwidth</strong></td><td style="text-align:center">汽车宽度（数字）</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><strong>carheight</strong></td><td style="text-align:center">汽车高度（数字）</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><strong>curbweight</strong></td><td style="text-align:center">没有乘员或行李的汽车的重量。（数字）</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><strong>enginetype</strong></td><td style="text-align:center">引擎类型。（分类）</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><strong>cylindernumber</strong></td><td style="text-align:center">放置在车内的气缸（分类）</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><strong>enginesize</strong></td><td style="text-align:center">汽车尺寸（数字）</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><strong>fuelsystem</strong></td><td style="text-align:center">汽车燃油系统（分类）</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><strong>boreratio</strong></td><td style="text-align:center">汽车的孔径比（数字）</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><strong>stroke</strong></td><td style="text-align:center">发动机内部冲程或体积（数字）</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><strong>compressionratio</strong></td><td style="text-align:center">汽车压缩比（数字）</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><strong>horsepower</strong></td><td style="text-align:center">马力（数字）</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><strong>peakrpm</strong></td><td style="text-align:center">汽车峰值转速 （数字）</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><strong>citympg</strong></td><td style="text-align:center">城市里程（数字）</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><strong>highwaympg</strong></td><td style="text-align:center">高速公路里程（数字）</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><strong>price(Dependent variable)</strong></td><td style="text-align:center">汽车价格（数字）</td></tr></tbody></table><h2 id="赛题任务">赛题任务</h2><p>​选手需要对该汽车数据进行聚类分析，并找到vokswagen（大众）汽车的相应竞品。要求选手在天池实验室中用notebook完成以上任务，并分享到比赛论坛。<br>​（聚类分析是常用的数据分析方法之一，不仅可以帮助我们对用户进行分组，还可以帮我们对产品进行分组（比如竞品分析） 这里的聚类个数选手可以根据数据集的特点自己指定，并说明聚类的依据）</p><p>对于指定的车型，可以通过聚类分析找到其竞品车型</p><h1>二、数据处理</h1><h2 id="2-1-导入数据库和数据集">2.1 导入数据库和数据集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="comment"># 引入模型</span></span><br><span class="line"><span class="keyword">from</span>  sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"><span class="comment"># 引入数据处理库</span></span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder, MinMaxScaler,StandardScaler, MaxAbsScaler,OneHotEncoder<span class="comment">#标签转，最大最小转换 标准化</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split, cross_val_score</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入评价模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score, make_scorer, silhouette_score, accuracy_score,calinski_harabaz_score</span><br><span class="line"><span class="comment"># 数据加载</span></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;./car_price.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-2-数据观察">2.2 数据观察</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 描述性统计</span></span><br><span class="line"><span class="built_in">print</span>(data.describe(include=<span class="string">&quot;all&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 观察汽车品牌分布</span></span><br><span class="line">car_brand = data[<span class="string">&quot;CarName&quot;</span>].<span class="built_in">str</span>.split(expand=<span class="literal">True</span>)[<span class="number">0</span>]<span class="comment"># 以空格 切割字符串 保留前面的公司名</span></span><br><span class="line">car_brand.value_counts().sort_index() <span class="comment"># 数量统计，并根据公司字母排序 </span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/31/xo3hUe.png" alt=""></p><h2 id="2-3-异常值处理">2.3 异常值处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 异常值处理，（错别字或同义字替换）</span></span><br><span class="line"><span class="comment"># 观察发现 大众汽车 应该是 vw,volkswagen,vokswagen</span></span><br><span class="line"><span class="comment"># 保时捷 porcshce porsche</span></span><br><span class="line"><span class="comment"># toyota toyouta</span></span><br><span class="line"><span class="comment"># maxda mazda</span></span><br><span class="line">wrong_brand = &#123;<span class="string">&quot;Nissan&quot;</span>: <span class="string">&quot;nissan&quot;</span>, </span><br><span class="line">               <span class="string">&quot;maxda&quot;</span>: <span class="string">&quot;mazda&quot;</span>, </span><br><span class="line">               <span class="string">&quot;porcshce&quot;</span>: <span class="string">&quot;porsche&quot;</span>, </span><br><span class="line">               <span class="string">&quot;toyouta&quot;</span>: <span class="string">&quot;toyota&quot;</span>, </span><br><span class="line">               <span class="string">&quot;vokswagen&quot;</span>: <span class="string">&quot;volkswagen&quot;</span>, </span><br><span class="line">               <span class="string">&quot;vw&quot;</span>: <span class="string">&quot;volkswagen&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改对应的 公司</span></span><br><span class="line"><span class="keyword">for</span> index, brand <span class="keyword">in</span> car_brand.items():</span><br><span class="line">    <span class="keyword">if</span> brand <span class="keyword">in</span> wrong_brand.keys():</span><br><span class="line">        <span class="built_in">print</span>(index, data.loc[index, <span class="string">&quot;CarName&quot;</span>], end=<span class="string">&quot;  |  &quot;</span>)</span><br><span class="line">        data.loc[index, <span class="string">&quot;CarName&quot;</span>] = data.loc[index, <span class="string">&quot;CarName&quot;</span>].replace(brand, wrong_brand[brand])</span><br><span class="line">        <span class="built_in">print</span>(data.loc[index, <span class="string">&quot;CarName&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后的情况</span></span><br><span class="line">car_brand_new = data[<span class="string">&quot;CarName&quot;</span>].<span class="built_in">str</span>.split(expand=<span class="literal">True</span>)[<span class="number">0</span>]<span class="comment"># 以空格 切割字符串 保留前面的公司名</span></span><br><span class="line">car_brand_new.value_counts()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/31/xo3jUg.png" alt=""></p><p>数据均为不重复数据，即没有完全相同的两条数据。</p><p>观察数据得 我们发现部分车名相同的车，配置不同，价格不同，我们根据汽车市场规则，将同款汽车分为 ，1，2，3，4.。离散数值的配置。1为最高配置（价格最高）.</p><p>部分数据，英文数字表示one two three ，有具体意义的非数值数据转换.</p><p>重点集中在doornumber 和 cylindernumber.</p><p>原文背景所说：对于指定的车型，可以通过聚类分析找到其竞品车型。所以可以按不同车型的类别进行聚类，可以先观察carbody 这一数据的分布。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&#x27;carbody&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/31/xo8p2n.png" alt=""></p><h3 id="2-4-相关性分析">2.4 相关性分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算各变量间的相关系数</span></span><br><span class="line">corr = data.corr()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置画板风格</span></span><br><span class="line">sns.set_style(<span class="string">&#x27;whitegrid&#x27;</span>)</span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">20</span>, <span class="number">20</span>))</span><br><span class="line">ax = sns.heatmap(corr, square=<span class="literal">True</span>, annot=<span class="literal">True</span>)</span><br><span class="line">ax.tick_params(labelsize=<span class="number">15</span>)</span><br><span class="line">fig.savefig(<span class="string">&quot;./Figures/heatmap.png&quot;</span>, dpi=<span class="number">400</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/31/2b30a707d31ebcbc.png" alt=""></p><h2 id="2-5-数据处理">2.5 数据处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下数据为data_new 用来聚类分析。</span></span><br><span class="line">data_new = data.copy(deep = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 聚类分析中，无用数据为ID和名字，先删除掉id和名字。</span></span><br><span class="line"><span class="keyword">del</span> data_new[<span class="string">&#x27;car_ID&#x27;</span>]</span><br><span class="line"><span class="keyword">del</span> data_new[<span class="string">&#x27;CarName&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 经总的 数据 相关性分析compressionratio与fueltype的相关性-0.99，highwaympg与citympg的相关性0.97，两组相关性都很强，去除两组中的各一个</span></span><br><span class="line">data_new = data_new.drop(columns=[<span class="string">&quot;fueltype&quot;</span>, <span class="string">&quot;citympg&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 观察volkswagen 总共有多少车型，其他车型就不聚类分析</span></span><br><span class="line">volkswagen_brand = data[data[<span class="string">&#x27;CarName&#x27;</span>].<span class="built_in">str</span>.split(expand=<span class="literal">True</span>)[<span class="number">0</span>].isin([<span class="string">&#x27;volkswagen&#x27;</span>])]</span><br><span class="line">volkswagen_brand[<span class="string">&#x27;carbody&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/31/d41201700b09d28e.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 观察发现，没有hardtop的车型，不考虑它的聚类。</span></span><br><span class="line"><span class="comment"># 将4大车型，进行划分数据集。</span></span><br><span class="line">str_carbody = <span class="string">&#x27;sedan&#x27;</span></span><br><span class="line"></span><br><span class="line">data_final = data_new[data_new[<span class="string">&#x27;carbody&#x27;</span>].isin([str_carbody])].copy(deep = <span class="literal">True</span>)</span><br><span class="line">data_final_haveID = data[data[<span class="string">&#x27;carbody&#x27;</span>].isin([str_carbody])].copy(deep = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 非数值标签转为 数值标签</span></span><br><span class="line">le = LabelEncoder()</span><br><span class="line">object_columns = data_final.select_dtypes(include=[<span class="string">&quot;object&quot;</span>]).columns</span><br><span class="line">data_final[object_columns] = data_final[object_columns].apply(le.fit_transform)</span><br><span class="line"></span><br><span class="line"><span class="comment"># min max 归一化处理</span></span><br><span class="line"></span><br><span class="line">mms = MinMaxScaler()</span><br><span class="line">data_final = mms.fit_transform(data_final)</span><br><span class="line">train_data = data_final</span><br><span class="line">pd.DataFrame(data_final).describe()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准化处理</span></span><br><span class="line"><span class="comment">#K_scaler = StandardScaler()</span></span><br><span class="line"><span class="comment">#data_new = K_scaler.fit_transform(data_new)</span></span><br><span class="line"><span class="comment">#train_data = data_new</span></span><br><span class="line"><span class="comment">#pd.DataFrame(data_new).describe()</span></span><br></pre></td></tr></table></figure><h1>3 确定聚类K值。</h1><h2 id="3-1-肘部分析法">3.1 肘部分析法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 肘部分析法</span></span><br><span class="line"></span><br><span class="line">SSE = []</span><br><span class="line">ks = <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">31</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> ks:</span><br><span class="line">    kmeans = KMeans(n_clusters=k, random_state=<span class="number">1</span>)</span><br><span class="line">    kmeans.fit(train_data)</span><br><span class="line">    <span class="comment"># 样本点到簇中心的平方距离和</span></span><br><span class="line">    SSE.append(kmeans.inertia_)</span><br><span class="line">    </span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line">ax.plot(ks, SSE, <span class="string">&quot;o-&quot;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&quot;k&quot;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;SSE&quot;</span>)</span><br><span class="line">ax.set_xticks(ks)</span><br><span class="line">ax.set_title(<span class="string">&quot;SSE curve&quot;</span>)</span><br><span class="line">fig.savefig(<span class="string">&quot;KM_SSE_curve.png&quot;</span>, dpi=<span class="number">400</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/31/0b6b5251c0d60d84.png" alt=""></p><h2 id="3-2-轮廓系数法">3.2 轮廓系数法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 轮廓系数法</span></span><br><span class="line">SLE = [<span class="number">0</span>]</span><br><span class="line">ks = <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">31</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> ks[<span class="number">1</span>:]:</span><br><span class="line">    kmeans = KMeans(n_clusters=k, random_state=<span class="number">1</span>)  </span><br><span class="line">    kmeans.fit(train_data)</span><br><span class="line">    <span class="comment"># 轮廓系数</span></span><br><span class="line">    SLE.append(silhouette_score(train_data, kmeans.labels_, metric=<span class="string">&#x27;euclidean&#x27;</span>))</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">12</span>, <span class="number">6</span>))</span><br><span class="line">ax.plot(ks, SLE, <span class="string">&#x27;o-&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&quot;k&quot;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;Silhouette score&quot;</span>)</span><br><span class="line">ax.set_xticks(ks)</span><br><span class="line">ax.set_title(<span class="string">&quot;SLE curve&quot;</span>)</span><br><span class="line">fig.savefig(<span class="string">&quot;KM_SLE_curve.png&quot;</span>, dpi=<span class="number">400</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/31/c121e973ebc493e7.png" alt=""></p><h2 id="3-3-CH系数">3.3 CH系数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对不同K值的聚类效果进行评分</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">13</span>):</span><br><span class="line">    kmeans=KMeans(n_clusters=i).fit(train_data)</span><br><span class="line">    score=calinski_harabaz_score(train_data,kmeans.labels_)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;聚类数 =%d 的calinski_harabaz分数为：%f&#x27;</span>%(i,score))</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/10/31/c75e64716ad808da.png" alt=""></p><h1>四、K-means 聚类分析</h1><p><a href="https://cjh0220.github.io/2022/09/08/%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E7%AE%80%E8%BF%B0/">聚类分析简述</a></p><p>具体要分多少类，除了肘部分析法和轮廓系数法，还可以根据具体的实际情况分类。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># K-means聚类法，及其结果</span></span><br><span class="line">k = <span class="number">10</span></span><br><span class="line">kmeans = KMeans(n_clusters=k, init=<span class="string">&quot;k-means++&quot;</span>, random_state=<span class="number">1</span>)</span><br><span class="line">car_label = kmeans.fit_predict(train_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;silhouette_score = %.4f \n&#x27;</span> %silhouette_score(train_data, car_label, metric=<span class="string">&quot;euclidean&quot;</span>))</span><br><span class="line"></span><br><span class="line">data_final_haveID.loc[:, <span class="string">&quot;label&quot;</span>] = car_label</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;使用%d类聚类频数：&quot;</span> %k)</span><br><span class="line"><span class="built_in">print</span>(data_final_haveID.loc[:, <span class="string">&quot;label&quot;</span>].value_counts().sort_index())</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vw_label = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(str_carbody + <span class="string">&#x27;原始数据如下&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> index, row <span class="keyword">in</span> data_final_haveID.iterrows():</span><br><span class="line">    <span class="keyword">if</span> row[<span class="string">&quot;CarName&quot;</span>].startswith(<span class="string">&quot;volkswagen&quot;</span>):</span><br><span class="line">        cname = row[<span class="string">&quot;CarName&quot;</span>]</span><br><span class="line">        cbody = row[<span class="string">&quot;carbody&quot;</span>]</span><br><span class="line">        lbl = row[<span class="string">&quot;label&quot;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;index&#125;</span>\t<span class="subst">&#123;cname:&lt;<span class="number">30</span>&#125;</span><span class="subst">&#123;cbody:&lt;<span class="number">10</span>&#125;</span>\t<span class="subst">&#123;lbl&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="comment"># 记录 volkswagen 不同型号对应类别</span></span><br><span class="line">        <span class="keyword">if</span> lbl <span class="keyword">not</span> <span class="keyword">in</span> vw_label:</span><br><span class="line">            vw_label[lbl] = [(cname, cbody)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            vw_label[lbl].append((cname, cbody))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sedan原始数据如下</span><br><span class="line"><span class="number">182</span>volkswagen rabbit             sedan     <span class="number">6</span></span><br><span class="line"><span class="number">183</span>volkswagen <span class="number">1131</span> deluxe sedan  sedan     <span class="number">6</span></span><br><span class="line"><span class="number">184</span>volkswagen model <span class="number">111</span>          sedan     <span class="number">2</span></span><br><span class="line"><span class="number">185</span>volkswagen <span class="built_in">type</span> <span class="number">3</span>             sedan     <span class="number">5</span></span><br><span class="line"><span class="number">186</span>volkswagen <span class="number">411</span> (sw)           sedan     <span class="number">5</span></span><br><span class="line"><span class="number">187</span>volkswagen <span class="built_in">super</span> beetle       sedan     <span class="number">2</span></span><br><span class="line"><span class="number">188</span>volkswagen dasher             sedan     <span class="number">5</span></span><br><span class="line"><span class="number">191</span>volkswagen rabbit             sedan     <span class="number">5</span></span><br><span class="line"><span class="number">192</span>volkswagen rabbit custom      sedan </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span> + str_carbody+ <span class="string">&quot;聚类最终结果如下：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> vw_label.keys():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;类型<span class="subst">&#123;key&#125;</span>：&quot;</span>)</span><br><span class="line">    cluster_car = data_final_haveID.loc[car_label==key, [<span class="string">&quot;CarName&quot;</span>, <span class="string">&quot;carbody&quot;</span>]] <span class="comment"># 聚类的到同一簇的汽车</span></span><br><span class="line">    cmp_car = cluster_car[~cluster_car[<span class="string">&quot;CarName&quot;</span>].<span class="built_in">str</span>.contains(<span class="string">&quot;volkswagen&quot;</span>)] <span class="comment"># 排除包含 volkswagen的部分</span></span><br><span class="line">    <span class="keyword">for</span> car <span class="keyword">in</span> vw_label[key]:</span><br><span class="line">        <span class="built_in">print</span>(car)</span><br><span class="line">        <span class="built_in">print</span>(cmp_car[cmp_car[<span class="string">&quot;carbody&quot;</span>]==car[<span class="number">1</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">sedan聚类最终结果如下：</span><br><span class="line">类型6：</span><br><span class="line">(&#x27;volkswagen rabbit&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                       CarName carbody</span><br><span class="line">5                     audi fox   sedan</span><br><span class="line">10                    bmw 320i   sedan</span><br><span class="line">12                      bmw x1   sedan</span><br><span class="line">42          honda civic (auto)   sedan</span><br><span class="line">44                isuzu D-Max    sedan</span><br><span class="line">89                nissan versa   sedan</span><br><span class="line">90                 nissan gt-r   sedan</span><br><span class="line">91                nissan rogue   sedan</span><br><span class="line">94                 nissan leaf   sedan</span><br><span class="line">163    toyota corolla liftback   sedan</span><br><span class="line">165  toyota celica gt liftback   sedan</span><br><span class="line">(&#x27;volkswagen 1131 deluxe sedan&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                       CarName carbody</span><br><span class="line">5                     audi fox   sedan</span><br><span class="line">10                    bmw 320i   sedan</span><br><span class="line">12                      bmw x1   sedan</span><br><span class="line">42          honda civic (auto)   sedan</span><br><span class="line">44                isuzu D-Max    sedan</span><br><span class="line">89                nissan versa   sedan</span><br><span class="line">90                 nissan gt-r   sedan</span><br><span class="line">91                nissan rogue   sedan</span><br><span class="line">94                 nissan leaf   sedan</span><br><span class="line">163    toyota corolla liftback   sedan</span><br><span class="line">165  toyota celica gt liftback   sedan</span><br><span class="line">类型2：</span><br><span class="line">(&#x27;volkswagen model 111&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">              CarName carbody</span><br><span class="line">63   mazda glc deluxe   sedan</span><br><span class="line">66      mazda rx-7 gs   sedan</span><br><span class="line">158     toyota corona   sedan</span><br><span class="line">174  toyota celica gt   sedan</span><br><span class="line">(&#x27;volkswagen super beetle&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">              CarName carbody</span><br><span class="line">63   mazda glc deluxe   sedan</span><br><span class="line">66      mazda rx-7 gs   sedan</span><br><span class="line">158     toyota corona   sedan</span><br><span class="line">174  toyota celica gt   sedan</span><br><span class="line">(&#x27;volkswagen rabbit custom&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">              CarName carbody</span><br><span class="line">63   mazda glc deluxe   sedan</span><br><span class="line">66      mazda rx-7 gs   sedan</span><br><span class="line">158     toyota corona   sedan</span><br><span class="line">174  toyota celica gt   sedan</span><br><span class="line">类型5：</span><br><span class="line">(&#x27;volkswagen type 3&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                  CarName carbody</span><br><span class="line">3             audi 100 ls   sedan</span><br><span class="line">4              audi 100ls   sedan</span><br><span class="line">6              audi 100ls   sedan</span><br><span class="line">41            honda civic   sedan</span><br><span class="line">88   mitsubishi mirage g4   sedan</span><br><span class="line">101           nissan dayz   sedan</span><br><span class="line">103           nissan otti   sedan</span><br><span class="line">133             saab 99le   sedan</span><br><span class="line">135            saab 99gle   sedan</span><br><span class="line">143           subaru baja   sedan</span><br><span class="line">173        toyota corolla   sedan</span><br><span class="line">176        toyota corolla   sedan</span><br><span class="line">(&#x27;volkswagen 411 (sw)&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                  CarName carbody</span><br><span class="line">3             audi 100 ls   sedan</span><br><span class="line">4              audi 100ls   sedan</span><br><span class="line">6              audi 100ls   sedan</span><br><span class="line">41            honda civic   sedan</span><br><span class="line">88   mitsubishi mirage g4   sedan</span><br><span class="line">101           nissan dayz   sedan</span><br><span class="line">103           nissan otti   sedan</span><br><span class="line">133             saab 99le   sedan</span><br><span class="line">135            saab 99gle   sedan</span><br><span class="line">143           subaru baja   sedan</span><br><span class="line">173        toyota corolla   sedan</span><br><span class="line">176        toyota corolla   sedan</span><br><span class="line">(&#x27;volkswagen dasher&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                  CarName carbody</span><br><span class="line">3             audi 100 ls   sedan</span><br><span class="line">4              audi 100ls   sedan</span><br><span class="line">6              audi 100ls   sedan</span><br><span class="line">41            honda civic   sedan</span><br><span class="line">88   mitsubishi mirage g4   sedan</span><br><span class="line">101           nissan dayz   sedan</span><br><span class="line">103           nissan otti   sedan</span><br><span class="line">133             saab 99le   sedan</span><br><span class="line">135            saab 99gle   sedan</span><br><span class="line">143           subaru baja   sedan</span><br><span class="line">173        toyota corolla   sedan</span><br><span class="line">176        toyota corolla   sedan</span><br><span class="line">(&#x27;volkswagen rabbit&#x27;, &#x27;sedan&#x27;)</span><br><span class="line">                  CarName carbody</span><br><span class="line">3             audi 100 ls   sedan</span><br><span class="line">4              audi 100ls   sedan</span><br><span class="line">6              audi 100ls   sedan</span><br><span class="line">41            honda civic   sedan</span><br><span class="line">88   mitsubishi mirage g4   sedan</span><br><span class="line">101           nissan dayz   sedan</span><br><span class="line">103           nissan otti   sedan</span><br><span class="line">133             saab 99le   sedan</span><br><span class="line">135            saab 99gle   sedan</span><br><span class="line">143           subaru baja   sedan</span><br><span class="line">173        toyota corolla   sedan</span><br><span class="line">176        toyota corolla   sedan</span><br></pre></td></tr></table></figure><p>其余4类车型同理。代码不再做粘贴。</p><h1>五、最终结果</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">sedan聚类最终结果如下：</span><br><span class="line">类型<span class="number">6</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen rabbit&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                       CarName carbody</span><br><span class="line"><span class="number">5</span>                     audi fox   sedan</span><br><span class="line"><span class="number">10</span>                    bmw 320i   sedan</span><br><span class="line"><span class="number">12</span>                      bmw x1   sedan</span><br><span class="line"><span class="number">42</span>          honda civic (auto)   sedan</span><br><span class="line"><span class="number">44</span>                isuzu D-Max    sedan</span><br><span class="line"><span class="number">89</span>                nissan versa   sedan</span><br><span class="line"><span class="number">90</span>                 nissan gt-r   sedan</span><br><span class="line"><span class="number">91</span>                nissan rogue   sedan</span><br><span class="line"><span class="number">94</span>                 nissan leaf   sedan</span><br><span class="line"><span class="number">163</span>    toyota corolla liftback   sedan</span><br><span class="line"><span class="number">165</span>  toyota celica gt liftback   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen 1131 deluxe sedan&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                       CarName carbody</span><br><span class="line"><span class="number">5</span>                     audi fox   sedan</span><br><span class="line"><span class="number">10</span>                    bmw 320i   sedan</span><br><span class="line"><span class="number">12</span>                      bmw x1   sedan</span><br><span class="line"><span class="number">42</span>          honda civic (auto)   sedan</span><br><span class="line"><span class="number">44</span>                isuzu D-Max    sedan</span><br><span class="line"><span class="number">89</span>                nissan versa   sedan</span><br><span class="line"><span class="number">90</span>                 nissan gt-r   sedan</span><br><span class="line"><span class="number">91</span>                nissan rogue   sedan</span><br><span class="line"><span class="number">94</span>                 nissan leaf   sedan</span><br><span class="line"><span class="number">163</span>    toyota corolla liftback   sedan</span><br><span class="line"><span class="number">165</span>  toyota celica gt liftback   sedan</span><br><span class="line">类型<span class="number">2</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen model 111&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">              CarName carbody</span><br><span class="line"><span class="number">63</span>   mazda glc deluxe   sedan</span><br><span class="line"><span class="number">66</span>      mazda rx-<span class="number">7</span> gs   sedan</span><br><span class="line"><span class="number">158</span>     toyota corona   sedan</span><br><span class="line"><span class="number">174</span>  toyota celica gt   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen super beetle&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">              CarName carbody</span><br><span class="line"><span class="number">63</span>   mazda glc deluxe   sedan</span><br><span class="line"><span class="number">66</span>      mazda rx-<span class="number">7</span> gs   sedan</span><br><span class="line"><span class="number">158</span>     toyota corona   sedan</span><br><span class="line"><span class="number">174</span>  toyota celica gt   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen rabbit custom&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">              CarName carbody</span><br><span class="line"><span class="number">63</span>   mazda glc deluxe   sedan</span><br><span class="line"><span class="number">66</span>      mazda rx-<span class="number">7</span> gs   sedan</span><br><span class="line"><span class="number">158</span>     toyota corona   sedan</span><br><span class="line"><span class="number">174</span>  toyota celica gt   sedan</span><br><span class="line">类型<span class="number">5</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen type 3&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                  CarName carbody</span><br><span class="line"><span class="number">3</span>             audi <span class="number">100</span> ls   sedan</span><br><span class="line"><span class="number">4</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">6</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">41</span>            honda civic   sedan</span><br><span class="line"><span class="number">88</span>   mitsubishi mirage g4   sedan</span><br><span class="line"><span class="number">101</span>           nissan dayz   sedan</span><br><span class="line"><span class="number">103</span>           nissan otti   sedan</span><br><span class="line"><span class="number">133</span>             saab 99le   sedan</span><br><span class="line"><span class="number">135</span>            saab 99gle   sedan</span><br><span class="line"><span class="number">143</span>           subaru baja   sedan</span><br><span class="line"><span class="number">173</span>        toyota corolla   sedan</span><br><span class="line"><span class="number">176</span>        toyota corolla   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen 411 (sw)&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                  CarName carbody</span><br><span class="line"><span class="number">3</span>             audi <span class="number">100</span> ls   sedan</span><br><span class="line"><span class="number">4</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">6</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">41</span>            honda civic   sedan</span><br><span class="line"><span class="number">88</span>   mitsubishi mirage g4   sedan</span><br><span class="line"><span class="number">101</span>           nissan dayz   sedan</span><br><span class="line"><span class="number">103</span>           nissan otti   sedan</span><br><span class="line"><span class="number">133</span>             saab 99le   sedan</span><br><span class="line"><span class="number">135</span>            saab 99gle   sedan</span><br><span class="line"><span class="number">143</span>           subaru baja   sedan</span><br><span class="line"><span class="number">173</span>        toyota corolla   sedan</span><br><span class="line"><span class="number">176</span>        toyota corolla   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen dasher&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                  CarName carbody</span><br><span class="line"><span class="number">3</span>             audi <span class="number">100</span> ls   sedan</span><br><span class="line"><span class="number">4</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">6</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">41</span>            honda civic   sedan</span><br><span class="line"><span class="number">88</span>   mitsubishi mirage g4   sedan</span><br><span class="line"><span class="number">101</span>           nissan dayz   sedan</span><br><span class="line"><span class="number">103</span>           nissan otti   sedan</span><br><span class="line"><span class="number">133</span>             saab 99le   sedan</span><br><span class="line"><span class="number">135</span>            saab 99gle   sedan</span><br><span class="line"><span class="number">143</span>           subaru baja   sedan</span><br><span class="line"><span class="number">173</span>        toyota corolla   sedan</span><br><span class="line"><span class="number">176</span>        toyota corolla   sedan</span><br><span class="line">(<span class="string">&#x27;volkswagen rabbit&#x27;</span>, <span class="string">&#x27;sedan&#x27;</span>)</span><br><span class="line">                  CarName carbody</span><br><span class="line"><span class="number">3</span>             audi <span class="number">100</span> ls   sedan</span><br><span class="line"><span class="number">4</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">6</span>              audi 100ls   sedan</span><br><span class="line"><span class="number">41</span>            honda civic   sedan</span><br><span class="line"><span class="number">88</span>   mitsubishi mirage g4   sedan</span><br><span class="line"><span class="number">101</span>           nissan dayz   sedan</span><br><span class="line"><span class="number">103</span>           nissan otti   sedan</span><br><span class="line"><span class="number">133</span>             saab 99le   sedan</span><br><span class="line"><span class="number">135</span>            saab 99gle   sedan</span><br><span class="line"><span class="number">143</span>           subaru baja   sedan</span><br><span class="line"><span class="number">173</span>        toyota corolla   sedan</span><br><span class="line"><span class="number">176</span>        toyota corolla   sedan</span><br><span class="line"></span><br><span class="line">convertible聚类最终结果如下：</span><br><span class="line">类型<span class="number">0</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen dasher&#x27;</span>, <span class="string">&#x27;convertible&#x27;</span>)</span><br><span class="line">                 CarName      carbody</span><br><span class="line"><span class="number">0</span>     alfa-romero giulia  convertible</span><br><span class="line"><span class="number">1</span>    alfa-romero stelvio  convertible</span><br><span class="line"><span class="number">172</span>      toyota cressida  convertible</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wagon聚类最终结果如下：</span><br><span class="line">类型<span class="number">2</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen dasher&#x27;</span>, <span class="string">&#x27;wagon&#x27;</span>)</span><br><span class="line">            CarName carbody</span><br><span class="line"><span class="number">93</span>     nissan titan   wagon</span><br><span class="line"><span class="number">97</span>      nissan note   wagon</span><br><span class="line"><span class="number">130</span>    renault 12tl   wagon</span><br><span class="line"><span class="number">146</span>   subaru trezia   wagon</span><br><span class="line"><span class="number">147</span>  subaru tribeca   wagon</span><br><span class="line"><span class="number">148</span>       subaru dl   wagon</span><br><span class="line"><span class="number">149</span>       subaru dl   wagon</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hatchback聚类最终结果如下：</span><br><span class="line">类型<span class="number">1</span>：</span><br><span class="line">(<span class="string">&#x27;volkswagen rabbit&#x27;</span>, <span class="string">&#x27;hatchback&#x27;</span>)</span><br><span class="line">                      CarName    carbody</span><br><span class="line"><span class="number">2</span>    alfa-romero Quadrifoglio  hatchback</span><br><span class="line"><span class="number">46</span>               isuzu D-Max   hatchback</span><br><span class="line"><span class="number">55</span>                  mazda <span class="number">626</span>  hatchback</span><br><span class="line"><span class="number">56</span>                  mazda glc  hatchback</span><br><span class="line"><span class="number">57</span>              mazda rx-<span class="number">7</span> gs  hatchback</span><br><span class="line"><span class="number">58</span>                mazda glc <span class="number">4</span>  hatchback</span><br><span class="line"><span class="number">81</span>              mitsubishi g4  hatchback</span><br><span class="line"><span class="number">104</span>              nissan teana  hatchback</span><br><span class="line"><span class="number">106</span>            nissan clipper  hatchback</span><br><span class="line"><span class="number">125</span>             porsche macan  hatchback</span><br><span class="line"><span class="number">129</span>           porsche cayenne  hatchback</span><br><span class="line"><span class="number">131</span>             renault <span class="number">5</span> gtl  hatchback</span><br><span class="line"><span class="number">132</span>                  saab 99e  hatchback</span><br><span class="line"><span class="number">134</span>                 saab 99le  hatchback</span><br><span class="line"><span class="number">166</span>     toyota corolla tercel  hatchback</span><br><span class="line"><span class="number">169</span>            toyota starlet  hatchback</span><br><span class="line"><span class="number">171</span>            toyota corolla  hatchback</span><br><span class="line"><span class="number">178</span>   toyota corolla liftback  hatchback</span><br><span class="line"><span class="number">179</span>             toyota corona  hatchback</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Titanic生存预测攻略</title>
      <link href="/2022/10/30/Titanic%E7%94%9F%E5%AD%98%E9%A2%84%E6%B5%8B%E6%94%BB%E7%95%A5/"/>
      <url>/2022/10/30/Titanic%E7%94%9F%E5%AD%98%E9%A2%84%E6%B5%8B%E6%94%BB%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<h1>一、前言</h1><p>泰坦尼克号作为Kaggle经典项目，被拿来做考核或者实验非常多，也是机器学习入门的一个很好的项目。我们机器学习的老师也是直接用这个项目来做考核。</p><p>他分工分成了数据处理、模型搭建、PPT制作和文档制作，但是鄙人认为，数据处理与模型搭建密不可分的，比如说在决策树模型中，是不在乎数据实际差值的，但是SVM逻辑回归等算法，如果不用较好的数据变换，基本是没准确度的。</p><p>基本上数据处理用了2个小时基本就搞定了，也参考了很多别人的题解，不过我都是自己再写了一遍，代码量不大很好处理。模型搭建其实也就是调用一下sklearn库，我自己认为对于这种比较难以估计的真实情况，而且数据特征、样本量都比较少。把注意力花在调参上，没有什么大的突破。所以我只是为了学习操作流程，把各个模型拿出来，意思意思过一下罢了。菜不行，再怎么烹饪，也煮不出东西来。</p><p>本质上这个项目，就是一个入门项目，学习机器学习/数据挖掘的一个过程。差不多得了hhhh。</p><h1>二、环境搭建</h1><p>本次实验使用的是</p><ul><li>window11(操作系统)</li><li>python 3.9（python语言）</li><li>jupyter notebook(编辑器很方便)</li><li>copy（用来复制内容）</li><li>numpy（数组处理）</li><li>pandas（数据处理和数据分析）</li><li>matplotlib（数据可视化）</li><li>seaborn（热力图）</li><li>sklearn（机器学习库）</li><li>xgboost（机器学习的其中一个模型）</li><li>lightgbm（机器学习的其中一个模型）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#具体导包内容</span></span><br><span class="line"><span class="keyword">import</span> os </span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.impute <span class="keyword">import</span> SimpleImputer</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> LabelEncoder</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br></pre></td></tr></table></figure><p>详细可参考：</p><p><a href="https://blog.csdn.net/wq_ocean_/article/details/103889237">Anaconda安装</a></p><p><a href="https://www.jianshu.com/p/91365f343585/">jupyter notebook安装</a></p><p>按着这些教程来就可以了，如果能会用虚拟环境更好，在base环境下跑代码也行，因为用的库对版本要求不大。各种库只需要<code>pip install xxx</code> 就可以了。</p><h1>三、项目介绍</h1><p>比赛平台：<a href="https://www.kaggle.com/competitions/titanic">Titanic - Machine Learning from Disaster | Kaggle</a></p><p>泰坦尼克号的沉没是历史上最臭名昭著的沉船事件之一。</p><p>1912年4月15日，在她的处女航中，被广泛认为是 &quot;不沉的 &quot;泰坦尼克号在与冰山相撞后沉没。不幸的是，没有足够的救生艇供船上所有人使用，导致2224名乘客和船员中的1502人死亡。</p><p>虽然幸存下来有一定的运气成分，但似乎有些人群比其他人群更有可能幸存下来。</p><p>在这项挑战中，我们要求你建立一个预测模型来回答这个问题。&quot;什么样的人更有可能生存？&quot;使用乘客数据（即姓名、年龄、性别、社会经济阶层等）。</p><blockquote><p>主要是介绍了具体项目背景，以及所给train 、 test 数据集中，各个特征的具体含义，我们将在下文进行分析、总结。</p></blockquote><h1>四、数据分析</h1><p>可以使用<a href="https://www.spsspro.com/">SPSSPRO</a>和python的可视化工具进行观察。</p><p>我这里强烈建议使用SPSSPRO，当然也会介绍一下python的用法。</p><p>由于数据处理前后数据特征会发生变化，我们将使用python数据处理前的数据观察，使用SPSSPRO进行数据处理后的观察。</p><h2 id="4-1-数据解释（官方）">4.1 数据解释（官方）</h2><ul><li>survival：是否生存<ul><li>0 = No ：未存活</li><li>1 = Yes：存活</li></ul></li><li>pclass：船票等级。（社会经济地位（SES）的代表）<ul><li>1 = 1st：最高级的船票</li><li>2 = 2nd：第二级的船票</li><li>3 = 3rd：第三级的船票</li></ul></li><li>Sex：性别<ul><li>female：女人</li><li>male  ：男人</li></ul></li><li>Age：年龄（若年龄为0.5，则其为预测的值，不影响数据分布）</li><li>sibsp：在泰坦尼克号上的兄弟姐妹/配偶的数量。</li><li>parch：在泰坦尼克号上的父母/子女的数量</li><li>ticket： 船票号（如果船票号一样，可以说明是同行的人）</li><li>fare： 票价。</li><li>cabin：机舱号</li><li>embarked ： 上岸的港口（可以表现社会地位？？）<ul><li>C = Cherbourg</li><li>Q = Queenstown</li><li>S = Southampton</li></ul></li></ul><p><a href="https://www.kaggle.com/competitions/titanic/data">数据解释网址kaggle</a></p><h2 id="4-2-python-数据观察">4.2 python 数据观察</h2><h3 id="4-2-1-导入数据处理库和数据集">4.2.1 导入数据处理库和数据集</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入数据处理库</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入测试集和训练集</span></span><br><span class="line">train_data = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>)</span><br><span class="line">test_data = pd.read_csv(<span class="string">&#x27;test.csv&#x27;</span>)</span><br><span class="line">df = train_data</span><br></pre></td></tr></table></figure><h3 id="4-2-2-数据初步观察">4.2.2 数据初步观察</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据初步观察</span></span><br><span class="line">train_data.info()</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line">test_data.info()</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="comment"># 查看训练集的描述性信息</span></span><br><span class="line">df.describe(include=<span class="string">&quot;all&quot;</span>)</span><br></pre></td></tr></table></figure><p>train_data.info()结果：</p><p><img src="https://s1.ax1x.com/2022/10/30/xIYdcn.png" alt="train_data,info"></p><p>test_data.info()结果：</p><p><img src="https://s1.ax1x.com/2022/10/30/xIYDBV.png" alt="test_data.info"></p><blockquote><p>观察发现，其实test数据集只是少了’Survived’这一特征，我们后续对数据处理以train为主要对象，再对test处理，避免代码冗杂。</p><p>同时能得到所有特征的数据类型，object是字符串的意思，对于字符串来说其实对机器学习模型不大友好，基本都是要转定量标准，我们还发现’Age’和‘'Cabin’有一定程度的数据丢失，我们考虑在后续进行处理。</p><p>训练集样本量为891，这对于机器学习中，算是比较小的样本量了。对于需要大规模进行数据训练的模型需要谨慎使用。</p></blockquote><p>describe结果：</p><p><img src="https://s1.ax1x.com/2022/10/30/xIYr7T.png" alt=""></p><p>展示训练集的前五行:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 展示训练集的前五行</span></span><br><span class="line">train_data.head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xIYWcR.png" alt=""></p><h3 id="4-2-3-python数据可视化">4.2.3 python数据可视化</h3><blockquote><p>我们先根据启发式算法，也就是生活尝试，判断一下哪些特征可能会跟生存率有影响，我的理解是</p><p>[性别、年龄、票价、船舱等级]这几类容易影响，总之画画图啥的，试试看。</p></blockquote><p>统计生还人数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计生还人数</span></span><br><span class="line">Survived=df.groupby(<span class="string">&#x27;Survived&#x27;</span>).count()</span><br><span class="line">Survived</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xItoMn.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 展示生还人数与性别的关系</span></span><br><span class="line">sns.countplot(data=df, x =<span class="string">&#x27;Survived&#x27;</span>, hue = <span class="string">&#x27;Sex&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Survived (0 = Dead,1 = Survived)&#x27;</span> )</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xItqaT.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 展示生还人数与船仓等级的关系</span></span><br><span class="line">sns.countplot(x=<span class="string">&quot;Survived&quot;</span>,</span><br><span class="line">              hue=<span class="string">&quot;Pclass&quot;</span>,</span><br><span class="line">              data=df)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Survived (0 = Dead,1 = Survived)&#x27;</span> )</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xINSMR.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 相关性分析展示</span></span><br><span class="line">sns.heatmap(df.corr(), annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xINAiD.png" alt=""></p><ul><li>通过上面的热图，我们很容易看到正相关最强的特征(橙色)和负相关最强的特征(黑色)</li><li>SibSp(堂兄弟)和Parch之间有很强的正相关关系——孩子通常有兄弟姐妹，父母和孩子经常一起旅行</li><li>Pclass(船舱等级)和票价之间存在很强的负相关关系——头等舱的机票比下等舱的机票更贵，这意味着当票价越低(接近1)，票价就越高</li><li>年龄和Pclass(船舱等级)呈中度负相关——富人通常年龄较大</li></ul><h1>五、数据处理</h1><h2 id="5-1-异常值处理">5.1 异常值处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 异常值处理</span></span><br><span class="line"><span class="comment"># 舍弃Cabin</span></span><br><span class="line">train_data = train_data.drop([<span class="string">&#x27;Cabin&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将两行Embarked缺失的值删去</span></span><br><span class="line">train_data.dropna(inplace=<span class="literal">True</span>,axis=<span class="number">0</span>,subset=[<span class="string">&#x27;Embarked&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 年龄补充平均数</span></span><br><span class="line">train_data.Age.fillna(train_data.Age.mean(),inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 观察总体特征概况</span></span><br><span class="line">train_data.info()</span><br></pre></td></tr></table></figure><h2 id="5-2-定性数据处理">5.2 定性数据处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定性数据处理</span></span><br><span class="line"><span class="comment"># 为了提高模型的能力，我们将Embarked 进行独热编码，Sex 进行定值替换即0为female，1为male。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sex 替换</span></span><br><span class="line">train_data[<span class="string">&#x27;Sex&#x27;</span>] = train_data[<span class="string">&#x27;Sex&#x27;</span>].replace(&#123;<span class="string">&#x27;female&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;male&#x27;</span>:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Embarked 独热编码</span></span><br><span class="line">a = [<span class="string">&#x27;Embarked&#x27;</span>]</span><br><span class="line">c = pd.get_dummies(train_data[<span class="string">&#x27;Embarked&#x27;</span>])</span><br><span class="line"><span class="keyword">del</span>(train_data[<span class="string">&#x27;Embarked&#x27;</span>])</span><br><span class="line">train_data = pd.concat([train_data,c],axis=<span class="number">1</span>)</span><br><span class="line">train_data.rename(columns=&#123;<span class="string">&#x27;C&#x27;</span>:<span class="string">&#x27;Embarked_C&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>:<span class="string">&#x27;Embarked_Q&#x27;</span>,<span class="string">&#x27;S&#x27;</span>:<span class="string">&#x27;Embarked_S&#x27;</span>&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其余非数值标签转为 数值标签</span></span><br><span class="line">le = LabelEncoder()</span><br><span class="line">object_columns = train_data.select_dtypes(include=[<span class="string">&quot;object&quot;</span>]).columns</span><br><span class="line">train_data[object_columns] = train_data[object_columns].apply(le.fit_transform)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-3-数据扩展">5.3 数据扩展</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 姓名处理 提取出形式和称号,Title 和 Surname</span></span><br><span class="line"><span class="comment"># 家庭人员处理 处理带了多少人，生成新的指标Family_Size.</span></span><br><span class="line"><span class="comment"># 家庭规模由Parch与sibsp组成，因为家庭规模自己也算是其中之一，所以要+1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">variables</span>(<span class="params">df</span>):</span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Name&#x27;</span>].apply(<span class="keyword">lambda</span> x : x.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>].strip(<span class="string">&#x27;123,./!?&#x27;</span>))</span><br><span class="line">    df[<span class="string">&#x27;Surname&#x27;</span>] = df[<span class="string">&#x27;Name&#x27;</span>].apply(<span class="keyword">lambda</span> x : x.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    df.drop(<span class="string">&#x27;Name&#x27;</span>, axis = <span class="number">1</span> , inplace = <span class="literal">True</span>)</span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Title&#x27;</span>].apply(<span class="keyword">lambda</span> x : x <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="string">&#x27;Mr&#x27;</span>,<span class="string">&#x27;Miss&#x27;</span>,<span class="string">&#x27;Mrs&#x27;</span>,<span class="string">&#x27;Master&#x27;</span>] <span class="keyword">else</span> <span class="string">&#x27;NoTitle&#x27;</span>)</span><br><span class="line">    <span class="comment">#df[&#x27;Is_Married&#x27;] = 0</span></span><br><span class="line">    <span class="comment">#df[&#x27;Is_Married&#x27;].loc[df[&#x27;Title&#x27;] == &#x27;Mrs&#x27;] = 1</span></span><br><span class="line">    df[<span class="string">&#x27;Family_Size&#x27;</span>] = df[<span class="string">&#x27;SibSp&#x27;</span>] + df[<span class="string">&#x27;Parch&#x27;</span>] + <span class="number">1</span></span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Title&#x27;</span>].<span class="built_in">map</span>(&#123;<span class="string">&#x27;NoTitle&#x27;</span> : <span class="number">0</span> , <span class="string">&#x27;Miss&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;Mrs&#x27;</span> : <span class="number">2</span>,<span class="string">&#x27;Mr&#x27;</span> :<span class="number">3</span> ,<span class="string">&#x27;Master&#x27;</span> : <span class="number">4</span>&#125;)</span><br><span class="line">variables(train_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删去&#x27;SibSq&#x27;和&#x27;Parch&#x27;特征</span></span><br><span class="line"><span class="keyword">del</span>(train_data[<span class="string">&#x27;SibSp&#x27;</span>])</span><br><span class="line"><span class="keyword">del</span>(train_data[<span class="string">&#x27;Parch&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="5-4-最终数据集展示和导出">5.4 最终数据集展示和导出</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test数据处理模块</span></span><br><span class="line">train_data_true = train_data.copy()</span><br><span class="line">train_data = test_data</span><br><span class="line">train_data_ID = train_data[<span class="string">&#x27;PassengerId&#x27;</span>]</span><br><span class="line">train_data = train_data.drop([<span class="string">&#x27;PassengerId&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line">train_data = train_data.drop([<span class="string">&#x27;Cabin&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line">train_data = train_data.fillna(train_data.mean())</span><br><span class="line">train_data[<span class="string">&#x27;Sex&#x27;</span>] = train_data[<span class="string">&#x27;Sex&#x27;</span>].replace(&#123;<span class="string">&#x27;female&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;male&#x27;</span>:<span class="number">1</span>&#125;)</span><br><span class="line">train_data[<span class="string">&#x27;Sex&#x27;</span>] = train_data[<span class="string">&#x27;Sex&#x27;</span>].replace(&#123;<span class="string">&#x27;female&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;male&#x27;</span>:<span class="number">1</span>&#125;)</span><br><span class="line">a = [<span class="string">&#x27;Embarked&#x27;</span>]</span><br><span class="line">c = pd.get_dummies(train_data[<span class="string">&#x27;Embarked&#x27;</span>])</span><br><span class="line"><span class="keyword">del</span>(train_data[<span class="string">&#x27;Embarked&#x27;</span>])</span><br><span class="line">train_data = pd.concat([train_data,c],axis=<span class="number">1</span>)</span><br><span class="line">train_data.rename(columns=&#123;<span class="string">&#x27;C&#x27;</span>:<span class="string">&#x27;Embarked_C&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>:<span class="string">&#x27;Embarked_Q&#x27;</span>,<span class="string">&#x27;S&#x27;</span>:<span class="string">&#x27;Embarked_S&#x27;</span>&#125;,inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">variables</span>(<span class="params">df</span>):</span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Name&#x27;</span>].apply(<span class="keyword">lambda</span> x : x.split(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>].strip(<span class="string">&#x27;123,./!?&#x27;</span>))</span><br><span class="line">    df[<span class="string">&#x27;Surname&#x27;</span>] = df[<span class="string">&#x27;Name&#x27;</span>].apply(<span class="keyword">lambda</span> x : x.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line">    df.drop(<span class="string">&#x27;Name&#x27;</span>, axis = <span class="number">1</span> , inplace = <span class="literal">True</span>)</span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Title&#x27;</span>].apply(<span class="keyword">lambda</span> x : x <span class="keyword">if</span> x <span class="keyword">in</span> [<span class="string">&#x27;Mr&#x27;</span>,<span class="string">&#x27;Miss&#x27;</span>,<span class="string">&#x27;Mrs&#x27;</span>,<span class="string">&#x27;Master&#x27;</span>] <span class="keyword">else</span> <span class="string">&#x27;NoTitle&#x27;</span>)</span><br><span class="line">    <span class="comment">#df[&#x27;Is_Married&#x27;] = 0</span></span><br><span class="line">    <span class="comment">#df[&#x27;Is_Married&#x27;].loc[df[&#x27;Title&#x27;] == &#x27;Mrs&#x27;] = 1</span></span><br><span class="line">    df[<span class="string">&#x27;Family_Size&#x27;</span>] = df[<span class="string">&#x27;SibSp&#x27;</span>] + df[<span class="string">&#x27;Parch&#x27;</span>] + <span class="number">1</span></span><br><span class="line">    df[<span class="string">&#x27;Title&#x27;</span>] = df[<span class="string">&#x27;Title&#x27;</span>].<span class="built_in">map</span>(&#123;<span class="string">&#x27;NoTitle&#x27;</span> : <span class="number">0</span> , <span class="string">&#x27;Miss&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;Mrs&#x27;</span> : <span class="number">2</span>,<span class="string">&#x27;Mr&#x27;</span> :<span class="number">3</span> ,<span class="string">&#x27;Master&#x27;</span> : <span class="number">4</span>&#125;)</span><br><span class="line">variables(train_data)</span><br><span class="line">le = LabelEncoder()</span><br><span class="line">object_columns = train_data.select_dtypes(include=[<span class="string">&quot;object&quot;</span>]).columns</span><br><span class="line">train_data[object_columns] = train_data[object_columns].apply(le.fit_transform)</span><br><span class="line">test_data = train_data</span><br><span class="line">train_data =train_data_true</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span>(test_data[<span class="string">&#x27;SibSp&#x27;</span>])</span><br><span class="line"><span class="keyword">del</span>(test_data[<span class="string">&#x27;Parch&#x27;</span>])</span><br><span class="line">test_data.to_csv(<span class="string">&#x27;test_new.csv&#x27;</span>,index = <span class="literal">None</span>)</span><br><span class="line"><span class="comment">#最终数据</span></span><br><span class="line">train_data.to_csv(<span class="string">&#x27;train_new.csv&#x27;</span>,index = <span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/10/30/xIUYtO.png" alt=""></p><h1>六、模型搭建</h1><blockquote><p>表面模型搭建，其实就是套一套用一用，如果想了解具体算法的原理和效果，请参考我的其他博客，在机器学习或数据挖掘标签下基本都有。</p></blockquote><h2 id="6-1-模型数据切割">6.1 模型数据切割</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ID没用的 train与同步删了</span></span><br><span class="line">train_data =train_data.drop([<span class="string">&#x27;PassengerId&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，并在训练集上训练模型，在测试集上验证模型性能。</span></span><br><span class="line">data_target_part = train_data[<span class="string">&#x27;Survived&#x27;</span>]</span><br><span class="line">data_features_part = train_data[[x <span class="keyword">for</span> x <span class="keyword">in</span> train_data.columns <span class="keyword">if</span> x != <span class="string">&#x27;Survived&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(data_features_part, data_target_part, test_size = <span class="number">0.2</span>, random_state = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="6-2-导入XGBoost库-未调参">6.2 导入XGBoost库(未调参)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 导入XGBoost模型</span></span><br><span class="line"><span class="keyword">from</span> xgboost.sklearn <span class="keyword">import</span> XGBClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义 XGBoost模型 </span></span><br><span class="line">clf = XGBClassifier()</span><br><span class="line"><span class="comment"># 在训练集上训练XGBoost模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><h2 id="6-3-训练模型、评价模型">6.3 训练模型、评价模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://s1.ax1x.com/2022/10/30/xIUXv9.png" alt=""></p><h2 id="6-3-预测结果">6.3 预测结果</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#预测</span></span><br><span class="line">test_predict = clf.predict(test_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 答案生成</span></span><br><span class="line">test_predict = &#123;<span class="string">&#x27;PassengerId&#x27;</span> : pd.Series(train_data_ID),</span><br><span class="line">   <span class="string">&#x27;Survived&#x27;</span> : pd.Series(test_predict)&#125;</span><br><span class="line">test_predict = pd.DataFrame(test_predict)</span><br><span class="line">test_predict.to_csv(<span class="string">&quot;Submission_xgboost.csv&quot;</span>,index=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h1>七、SPSSPRO数据可视化</h1><h2 id="7-1-重要特征图表">7.1 重要特征图表</h2><h3 id="7-1-1-Pclass-环图">7.1.1 Pclass 环图</h3><p><img src="https://s1.ax1x.com/2022/10/30/xI0F8U.png" alt=""></p><h3 id="7-1-2-Sex-帕累托图">7.1.2 Sex 帕累托图</h3><p><img src="https://s1.ax1x.com/2022/10/30/xI0uUx.png" alt=""></p><h3 id="7-1-3-Family-Size-柱状图">7.1.3 Family_Size 柱状图</h3><p><img src="https://s1.ax1x.com/2022/10/30/xI0Jrd.png" alt=""></p><p>大部分都是single all the way 嘻嘻嘻。</p><h2 id="7-2-相关热力图">7.2 相关热力图</h2><p><img src="https://s1.ax1x.com/2022/10/30/xIw7UP.png" alt=""></p><p>相关性较强的，Sex，Fare ,Pclass，Title（Title的原因是因为性别相关）。</p><h1>八、其余算法和答案生成</h1><h2 id="8-1-全0全1的生成">8.1 全0全1的生成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全部都是1，survived</span></span><br><span class="line">allone = &#123;<span class="string">&#x27;PassengerId&#x27;</span> : pd.Series(train_data_ID),</span><br><span class="line">   <span class="string">&#x27;Survived&#x27;</span> : pd.Series(np.ones((<span class="number">418</span>),dtype=<span class="built_in">int</span>))&#125;</span><br><span class="line">allone = pd.DataFrame(allone)</span><br><span class="line">allone.to_csv(<span class="string">&quot;allone.csv&quot;</span>,index=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全部都是0。zeros</span></span><br><span class="line">allzeros = &#123;<span class="string">&#x27;PassengerId&#x27;</span> : pd.Series(train_data_ID),</span><br><span class="line">   <span class="string">&#x27;Survived&#x27;</span> : pd.Series(np.zeros((<span class="number">418</span>),dtype=<span class="built_in">int</span>))&#125;</span><br><span class="line">allzeros = pd.DataFrame(allzeros)</span><br><span class="line">allzeros.to_csv(<span class="string">&quot;allzeros.csv&quot;</span>,index=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h2 id="8-2-性别区分">8.2 性别区分</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 性别判断，男的全死了，女的都活了</span></span><br><span class="line">sex_predict = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(test_data)):</span><br><span class="line">    <span class="keyword">if</span> test_data[<span class="string">&#x27;Sex&#x27;</span>][i] == <span class="number">1</span>:</span><br><span class="line">        sex_predict.append(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        sex_predict.append(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">test_predict = &#123;<span class="string">&#x27;PassengerId&#x27;</span> : pd.Series(train_data_ID),</span><br><span class="line"><span class="string">&#x27;Survived&#x27;</span> : pd.Series(np.array(sex_predict))&#125;</span><br><span class="line">test_predict = pd.DataFrame(test_predict)</span><br><span class="line">test_predict.to_csv(<span class="string">&quot;Submission_sex.csv&quot;</span>,index=<span class="literal">None</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="8-3-一大堆算法的调用">8.3 一大堆算法的调用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#AdaBoostClassifier</span></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> AdaBoostClassifier</span><br><span class="line">clf_Ada = AdaBoostClassifier(random_state=<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 决策树</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line">clf_Tree = DecisionTreeClassifier(random_state=<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># KNN</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line">clf_KNN = KNeighborsClassifier()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># SVM</span></span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line">clf_svm = SVC(random_state=<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Logistic</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line">clf_log = LogisticRegression(random_state=<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 随机森林</span></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line">clf_forest = RandomForestClassifier(random_state=<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># GBDT</span></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> GradientBoostingClassifier</span><br><span class="line">clf_gbdt = GradientBoostingClassifier(random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lightgbm</span></span><br><span class="line"><span class="keyword">from</span> lightgbm.sklearn <span class="keyword">import</span> LGBMClassifier</span><br><span class="line">clf_lightgbm = LGBMClassifier()</span><br></pre></td></tr></table></figure><blockquote><p>一个个写代码很麻烦，我弄了一个函数用来自定义跑，不过缺点就是没得调参咯。所以准确率差强人意。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模型训练函数 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fuckyou</span>(<span class="params">clf,name,train_data,test_data</span>):</span><br><span class="line">    <span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，并在训练集上训练模型，在测试集上验证模型性能。</span></span><br><span class="line">    data_target_part = train_data[<span class="string">&#x27;Survived&#x27;</span>]</span><br><span class="line">    data_features_part = train_data[[x <span class="keyword">for</span> x <span class="keyword">in</span> train_data.columns <span class="keyword">if</span> x != <span class="string">&#x27;Survived&#x27;</span>]]</span><br><span class="line">    x_train, x_test, y_train, y_test = train_test_split(data_features_part, data_target_part, test_size = <span class="number">0.2</span>, random_state = <span class="number">500</span>)</span><br><span class="line">    clf.fit(x_train, y_train)</span><br><span class="line">    train_predict = clf.predict(x_train)</span><br><span class="line">    test_predict = clf.predict(x_test)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line">    confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line">    plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">    sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">    plt.title(name)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># 答案生成</span></span><br><span class="line">    test_predict = clf.predict(test_data)</span><br><span class="line">    test_predict = &#123;<span class="string">&#x27;PassengerId&#x27;</span> : pd.Series(train_data_ID),</span><br><span class="line">   <span class="string">&#x27;Survived&#x27;</span> : pd.Series(test_predict)&#125;</span><br><span class="line">    test_predict = pd.DataFrame(test_predict)</span><br><span class="line">    test_predict.to_csv(<span class="string">&quot;Submission_&#123;&#125;.csv&quot;</span>.<span class="built_in">format</span>(name),index=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>运行操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fuckyou(clf_Ada,<span class="string">&#x27;Ada&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_Tree,<span class="string">&#x27;Tree&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_svm,<span class="string">&#x27;svm&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_log,<span class="string">&#x27;log&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_KNN,<span class="string">&#x27;KNN&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_forest,<span class="string">&#x27;forest&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_gbdt,<span class="string">&#x27;gbdt&#x27;</span>,train_data,test_data)</span><br><span class="line">fuckyou(clf_lightgbm,<span class="string">&#x27;lightgbm&#x27;</span>,train_data,test_data)</span><br></pre></td></tr></table></figure><h2 id="8-4-集成学习？的尝试">8.4 集成学习？的尝试</h2><blockquote><p>原理：使用多个算法进行预测，如果不同蒜贩预测结果为1的数量多于预测结果为0的数量，则认为最终结果为1.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集成学习 forest lightgbm gbdt</span></span><br><span class="line"><span class="comment"># 由于这三者原理近似，且表现较好近似，我们使用集成学习，3类</span></span><br><span class="line">data_forest = pd.read_csv(<span class="string">&#x27;Submission_forest.csv&#x27;</span>)</span><br><span class="line">data_lightgbm = pd.read_csv(<span class="string">&#x27;Submission_lightgbm.csv&#x27;</span>)</span><br><span class="line">data_gbdt = pd.read_csv(<span class="string">&#x27;Submission_gbdt.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = data_forest[<span class="string">&#x27;Survived&#x27;</span>] + data_lightgbm[<span class="string">&#x27;Survived&#x27;</span>] + data_gbdt[<span class="string">&#x27;Survived&#x27;</span>]</span><br><span class="line"></span><br><span class="line">data.replace(<span class="number">1</span>,<span class="number">0</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">2</span>,<span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">3</span>,<span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">data_connect3 = pd.concat([data_forest[<span class="string">&#x27;PassengerId&#x27;</span>],data],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data_connect3.to_csv(<span class="string">&quot;Submission_connect3.csv&quot;</span>,index=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集成学习 forest lightgbm gbdt xgboost Tree 同理5类</span></span><br><span class="line">data_forest = pd.read_csv(<span class="string">&#x27;Submission_forest.csv&#x27;</span>)</span><br><span class="line">data_lightgbm = pd.read_csv(<span class="string">&#x27;Submission_lightgbm.csv&#x27;</span>)</span><br><span class="line">data_gbdt = pd.read_csv(<span class="string">&#x27;Submission_gbdt.csv&#x27;</span>)</span><br><span class="line">data_xgboost = pd.read_csv(<span class="string">&#x27;Submission_xgboost.csv&#x27;</span>)</span><br><span class="line">data_Tree = pd.read_csv(<span class="string">&#x27;Submission_Tree.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = data_forest[<span class="string">&#x27;Survived&#x27;</span>] + data_lightgbm[<span class="string">&#x27;Survived&#x27;</span>] + data_gbdt[<span class="string">&#x27;Survived&#x27;</span>]  + data_xgboost[<span class="string">&#x27;Survived&#x27;</span>] + data_Tree[<span class="string">&#x27;Survived&#x27;</span>]</span><br><span class="line"></span><br><span class="line">data.replace(<span class="number">1</span>,<span class="number">0</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">2</span>,<span class="number">0</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">3</span>,<span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">4</span>,<span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">data.replace(<span class="number">5</span>,<span class="number">1</span>,inplace = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">data_connect5 = pd.concat([data_forest[<span class="string">&#x27;PassengerId&#x27;</span>],data],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">data_connect5.to_csv(<span class="string">&quot;Submission_connect5.csv&quot;</span>,index=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h1>九、最终结果</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#结果导出代码，得分为具体在Kaggle上面提交的数值。</span></span><br><span class="line">x = [<span class="string">&#x27;男全死，女全活&#x27;</span>,<span class="string">&#x27;未调参决策树&#x27;</span>,<span class="string">&#x27;未调参KNN&#x27;</span>,<span class="string">&#x27;未调参SVM&#x27;</span>,<span class="string">&#x27;未调参逻辑回归&#x27;</span>,<span class="string">&#x27;未调参随机森林&#x27;</span>,<span class="string">&#x27;未调参GBDT&#x27;</span>,<span class="string">&#x27;未调参Lightgbm&#x27;</span>,<span class="string">&#x27;未调参Xgboost&#x27;</span>,<span class="string">&#x27;调参后Xgboost&#x27;</span>,<span class="string">&#x27;集成3个算法&#x27;</span>,<span class="string">&#x27;集成5个算法&#x27;</span>,<span class="string">&#x27;简易BP深度学习&#x27;</span>]</span><br><span class="line">y = [<span class="number">0.76555</span>,<span class="number">0.70334</span>,<span class="number">0.55741</span>,<span class="number">0.59090</span>,<span class="number">0.77511</span>,<span class="number">0.77033</span>,<span class="number">0.76794</span>,<span class="number">0.75358</span>,<span class="number">0.72009</span>,<span class="number">0.76076</span>,<span class="number">0.78947</span>,<span class="number">0.74641</span>,<span class="number">0.66028</span> ]</span><br><span class="line"></span><br><span class="line">Final_answer = &#123;<span class="string">&#x27;算法&#x27;</span> : pd.Series(x),</span><br><span class="line">   <span class="string">&#x27;得分&#x27;</span> : pd.Series(y)&#125;</span><br><span class="line">Final_answer = pd.DataFrame(Final_answer)</span><br><span class="line">Final_answer = Final_answer.sort_values(by=[<span class="string">&#x27;得分&#x27;</span>])</span><br><span class="line">Final_answer.to_csv(<span class="string">&#x27;Final_answer.csv&#x27;</span>,index = <span class="literal">None</span>)</span><br><span class="line">Final_answer</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://s1.ax1x.com/2022/10/30/xIwdc4.png" alt=""></p><h1>十、优缺点及改良推广</h1><h2 id="10-1-优点">10.1 优点</h2><ul><li>数据分析的很全面</li><li>考虑到很多算法的使用</li><li>有较多的可视化分析</li><li>备注很多，易于阅读</li></ul><h2 id="10-2-缺点">10.2 缺点</h2><ul><li>没有进行模型的解释，对模型学习较无力</li><li>没有进行调参，有明显的成绩提升空间</li></ul><h2 id="10-3-改良推广">10.3 改良推广</h2><ul><li>根据SPSS的热力图，Title 应该删去，因为与SEX过于相关。</li><li>以XGBoost为首的随机森林模型效果优良。可以考虑从这方面进行调参。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python模拟缓冲区进度条</title>
      <link href="/2022/10/30/python%E6%A8%A1%E6%8B%9F%E7%BC%93%E5%86%B2%E5%8C%BA%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
      <url>/2022/10/30/python%E6%A8%A1%E6%8B%9F%E7%BC%93%E5%86%B2%E5%8C%BA%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<h1>实验步骤</h1><p>点击【桌面连接】进入实验环境。</p><h2 id="1-开发准备"><strong>1 开发准备</strong></h2><h3 id="1-1-打开编程IDE-Spyder"><strong>1.1 打开编程IDE-Spyder</strong></h3><ol><li><p>双击桌面上的【LXTerminal】打开终端</p></li><li><p>切换到root用户</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>紧接着粘贴student用户的密码，方法参见4.1小节。</p><ol start="3"><li>敲入如下命令启动Spyder：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spyder</span><br></pre></td></tr></table></figure><ol start="4"><li>将Spyder的工作目录设置为/root（默认为/root），如下图所示：</li></ol><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1582079538418-%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95.png" alt="img">图1 Spyder工作目录</p><h3 id="1-2-再打开一个新的终端">1.2 再打开一个新的终端</h3><p>我们编写程序是在IDE（比如Spyder）下实现，但是我们运行程序一般都是在终端运行的，即命令行模式下运行。原因很简单，把程序部署在服务器后，程序总不能在Spyder里面跑，一定是在命令行模式下跑。</p><p>在本实验中，编写代码在Spyder环境下，运行程序在终端环境下。</p><p>再打开一个终端的步骤如下：</p><ol><li><p>双击桌面上的【LXTerminal】打开终端</p></li><li><p>切换到root用户</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p>紧接着粘贴student用户的密码。</p><ol start="3"><li>进入到代码所在目录</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br></pre></td></tr></table></figure><p>后面我们称这个终端叫新打开的终端。</p><h2 id="2-原理探究">2 原理探究</h2><p>我们都知道电影的原理，连续的画面是由一帧帧单独的图片构成的。动态进度条同理，即在同一行内连续播放不同的图案。要想在同一行内连续播放不同的图案，就必须知道如何在同一行内输出时覆盖掉之前存在的字符。下面我们一起来探究这个问题。</p><h3 id="2-1-多行输出">2.1 多行输出</h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example1-wg0m349bg9a.py">命名为example1.py</a>。</p><p>print()函数是最常见的输出方式。</p><p>每隔0.3秒便print()一行数字，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.sleep(<span class="number">0.3</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(i)*<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example1.py</span><br></pre></td></tr></table></figure><p>观察运行效果，可以下载附件中的1.mp4，查看运行效果是否一致。附件下载方式参考4.3小节。</p><p>代码输出了很多行。但是对于进度条，应该在1行输出。</p><h3 id="5-2-2-改进–在同一行输出">5.2.2 改进–在同一行输出</h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example2-wg0m349bg9a.py">命名为example2.py</a>。</p><p>print()函数的参数end控制着是否换行。</p><p>end的值默认是\n。替换为空字符即可不换行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="title function_">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.<span class="title function_">sleep</span>(<span class="number">0.3</span>)</span><br><span class="line">    <span class="title function_">print</span>(<span class="title function_">str</span>(i)*<span class="number">10</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example2.<span class="property">py</span></span><br></pre></td></tr></table></figure><p>观察运行效果，可以下载附件中的2.mp4，查看运行效果是否一致。</p><p>现在所有的数字输出到了一行。</p><p>但我们很明显的发现，5个字符串是一次性同时输出的，和进度条的效果是不匹配的。</p><h3 id="2-3-改进–打破一次性同时输出">2.3 改进–打破一次性同时输出</h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example3-wg0m349bg9a.py">命名为example3.py</a>。</p><p>因为Python中的标准输入输出默认是使用行缓冲的。而对于行缓冲来说，缓冲区读取到换行符 \n 或回车符 \r 时才会刷新缓冲区。所以，我们需要使用 sys.stdout.flush() 函数在每次迭代时刷新缓冲区。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="title function_">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.<span class="title function_">sleep</span>(<span class="number">0.3</span>)</span><br><span class="line">    <span class="title function_">print</span>(<span class="title function_">str</span>(i)*<span class="number">10</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    sys.<span class="property">stdout</span>.<span class="title function_">flush</span>()</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example3.<span class="property">py</span></span><br></pre></td></tr></table></figure><p>观察运行效果，可以下载附件中的3.mp4，查看运行效果是否一致。</p><p>我们发现，现在已经不是一次性同时输出了。但是仍然有一个问题：字符串是在末尾追加，而不是把前面的字符覆盖。</p><h3 id="2-4-改进–覆盖前面字符">2.4 改进–覆盖前面字符</h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example4-wg0m349bg9a.py">命名为example4.py</a>。</p><p>显示进度条时，应该是让新输出的字符覆盖已存在的字符。为了解决这个问题，我们只需要使用一个字符：回车符 \r。回车符的作用是回到行首，这时我们新输出的字符将会覆盖同一行内已存在的字符。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="title function_">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.<span class="title function_">sleep</span>(<span class="number">0.3</span>)</span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&#x27;\r&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="title function_">print</span>(<span class="title function_">str</span>(i)*<span class="number">10</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    sys.<span class="property">stdout</span>.<span class="title function_">flush</span>()</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example4.<span class="property">py</span></span><br></pre></td></tr></table></figure><p>观察运行效果，可以下载附件中的4.mp4，查看运行效果是否一致。</p><h3 id="2-5-改进–简化代码"><strong>2.5 改进–简化代码</strong></h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example5-wg0m349bg9a.py">命名为example5.py</a>。</p><p>函数print()默认end＝’\n’，而sys.stdout.write()默认sep=’ '。使用sys.stdout.write()更简洁一些。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="title function_">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.<span class="title function_">sleep</span>(<span class="number">0.3</span>)</span><br><span class="line">    sys.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">    sys.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="title function_">str</span>(i)*<span class="number">10</span>)</span><br><span class="line">    sys.<span class="property">stdout</span>.<span class="title function_">flush</span>()</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example5.<span class="property">py</span></span><br></pre></td></tr></table></figure><p>输出结果和5.2.4一模一样。</p><h3 id="2-6-简单的进度条">2.6 简单的进度条</h3><p>使用Spyder新建一个Python文件，<a href="http://xn--example6-wg0m349bg9a.py">命名为example6.py</a>。</p><p>下面将运用上面的知识实现一个最简单的进度条，以此来深入理解进度条的工作原理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">progress_dict = &#123;</span><br><span class="line">        <span class="string">&#x27;0&#x27;</span>:<span class="string">&#x27;[#####--------------------] 20%&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;[##########---------------] 40%&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;2&#x27;</span>:<span class="string">&#x27;[###############----------] 60%&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;3&#x27;</span>:<span class="string">&#x27;[####################-----] 80%&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;4&#x27;</span>:<span class="string">&#x27;[#########################] 100%&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    sys.stdout.write(<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">    sys.stdout.write(progress_dict[<span class="built_in">str</span>(i)])</span><br><span class="line">    sys.stdout.flush()</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python example6.<span class="property">py</span></span><br></pre></td></tr></table></figure><h2 id="3-编写进度条函数">3 编写进度条函数</h2><p>使用Spyder新建一个Python文件，<a href="http://xn--progressbar-g68qw91d1nb.py">命名为progressbar.py</a>。</p><p>为了让代码具有通用性，我们编写一个函数，叫show_process()。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># -*- <span class="attr">coding</span>: utf-<span class="number">8</span> -*-</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">show_process</span>(current_step, max_step, message):</span><br></pre></td></tr></table></figure><p>接下来定义3个全局变量：</p><p>1）进度条的长度。进度条太长了不好看，太短了不好看。在这里我们定义50个字符的长度</p><p>2）已完成的进度符号。已完成的进度用#表示</p><p>3）未完成的进度符号。未完成的进度用-表示</p><p>这3个全局变量决定了进度条的效果如下图所示：</p><p><img src="https://sandbox-images-pro-1304756856.cos.ap-guangzhou.myqcloud.com/companyId-115/qcloudId-100006833497/1586146418664-1.jpg" alt="img">图17 进度条效果</p><p>定义3个全局变量的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COMPLETED_CHAR = <span class="string">&#x27;#&#x27;</span> <span class="comment"># 进度条已完成的符号</span></span><br><span class="line">UNCOMPLETED_CHAR = <span class="string">&#x27;-&#x27;</span> <span class="comment"># 进度条未完成的符号</span></span><br><span class="line">MAX_SYMBOL = <span class="number">50</span> <span class="comment"># 一共有多少个符号(#和-)</span></span><br></pre></td></tr></table></figure><p>下面是进度条最难的一步：计算应该显示几个#，计算应该显示几个-，计算进度百分比。代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num_completed_char = <span class="built_in">int</span>(current_step * MAX_SYMBOL / max_step) <span class="comment">#计算显示多少个COMPLETED_CHAR</span></span><br><span class="line">num_uncompleted_char = MAX_SYMBOL - num_completed_char <span class="comment">#计算显示多少个UNCOMPLETED_CHAR</span></span><br><span class="line">percent = current_step * <span class="number">100.0</span> / max_step <span class="comment">#计算完成进度</span></span><br></pre></td></tr></table></figure><p>使用sys.stdout.write()函数将内容显示出来，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">process_bar = <span class="string">&#x27;[&#x27;</span> + <span class="variable constant_">COMPLETED_CHAR</span> * num_completed_char + <span class="variable constant_">UNCOMPLETED_CHAR</span> * num_uncompleted_char + <span class="string">&#x27;]&#x27;</span> + <span class="string">&#x27; %.2f&#x27;</span> % percent + <span class="string">&#x27;% &#x27;</span> + message</span><br><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">write</span>(process_bar) #这两句打印字符到终端</span><br><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">flush</span>()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">process_bar = <span class="string">&#x27;[&#x27;</span> + <span class="variable constant_">COMPLETED_CHAR</span> * num_completed_char + <span class="variable constant_">UNCOMPLETED_CHAR</span> * num_uncompleted_char + <span class="string">&#x27;]&#x27;</span> + <span class="string">&#x27; %.2f&#x27;</span> % percent + <span class="string">&#x27;% &#x27;</span> + message</span><br><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">write</span>(process_bar) #这两句打印字符到终端</span><br><span class="line">sys.<span class="property">stdout</span>.<span class="title function_">flush</span>()</span><br></pre></td></tr></table></figure><p>如果完成了，输出一个标识，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> current_step &gt;= max_step:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\nDone.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>进度条的函数完成后，我们来模拟一个场景。</p><p>下载150张图片；每下载一张图片需要0.2秒钟。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 场景：下载150张图片；每下载一张图片需要0.2秒钟。</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    image_count = <span class="number">150</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, image_count+<span class="number">1</span>):</span><br><span class="line">        message = <span class="string">&#x27;downloading image_%d.jpg (%d/%d)...&#x27;</span> %(i, i, image_count)</span><br><span class="line">        show_process(i, image_count, message)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><p>按Ctrl+s组合键保存代码。</p><p>在新打开的终端中输入下面命令执行程序：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python progressbar.<span class="property">py</span></span><br></pre></td></tr></table></figure><p>progressbar.py的完整代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_process</span>(<span class="params">current_step, max_step, message</span>):</span><br><span class="line">    COMPLETED_CHAR = <span class="string">&#x27;#&#x27;</span> <span class="comment"># 进度条已完成的符号</span></span><br><span class="line">    UNCOMPLETED_CHAR = <span class="string">&#x27;-&#x27;</span> <span class="comment"># 进度条未完成的符号</span></span><br><span class="line">    MAX_SYMBOL = <span class="number">50</span> <span class="comment"># 一共有多少个符号(#和-)</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    num_completed_char = <span class="built_in">int</span>(current_step * MAX_SYMBOL / max_step) <span class="comment">#计算显示多少个COMPLETED_CHAR</span></span><br><span class="line">    num_uncompleted_char = MAX_SYMBOL - num_completed_char <span class="comment">#计算显示多少个UNCOMPLETED_CHAR</span></span><br><span class="line">    percent = current_step * <span class="number">100.0</span> / max_step <span class="comment">#计算完成进度</span></span><br><span class="line">    </span><br><span class="line">    sys.stdout.write(<span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">    process_bar = <span class="string">&#x27;[&#x27;</span> + COMPLETED_CHAR * num_completed_char + UNCOMPLETED_CHAR * num_uncompleted_char + <span class="string">&#x27;]&#x27;</span> + <span class="string">&#x27; %.2f&#x27;</span> % percent + <span class="string">&#x27;% &#x27;</span> + message</span><br><span class="line">    sys.stdout.write(process_bar) <span class="comment">#这两句打印字符到终端</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> current_step &gt;= max_step:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;\nDone.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 场景：下载150张图片；每下载一张图片需要0.2秒钟。</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    image_count = <span class="number">150</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, image_count+<span class="number">1</span>):</span><br><span class="line">        message = <span class="string">&#x27;downloading image_%d.jpg (%d/%d)...&#x27;</span> %(i, i, image_count)</span><br><span class="line">        show_process(i, image_count, message)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><h2 id="4-实验总结">4 实验总结</h2><p>本实验掌握了命令行动态进度条的原理，并加深了对输出缓冲区、Python函数的理解。</p>]]></content>
      
      
      <categories>
          
          <category> 语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成学习</title>
      <link href="/2022/10/29/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/10/29/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>集成学习</h1><p>集成学习（Ensemble Learning）是机器学习中的一种思想，通过多个模型的组合形成一个精度更高的模型。</p><p>参与组合的模型为弱学习器（Weak Learner）。在预测时使用这些弱学习器模型联合进行预测。集成学习模型在训练时需要用训练样本依次训练出这些弱学习器。</p><p>集成学习在各个规模的数据集上都有很好的策略。</p><ul><li><strong>数据集大：划分成多个小数据集，学习多个模型进行组合</strong></li><li><strong>数据集小：利用Bootstrap方法进行抽样，得到多个数据集，分别训练多个模型再进行组合</strong></li></ul><h2 id="voting投票机制">voting投票机制</h2><h3 id="思路">思路</h3><p>投票机制(voting)是集成学习里面针对分类问题的一种结合策略，基本思想是融合多个数据来降低误差。<br>对于<strong>回归模型</strong>：投票法最终的预测结果是多个其他<a href="https://so.csdn.net/so/search?q=%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B&amp;spm=1001.2101.3001.7020">回归模型</a>预测结果的<strong>平均值</strong>。</p><p>对于<strong>分类模型</strong>：硬投票法的预测结果是多个模型预测结果中出现次数最多的类别，软投票对各类预测结果的概率求和，最终选取<strong>概率之和</strong>的最大的类标签。</p><p><img src="https://img-blog.csdnimg.cn/20210414193934351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d1b3dlaV9odWFp,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="原理分析">原理分析</h3><p>投票法是通过多个模型的集成降低方差，从而提高模型的鲁棒性。<br>对于分类投票法，根据输出的两种类型：输出类标签和输出类概率，将前者称为<strong>硬投票</strong>(Majority/Hard voting)，将后者称为<strong>软投票</strong>（Soft Voting）。简而言之，硬投票的预测结果就是所有投票结果中最多出现的类，软投票是预测结果就是所有投票结果中概率加和最大的类。</p><h3 id="注意事项">注意事项</h3><p>在投票法中，我们需要考虑到不同的基模型可能产生的影响。理论上，基模型可以是任何已经被训练好的模型。但是在实际应用中，想要投票法产生较好的结果，需要满足两个条件：</p><ul><li>基模型之间的效果不能差别过大。当某个基模型相对于其他基型效果过差时，该模型很可能称为噪声。</li><li>基模型之间应该有较小的[同质性]。例如在基模型预测效果近似的情况下，基于树模型与线性模型的投票，往往优于两个树模型或两个线性模型。(<a href="https://baike.baidu.com/item/%E5%90%8C%E8%B4%A8%E6%80%A7">https://baike.baidu.com/item/同质性</a>)</li></ul><p>当投票合集中使用的模型能预测出<strong>清晰的类别标签</strong>时，适合用硬投票。当投票集合中使用的模型能预测类别的概率时，适合用软投票。软投票同样可以用于那些本身并不预测类成员概率的模型，只要他们可以输出类似于概率的<strong>预测分数值</strong>(例如支持向量机、k-最近邻和决策树)。</p><p><a href="https://blog.csdn.net/guowei_huai/article/details/115706974">集成学习投票法</a></p><h2 id="Bagging"><strong>Bagging</strong></h2><p>Bagging是bootstrap aggregating的简写。先说一下bootstrap，bootstrap也称为自助法，它是一种有放回的抽样方法，目的为了得到统计量的分布以及置信区间。具体步骤如下</p><ul><li><strong>采用重抽样方法（有放回抽样）从原始样本中抽取一定数量的样本</strong></li><li><strong>根据抽出的样本计算想要得到的统计量T</strong></li><li><strong>重复上述N次（一般大于1000），得到N个统计量T</strong></li><li><strong>根据这N个统计量，即可计算出统计量的置信区间</strong></li></ul><p>在Bagging方法中，利用bootstrap方法从整体数据集中采取有放回抽样得到N个数据集，在每个数据集上学习出一个模型，最后的预测结果利用N个模型的输出得到，具体地：分类问题采用N个模型预测投票的方式，回归问题采用N个模型预测平均的方式。</p><p>例如**随机森林（Random Forest）**就属于Bagging。随机森林简单地来说就是用随机的方式建立一个森林，森林由很多的决策树组成，随机森林的每一棵决策树之间是没有关联的。</p><p>在我们学习每一棵决策树的时候就需要用到Bootstrap方法。在随机森林中，有两个随机采样的过程：对输入数据的**行（数据的数量）与列（数据的特征）**都进行采样。对于行采样，采用有放回的方式，若有N个数据，则采样出N个数据（可能有重复），这样在训练的时候每一棵树都不是全部的样本，相对而言不容易出现overfitting；接着进行列采样从M个feature中选择出m个（m&lt;&lt;M）。最近进行决策树的学习。</p><p>预测的时候，随机森林中的每一棵树的都对输入进行预测，最后进行投票，哪个类别多，输入样本就属于哪个类别。这就相当于前面说的，每一个分类器（每一棵树）都比较弱，但组合到一起（投票）就比较强了。</p><h2 id="Boosting"><strong>Boosting</strong></h2><p><strong>提升方法</strong>**（Boosting）<strong>是一种可以用来减小监督学习中偏差的机器学习算法。主要也是学习一系列弱分类器，并将其组合为一个强分类器。Boosting中有代表性的是</strong>AdaBoost（Adaptive boosting）算法**：刚开始训练时对每一个训练例赋相等的权重，然后用该算法对训练集训练t轮，每次训练后，对训练失败的训练例赋以较大的权重，也就是让学习算法在每次学习以后更注意学错的样本，从而得到多个预测函数。具体可以参考《统计学习方法》。</p><p>之前提到过的**GBDT（Gradient Boost Decision Tree)**也是一种Boosting的方法，与AdaBoost不同，GBDT每一次的计算是为了减少上一次的残差，GBDT在残差减少（负梯度）的方向上建立一个新的模型。可以参考<a href="https://zhuanlan.zhihu.com/p/26327929">Gradient Boosting - 知乎专栏</a>。</p><h2 id="Stacking"><strong>Stacking</strong></h2><p>Stacking方法是指训练一个模型用于组合其他各个模型。首先我们先训练多个不同的模型，然后把之前训练的各个模型的输出为输入来训练一个模型，以得到一个最终的输出。理论上，Stacking可以表示上面提到的两种Ensemble方法，只要我们采用合适的模型组合策略即可。但在实际中，我们通常使用logistic回归作为组合策略。</p><p>如下图，先在整个训练数据集上通过bootstrap抽样得到各个训练集合，得到一系列分类模型，称之为Tier 1分类器（可以采用交叉验证的方式学习），然后将输出用于训练Tier 2 分类器。</p><p><img src="https://pic2.zhimg.com/80/v2-bc3b2612dd0ff778c53db4165bc35449_720w.webp" alt="img"></p><h2 id="Bagging与Boosting"><strong>Bagging与Boosting</strong></h2><p>Bagging和Boosting采用的都是<strong>采样-学习-组合</strong>的方式，但在细节上有一些不同，如</p><ul><li><strong>Bagging中每个训练集互不相关，也就是每个基分类器互不相关，而Boosting中训练集要在上一轮的结果上进行调整，也使得其不能并行计算</strong></li><li><strong>Bagging中预测函数是均匀平等的，但在Boosting中预测函数是加权的</strong></li></ul><p>在算法学习的时候，通常在bias和variance之间要有一个权衡。bias与variance的关系如下图，因而模型要想达到最优的效果，必须要兼顾bias和variance，也就是要采取策略使得两者比较平衡。</p><p><img src="https://pic4.zhimg.com/80/v2-9000c0e50e1a97d0d12e85dc93affa5f_720w.webp" alt="img"></p><p>从算法来看，Bagging关注的是多个基模型的投票组合，保证了模型的稳定，因而每一个基模型就要相对复杂一些以降低偏差（比如每一棵决策树都很深）；而Boosting采用的策略是在每一次学习中都减少上一轮的偏差，因而在保证了偏差的基础上就要将每一个基分类器简化使得方差更小。</p><p>Boosting算法不是对样本进行随机抽样构造训练集，而是关注被前面的弱分类器错分的样本。</p><h3 id="模型冗余，和数据特征冗余">模型冗余，和数据特征冗余</h3><p>在集成学习的路上，如果相同模型基础的，使用集成学习可能效果不佳，谨慎使用。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K折交叉验证</title>
      <link href="/2022/10/29/K%E6%8A%98%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/"/>
      <url>/2022/10/29/K%E6%8A%98%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h1>K折交叉验证</h1><p>K-Fold Cross Validation K折交叉验证，将原始数据分成K组（一般是均分），将每个子集数据分别做一次测试集，其余K-1组子集数据作为训练集。这样可得到K个模型/</p><p>用这K个模型最终在验证集的评估指标分数（如准确率、R2）<strong>平均数</strong>作为偏差，评估指标分数的标准差作为方差。</p><p><a href="https://imgse.com/i/x4vpLQ"><img src="https://s1.ax1x.com/2022/10/29/x4vpLQ.png" alt="x4vpLQ.png"></a></p><p>静态的「留出法」对数据的划分方式比较敏感，有可能不同的划分方式得到了不同的模型。「k 折交叉验证」是一种动态验证的方式，这种方式可以降低数据划分带来的影响。具体步骤如下：</p><p>将数据集分为训练集和测试集，将测试集放在一边<br>将训练集分为 k 份<br>每次使用 k 份中的 1 份作为验证集，其他全部作为训练集。<br>通过 k 次训练后，我们得到了 k 个不同的模型。<br>评估 k 个模型的效果，从中挑选效果最好的超参数<br>使用最优的超参数，然后将 k 份数据全部作为训练集重新训练模型，得到最终模型。</p><p><strong>1.使用 train/test split 进行模型评估的缺点</strong></p><p>Train/test split 是将原始数据集划分为训练集/测试集，避免了为了追求高准确率而在训练集上产生过拟合，从而使得模型在样本外的数据上预测准确率高。</p><p>但是，划分出训练集/测试集的不同会使得模型的准确率产生明显的变化。以上一篇 iris 为例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 使用 train/test split, random_state=4</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=4)</span><br><span class="line"></span><br><span class="line"># 评估模型的分类准确率</span><br><span class="line">knn = KNeighborsClassifier(n_neighbors=5)</span><br><span class="line">knn.fit(X_train, y_train)</span><br><span class="line">print(knn.score(X_test, y_test))</span><br><span class="line">```</span><br><span class="line">0.973684210526</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"># 改变 random_state=3</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=3)</span><br><span class="line"></span><br><span class="line"># 评估模型的分类准确率</span><br><span class="line">knn = KNeighborsClassifier(n_neighbors=5)</span><br><span class="line">knn.fit(X_train, y_train)</span><br><span class="line">print(knn.score(X_test, y_test))</span><br><span class="line">```</span><br><span class="line">0.947368421053</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>为了消除这一变化因素，我们可以创建一系列训练集/测试集，计算模型在每个测试集上的准确率，然后计算平均值。</p><p>这就是 <strong>K-fold cross-validation</strong> 的本质**。**</p><p><strong>2. K-fold cross-validation</strong> <strong>如何克服这些缺点</strong></p><p>K-fold cross-validation的步骤：</p><ol><li>将原始数据集划分为相等的K部分（“折”）</li><li>将第1部分作为测试集，其余作为训练集</li><li>训练模型，计算模型在测试集上的准确率</li><li>每次用不同的部分作为测试集，重复步骤2和3 K次</li><li>将平均准确率作为最终的模型准确率</li></ol><p><img src="https://pic3.zhimg.com/80/v2-dd15830a7231489187e607182efd376e_720w.webp" alt="img"></p><p>5-fold cross-validation</p><p>模拟5-fold cross-validation：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from sklearn.cross_validation import KFold</span><br><span class="line">kf = KFold(25, n_folds=5, shuffle=False)</span><br><span class="line"></span><br><span class="line"># 打印每个训练集和测试集</span><br><span class="line">print(&#x27;&#123;&#125; &#123;:^61&#125; &#123;&#125;&#x27;.format(&#x27;Iteration&#x27;, &#x27;Training set observations&#x27;, &#x27;Testing set observations&#x27;))</span><br><span class="line">for iteration, data in enumerate(kf, start=1):</span><br><span class="line">    print(&#x27;&#123;:^9&#125; &#123;&#125; &#123;:^25&#125;&#x27;.format(iteration, str(data[0]), str(data[1])))</span><br></pre></td></tr></table></figure><p><img src="https://pic3.zhimg.com/80/v2-773339d1d972e4e7154a41e276a6ce3e_720w.webp" alt="img"></p><p>the contents of each training and testing set</p><ul><li>原始数据包含25个样本</li><li>5折交叉验证运行了5次迭代</li><li>每次迭代，每个样本只在训练集中或者测试集中</li><li>每个样本只在测试集中出现一次</li></ul><p>对比 cross-validation 和 train/test split 可以发现：</p><ul><li>cross-validation 对于样本外数据有更高的准确率</li><li>cross-validation 更有效的发挥样本的作用</li></ul><p><strong>3. K-fold cross-validation 如何用于参数调优以及选择模型和特征</strong></p><p>以 KNN 模型为例，当 KNN 的 K=5 时， 10-fold cross-validation （K-fold cross-validation 的 K 可以选择任意整数，但通常选择10，这是实践中效果最好的值）过程如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from sklearn.neighbors import KNeighborsClassifier</span><br><span class="line">from sklearn.cross_validation import cross_val_score</span><br><span class="line"></span><br><span class="line"># 实例化KNN模型,KNN的K=5</span><br><span class="line">knn = KNeighborsClassifier(n_neighbors=5)</span><br><span class="line"># 10-fold cross-validation,cv=10</span><br><span class="line">scores = cross_val_score(knn, X, y, cv=10, scoring=&#x27;accuracy&#x27;)</span><br><span class="line">print(scores)</span><br><span class="line">```</span><br><span class="line">[ 1.          0.93333333  1.          1.          0.86666667  0.93333333</span><br><span class="line">  0.93333333  1.          1.          1.        ]</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"># 计算平均值</span><br><span class="line">print(scores.mean())</span><br><span class="line">```</span><br><span class="line">0.966666666667</span><br><span class="line">```</span><br></pre></td></tr></table></figure><blockquote><p>注意：cross_val_score() 传入的 X 和 y 是原始特征和标签，而非经过 train/test split 的训练集。划分过程由 cross_val_score() 函数内完成。</p></blockquote><p>利用 10-fold cross-validation 寻找 KNN 模型中效果最好的 K：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">k_range = list(range(1, 31))  # K的范围[1, 30]</span><br><span class="line">k_scores = []  # 存放每个K的评价结果</span><br><span class="line">for k in k_range:</span><br><span class="line">    knn = KNeighborsClassifier(n_neighbors=k)</span><br><span class="line">    scores = cross_val_score(knn, X, y, cv=10, scoring=&#x27;accuracy&#x27;)</span><br><span class="line">    k_scores.append(scores.mean())</span><br><span class="line">print(k_scores)</span><br><span class="line">```</span><br><span class="line">[0.95999999999999996, 0.95333333333333337, 0.96666666666666656, </span><br><span class="line">0.96666666666666656, 0.96666666666666679, 0.96666666666666679, </span><br><span class="line">0.96666666666666679, 0.96666666666666679, 0.97333333333333338, </span><br><span class="line">0.96666666666666679, 0.96666666666666679, 0.97333333333333338, </span><br><span class="line">0.98000000000000009, 0.97333333333333338, 0.97333333333333338, </span><br><span class="line">0.97333333333333338, 0.97333333333333338, 0.98000000000000009, </span><br><span class="line">0.97333333333333338, 0.98000000000000009, 0.96666666666666656, </span><br><span class="line">0.96666666666666656, 0.97333333333333338, 0.95999999999999996, </span><br><span class="line">0.96666666666666656, 0.95999999999999996, 0.96666666666666656, </span><br><span class="line">0.95333333333333337, 0.95333333333333337, 0.95333333333333337]</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line"># 将结果可视化</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"># plot the value of K for KNN (x-axis) versus the cross-validated accuracy (y-axis)</span><br><span class="line">plt.plot(k_range, k_scores)</span><br><span class="line">plt.xlabel(&#x27;Value of K for KNN&#x27;)</span><br><span class="line">plt.ylabel(&#x27;Cross-Validated Accuracy&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://pic1.zhimg.com/80/v2-87ea9fed079102cdf0d988706f0c0cd0_720w.webp" alt="img"></p><p>准确率最高的 KNN 的 K的范围是[13, 20]，整个曲线的形状是倒U形。考虑偏差方差平衡，偏低的K值产生低偏差和高方差，较高的K值产生高偏差和低方差，最好的模型K值应折中，以平衡偏差和方差。</p><p>在 KNN 模型中，通常建议选择使得模型最简单的K值，越高的K会使模型复杂性越低，因此此例中选择 K=20 作为最好的 KNN 模型。</p><p><strong>4. K-fold cross-validation 可能的改进措施</strong></p><ul><li><p>重复利用不同的随机分组数据进行交叉验证</p></li><li><p>降低交叉验证单一方案的方差来提高样本外的预测准确率</p></li><li><p>将原始数据中的一部分数据设置为 “hold-out set”，在其余部分进行 CV 的整个过程，但模型最终准确率为模型在 hold-out set 上的准确率，因为 hold-out set <strong>相当于样本外的数据</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超参数</title>
      <link href="/2022/10/29/%E8%B6%85%E5%8F%82%E6%95%B0/"/>
      <url>/2022/10/29/%E8%B6%85%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>超参数</h1><p>【1】超参数的“学院派”定义：</p><blockquote><p>在机器学习的过程中，<br>超参= 在开始机器学习之前，就人为设置好的参数。<br>模型参数=通过训练得到的参数数据。<br>通常情况下，需要对超参数进行优化，给学习机选择一组最优超参数，以提高学习的性能和效果</p></blockquote><p>【2】怎么决定超参数？</p><blockquote><ol><li>定义关于模型的更高层次的概念，如复杂性或学习能力。<br>\2. 不能直接从标准模型培训过程中的数据中学习，需要预先定义。<br>\3. 可以通过设置不同的值，训练不同的模型和选择更好的测试值来决定</li></ol></blockquote><blockquote><p>【3】超参数的“通俗”定义：</p></blockquote><p>超参数也是一种参数，它具有参数的特性，比如未知，也就是它不是一个已知常量。<br>是一种手工可配置的设置，需要为它根据已有或现有的经验，指定“正确”的值，也就是人为为它设定一个值，它不是通过系统学习得到的。</p><p>【4】超参数的一些示例：</p><blockquote><p>\1. 聚类中类的个数<br>\2. 话题模型中话题的数量<br>\3. 模型的学习率<br>\4. 深层神经网络隐藏层数<br>5.树的数量或树的深度<br>\6. 矩阵分解中潜在因素的数量<br>\7. k均值聚类中的簇数</p></blockquote><h2 id="模型优化本质">模型优化本质</h2><p>模型优化就是通过调整模型超参数使得模型性能打到最优。</p><ul><li>手动调参</li><li>网格搜索法（Grid Search）：穷举搜索指定参数值，将尝试每个参数的组合。</li></ul><h2 id="参数和超参数的区别：">参数和超参数的区别：</h2><ul><li>模型参数是模型内部的配置变量，需要用数据估计模型参数的值。</li><li>模型超参数是模型外部的配置，其值无法从数据中估计，需要手动设置，并且在过程中用于帮助估计模型参数。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>损失函数补充</title>
      <link href="/2022/09/29/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E8%A1%A5%E5%85%85-1/"/>
      <url>/2022/09/29/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E8%A1%A5%E5%85%85-1/</url>
      
        <content type="html"><![CDATA[<p>损失函数–定义函数模型的好坏</p><h1>损失函数（Loss Function）</h1><h2 id="摘要："><strong>摘要：</strong></h2><p>本文主要介绍几个机器学习中常用的损失函数，解释其原理，性能优缺点和适用范围。</p><hr><p>目录：</p><ol><li>什么是损失函数？</li><li>为什么要用损失函数？</li><li>有哪些损失函数？</li><li><ol><li>基于距离度量的损失函数</li><li><ol><li>均方误差损失函数（MSE）</li><li>L2损失函数</li><li>L1损失函数</li><li>Smooth L1损失函数</li><li>huber损失函数</li></ol></li><li>基于概率分布度量的损失函数</li><li><ol><li>KL散度函数（相对熵）</li><li>交叉熵损失</li><li>softmax损失函数</li><li>Focal loss</li></ol></li></ol></li><li>如何选择损失函数？</li><li>参考资料</li></ol><h2 id="1-什么是损失函数？"><strong>1. 什么是损失函数？</strong></h2><p>一言以蔽之，损失函数（loss function）就是用来度量模型的预测值f(x)与真实值Y的差异程度的运算函数，它是一个非负实值函数，通常使用L(Y, f(x))来表示，损失函数越小，模型的鲁棒性就越好。</p><h2 id="2-为什么使用损失函数？"><strong>2. 为什么使用损失函数？</strong></h2><p>损失函数使用主要是在模型的训练阶段，每个批次的训练数据送入模型后，通过前向传播输出预测值，然后损失函数会计算出预测值和真实值之间的差异值，也就是损失值。得到损失值之后，模型通过反向传播去更新各个参数，来降低真实值与预测值之间的损失，使得模型生成的预测值往真实值方向靠拢，从而达到学习的目的。</p><h2 id="3-有哪些损失函数？"><strong>3. 有哪些损失函数？</strong></h2><p><strong>3.1 基于距离度量的损失函数</strong></p><p>基于距离度量的损失函数通常将输入数据映射到基于距离度量的特征空间上，如欧氏空间、汉明空间等，将映射后的样本看作空间上的点，采用合适的损失函数度量特征空间上样本真实值和模型预测值之间的距离。特征空间上两个点的距离越小，模型的预测性能越好。</p><p>3.1.1 均方误差损失函数（MSE）</p><blockquote><p>公式：</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\frac{1}{n} \sum_{i=1}^{N}\left(Y_{i}-f\left(x_{i}\right)\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>在回归问题中，均方误差损失函数用于度量样本点到回归曲线的距离，通过最小化平方损失使样本点可以更好地拟合回归曲线。均方误差损失函数（MSE）的值越小，表示预测模型描述的样本数据具有越好的精确度。由于无参数、计算成本低和具有明确物理意义等优点，MSE已成为一种优秀的距离度量方法。尽管MSE在图像和语音处理方面表现较弱，但它仍是评价信号质量的标准，在回归问题中，MSE常被作为模型的经验损失或算法的性能指标。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def MSELoss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sum(np.square(x - y)) / len(x)</span><br><span class="line">    return loss</span><br><span class="line"></span><br><span class="line">#计算过程举例</span><br><span class="line">x=[1,2]</span><br><span class="line">y=[0,1]</span><br><span class="line">loss=（（1-0）**2 + （2-1）**2）÷2=（1+1）÷2=1</span><br><span class="line"></span><br><span class="line"># Tensorflow2.0版</span><br><span class="line">y_true=tf.convert_to_tensor(y)</span><br><span class="line">y_pred=tf.convert_to_tensor(x)</span><br><span class="line">mse_loss = tf.keras.losses.MSE(y_true, y_pred) # y_true, y_pred都是张量格式</span><br><span class="line"></span><br><span class="line"># pytorch版本</span><br><span class="line">y_true=torch.tensor(y)</span><br><span class="line">y_pred=torch.tensor(x)</span><br><span class="line">mse_fc = torch.nn.MSELoss(y_true, y_pred)</span><br><span class="line">mse_loss = mse_fc(x,y)</span><br></pre></td></tr></table></figure><p>3.1.2 L2损失函数</p><blockquote><p>L2损失函数： L(Y|f(x))=1n∑i=1N(Yi−f(xi))2</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sqrt{\frac{1}{n} \sum_{i=1}^{N}\left(Y_{i}-f\left(x_{i}\right)\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3338em;vertical-align:-1.2777em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0561em;"><span class="svg-align" style="top:-5.2938em;"><span class="pstrut" style="height:5.2938em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.0161em;"><span class="pstrut" style="height:5.2938em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.3738em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.3738em' viewBox='0 0 400000 3373' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040H742v3239l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span></span></span></span></span></p><p>L2损失又被称为欧氏距离，是一种常用的距离度量方法，通常用于度量数据点之间的相似度。由于L2损失具有凸性和可微性，且在独立、同分布的高斯噪声情况下，它能提供最大似然估计，使得它成为回归问题、模式识别、图像处理中最常使用的损失函数。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def L2Loss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sqrt(np.sum(np.square(x - y)) / len(x))</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.3 L1损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sum_{i=1}^{N}\left|Y_{i}-f\left(x_{i}\right)\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p><p>L1损失又称为曼哈顿距离，表示残差的绝对值之和。L1损失函数对离群点有很好的鲁棒性，但它在残差为零处却不可导。另一个缺点是更新的梯度始终相同，也就是说，即使很小的损失值，梯度也很大，这样不利于模型的收敛。针对它的收敛问题，一般的解决办法是在优化算法中使用变化的学习率，在损失接近最小值时降低学习率。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def L1Loss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sum(np.abs(x - y)) / len(x)</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.4 Smooth L1损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\left\{\begin{array}{ll}\frac{1}{2}(Y-f(x))^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&lt;1 \\|Y-f(x)|-\frac{1}{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&gt;=1\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4102em;vertical-align:-0.9551em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>Smooth L1损失是由Girshick R在Fast R-CNN中提出的，主要用在目标检测中防止梯度爆炸。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def Smooth_L1(x,y):</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    loss=0</span><br><span class="line">    for i_x,i_y in zip(x,y):</span><br><span class="line">        tmp = abs(i_y-i_x)</span><br><span class="line">        if tmp&lt;1:</span><br><span class="line">            loss+=0.5*(tmp**2)</span><br><span class="line">        else:</span><br><span class="line">            loss+=tmp-0.5</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.5 huber损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>=</mo><mi>δ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>δ</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>δ</mi><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mi>δ</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\left\{\begin{array}{ll}\frac{1}{2}(Y-f(x))^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&lt;=\delta \\\delta|Y-f(x)|-\frac{1}{2} \delta^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&gt;\delta\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4102em;vertical-align:-0.9551em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>huber损失是平方损失和绝对损失的综合，它克服了平方损失和绝对损失的缺点，不仅使损失函数具有连续的导数，而且利用MSE梯度随误差减小的特性，可取得更精确的最小值。尽管huber损失对异常点具有更好的鲁棒性，但是，它不仅引入了额外的参数，而且选择合适的参数比较困难，这也增加了训练和调试的工作量。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delta=1.0  # 先定义超参数</span><br><span class="line"></span><br><span class="line">def huber_loss(x,y):</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    loss=0</span><br><span class="line">    for i_x,i_y in zip(x,y):</span><br><span class="line">        tmp = abs(i_y-i_x)</span><br><span class="line">        if tmp&lt;=delta:</span><br><span class="line">            loss+=0.5*(tmp**2)</span><br><span class="line">        else:</span><br><span class="line">            loss+=tmp*delta-0.5*delta**2</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p><strong>3.2 基于概率分布度量的损失函数</strong></p><p>基于概率分布度量的损失函数是将样本间的相似性转化为随机事件出现的可能性，即通过度量样本的真实分布与它估计的分布之间的距离，判断两者的相似度，一般用于涉及概率分布或预测类别出现的概率的应用问题中，在分类问题中尤为常用。</p><p>3.2.1 KL散度函数（相对熵）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>Y</mi><mi>i</mi></msub><mo>×</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><msub><mi>Y</mi><mi>i</mi></msub><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sum_{i=1}^{n} Y_{i} \times \log \left(\frac{Y_{i}}{f\left(x_{i}\right)}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>公式中Y代表真实值，f(x)代表预测值。</p><p>KL散度（ Kullback-Leibler divergence）也被称为相对熵，是一种非对称度量方法，常用于度量两个概率分布之间的距离。KL散度也可以衡量两个随机分布之间的距离，两个随机分布的相似度越高的，它们的KL散度越小，当两个随机分布的差别增大时，它们的KL散度也会增大，因此KL散度可以用于比较文本标签或图像的相似性。基于KL散度的演化损失函数有JS散度函数。JS散度也称JS距离，用于衡量两个概率分布之间的相似度，它是基于KL散度的一种变形，消除了KL散度非对称的问题，与KL散度相比，它使得相似度判别更加准确。</p><p>相对熵是恒大于等于0的。当且仅当两分布相同时，相对熵等于0。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def kl_loss(y_true:list,y_pred:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    y_true,y_pred，分别是两个概率分布</span><br><span class="line">    比如：px=[0.1,0.2,0.8]</span><br><span class="line">          py=[0.3,0.3,0.4]</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(y_true)==len(y_pred)</span><br><span class="line">    KL=0</span><br><span class="line">    for y,fx in zip(y_true,y_pred):</span><br><span class="line">        KL+=y*np.log(y/fx)</span><br><span class="line">    return KL</span><br></pre></td></tr></table></figure><p>3.2.2 交叉熵损失</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>Y</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=-\sum_{i=1}^{N} Y_{i} \log f\left(x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>交叉熵是信息论中的一个概念，最初用于估算平均编码长度，引入机器学习后，用于评估当前训练得到的概率分布与真实分布的差异情况。为了使神经网络的每一层输出从线性组合转为非线性逼近，以提高模型的预测精度，在以交叉熵为损失函数的神经网络模型中一般选用tanh、sigmoid、softmax或ReLU作为激活函数。</p><p>交叉熵损失函数刻画了实际输出概率与期望输出概率之间的相似度，也就是交叉熵的值越小，两个概率分布就越接近，特别是在正负样本不均衡的分类问题中，常用交叉熵作为损失函数。目前，交叉熵损失函数是卷积神经网络中最常使用的分类损失函数，它可以有效避免梯度消散。在二分类情况下也叫做对数损失函数。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def CrossEntropy_loss(y_true:list,y_pred:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    y_true,y_pred，分别是两个概率分布</span><br><span class="line">    比如：px=[0.1,0.2,0.8]</span><br><span class="line">          py=[0.3,0.3,0.4]</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(y_true)==len(y_pred)</span><br><span class="line">    loss=0</span><br><span class="line">    for y,fx in zip(y_true,y_pred):</span><br><span class="line">        loss+=-y * np.log(fx)</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>当正负样本不均衡的时候，通常会在交叉熵损失函数类别前面加个参数α</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>E</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">C E=\left\{\begin{array}{ll}-\alpha \log (p) &amp; \mathrm{y}=1 \\-(1-\alpha) \log (1-p) &amp; \mathrm{y}=0\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">CE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>3.2.3 softmax损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>f</mi><msub><mi>Y</mi><mi>i</mi></msub></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></munderover><msup><mi>e</mi><msub><mi>f</mi><mi>j</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=-\frac{1}{n} \sum_{i=1}^{n} \log \frac{e^{f_{Y_{i}}}}{\sum_{j=1}^{c} e^{f_{j}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5285em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7912em;"><span style="top:-3.0051em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8515em;"><span style="top:-3.0654em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.1076em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.2222em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3681em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>从标准形式上看，softmax损失函数应归到对数损失的范畴，在监督学习中，由于它被广泛使用，所以单独形成一个类别。softmax损失函数本质上是逻辑回归模型在多分类任务上的一种延伸，常作为CNN模型的损失函数。softmax损失函数的本质是将一个k维的任意实数向量x映射成另一个k维的实数向量，其中，输出向量中的每个元素的取值范围都是(0,1)，即softmax损失函数输出每个类别的预测概率。由于softmax损失函数具有类间可分性，被广泛用于分类、分割、人脸识别、图像自动标注和人脸验证等问题中，其特点是类间距离的优化效果非常好，但类内距离的优化效果比较差。</p><p>softmax损失函数具有类间可分性，在多分类和图像标注问题中，常用它解决特征分离问题。在基于卷积神经网络的分类问题中，一般使用softmax损失函数作为损失函数，但是softmax损失函数学习到的特征不具有足够的区分性，因此它常与对比损失或中心损失组合使用，以增强区分能力。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def softmax(x):</span><br><span class="line">    x_exp = np.exp(x)</span><br><span class="line">    x_sum = np.sum(x_exp, axis=1, keepdims=True)</span><br><span class="line">    s = x_exp / x_sum</span><br><span class="line">    return s</span><br><span class="line"></span><br><span class="line"># Tensorflow2.0版</span><br><span class="line">softmax_fc = tf.keras.activations.softmax(x)</span><br><span class="line"># pytorch版</span><br><span class="line">softmax_fc = torch.nn.Softmax()</span><br><span class="line">output = softmax_fc(x)</span><br></pre></td></tr></table></figure><p>3.2.4 Focal loss</p><p>focal loss的引入主要是为了解决难易样本不均衡的问题，注意有区别于正负样本不均衡的问题。难易样本分为四个类型：</p><table><thead><tr><th></th><th>难</th><th>易</th></tr></thead><tbody><tr><td>正</td><td>正难</td><td>正易</td></tr><tr><td>负</td><td>负难</td><td>负易</td></tr></tbody></table><p>易分样本虽然损失很低，但是数量太多，对模型的效果提升贡献很小，模型应该重点关注那些难分样本，因此需要把置信度高的损失再降低一些</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>E</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F E=\left\{\begin{array}{ll}-\alpha(1-p)^{\gamma} \log (p) &amp; \mathrm{y}=1 \\-(1-\alpha) p^{\gamma} \log (1-p) &amp; \mathrm{y}=0\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">FE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="4-如何选择损失函数？">4. 如何选择损失函数？</h2><p>通常情况下，损失函数的选取应从以下方面考虑：</p><p>（1） 选择最能表达数据的主要特征来构建基于距离或基于概率分布度量的特征空间。</p><p>（2）选择合理的特征归一化方法，使特征向量转换后仍能保持原来数据的核心内容。</p><p>（3）选取合理的损失函数，在实验的基础上，依据损失不断调整模型的参数，使其尽可能实现类别区分。</p><p>（4）合理组合不同的损失函数，发挥每个损失函数的优点，使它们能更好地度量样本间的相似性。</p><p>（5）将数据的主要特征嵌入损失函数，提升基于特定任务的模型预测精确度。</p><h2 id="参考资料：">参考资料：</h2><p>[1] <a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3Fsubscene%3D23%26__biz%3DMzAxOTQ2NzUxOQ%3D%3D%26mid%3D2651912913%26idx%3D1%26sn%3D68f62cb548b35ec93f18027458352434%26chksm%3D8022c741b7554e57616ac8dcd80a11acd7a8a6ada181f4584c602c9f242815f5863ed96b4529%26scene%3D7%26key%3D9c1744d1bffeab4b0c8d19d08eff803bc5bf556e7dad290931316859107869eae11c8d2ef08d1c445c32f9564b88b15a7ddefa9ecba47e9f30595d3194cb93202f018216f272734d0502965e5172c528b84d6f7ee4a2970563bd1594a1ee84cb78bedc97a8d73b1f2c1c8b796374470272fd4c44a5a5badebefe79f797dd9006%26ascene%3D0%26uin%3DNzY2MzMyNDAx%26devicetype%3DWindows%2B10%2Bx64%26version%3D62090538%26lang%3Dzh_CN%26exportkey%3DAbDFP%2Fy90lQvupKLsin%2BqIY%3D%26pass_ticket%3DxXJHSvXALrdXBNLifG37ggdjbeqxXtSOQYVggNqQRRey1Vm1lBPWCAlvlwRUGwZW%26wx_header%3D0">监督学习中的损失函数及应用研究</a></p><p><a href="https://zhuanlan.zhihu.com/p/261059231">损失函数（Loss Function） - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 损失函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定量变量与定性变量的转换</title>
      <link href="/2022/09/29/%E5%AE%9A%E9%87%8F%E5%8F%98%E9%87%8F%E4%B8%8E%E5%AE%9A%E6%80%A7%E5%8F%98%E9%87%8F%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/09/29/%E5%AE%9A%E9%87%8F%E5%8F%98%E9%87%8F%E4%B8%8E%E5%AE%9A%E6%80%A7%E5%8F%98%E9%87%8F%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1>定量变量和定性变量的转换（Transform of Quantitative &amp; Qualitative Variables）</h1><p><strong>定量变量（Quantitative Variables）</strong>：也称为<strong>数值型变量（Numerical Variables）</strong>，可以用<strong>连续值</strong>或<strong>离散值</strong>表示。比如：气温（连续值），学生人数（离散值）。</p><p>为什么要对定量变量进行转换？大多数情况下，我们可以直接使用定量变量。但是有时候，特征和目标之间不呈线性关系。比如说年龄和收入之间的关系，当人年轻时，收入通常会稳步上升，但到了一定年纪之后，收入便开始降低。我们当然可以用非线性模型来拟合数据，但是这样会把模型弄得很复杂。因此比较好的做法是在数据准备的阶段就对定量变量做<strong>分箱处理</strong>（Binning，也称为分区间）。在对定量变量分箱处理之后，还要再将其转换为虚拟变量或对其进行WOE转换（参见：<a href="https://zhuanlan.zhihu.com/p/30026040">https://zhuanlan.zhihu.com/p/30026040</a>）。</p><p>将定量变量转换为定性变量的方法为：<strong>分区间（Binning）</strong>，包括等宽分区间以及自适应分区间。</p><ol><li><p><strong>等宽分区间（Fixed-Width Binning）</strong>：可以用pandas的cut()方法自己设定区间范围。等宽分区间的缺点是：落在某个区间中的数据点的数目不一定是均匀的，因此可能会得到不规则的区间。一些区间中的数据可能会非常的密集，一些区间则会非常稀疏甚至是空的。因此，自适应分区间方法是一个更安全的策略。</p></li><li><p><strong>自适应分区间（Adptive Binning）</strong>：使用数据的四分位数来确定区间范围，这样确保每个区间内的数据个数是相同的。</p></li></ol><hr><p><strong>定性变量（Qualitative Variables）</strong>：也称为<strong>类别型变量（Categorical Variables）</strong>，通常用<strong>文本字符串</strong>或<strong>离散值</strong>表示。根据变量之间是否存在次序关系，又可以分为<strong>有序型</strong>定性变量**（Ordinal）<strong>和</strong>无序型<strong>定性变量</strong>（Nominal）**。比如：衣服的尺寸“大中小”（有序型），男女性别（无序型）。</p><p>为什么要对定性变量进行转换？因为最终我们需要进行数值间的运算，而文本字符串之间无法进行运算。即使将文本字符串转变为离散值表示，比如将衣服的尺寸大中小表示为0：小，1：中，2：大，虽然将次序体现出来了（2&gt;1&gt;0），但还是不合理，因为不管对于有序型定性变量，还是无序型定性变量来说，这样的数值运算都没有意义。比如衣服的尺寸这个例子，如果将大减去中，其结果等于2-1=1，这是表示中号尺寸等于大号尺寸减去中号尺寸吗？这显然是不合理且没有意义的。因此我们需要用其他方式对定性变量进行转换。</p><p>有两种转换方式：a. 将定性变量转换为虚拟变量，b. 将定性变量转换为定量变量。</p><p>a. <strong>将定性变量转换为虚拟变量</strong>：</p><ol><li><strong>虚拟编码（Dummy Coding）</strong>：如果某个特征变量有n个类别，那么虚拟编码会将其转换成n-1个二进制编码。变量的每个类别都被转换成 n-1 维向量。我们将减少的这个类别作为基准，其由全部是0组成的向量表示。转换后的变量称为<strong>虚拟变量（Dummy Variables）</strong>。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0    2-大</span><br><span class="line">1    1-中</span><br><span class="line">2    2-大</span><br><span class="line">3    0-小</span><br><span class="line">Name: 衣服尺寸, dtype: object</span><br><span class="line">col=pd.Series([&quot;2-大&quot;,&quot;1-中&quot;,&quot;2-大&quot;,&quot;0-小&quot;],name=&quot;衣服尺寸&quot;)</span><br><span class="line">print(pd.get_dummies(col).iloc[:,1:])</span><br><span class="line">   1-中  2-大</span><br><span class="line">0    0    1</span><br><span class="line">1    1    0</span><br><span class="line">2    0    1</span><br><span class="line">3    0    0</span><br></pre></td></tr></table></figure><p>我们创建了一个衣服尺寸的Series，由四个样本组成。转换为虚拟变量后，可以看到变量由二进制组成的向量表示：大-[0,1]，中-[1,0]，小-[0,0]。其中把“小”作为基准，从特征中删去，因为“大”和“中”这两个特征足以表示所有的信息（不是大和中，便是小）。</p><ol start="2"><li><strong>独热编码（One Hot Encoding）</strong>：如果某个特征变量有n个类别，那么独热编码会将其转换成n个二进制编码。变量的每个类别都被转换成 n 维向量，其中只有某一维的值为 1（表示激活状态）。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">col=pd.Series([&quot;2-大&quot;,&quot;1-中&quot;,&quot;2-大&quot;,&quot;0-小&quot;],name=&quot;衣服尺寸&quot;)</span><br><span class="line">print(pd.get_dummies(col))</span><br><span class="line">   0-小  1-中  2-大</span><br><span class="line">0    0    0    1</span><br><span class="line">1    0    1    0</span><br><span class="line">2    0    0    1</span><br><span class="line">3    1    0    0</span><br></pre></td></tr></table></figure><p>还是用上面衣服尺寸这个例子，转换为独热编码后，变量由二进制组成的向量表示为：大-[0,0,1]，中-[0,1,0]，小-[1,0,0]。</p><ol start="3"><li><strong>效果编码（Effect Coding）</strong>：和虚拟编码类似，只不过作为基准的特征全由-1组成的向量表示。那么既然已经有了虚拟编码，为何还要用效果编码呢？因为虚拟编码的回归系数表示的是某类别和基准类别之间的平均差异，而效果编码可以有效估计出各类别和总体平均水平之间的平均差异（根据回归系数），方便进行各类别之间的比较。因此如果各类别之间有关联，那么使用效果编码更好。（参见：<a href="https://wenku.baidu.com/view/4c6918c7581b6bd97e19ea57.html">https://wenku.baidu.com/view/4c6918c7581b6bd97e19ea57.html</a>）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">col=pd.Series([&quot;2-大&quot;,&quot;1-中&quot;,&quot;2-大&quot;,&quot;0-小&quot;],name=&quot;衣服尺寸&quot;)</span><br><span class="line">dummy=pd.get_dummies(col).iloc[:,1:]</span><br><span class="line">dummy=dummy.astype(np.int8)</span><br><span class="line">dummy.loc[np.all(dummy==0,axis=1)]=-1</span><br><span class="line">print(dummy)</span><br><span class="line">   1-中  2-大</span><br><span class="line">0    0    1</span><br><span class="line">1    1    0</span><br><span class="line">2    0    1</span><br><span class="line">3   -1   -1</span><br></pre></td></tr></table></figure><p>还是用上面衣服尺寸这个例子，转换为效果编码后，变量由二进制组成的向量表示为：大-[0,1]，中-[1,0]，小-[-1,-1]。</p><ol start="4"><li><p><strong>区间计数（Bin Counting）</strong>：对于有m个类别的某个特征，经过上述转换后，将会变成m个新的特征。因此，当任意特征的类别数量变得很大的时候，很可能会造成维度灾难。我们需要针对那些可能具有非常多类别的特征（如 IP 地址），研究其它的转换方法 。区间计数使用基于概率的统计信息和在建模过程中所要预测的实际目标进行编码，而不是使用实际的标签值。这个方案需要历史数据作为先决条件，并且要求数据非常详尽。</p></li><li><p><strong>特征哈希（Feature Hashing）</strong>：哈希函数通常与预设的编码特征的数量（作为预定义长度向量）一起使用。哈希方案适用于字符串、数字和其它结构（如向量）。如果我们有一个特征拥有 <strong>1000</strong> 个不同的类别，我们设置最终的特征向量长度为10，那么最终输出的特征将只有 10 个。特征哈希的缺点是可解释性不强。</p></li></ol><p>b. <strong>将定性变量转换为定量变量</strong>：</p><p>对于多个有序的定性变量，如果将其转换为虚拟变量，会损失掉每个定性变量本身的顺序信息和定性变量间的关联信息。为了解决这个问题，常常根据类别的顺序，将定性变量转换为定量变量。转换方法有：<strong>Ridit scoring</strong>（二分类问题），**WOE（weight of evidence）**等等。</p><p>参考：<a href="https://www.leiphone.com/news/201801/KTVu68zA6szteVmS.html">https://www.leiphone.com/news/201801/KTVu68zA6szteVmS.html</a></p><p>​           <a href="https://www.leiphone.com/news/201801/T9JlyTOAMxFZvWly.html">https://www.leiphone.com/news/201801/T9JlyTOAMxFZvWly.html</a></p><p>​           <a href="https://www.jiqizhixin.com/articles/2018-07-09-19">https://www.jiqizhixin.com/articles/2018-07-09-19</a></p><p>​           <a href="https://segmentfault.com/a/1190000019860050">https://segmentfault.com/a/1190000019860050</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>决策树算法补充</title>
      <link href="/2022/09/24/%E5%86%B3%E7%AD%96%E6%A0%91%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/"/>
      <url>/2022/09/24/%E5%86%B3%E7%AD%96%E6%A0%91%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<p>四类常见的机器学习算法：</p><ul><li>ID3算法 ： 信息增益</li><li>C4.5算法： 信息增益率</li><li>C5.0</li><li>CART： 基尼系数</li></ul><p>首先我们先简单介绍一下决策树，</p><p>决策树算法在“决策”领域有着广泛的应用，比如个人决策、公司管理决策等。其实更准确的来讲，决策树算法算是一类算法，这类算法逻辑模型以“树形结构”呈现，因此它比较容易理解，并不是很复杂，我们可以清楚的掌握分类过程中的每一个细节。</p><h2 id="if-else原理">if-else原理</h2><p>想要认识“决策树算法”我们不妨从最简单的“if - else原理”出发来一探究竟。作为程序员，我相信你对 if -else 原理并不感到陌生，它是</p><p>条件判断</p><p>的常用语句。下面简单描述一下 if -else  的用法：if 后跟判断条件，如果判断为真，也即满足条件，就执行 if 下的代码段，否则执行 else 下的代码段，因此 if-else 可以简单的理解为“如果满足条件就…，否则…”</p><p>if-else 有两个特性：一是能够利用 if -else 进行条件判断，但需要首先给出判断条件；二是能无限嵌套，也就是在一个 if-else 的条件执行体中，能够再嵌套另外一个 if-else，从而实现无限循环嵌套。</p><p>下面我看一个简单的应用示例，相信你能从中体会到“决策树”的魅力。古人有“伯乐识别千里马”那么“伯乐”是如何“相马”的呢？下表列出了 A、B、C 、D 四匹马，它们具有以下特征：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1H3263292-0.png" alt="决策树算法"></p><p>如果你是“伯乐”会如何从中挑选出那匹“千里马”呢？毫无疑问，我们要根据马匹的相应特征去判断，而这些特征对应的值叫做“特征维度值”，下面是一位“伯乐”利用 if -else 原理，最终成功的审识别出“千里马”的全过程，如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1H3262409-1.gif" alt="决策树算法"><br>图1：决策树流程图</p><p>上图 1 所示是一颗典型的树形结构“二叉树”，而决策树一词中的“树”指的就是这棵树。上图展示了伯乐“识别”千里马的全过程，根据特征值的有无（if-else原理）最终找出“千里马。你可能会问为什么并没囊括所有的特征值？</p><p>这是因为某些特征值对于结果的判断而言，并不是最为关键的特征值，比如马的“体型”，“骨瘦如柴”并不能决定某一匹马不是“千里马”。而“马腿”的长短没有作为判断条件，这是因为使用前三个特征值就已经完成了结果的分类，如果此时再使用“马腿”长短作为判断条件，则有点多此一举。</p><p>如果将上述判断的流程用 if-else 的伪代码写出来，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if (特征值&quot;声音&quot;为&quot;是&quot;):</span><br><span class="line"></span><br><span class="line">    if(特征值&quot;眼睛有神&quot;为&quot;是&quot;):</span><br><span class="line"></span><br><span class="line">        if (特征值&quot;马蹄大&quot;为&quot;是&quot;):</span><br><span class="line">            类别千里马 C</span><br><span class="line"></span><br><span class="line">        else:</span><br><span class="line">            类别普通马匹 D</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        类别普通马匹 A</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">    类别普通马匹 B</span><br></pre></td></tr></table></figure><h2 id="决策树算法关键">决策树算法关键</h2><p>了解了“if-else”原理，下面我们进一步认识决策树算法。决策树算法涉及了几个重要的知识点：“决策树的分类方法”，“分支节点划分问题”以及“纯度的概念”。当然在学习过程中还会涉及到“信息熵”、“信息增益”、“基尼指数”的概念，相关知识在后面会逐一介绍。</p><h4 id="特征维度-判别条件">特征维度&amp;判别条件</h4><p>我们知道分类问题的数据集由许多样本构成，而每个样本数据又会有多个特征维度，比如前面例子中马的“声音”，“眼睛”都属于特征维度，在决策算法中这些特征维度属于一个集合，称为“特征维度集”。数据样本的特征维度与最终样本的分类都可能存在着某种关联，因此决策树的</p><p>判别条件</p><p>将从特征维度集中产生。</p><p>在机器学习中，决策树算法是一种有监督的分类算法，我们知道机器学习其实主要完成两件事，一个是模型的训练与测试，另外一个是预测数据的（分类问题，预测类别），因此对于决策树算法而言，我们要考虑如何学会自动选择最合适的判别条件，如图 1 所示，只利用前三个特征就完成了分类的预测。这也将是接下来要探讨的重要问题。</p><h2 id="纯度的概念">纯度的概念</h2><p>决策树算法引入了“纯度”的概念，“纯”指的是单一，而“度”则指的是“度量”。“纯度”是对单一类样本在子集内所占重的的度量。</p><p>在每一次判别结束后，如果集合中归属于同一类别的样本越多，那么就说明这个集合的纯度就越高。比如，二元分类问题的数据集都会被分成两个子集，我们通过自己的纯度就可以判断分类效果的好与坏，子集的纯度越高，就说明分类效果越好。</p><p>上一节我们提到过，决策树算法是一类算法，并非某一种算法，其中最著名的决策树算法有三种，分别是 ID3、C4.5 和 CART。虽然他们都属于决策树算法，不过它们之间也存在着一些细微的差别，主要是体现在衡量“纯度”的方法上，它们分别采用了信息增益、增益率和基尼指数，这些算法的相关概念将在后续内容为大家说明。</p><h2 id="纯度度量规则">纯度度量规则</h2><p>那么我们应该采取什么样的方法去“衡量”某个集合中某一类别样本的纯度呢？当我们学习完机器学习之后，我们总不能还使用人工的方式去验证吧，那可真是徒劳无功了。</p><p>要想明确纯度的衡量方法，首先我们要知道一些度量“纯度”的规则。下面我们将类别分为“正类与负类”，如下所示：</p><ul><li>某个分支节点下所有样本都属于同一个类别，纯度达到最高值。</li><li>某个分支节点下样本所属的类别一半是正类一半是负类，此时，纯度取得最低值。</li><li>纯度代表一个类在子集中的占比多少，它并不在乎该类究竟是正类还是负类。比如，某个分支下不管是正类占比 60% 还是负类占比 60%，其纯度的度量值都是一样的。</li></ul><p>决策树算法中使用了大量的二叉树进行判别，在一次判别后，最理想的情况是分支节点下包含的类完全相同，也就是说不同的类别完全分开，但有时我们无法只用一个判别条件就让不同的类之间完全分开，因此选择合适判别条件区划分类是我们要重点掌握的。</p><h2 id="纯度度量方法">纯度度量方法</h2><p>根据之前学习的机器学习算法，如果要求得子集内某一类别所占比最大或者最小，就需要使用求极值的方法。因此，接下来探讨使得纯度能够达到最大值和最小值的“纯度函数”。</p><h4 id="1-纯度函数">1) 纯度函数</h4><p>现在我们做一个函数图像，横轴表示某个类的占比，纵轴表示纯度值，然后我们根据上面提出的“纯度度量规则”来绘制函数图像：</p><p>首先某个类达到最大值，或者最小值时，纯度达到最高值，然后，当某一个类的占比达到 0.5 时，纯度将取得最低值。由这两个条件，我们可以做出 a/b/c 三个点，最后用一条平滑的曲线将这三个点连接起来。如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1H4034363-0.gif" alt="纯度函数图像"><br>图1：纯度函数图像</p><p>如上图，我们做出了一条类似于抛物线的图像，你可以把它看做成“椭圆”的下半部分。当在 a 点时某一类的占比纯度最小，但是对于二元分类来说，一个类小，另一个类就会高，因此 a 点时的纯度也最高（与 b 恰好相反），当某类的纯度占比在 c 点时，对于二元分类来说，两个类占比相同，此时的纯度值最低，此时通过 c 点无法判断一个子集的所属类别。</p><h4 id="2-纯度度量函数">2) 纯度度量函数</h4><p>前面在学习线性回归算法时，我们学习了损失函数，它的目的是用来计算损失值，从而调整参数值，使其预测值不断逼近于误差最小，而纯度度量函数的要求正好与纯度函数的要求相反，因为纯度值越低意味着损失值越高，反之则越低。所以纯度度量函数所作出来的图像与纯度函数正好相反。如下图所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1H4034Z8-1.gif" alt="纯度度量函数"><br>图2：纯度度量函数</p><p>上图就是纯度度量函数，它与纯度函数恰好相反。纯度度量函数图像适应于所有决策树算法，比如 ID3、C4.5、CART 等经典算法。</p><h2 id="决策树算法原理">决策树算法原理</h2><p>决策树特征属性是 if -else 判别条件的关键所在，我们可以把这些特征属性看成一个</p><p>集合</p><p>，我们要选择的判别条件都来自于这个集合，通过分析与计算选择与待分类样本最合适的“判别条件”。通过前面文章的学习，我们可以知道被选择的“判别条件”使得样本集合的某个子树节点“纯度”最高。</p><p>上述过程就好比从众多的样本中提取“类别纯度”最高的样本集合，因此我们可以起一个形象化的名字“提纯”，过程示意图如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1I6033T7-0.gif" alt="决策树算法流程原理图"><br>图1：决策树流程图</p><p>通过上述流程图可以得知，决策树算法通过判别条件从根节点开始分裂为子节点，子节点可以继续分裂，每一次分裂都相当于一次对分类结果的“提纯”，周而复始，从而达到分类的目的，在这个过程中，节点为“否”的不在分裂，判断为“是”的节点则继续分裂。那么你有没有考虑过决策树会在什么情况下“停止”分裂呢？下面列举了两种情况：</p><h4 id="1-子节点属于同一类别">1) 子节点属于同一类别</h4><p>决策树算法的目的是为了完成有效的样本分类。当某个数据集集合分类完成，也就分类后的子节点集合都属于同一个类别，不可再分，此时代表着分类任务完成，分裂也就会终止。</p><h4 id="2-特征属性用完">2) 特征属性用完</h4><p>我们知道，决策树依赖特征属性作为判别条件，如果特征属性已经全部用上，自然也就无法继续进行节点分裂，此处可能就会出现两种情况：一种是分类任务完成，也就是子节点属于同一类别，还有另外一种情况就是分类还没有完成，比如，在判断为“是”的节点集合中，有 8 个正类 3 个负类，此时我们将采用</p><p>占比最大的类</p><p>作为当前节点的归属类。</p><h4 id="3-设置停止条件">3) 设置停止条件</h4><p>除上述情况外，我们也可以自己决定什么时候停止。比如在实际应用中我们可以在外部设置一些阈值，把决策树的深度，或者叶子节点的个数当做停止条件。</p><h2 id="决策树剪枝策略">决策树剪枝策略</h2><p>决策树算法是机器学习中的经典算法。如果要解决分类问题，决策树算法再合适不过了。不过决策树算法并非至善至美，决策树分类算法最容易出现的问题就是“过拟合”。什么是“过拟合”我们在教程的开篇已经提及过，它指的机器学习模型对于训练集数据能够实现较好的预测，而对于测试集性能较差。</p><p>“过拟合”使决策树模型学习到了并不具备普遍意义的分类决策条件，从而导致模型的分类效率、泛化能力降低。</p><p>决策树出现过拟合的原因其实很简单，因为它注重细节。决策树会根据数据集各个维度的重要性来选择 if -else 分支，如果决策树将所有的特征属性都用完的情况下，那么过拟合现象就很容易出现。</p><p>我们知道，每个数据集都会有各种各样的属性维度，总会出现一些属性维度样本分类实际上并不存在关联关系的情况。因此，在理想情况下决策树算法应尽可能少地使用这些不相关属性，但理想终归是理想，在现实情况下很难实现。那么我们要如何解决这种过拟合问题呢？这时就要用到“剪枝策略”。</p><p>“剪枝策略”这个名字非常的形象化，它是解决决策树算法过拟合问题的核心方法，也是决策树算法的重要组成部分。剪枝策略有很多种，我们根据剪枝操作触发时间的不同，可以将它们分成两种，一种称为</p><p>预剪枝</p><p>，另一种称为</p><p>后剪枝</p><p>。</p><h4 id="1-预剪枝">1) 预剪枝</h4><p>所谓预剪枝，就是将即将发芽的分支“扼杀在萌芽状态”即在分支划分前就进行剪枝判断，如果判断结果是需要剪枝，则不进行该分支划分。</p><h4 id="2-后剪枝">2) 后剪枝</h4><p>所谓后剪枝，则是在分支划分之后，通常是决策树的各个判断分支已经形成后，才开始进行剪枝判断。</p><p>上述两个剪枝策略，我们重要理解“预”和“后”。“预”就是打算、想要的意思，也就是在分支之前就被剪掉，不让分支生成，而“后”则是以后、后面，也就是分支形成以后进行剪枝操作。那么我要如何判断什么时候需要进行剪枝操作呢？其实很容易理解，如果剪枝后决策树模型在测试集验证上得到有效的提升，就判断其需要剪枝，否则不需要。</p><p>剪枝的操作对象是“分支的判别条件”，也就是减少不必要特征属性的介入，从而提高决策树分类效率，和测试集的预测能力。下面通过一个简单的例子进行说明：</p><p>某个样本数据集有两个类别（正类与负类），2 个特征属性，现在我们对 20 个样本进行分类。首先，在应用所有“特征属性”的情况下对样本进行分类。如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1I6031O2-1.gif" alt="决策树过拟合问题"><br>图2：决策树过拟合问题</p><p>上图 2 使用了两个特征属性对样本集合进行分类，最后正确分类的概率是 12/20。如果只通过特征 1 进行分类，也就是剪掉冗余特征 2，最后的结果又是怎样呢？如下图所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1I603D10-2.gif" alt="决策树算法后剪枝策略"><br>图3：决策树剪枝策略流程</p><p>通过后剪枝策略后，正确分类概率变成了 16/20。显而易见，剪枝策略使得正确分类的概率得到提高。</p><p>剪枝策略较容易理解，在实际情况中后剪枝策略使用较多。在分支生成后，使用后剪枝策略将冗余的子树及其判别条件直接剪掉，然后使用上个节点中占比最大的类做为最终的分类结果。</p><h1>ID3决策树算法</h1><p>通过前面知识的学习，我们知道决策树算法是以包含所有</p><p>类别的集合</p><p>为计算对象，并通过条件判别，从中筛选出纯度较高的类别，那么我们如何利用信息熵从特征集合中选择决策条件呢？下面我们以 ID3 算法为例进行说明。</p><p>ID3</p><p>（Iterative Dichotomiser 3，迭代二叉树3代）算法是决策树算法的其中一种，它是基于</p><p><strong>奥卡姆剃刀原理</strong></p><p>实现的，这个原理的核心思想就是“大道至简，用尽量少的东西去做更多的事情”。</p><p>把上述原理应用到决策树中，就有了 ID3 算法的核心思想：越小型的决策树越优于大的决策树，也就是使用尽可能少的判别条件。ID3 算法使用了信息增益实现判别条件的选择，从香农的“信息论”中可以得知，ID3 算法选择信息增益最大的特征维度进行 if -else 判别。</p><h4 id="1-理解信息增益">1) 理解信息增益</h4><p>那么到底什么是信息增益？我们又如何计算特征维度信息增益值的大小呢？</p><p>简单地说，信息增益是针对一个具体的特征而言的，某个特征的有无对于整个系统、集合的影响程度就可以用“信息增益”来描述。我们知道，经过一次 if-else 判别后，原来的类别集合就被被分裂成两个集合，而我们的目的是让其中一个集合的某一类别的“纯度”尽可能高，如果分裂后子集的纯度比原来集合的纯度要高，那就说明这是一次 if-else 划分是有效过的。通过比较使的“纯度”最高的那个划分条件，也就是我们要找的“最合适”的特征维度判别条件。</p><h4 id="2-信息增益公式">2) 信息增益公式</h4><p>那么如何计算信息增益值，这里我们可以采用信息熵来计算。我们通过比较划分前后集合的信息熵来判断，也就是做减法，用划分前集合的信息熵减去按特征维度属性划分后的信息熵，就可能够得到信息增益值。公式如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1I51W915-3.gif" alt="信息增益计算公式"></p><p>G(S,a) 表示集合 S 选择特征属性 t 来划分子集时的信息增益。H(x) 表示集合的信息熵。上述的“减数”看着有点复杂，下面重点讲解一下减数的含义：</p><ul><li>大写字母 K 表示：按特征维度 t 划分后，产生了几个子集的意思，比如划分后产生了 5 个子集吗，那么 K = 5。</li><li>小写字母 k 表示：按特征维度 t 划分后，5 个子集中的某一个子集，k = 1 指的是从第一个子集开始求和计算。</li><li>|S| 与 |Sk| 表示：集合 S 中元素的个数，这里的<code>||</code>并不是绝对值符号，而 |Sk| 表示划分后，某个集合的元素个数。</li><li>|S| /|Sk| 表示：一个子集的元素个数在原集合的总元素个数中的占比，指该子集信息熵所占的权重，占比越大，权重就越高。</li></ul><p>最后，比较不同特征属性的信息增益，增益值越大，说明子集的纯度越高，分类的效果就越好，我们把效果最好的特征属性选为 if-else 的最佳判别条件。</p><p>ID3 算法是一个相当不错的决策树算法，能够有效解决分类问题，其原理比较容易理解。C4.5 算法是 ID3 算法的增强版，这个算法使用了“信息增益比”来代替“信息增益”，而 CART 算法则采用了“基尼指数”来选择判别条件，“基尼指数”并不同于“信息熵”，但却与信息熵有着异曲同工之妙，这些将作为延伸扩展知识，在后续内容中讲解。</p><h1>C4.5决策树</h1><p>C4.5算法是用于生成决策树的一种经典算法，是ID3算法的一种延伸和优化。C4.5算法对ID3算法进行了改进 ，改进点主要有：</p><ol><li>用信息增益率来选择划分特征，克服了用信息增益选择的不足，<strong>但信息增益率对可取值数目较少的属性有所偏好</strong>；</li><li>能够处理离散型和连续型的属性类型，即将连续型的属性进行离散化处理；</li><li>能够处理具有缺失属性值的训练数据；</li><li>在构造树的过程中进行剪枝；</li></ol><h2 id="特征选择">特征选择</h2><p>特征选择也即选择最优划分属性，从当前数据的特征中选择一个特征作为当前节点的划分标准。 随着划分过程不断进行，希望决策树的分支节点所包含的样本尽可能属于同一类别，即节点的“纯度”越来越高。</p><p>具体信息增益相关公式见：<a href="https://zhuanlan.zhihu.com/p/133846252">ID3算法</a></p><h3 id="信息增益率">信息增益率</h3><p>信息增益准则对可取值数目较多的属性有所偏好，为减少这种偏好可能带来的不利影响，C4.5算法采用信息增益率来选择最优划分属性。增益率公式GainRatio(D|A)=infoGain(D|A)IV(A)IV(A)=−∑k=1K|Dk||D|∗log2|Dk||D|</p><p>其中 A=[a1,a2,…,ak] ，K个值。若使用A来对样本集D进行划分，则会产生K个分支节点，其中第k个节点包含D中所有属性A上取值为 ak 的样本，记为 Dk 。<strong>通常，属性A的可能取值数越多（即K越大），则IV(A)的值通常会越大</strong>。</p><p>信息增益率准则对可取值数目较少的属性有所偏好。所以，<strong>C4.5算法不是直接选择信息增益率最大的候选划分属性，而是先从候选划分属性中找出信息增益高于平均水平的属性，再从中选择信息增益率最高的</strong>。</p><h2 id="对连续特征的处理">对连续特征的处理</h2><p>当属性类型为离散型，无须对数据进行离散化处理；</p><p>当属性类型为连续型，则需要对数据进行离散化处理。具体思路如下：</p><p>具体思路：</p><ol><li>m个样本的连续特征A有m个值，从小到大排列 a1,a2,…,am ，取相邻两样本值的平均数做划分点，一共有m-1个，其中第i个划分点Ti表示为： Ti=(ai+ai+1)/2 。</li><li>分别计算以这m-1个点作为二元切分点时的信息增益率。选择信息增益率最大的点为该连续特征的最佳切分点。比如取到的信息增益率最大的点为 at ，则小于 at 的值为类别1，大于 at 的值为类别2，这样就做到了连续特征的离散化。</li></ol><h2 id="对缺失值的处理">对缺失值的处理</h2><p>ID3算法不能处理缺失值，而C4.5算法可以处理缺失值（常用概率权重方法），主要有三种情况，具体如下：</p><ol><li>在有缺失值的特征上如何计算信息增益率？</li></ol><p><strong>根据缺失比例，折算信息增益（无缺失值样本所占的比例乘以无缺失值样本子集的信息增益）和信息增益率</strong></p><ol start="2"><li>选定了划分属性，若样本在该属性上的值是缺失的，那么如何对这个样本进行划分？</li></ol><p><strong>将样本以不同概率同时划分到不同节点中，概率是根据其他非缺失属性的比例来得到的</strong></p><ol start="3"><li>对新的样本进行分类时，如果测试样本特性有缺失值如何判断其类别？</li></ol><p><strong>走所有分支，计算每个类别的概率，取概率最大的类别赋值给该样本</strong></p><h2 id="剪枝">剪枝</h2><p>**为什么要剪枝？**因为过拟合的树在泛化能力的表现非常差。</p><p>剪枝又分为前剪枝和后剪枝，前剪枝是指在构造树的过程中就知道哪些节点可以剪掉 。 后剪枝是指构造出完整的决策树之后再来考查哪些子树可以剪掉。</p><h3 id="前剪枝">前剪枝</h3><p>在节点划分前确定是否继续增长，及早停止增长的主要方法有：</p><ul><li>节点内数据样本数小于切分最小样本数阈值；</li><li>所有节点特征都已分裂；</li><li>节点划分前准确率比划分后准确率高。</li></ul><p>前剪枝不仅可以降低过拟合的风险而且还可以减少训练时间，但另一方面它是基于“贪心”策略，会带来欠拟合风险。</p><h3 id="后剪枝">后剪枝</h3><p>在已经生成的决策树上进行剪枝，从而得到简化版的剪枝决策树。</p><p>C4.5算法采用<strong>悲观剪枝方法</strong>。根据剪枝前后的误判率来判定是否进行子树的修剪， 如果剪枝后与剪枝前相比其误判率是保持或者下降，则这棵子树就可以被替换为一个叶子节点。 因此，不需要单独的剪枝数据集。C4.5 通过训练数据集上的错误分类数量来估算未知样本上的错误率。</p><h1>CART决策树算法</h1><p><strong>ID3中使用了信息增益选择特征</strong>，增益大优先选择。<strong>C4.5中，采用信息增益率选择特征</strong>，减少因特征值多导致信息增益大的问题。<strong>CART分类树算法使用基尼系数选择特征</strong>，基尼系数代表了模型的不纯度，<strong>基尼系数越小，不纯度越低，特征越好</strong>。这和信息增益（率）相反。</p><h3 id="基尼系数">基尼系数</h3><p>数据集D的纯度可用基尼值来度量</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">Gini</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>∗</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>p</mi><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\operatorname{Gini}(D) &amp;=\sum_{i=1}^{n} p\left(x_{i}\right) *\left(1-p\left(x_{i}\right)\right) \\&amp;=1-\sum_{i=1}^{n} p\left(x_{i}\right)^{2}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.4581em;vertical-align:-2.9791em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">Gini</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中， p(xi) 是分类 xi 出现的概率，n是分类的数目。Gini(D)反映了从数据集D中随机抽取两个样本，其类别标记不一致的概率。因此，<strong>Gini(D)越小，则数据集D的纯度越高</strong>。</p><p>对于样本D，个数为|D|，根据特征A 是否取某一可能值a，把样本D分成两部分 和D1和D2 。所以CART分类树算法建立起来的是二叉树，而不是多叉树。D1=(x,y)∈D|A(x)=a,D2=D−D1</p><p>在属性A的条件下，样本D的基尼系数定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">GiniIndex</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>D</mi><mo>∣</mo><mi>A</mi><mo>=</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mn>1</mn></msub><mo fence="true">∣</mo></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi mathvariant="normal">Gini</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>D</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><mo>+</mo><mfrac><mrow><mo fence="true">∣</mo><msub><mi>D</mi><mn>2</mn></msub><mo fence="true">∣</mo></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi mathvariant="normal">Gini</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>D</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{GiniIndex}(D \mid A=a)=\frac{\left|D_{1}\right|}{|D|} \operatorname{Gini}\left(D_{1}\right)+\frac{\left|D_{2}\right|}{|D|} \operatorname{Gini}\left(D_{2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">GiniIndex</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">Gini</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">Gini</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><h3 id="对连续特征和离散特征的处理">对连续特征和离散特征的处理</h3><h3 id="连续特征">连续特征</h3><p>与C4.5思想相同，都是将连续的特征离散化。区别在选择划分点时，C4.5是信息增益率，CART是基尼系数。</p><p>具体思路：</p><ol><li>m个样本的连续特征A有m个值，从小到大排列 a1,a2,…,am ，则CART取相邻两样本值的平均数做划分点，一共有m-1个，其中第i个划分点Ti表示为： Ti=(ai+ai+1)/2 。</li><li>分别计算以这m-1个点作为二元分类点时的基尼系数。选择基尼系数最小的点为该连续特征的二元离散分类点。比如取到的基尼系数最小的点为 at ，则小于 at 的值为类别1，大于 at 的值为类别2，这样就做到了连续特征的离散化。</li></ol><p>注意的是，与ID3、C4.5处理离散属性不同的是，如果当前节点为连续属性，则该属性在后面还可以参与子节点的产生选择过程。</p><h3 id="离散特征">离散特征</h3><p>思路：不停的二分离散特征。</p><p>在ID3、C4.5，特征A被选取建立决策树节点，如果它有3个类别A1,A2,A3，我们会在决策树上建立一个三叉点，这样决策树是多叉树，而且离散特征只会参与一次节点的建立。</p><p>CART采用的是不停的二分，且一个特征可能会参与多次节点的建立。CART会考虑把特征A分成 A1 和 、和、和A2,A3、A2和A1,A3、A3和A1,A2 三种情况，找到基尼系数最小的组合，比如 A2 和 A1,A3 ，然后建立二叉树节点，一个节点是 A2 对应的样本，另一个节点是对 A1,A3 对应的样本。由于这次没有把特征A的取值完全分开，后面还有机会对子节点继续选择特征A划分 A1 和 A3 。</p><h3 id="例子">例子</h3><p>数据集的属性有3个，分别是有房情况，婚姻状况和年收入，其中有房情况和婚姻状况是离散的取值，而年收入是连续的取值。拖欠贷款者属于分类的结果。</p><p><img src="https://pic1.zhimg.com/80/v2-af3965eb072261b2b2893b2c6585d4d0_720w.jpg" alt="img"></p><p>对于有房情况这个属性，它是离散型数据，那么按照它划分后的Gini系数计算如下</p><p><img src="https://pic4.zhimg.com/80/v2-81c9732ec7d48ae25f6470ee16282cdb_720w.jpg" alt="img"></p><p>对于婚姻状况属性，它也是离散型数据，它的取值有3种，按照每种属性值分裂后Gini系数计算如下</p><p><img src="https://pic4.zhimg.com/80/v2-6ac9415d76a8fe40f09389577ae7b11b_720w.jpg" alt="img"></p><p>年收入属性，它的取值是连续的，那么连续的取值采用分裂点进行分裂。如下</p><p><img src="https://pic4.zhimg.com/80/v2-31e7a09e4074ea3d7bc1a8d1c0920df7_720w.jpg" alt="img"></p><p>根据这样的分裂规则CART算法就能完成建树过程 。</p><h3 id="建立CART分类树步骤">建立CART分类树步骤</h3><p>输入：训练集D，基尼系数的阈值，切分的最少样本个数阈值</p><p>输出：分类树T</p><p>算法从根节点开始，用训练集递归建立CART分类树。</p><ol><li>对于当前节点的数据集为D，如果样本个数小于阈值或没有特征，则返回决策子树，当前节点停止递归；</li><li>计算样本集D的基尼系数，如果基尼系数小于阈值，则返回决策树子树，当前节点停止递归 ；</li><li>计算当前节点现有各个特征的各个值的基尼指数，</li><li>在计算出来的各个特征的各个值的基尼系数中，选择基尼系数最小的特征A及其对应的取值a作为最优特征和最优切分点。 然后根据最优特征和最优切分点，将本节点的数据集划分成两部分 D1 和 D2 ，同时生成当前节点的两个子节点，左节点的数据集为 D1 ，右节点的数据集为 D2 。</li><li>对左右的子节点递归调用1-4步，生成CART分类树；</li></ol><p>对生成的CART分类树做预测时，假如测试集里的样本落到了某个叶子节点，而该节点里有多个训练样本。则该测试样本的类别为这个叶子节点里概率最大的类别。</p><h2 id="剪枝-2">剪枝</h2><p>当分类回归树划分得太细时，会对噪声数据产生过拟合，因此要通过剪枝来解决。剪枝又分为前剪枝和后剪枝，前剪枝是指在构造树的过程中就知道哪些节点可以剪掉 。 后剪枝是指构造出完整的决策树之后再来考查哪些子树可以剪掉。</p><p>在分类回归树中可以使用的后剪枝方法有多种，比如：代价复杂性剪枝、最小误差剪枝、悲观误差剪枝等等。<strong>这里只介绍代价复杂性剪枝法</strong>。</p><p>对于分类回归树中的每一个非叶子节点计算它的表面误差率增益值α</p><p>α=C(t)−C(Tt)|Tt|−1</p><p>|Tt| :子树中包含的叶子节点个数</p><p>C(t)：以t为单节点树的误差代价，该节点被剪枝</p><p>C(t)=r(t)∗p(t)</p><p>r(t)：节点t的误差率</p><p>p(t)：节点t上的数据占所有户数的比例</p><p>C(Tt) 是以t为根节点的子树 Tt 的误差代价，如果该节点不被剪枝， 它等于子树 Tt 上所有叶子节点的误差代价之和。</p><p>比如有个非叶子节点T4如图所示：</p><p><img src="https://pic1.zhimg.com/80/v2-9ae9970eb457f56c9e8d2cb7dd05d964_720w.jpg" alt="img"></p><p>已知所有的数据总共有60条，则节点T4的节点误差代价为：C(t)=r(t)p(t)=7161660=760</p><p>子树误差代价为：C(Tt)=∑C(i)=25560+02260+39∗960=560</p><p>以T4为根节点的子树上叶子节点有3个，则α=7/60−5/603−1=160</p><p>找到 α 值最小的非叶子节点，令其左、右子节点为NULL。当多个非叶子节点的α值同时达到最小时，取 |Tt| 最大的进行剪枝。</p><h2 id="总结">总结</h2><p><img src="https://pic2.zhimg.com/80/v2-274ad10bbc810467c3f83fcfdd9a2871_720w.jpg" alt="img"></p><h2 id="相关链接">相关链接</h2><p>书籍：《机器学习实战》、周志华的西瓜书《机器学习》</p><p><a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/acdreamers/article/details/44664481">例子参考链接</a></p><p><a href="https://link.zhihu.com/?target=https%3A//www.cnblogs.com/zhangchaoyang/articles/2709922.html">剪枝参考链接</a></p><p><a href="https://zhuanlan.zhihu.com/p/133846252">ID3算法</a></p><p><a href="https://zhuanlan.zhihu.com/p/139188759">C4.5算法</a></p><p><a href="https://zhuanlan.zhihu.com/p/139519852">CART回归树算法</a></p><p>西瓜书nb</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 决策树算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>朴素贝叶斯算法</title>
      <link href="/2022/09/24/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/24/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>概率论的知识，用来做分类比较多，本质上是属于求后验概率。前提是属性之间相互独立。</p></blockquote><h2 id="贝叶斯定理">贝叶斯定理</h2><p>贝叶斯定理的发明者</p><p>托马斯·贝叶斯</p><p>提出了一个很有意思的假设：“如果一个袋子中共有 10 个球，分别是黑球和白球，但是我们不知道它们之间的比例是怎么样的，现在，仅通过摸出的球的颜色，是否能判断出袋子里面黑白球的比例？”</p><p>上述问题可能与我们高中时期所接受的的概率有所冲突，因为你所接触的概率问题可能是这样的：“一个袋子里面有 10 个球，其中 4 个黑球，6 个白球，如果你随机抓取一个球，那么是黑球的概率是多少？”毫无疑问，答案是 0.4。这个问题非常简单，因为我们事先知道了袋子里面黑球和白球的比例，所以很容易算出摸一个球的概率，但是在某些复杂情况下，我们无法得知“比例”，此时就引出了贝叶斯提出的问题。</p><p>在统计学中有两个较大的分支：一个是“频率”，另一个便是“贝叶斯”，它们都有各自庞大的知识体系，而“贝叶斯”主要利用了“相关性”一词。下面以通俗易懂的方式描述一下“贝叶斯定理”：通常，事件 A 在事件 B 发生的条件下与事件 B 在事件 A 发生的条件下，它们两者的概率并不相同，但是它们两者之间存在一定的相关性，并具有以下公式（称之为“贝叶斯公式”）：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1GUU234-0.gif" alt="贝叶斯公式"></p><p>看到上述公式，你可能一头雾水，不过不必慌张，下面我们来了解一下“贝叶斯”公式。</p><h4 id="符号意义">符号意义</h4><p>首先我们要了解上述公式中符号的意义：</p><ul><li>P(A) 这是概率中最基本的符号，表示 A 出现的概率。比如在投掷骰子时，P(2) 指的是骰子出现数字“2”的概率，这个概率是 六分之一。</li><li>P(B|A) 是<strong>条件概率</strong>的符号，表示事件 A 发生的条件下，事件 B 发生的概率，条件概率是“贝叶斯公式”的关键所在，它也被称为“似然度”。</li><li>P(A|B) 是<strong>条件概率</strong>的符号，表示事件 B 发生的条件下，事件 A 发生的概率，这个计算结果也被称为“后验概率”。</li></ul><p>有上述描述可知，贝叶斯公式可以预测事件发生的概率，两个本来相互独立的事件，发生了某种“相关性”，此时就可以通过“贝叶斯公式”实现预测。</p><h2 id="条件概率">条件概率</h2><p>条件概率是“贝叶斯公式”的关键所在，那么如何理解条件概率呢？其实我们可以从“相关性”这一词语出发。举一个简单的例子，比如小明和小红是同班同学，他们各自准时回家的概率是 P(小明回家) = 1/2 和 P(小红回家) =1/2，但是假如小明和小红是好朋友，每天都会一起回家，那么 P(小红回家|小明回家) = 1 (理想状态下)。</p><p>上述示例就是条件概率的应用，小红和小明之间产生了某种关联性，本来俩个相互独立的事件，变得不再独立。但是还有一种情况，比如小亮每天准时到家 P(小亮回家) =1/2，但是小亮喜欢独来独往，如果问 P(小亮回家|小红回家) 的概率是多少呢？你会发现这两者之间不存在“相关性”，小红是否到家，不会影响小亮的概率结果，因此小亮准时到家的概率仍然是 1/2。</p><p>贝叶斯公式的核心是“条件概率”，譬如 P(B|A)，就表示当 A 发生时，B 发生的概率，如果P(B|A)的值越大，说明一旦发生了 A，B 就越可能发生。两者可能存在较高的相关性。</p><h2 id="先验概率">先验概率</h2><p>在贝叶斯看来，世界并非静止不动的，而是动态和相对的，他希望利用已知经验来进行判断，那么如何用经验进行判断呢？这里就必须要提到“先验”和“后验”这两个词语。我们先讲解“先验”，其实“先验”就相当于“未卜先知”，在事情即将发生之前，做一个概率预判。比如从远处驶来了一辆车，是轿车的概率是 45%，是货车的概率是 35%，是大客车的概率是 20%，在你没有看清之前基本靠猜，此时，我们把这个概率就叫做“先验概率”。</p><h2 id="后验概率">后验概率</h2><p>在理解了“先验概率”的基础上，我们来研究一下什么是“后验概率？”</p><p>我们知道每一个事物都有自己的特征，比如前面所说的轿车、货车、客车，它们都有着各自不同的特征，距离过远的时候，我们无法用肉眼分辨，而当距离达到一定范围内就可以根据各自的特征再次做出概率预判，这就是后验概率。比如轿车的速度相比于另外两者更快可以记做 P(轿车|速度快) = 55%，而客车体型可能更大，可以记做 P(客车|体型大) = 35%。</p><p>如果用条件概率来表述 P(体型大|客车)=35%，这种通过“车辆类别”推算出“类别特征”发生的的概率的方法叫作“似然度”。这里的似然就是“可能性”的意思。</p><h2 id="朴素-贝叶斯">朴素+贝叶斯</h2><p>了解完上述概念，你可能对贝叶斯定理有了一个基本的认识，实际上贝叶斯定理就是求解后验概率的过程，而核心方法是通过似然度预测后验概率，通过不断提高似然度，自然也就达到了提高后验概率的目的。</p><p>我们知道“朴素贝叶斯算法”由两个词语组成。朴素（native）是用来修饰“贝叶斯”这个名词的。按照中文的理解“朴素”意味着简单不奢华。朴素的英文是“native”，意味着“单纯天真”。</p><p>朴素贝叶斯是一种简单的贝叶斯算法，因为贝叶斯定理涉及到了概率学、统计学，其应用相对复杂，因此我们只能以简单的方式使用它，比如天真的认为，所有事物之间的特征都是相互独立的，彼此互不影响。关于朴素贝爷斯算法在下一节会详细介绍。</p><p>我们知道解决分类问题时，需要根据他们各自的特征来进行判断，比如区分“一对双胞胎不同之处”，虽然他们看起来相似，但是我们仍然可以根据细微的特征，来区分他们，并准确地叫出他们的名字。就像一句非常有哲理的话，“世界上没有完全相同的两片树叶”，因此被分类的事物会存在许多特征。</p><p>比如现在有 A1 和 A2 两个类，其中  A1 具有 b、c 两个特征，A2 具有 b、d 两个 特征，如果是你会怎么区分这两个类呢？很简单看看是存在 c ，存在的就是 A1，反之则是 A2.但是现实的情况要复杂的多，比如 100 个 A1样本中有 80% 的样本具有特征 c，而且剩余的 20% 具有了特征 d，那么要怎么对它们分类呢？其实只要多加判断还是可以分清，不过要是纯手工分类，那就恐怕得不偿失了。</p><h2 id="多特征分类问题">多特征分类问题</h2><p>统计学是通过搜索、整理、分析、描述数据等手段，以达到推断、预测对象的本质，统计学用到了大量的数学及其它学科的专业知识，其应用范围几乎覆盖了社会科学和自然科学的各个领域。</p><p>下面我们使统计学的相关知识解决上述分类问题，分类问题的样本数据大致如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[特征 X1 的值,特征 X2 的值,特征 X3 的值,......,类别 A1]</span><br><span class="line">[特征 X1 的值,特征 X2 的值,特征 X3 的值,......,类别 A2]</span><br></pre></td></tr></table></figure><p>解决思路：</p><p>这里我们先简单的采用 1 和 0 代表特征值的有无，比如当 X1 的特征值等于 1 时，则该样本属于 A1 的类别概率；特征值 X2 值为 1 时，该样本属于类别 A1 的类别的概率。依次类推，然后最终算出该样本对于各个类别的概率值，哪个概率值最大就可能是哪个类。</p><p>上述思路就是贝叶斯定理的典型应用，如果使用条件概率表达，如下所示：</p><p>P(类别A1|特征X1，特征X2，特征X3，…)</p><p>上述式子表达的意思是：在特征 X1、X2、X3等共同发生的条件下，类别 A1</p><p>发生的概率，也就是后验概率，依据贝叶斯公式，我们可以使用似然度求解后验概率，某个特征的似然度如下：P(特征X1|类别A1，特征X2，特征X3，…)但是要收集对个特征值共同发生的情况，这并不容易，因此我们就需要使用“朴素”贝叶斯算法。</p><h2 id="朴素贝叶斯算法">朴素贝叶斯算法</h2><p>上一节我们已经了解了贝叶斯公式，下面使用贝叶斯公式将多特征分类问题表达出来，如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1G94351F-0.png" alt="img"></p><p>数据集有时并不是很完全的，总会因为某些原因存在一些缺失和收集不全的现象，所以特征 x 越多这个问题就会越突出，统计这些特征出现的概率就越困难。为了避免这一问题，朴素贝叶斯算法做了一个假设，即特征之间相互独立，互不影响，由此以来，就可以简化为以下式子来求解某个特征的似然度：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1G9431L2-1.gif" alt="求解特征似然度"></p><p>“朴素贝叶斯算法”利用后验概率进行预测，其核心方法是通过似然度预测后验概率。在使用朴素贝叶斯算法解决分类问题，其实就是不断提高似然度的过程，你可以理解为后验概率正比于似然度，如果提高了似然度，那么也会达到提高后验概率的目的，记做如下式子：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1G9434A0-2.gif" alt="求解后验概率"></p><p>上述式子中∝表示正比于，而∏则是连乘符号（即概率相乘）表示了不同特征同时发生的概率。</p><h2 id="朴素贝叶斯优化方法">朴素贝叶斯优化方法</h2><p>你也许会发现，在学习过朴素贝叶斯的过程中，我们并内提到“假设函数”和“损失函数”，其实这并不难理解。朴素贝叶斯算法更像是一种统计方法，通过比较不同特征与类之间的似然度关系，最后把</p><p>似然度最大</p><p>的类作为预测结果。</p><p>每个类与特征的似然度是不同的，也就是 P(xi|y) 不同，因此某一类别中某个特征的概率越大，我们就更容易对该类别进行分类。根据求解后验概率的公式，可以得出以下优化方法：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1G9431912-3.gif" alt="优化方法"></p><p>此时将后验概率记做类别 y，我们知道 P(y) 是一个固定的概率值，因此要想让 y 取得最大值，只能通过 P(xi|y)  实现，不妨把被统计的数据看成是一张大表格，</p><p>朴素贝叶斯算法</p><p>就是从中找到 P(xi|y) 值最大的那一项，该项对应的 y 是什么，则最终输出的预测结果就是什么。</p><h2 id="简单应用案例">简单应用案例</h2><p>假设一个学校有 45% 的男生和 55% 的女生，学校规定不能穿奇装异服，男生的裤子只能穿长筒裤，而女生可以穿裙子或者长筒裤，已知该学校穿长筒裤的女生和穿裙子的女生数量相等，所有男生都必须穿长筒裤，请问如果你从远处看到一个穿裤子的学生，那么这个学生是女生的概率是多少？</p><p>看完上述问题，你是不是已经很快的计算出了结果呢？还是丈二和尚，摸不到头脑呢？下面我们一起来分析一下，我们根据贝叶斯公式，列出要用到的事件概率：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">学校女生的概率：P(女生)= 0.55</span><br><span class="line">女生中穿裤子的概率：P(裤子|女)= 0.5</span><br><span class="line">学校中穿裤子的概率：P(裤子)= 0.45 + 0.275= 0.725</span><br></pre></td></tr></table></figure><p>知道了上述概率，下面使用贝叶斯公式求解 P(女生|裤子) 的概率：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P(女|裤子) = P(裤子|女生) * P(女生) / P(裤子) = 0.5 * 0.55 / 0.725 = 0.379</span><br></pre></td></tr></table></figure><p>利用上述公式就计算除了后验概率 P(女生|裤子) 的概率，这里的 P(女生) 和 P(裤子)叫做先验概率，而 P(裤子|女生) 就是我们经常提起的条件概率“似然度”。</p><h2 id="sklearn实现朴素贝叶斯">sklearn实现朴素贝叶斯</h2><p>在 sklearn 库中，基于贝叶斯定理的算法集中在 sklearn.naive_bayes 包中，根据对“似然度 P(xi|y)”计算方法的不同，我们将朴素贝叶斯大致分为三种：多项式朴素贝叶斯（MultinomialNB）、伯努利分布朴素贝叶斯（BernoulliNB)、高斯分布朴素贝叶斯（GaussianNB）。另外一点要牢记，朴素贝叶斯算法的实现是基于假设而来，在朴素贝叶斯看来，特征之间是相互独立的，互不影响的。</p><p>高斯朴素贝叶斯适用于特征呈正态分布的，多项式贝叶斯适用于特征是多项式分布的，伯努利贝叶斯适用于二项分布。</p><h4 id="1-算法使用流程">1) 算法使用流程</h4><p>使用朴素贝叶斯算法，具体分为三步：</p><ul><li>统计样本数，即统计先验概率 P(y) 和 似然度 P(x|y)。</li><li>根据待测样本所包含的特征，对不同类分别进行后验概率计算。</li><li>比较 y1，y2，…yn 的后验概率，哪个的概率值最大就将其作为预测输出。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贝叶斯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岭回归和LASSO回归，线性回归</title>
      <link href="/2022/09/24/%E5%B2%AD%E5%9B%9E%E5%BD%92/"/>
      <url>/2022/09/24/%E5%B2%AD%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<p>线性回归很简单，用线性函数拟合数据，用 mean square error (mse) 计算损失（cost），然后用梯度下降法找到一组使 mse 最小的权重。</p><p>lasso 回归和岭回归（ridge regression）其实就是在标准线性回归的基础上分别加入 L1 和 L2 正则化（regularization）。</p><p>本文的重点是解释为什么 L1 正则化会比 L2 正则化让线性回归的权重更加稀疏，即使得线性回归中很多权重为 0，而不是接近 0。或者说，为什么 L1 正则化（lasso）可以进行 feature selection，而 L2 正则化（ridge）不行。</p><h2 id="线性回归——最小二乘">线性回归——最小二乘</h2><p><a href="https://imgse.com/i/xAmj7n"><img src="https://s1.ax1x.com/2022/09/24/xAmj7n.md.png" alt="xAmj7n.md.png"></a></p><p>线性回归的拟合函数（或 hypothesis）为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f(x) = w^Tx+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9747em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p><p>cost function (mse) 为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>J</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><msup><mi mathvariant="bold-italic">w</mi><mi mathvariant="normal">⊤</mi></msup><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}J &amp;=\frac{1}{n} \sum_{i=1}^{n}\left(f\left(\boldsymbol{x}_{i}\right)-y_{i}\right)^{2} \\&amp;=\frac{1}{n} \sum_{i=1}^{n}\left(\boldsymbol{w}^{\top} \boldsymbol{x}_{i}+b-y_{i}\right)^{2}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.4581em;vertical-align:-2.9791em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4791em;"><span style="top:-5.4791em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">⊤</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1031em;"><span style="top:-3.352em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9791em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="Lasso回归和岭回归">Lasso回归和岭回归</h2><p>Lasso 回归和岭回归（ridge regression）都是在标准线性回归的基础上修改 cost function，即修改式（2），其它地方不变。</p><p>Lasso 的全称为 least absolute shrinkage and selection operator，又译最小绝对值收敛和选择算子、套索算法。</p><p>Lasso 回归对式（2）加入 L1 正则化，其 cost function 如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant="normal">∥</mi><mi>w</mi><msub><mi mathvariant="normal">∥</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">J=\frac{1}{n} \sum_{i=1}^{n}\left(f\left(x_{i}\right)-y_{i}\right)^{2}+\lambda\|w\|_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord">∥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>岭回归对式（2）加入 L2 正则化，其 cost function 如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mi mathvariant="normal">∥</mi><mi>w</mi><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J=\frac{1}{n} \sum_{i=1}^{n}\left(f\left(x_{i}\right)-y_{i}\right)^{2}+\lambda\|w\|_{2}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord">∥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>Lasso回归和岭回归的同和异：</p><ul><li>相同：<ul><li>都可以用来解决标准线性回归的过拟合问题。</li></ul></li><li>不同：<ul><li>lasso 可以用来做 feature selection，而 ridge 不行。或者说，lasso 更容易使得权重变为 0，而 ridge 更容易使得权重接近 0。</li><li>从贝叶斯角度看，lasso（L1 正则）等价于参数 ww 的先验概率分布满足拉普拉斯分布，而 ridge（L2 正则）等价于参数 ww 的先验概率分布满足高斯分布。具体参考博客 <a href="https://blog.csdn.net/zhuxiaodong030/article/details/54408786">从贝叶斯角度深入理解正则化 – Zxdon</a> 。</li></ul></li></ul><p>也许会有个疑问，线性回归还会有过拟合问题？</p><p>加入 L1 或 L2 正则化，让权值尽可能小，最后构造一个所有参数都比较小的模型。因为一般认为参数值小的模型比较简单，能适应不同的数据集，也在一定程度上避免了过拟合现象。</p><p>可以设想一下对于一个线性回归方程，若参数很大，那么只要数据偏移一点点，就会对结果造成很大的影响；但如果参数足够小，数据偏移得多一点也不会对结果造成什幺影响，一种流行的说法是『抗扰动能力强』。具体参见博客 <a href="https://flashgene.com/archives/11824.html">浅议过拟合现象(overfitting)以及正则化技术原理</a>。</p><h2 id="References">References</h2><p>[1] Tibshirani, R. (1996). Regression Shrinkage and Selection Via the Lasso. Journal Of The Royal Statistical Society: Series B (Methodological), 58(1), 267-288. doi: 10.1111/j.2517-6161.1996.tb02080.x<br>[2] Lasso算法 – 维基百科<br>[3] 机器学习总结(一)：线性回归、岭回归、Lasso回归 – 她说巷尾的樱花开了<br>[4] 从贝叶斯角度深入理解正则化 – Zxdon<br>[5] 浅议过拟合现象(overfitting)以及正则化技术原理 – 闪念基因</p><p><a href="https://www.cnblogs.com/wuliytTaotao/p/10837533.html#%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98">线性回归——lasso回归和岭回归（ridge regression） - wuliytTaotao - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欠拟合过拟合</title>
      <link href="/2022/09/24/%E6%AC%A0%E6%8B%9F%E5%90%88%E8%BF%87%E6%8B%9F%E5%90%88/"/>
      <url>/2022/09/24/%E6%AC%A0%E6%8B%9F%E5%90%88%E8%BF%87%E6%8B%9F%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>过拟合和欠拟合在日常训练模型中一定会遇见。那么它产生的原因是什么？又该如何解决？面试时又该如何回答？</p><h2 id="1-过拟合和欠拟合是什么"><strong>1 过拟合和欠拟合是什么</strong></h2><p><img src="https://pic2.zhimg.com/80/v2-9652624ec461d8d95d05d744e8240991_720w.jpg" alt="img"></p><ul><li>拟合（Fitting）：模型能不能很好的描述某些样本，并且有比较好的泛化能力</li><li>过拟合（Overfitting）：就是太过贴近于训练数据的特征了，在训练集上表现非常优秀，近乎完美的预测/区分了所有的数据，但是在新的测试集上却表现平平，不具泛化性，拿到新样本后没有办法去准确的判断</li><li>欠拟合（UnderFitting）：测试样本的特性没有学到，或者是模型过于简单无法拟合或区分样本</li></ul><h2 id="2-过拟合"><strong>2 过拟合</strong></h2><h2 id="2-1-过拟合的表现"><strong>2.1 过拟合的表现</strong></h2><p>当模型在测试集上的损失函数值出现先下降后上升，那么此时可能出现过拟合。</p><h2 id="2-2-导致过拟合的原因是什么？"><strong>2.2 导致过拟合的原因是什么？</strong></h2><ol><li>训练集数量不足，样本类型单一。例如：如果我们用只包含负样本的训练集训练模型，然后用训练好的模型预测验证集中的正样本时，模型就会在训练时效果特别好，但是在验证时表现很差。因此，在选取训练集尽可能的覆盖所有数据类型。</li><li>训练集中存在噪声。使得机器将噪声认为是特征，从而忽略了样本的正确特征信息。</li><li>模型复杂度过高。当模型过于复杂时，会导致模型过于充分的学习到训练数据集中特征信息，将数据“死记硬背”了下来，遇到没见过的数据不能够变通，泛化能力太差。</li></ol><h2 id="2-3-过拟合的解决方法是什么？"><strong>2.3 过拟合的解决方法是什么？</strong></h2><ol><li>尽可能的保证数据分布均匀，有条件的话可以增加数据量。</li><li>分析噪声数据，对数据进行清洗。</li><li>降低模型的复杂度，减少参数、使模型变的简单。</li><li>在训练过程中使用正则化技术，如Dropout、L1、L2正则化等。</li><li>交叉验证，将数据切分组合为不同的训练集和测试集，使模型得到充分的训练。</li><li>Early stopping，在模型迭代训练时候记录训练损失值。当训练误差一直在降低但是验证误差却不再降低甚至上升，这时候便可以结束模型训练了。</li></ol><h2 id="3-欠拟合"><strong>3 欠拟合</strong></h2><h2 id="3-1-过拟合的表现"><strong>3.1 过拟合的表现</strong></h2><p>模型无法很好的拟合数据，导致训练集和测试集效果都不佳。</p><h2 id="3-2-导致欠拟合的原因是什么？"><strong>3.2 导致欠拟合的原因是什么？</strong></h2><ol><li>数据特征表达能力不强或者现有特征与标签之间的相关性不强。</li><li>模型太简单，导致无论怎么学习都无法学到有效的信息，即模型“先天不足”。</li><li>模型合适，但是没有训练好，即模型还没有训练到收敛的情况。</li></ol><h2 id="3-3-欠拟合的解决方法是什么？"><strong>3.3 欠拟合的解决方法是什么？</strong></h2><ol><li>特征工程。对数据维度进行筛选，选取特征与标签之间关联性强的维度进行建模，同时可去除噪声数据。</li><li>增加模型复杂度。</li><li>增加模型训练时间，直到模型收敛为止。</li><li>减小正则化系数。</li></ol><p><a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4ODc5NzE1OA%3D%3D%26mid%3D2653606974%26idx%3D1%26sn%3D4a56b65ef87d1d932715f5082192b84f%26chksm%3D8bfaceb7bc8d47a1c4c98181e34a9ba19ed0f02c3ff96d1b0d4e42878ba3c6a9ef74b5202cdc%26token%3D1958432126%26lang%3Dzh_CN%23rd">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 泛化能力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>损失函数补充</title>
      <link href="/2022/09/24/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E8%A1%A5%E5%85%85/"/>
      <url>/2022/09/24/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1>损失函数（Loss Function）</h1><p>损失函数–定义函数模型的好坏</p><h2 id="摘要："><strong>摘要：</strong></h2><p>本文主要介绍几个机器学习中常用的损失函数，解释其原理，性能优缺点和适用范围。</p><hr><p>目录：</p><ol><li><p>什么是损失函数？</p></li><li><p>为什么要用损失函数？</p></li><li><p>有哪些损失函数？</p></li><li><ol><li><p>基于距离度量的损失函数</p></li><li><ol><li>均方误差损失函数（MSE）</li><li>L2损失函数</li><li>L1损失函数</li><li>Smooth L1损失函数</li><li>huber损失函数</li></ol></li><li><p>基于概率分布度量的损失函数</p></li><li><ol><li>KL散度函数（相对熵）</li><li>交叉熵损失</li><li>softmax损失函数</li><li>Focal loss</li></ol></li></ol></li><li><p>如何选择损失函数？</p></li><li><p>参考资料</p></li></ol><h2 id="1-什么是损失函数？"><strong>1. 什么是损失函数？</strong></h2><p>一言以蔽之，损失函数（loss function）就是用来度量模型的预测值f(x)与真实值Y的差异程度的运算函数，它是一个非负实值函数，通常使用L(Y, f(x))来表示，损失函数越小，模型的鲁棒性就越好。</p><h2 id="2-为什么使用损失函数？"><strong>2. 为什么使用损失函数？</strong></h2><p>损失函数使用主要是在模型的训练阶段，每个批次的训练数据送入模型后，通过前向传播输出预测值，然后损失函数会计算出预测值和真实值之间的差异值，也就是损失值。得到损失值之后，模型通过反向传播去更新各个参数，来降低真实值与预测值之间的损失，使得模型生成的预测值往真实值方向靠拢，从而达到学习的目的。</p><h2 id="3-有哪些损失函数？"><strong>3. 有哪些损失函数？</strong></h2><p><strong>3.1 基于距离度量的损失函数</strong></p><p>基于距离度量的损失函数通常将输入数据映射到基于距离度量的特征空间上，如欧氏空间、汉明空间等，将映射后的样本看作空间上的点，采用合适的损失函数度量特征空间上样本真实值和模型预测值之间的距离。特征空间上两个点的距离越小，模型的预测性能越好。</p><p>3.1.1 均方误差损失函数（MSE）</p><blockquote><p>公式：</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\frac{1}{n} \sum_{i=1}^{N}\left(Y_{i}-f\left(x_{i}\right)\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>在回归问题中，均方误差损失函数用于度量样本点到回归曲线的距离，通过最小化平方损失使样本点可以更好地拟合回归曲线。均方误差损失函数（MSE）的值越小，表示预测模型描述的样本数据具有越好的精确度。由于无参数、计算成本低和具有明确物理意义等优点，MSE已成为一种优秀的距离度量方法。尽管MSE在图像和语音处理方面表现较弱，但它仍是评价信号质量的标准，在回归问题中，MSE常被作为模型的经验损失或算法的性能指标。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def MSELoss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sum(np.square(x - y)) / len(x)</span><br><span class="line">    return loss</span><br><span class="line"></span><br><span class="line">#计算过程举例</span><br><span class="line">x=[1,2]</span><br><span class="line">y=[0,1]</span><br><span class="line">loss=（（1-0）**2 + （2-1）**2）÷2=（1+1）÷2=1</span><br><span class="line"></span><br><span class="line"># Tensorflow2.0版</span><br><span class="line">y_true=tf.convert_to_tensor(y)</span><br><span class="line">y_pred=tf.convert_to_tensor(x)</span><br><span class="line">mse_loss = tf.keras.losses.MSE(y_true, y_pred) # y_true, y_pred都是张量格式</span><br><span class="line"></span><br><span class="line"># pytorch版本</span><br><span class="line">y_true=torch.tensor(y)</span><br><span class="line">y_pred=torch.tensor(x)</span><br><span class="line">mse_fc = torch.nn.MSELoss(y_true, y_pred)</span><br><span class="line">mse_loss = mse_fc(x,y)</span><br></pre></td></tr></table></figure><p>3.1.2 L2损失函数</p><blockquote><p>L2损失函数： L(Y|f(x))=1n∑i=1N(Yi−f(xi))2</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sqrt{\frac{1}{n} \sum_{i=1}^{N}\left(Y_{i}-f\left(x_{i}\right)\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3338em;vertical-align:-1.2777em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0561em;"><span class="svg-align" style="top:-5.2938em;"><span class="pstrut" style="height:5.2938em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.0161em;"><span class="pstrut" style="height:5.2938em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.3738em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.3738em' viewBox='0 0 400000 3373' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040H742v3239l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span></span></span></span></span></p><p>L2损失又被称为欧氏距离，是一种常用的距离度量方法，通常用于度量数据点之间的相似度。由于L2损失具有凸性和可微性，且在独立、同分布的高斯噪声情况下，它能提供最大似然估计，使得它成为回归问题、模式识别、图像处理中最常使用的损失函数。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def L2Loss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sqrt(np.sum(np.square(x - y)) / len(x))</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.3 L1损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mo fence="true">∣</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>−</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sum_{i=1}^{N}\left|Y_{i}-f\left(x_{i}\right)\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></span></p><p>L1损失又称为曼哈顿距离，表示残差的绝对值之和。L1损失函数对离群点有很好的鲁棒性，但它在残差为零处却不可导。另一个缺点是更新的梯度始终相同，也就是说，即使很小的损失值，梯度也很大，这样不利于模型的收敛。针对它的收敛问题，一般的解决办法是在优化算法中使用变化的学习率，在损失接近最小值时降低学习率。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"># 自定义实现</span><br><span class="line">def L1Loss(x:list,y:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x:list，代表模型预测的一组数据</span><br><span class="line">    y:list，代表真实样本对应的一组数据</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    x=np.array(x)</span><br><span class="line">    y=np.array(y)</span><br><span class="line">    loss=np.sum(np.abs(x - y)) / len(x)</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.4 Smooth L1损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\left\{\begin{array}{ll}\frac{1}{2}(Y-f(x))^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&lt;1 \\|Y-f(x)|-\frac{1}{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&gt;=1\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4102em;vertical-align:-0.9551em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>Smooth L1损失是由Girshick R在Fast R-CNN中提出的，主要用在目标检测中防止梯度爆炸。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def Smooth_L1(x,y):</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    loss=0</span><br><span class="line">    for i_x,i_y in zip(x,y):</span><br><span class="line">        tmp = abs(i_y-i_x)</span><br><span class="line">        if tmp&lt;1:</span><br><span class="line">            loss+=0.5*(tmp**2)</span><br><span class="line">        else:</span><br><span class="line">            loss+=tmp-0.5</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>3.1.5 huber损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mo>=</mo><mi>δ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>δ</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>δ</mi><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Y</mi><mo>−</mo><mi mathvariant="normal">f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mi>δ</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\left\{\begin{array}{ll}\frac{1}{2}(Y-f(x))^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&lt;=\delta \\\delta|Y-f(x)|-\frac{1}{2} \delta^{2} &amp; |\mathrm{Y}-\mathrm{f}(\mathrm{x})|&gt;\delta\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4102em;vertical-align:-0.9551em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4551em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.4049em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mopen">(</span><span class="mord mathrm">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9551em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>huber损失是平方损失和绝对损失的综合，它克服了平方损失和绝对损失的缺点，不仅使损失函数具有连续的导数，而且利用MSE梯度随误差减小的特性，可取得更精确的最小值。尽管huber损失对异常点具有更好的鲁棒性，但是，它不仅引入了额外的参数，而且选择合适的参数比较困难，这也增加了训练和调试的工作量。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delta=1.0  # 先定义超参数</span><br><span class="line"></span><br><span class="line">def huber_loss(x,y):</span><br><span class="line">    assert len(x)==len(y)</span><br><span class="line">    loss=0</span><br><span class="line">    for i_x,i_y in zip(x,y):</span><br><span class="line">        tmp = abs(i_y-i_x)</span><br><span class="line">        if tmp&lt;=delta:</span><br><span class="line">            loss+=0.5*(tmp**2)</span><br><span class="line">        else:</span><br><span class="line">            loss+=tmp*delta-0.5*delta**2</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p><strong>3.2 基于概率分布度量的损失函数</strong></p><p>基于概率分布度量的损失函数是将样本间的相似性转化为随机事件出现的可能性，即通过度量样本的真实分布与它估计的分布之间的距离，判断两者的相似度，一般用于涉及概率分布或预测类别出现的概率的应用问题中，在分类问题中尤为常用。</p><p>3.2.1 KL散度函数（相对熵）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>Y</mi><mi>i</mi></msub><mo>×</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><msub><mi>Y</mi><mi>i</mi></msub><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=\sum_{i=1}^{n} Y_{i} \times \log \left(\frac{Y_{i}}{f\left(x_{i}\right)}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>公式中Y代表真实值，f(x)代表预测值。</p><p>KL散度（ Kullback-Leibler divergence）也被称为相对熵，是一种非对称度量方法，常用于度量两个概率分布之间的距离。KL散度也可以衡量两个随机分布之间的距离，两个随机分布的相似度越高的，它们的KL散度越小，当两个随机分布的差别增大时，它们的KL散度也会增大，因此KL散度可以用于比较文本标签或图像的相似性。基于KL散度的演化损失函数有JS散度函数。JS散度也称JS距离，用于衡量两个概率分布之间的相似度，它是基于KL散度的一种变形，消除了KL散度非对称的问题，与KL散度相比，它使得相似度判别更加准确。</p><p>相对熵是恒大于等于0的。当且仅当两分布相同时，相对熵等于0。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def kl_loss(y_true:list,y_pred:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    y_true,y_pred，分别是两个概率分布</span><br><span class="line">    比如：px=[0.1,0.2,0.8]</span><br><span class="line">          py=[0.3,0.3,0.4]</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(y_true)==len(y_pred)</span><br><span class="line">    KL=0</span><br><span class="line">    for y,fx in zip(y_true,y_pred):</span><br><span class="line">        KL+=y*np.log(y/fx)</span><br><span class="line">    return KL</span><br></pre></td></tr></table></figure><p>3.2.2 交叉熵损失</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>Y</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=-\sum_{i=1}^{N} Y_{i} \log f\left(x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>交叉熵是信息论中的一个概念，最初用于估算平均编码长度，引入机器学习后，用于评估当前训练得到的概率分布与真实分布的差异情况。为了使神经网络的每一层输出从线性组合转为非线性逼近，以提高模型的预测精度，在以交叉熵为损失函数的神经网络模型中一般选用tanh、sigmoid、softmax或ReLU作为激活函数。</p><p>交叉熵损失函数刻画了实际输出概率与期望输出概率之间的相似度，也就是交叉熵的值越小，两个概率分布就越接近，特别是在正负样本不均衡的分类问题中，常用交叉熵作为损失函数。目前，交叉熵损失函数是卷积神经网络中最常使用的分类损失函数，它可以有效避免梯度消散。在二分类情况下也叫做对数损失函数。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def CrossEntropy_loss(y_true:list,y_pred:list):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    y_true,y_pred，分别是两个概率分布</span><br><span class="line">    比如：px=[0.1,0.2,0.8]</span><br><span class="line">          py=[0.3,0.3,0.4]</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    assert len(y_true)==len(y_pred)</span><br><span class="line">    loss=0</span><br><span class="line">    for y,fx in zip(y_true,y_pred):</span><br><span class="line">        loss+=-y * np.log(fx)</span><br><span class="line">    return loss</span><br></pre></td></tr></table></figure><p>当正负样本不均衡的时候，通常会在交叉熵损失函数类别前面加个参数α</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>E</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">C E=\left\{\begin{array}{ll}-\alpha \log (p) &amp; \mathrm{y}=1 \\-(1-\alpha) \log (1-p) &amp; \mathrm{y}=0\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">CE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>3.2.3 softmax损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>∣</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>f</mi><msub><mi>Y</mi><mi>i</mi></msub></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></munderover><msup><mi>e</mi><msub><mi>f</mi><mi>j</mi></msub></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">L(Y \mid f(x))=-\frac{1}{n} \sum_{i=1}^{n} \log \frac{e^{f_{Y_{i}}}}{\sum_{j=1}^{c} e^{f_{j}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5285em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7912em;"><span style="top:-3.0051em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8515em;"><span style="top:-3.0654em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.1076em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.2222em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3147em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3681em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>从标准形式上看，softmax损失函数应归到对数损失的范畴，在监督学习中，由于它被广泛使用，所以单独形成一个类别。softmax损失函数本质上是逻辑回归模型在多分类任务上的一种延伸，常作为CNN模型的损失函数。softmax损失函数的本质是将一个k维的任意实数向量x映射成另一个k维的实数向量，其中，输出向量中的每个元素的取值范围都是(0,1)，即softmax损失函数输出每个类别的预测概率。由于softmax损失函数具有类间可分性，被广泛用于分类、分割、人脸识别、图像自动标注和人脸验证等问题中，其特点是类间距离的优化效果非常好，但类内距离的优化效果比较差。</p><p>softmax损失函数具有类间可分性，在多分类和图像标注问题中，常用它解决特征分离问题。在基于卷积神经网络的分类问题中，一般使用softmax损失函数作为损失函数，但是softmax损失函数学习到的特征不具有足够的区分性，因此它常与对比损失或中心损失组合使用，以增强区分能力。</p><p>代码实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def softmax(x):</span><br><span class="line">    x_exp = np.exp(x)</span><br><span class="line">    x_sum = np.sum(x_exp, axis=1, keepdims=True)</span><br><span class="line">    s = x_exp / x_sum</span><br><span class="line">    return s</span><br><span class="line"></span><br><span class="line"># Tensorflow2.0版</span><br><span class="line">softmax_fc = tf.keras.activations.softmax(x)</span><br><span class="line"># pytorch版</span><br><span class="line">softmax_fc = torch.nn.Softmax()</span><br><span class="line">output = softmax_fc(x)</span><br></pre></td></tr></table></figure><p>3.2.4 Focal loss</p><p>focal loss的引入主要是为了解决难易样本不均衡的问题，注意有区别于正负样本不均衡的问题。难易样本分为四个类型：</p><table><thead><tr><th></th><th>难</th><th>易</th></tr></thead><tbody><tr><td>正</td><td>正难</td><td>正易</td></tr><tr><td>负</td><td>负难</td><td>负易</td></tr></tbody></table><p>易分样本虽然损失很低，但是数量太多，对模型的效果提升贡献很小，模型应该重点关注那些难分样本，因此需要把置信度高的损失再降低一些</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>E</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>α</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msup><mi>p</mi><mi>γ</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">F E=\left\{\begin{array}{ll}-\alpha(1-p)^{\gamma} \log (p) &amp; \mathrm{y}=1 \\-(1-\alpha) p^{\gamma} \log (1-p) &amp; \mathrm{y}=0\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">FE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="4-如何选择损失函数？">4. 如何选择损失函数？</h2><p>通常情况下，损失函数的选取应从以下方面考虑：</p><p>（1） 选择最能表达数据的主要特征来构建基于距离或基于概率分布度量的特征空间。</p><p>（2）选择合理的特征归一化方法，使特征向量转换后仍能保持原来数据的核心内容。</p><p>（3）选取合理的损失函数，在实验的基础上，依据损失不断调整模型的参数，使其尽可能实现类别区分。</p><p>（4）合理组合不同的损失函数，发挥每个损失函数的优点，使它们能更好地度量样本间的相似性。</p><p>（5）将数据的主要特征嵌入损失函数，提升基于特定任务的模型预测精确度。</p><h2 id="参考资料：">参考资料：</h2><p>[1] <a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3Fsubscene%3D23%26__biz%3DMzAxOTQ2NzUxOQ%3D%3D%26mid%3D2651912913%26idx%3D1%26sn%3D68f62cb548b35ec93f18027458352434%26chksm%3D8022c741b7554e57616ac8dcd80a11acd7a8a6ada181f4584c602c9f242815f5863ed96b4529%26scene%3D7%26key%3D9c1744d1bffeab4b0c8d19d08eff803bc5bf556e7dad290931316859107869eae11c8d2ef08d1c445c32f9564b88b15a7ddefa9ecba47e9f30595d3194cb93202f018216f272734d0502965e5172c528b84d6f7ee4a2970563bd1594a1ee84cb78bedc97a8d73b1f2c1c8b796374470272fd4c44a5a5badebefe79f797dd9006%26ascene%3D0%26uin%3DNzY2MzMyNDAx%26devicetype%3DWindows%2B10%2Bx64%26version%3D62090538%26lang%3Dzh_CN%26exportkey%3DAbDFP%2Fy90lQvupKLsin%2BqIY%3D%26pass_ticket%3DxXJHSvXALrdXBNLifG37ggdjbeqxXtSOQYVggNqQRRey1Vm1lBPWCAlvlwRUGwZW%26wx_header%3D0">监督学习中的损失函数及应用研究</a></p><p><a href="https://zhuanlan.zhihu.com/p/261059231">损失函数（Loss Function） - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 损失函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习术语</title>
      <link href="/2022/09/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%9C%AF%E8%AF%AD/"/>
      <url>/2022/09/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<p>机器学习是一门专业性很强的技术，它大量地应用了数学、统计学上的知识，因此总会有一些蹩脚的词汇，这些词汇就像“拦路虎”一样阻碍着我们前进，甚至把我们吓跑。因此认识，并理解这些词汇是首当其冲的任务。本节将介绍机器学习中常用的基本概念，为后续的知识学习打下坚实的基础。</p><h2 id="机器学习术语">机器学习术语</h2><h3 id="1-模型">1) 模型</h3><p>模型这一词语将会贯穿整个教程的始末，它是机器学习中的核心概念。你可以把它看做一个“魔法盒”，你向它许愿（输入数据），它就会帮你实现愿望（输出预测结果）。整个机器学习的过程都将围绕模型展开，训练出一个最优质的“魔法盒”，它可以尽量精准的实现你许的“愿望”，这就是机器学习的目标。</p><h3 id="2-数据集">2) 数据集</h3><p>数据集，从字面意思很容易理解，它表示一个承载数据的集合，如果说“模型”是“魔法盒”的话，那么数据集就是负责给它充能的“能量电池”，简单地说，如果缺少了数据集，那么模型就没有存在的意义了。数据集可划分为“训练集”和“测试集”，它们分别在机器学习的“训练阶段”和“预测输出阶段”起着重要的作用。</p><h4 id="3-样本-特征">3) 样本&amp;特征</h4><p>样本指的是数据集中的数据，一条数据被称为“一个样本”，通常情况下，样本会包含多个特征值用来描述数据，比如现在有一组描述人形态的数据“180 70 25”如果单看数据你会非常茫然，但是用“特征”描述后就会变得容易理解，如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30I261-0.gif" alt="样本与特征"><br>图1：样本&amp;特征</p><p>由上图可知数据集的构成是“一行一样本，一列一特征”。特征值也可以理解为数据的相关性，每一列的数据都与这一列的特征值相关。</p><h4 id="4-向量">4) 向量</h4><p>任何一门算法都会涉及到许多数学上的术语或者公式。在本教程写作的过程中也会涉及到很多数学公式，以及专业的术语，在这里我们先对常用的基本术语做一下简单讲解。</p><p>第一个常用术语就是“向量”，向量是机器学习的关键术语。向量在线性代数中有着严格的定义。向量也称欧几里得向量、几何向量、矢量，指具有</p><p>大小</p><p>和</p><p>方向</p><p>的量。您可以形象地把它的理解为带箭头的线段。箭头所指：代表向量的方向；线段长度：代表向量的大小。与向量对应的量叫做数量（物理学中称标量），数量只有大小，没有方向。</p><p>在机器学习中，模型算法的运算均基于线性代数运算法则，比如行列式、矩阵运算、线性方程等等。其实对于这些运算法则学习起来并不难，它们都有着一定运算规则，只需套用即可，因此你也不必彷徨，可参考</p><p>向量运算法则</p><p>。向量的计算可采用 NmuPy 来实现，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np#构建向量数组a=np.array([-1,2])b=np.array([3,-1])#加法a_b=a+b#数乘a2=a*2b3=b*(-3)#减法b_a=a-bprint(a_b,a2,b3,b_a)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[2 1] [-2  4] [-9  3] [-4  3]</span><br></pre></td></tr></table></figure><p>简而言之，数据集中的每一个样本都是一条具有向量形式的数据。</p><h4 id="5-矩阵">5) 矩阵</h4><p>矩阵也是一个常用的数学术语，你可以把矩阵看成由向量组成的二维数组，数据集就是以二维矩阵的形式存储数据的，你可以把它形象的理解为电子表格“一行一样本，一列一特征”表现形式如下：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30J014-1.gif" alt="矩阵电子表"><br>图2：矩阵表格</p><p>如果用二维矩阵的表示的话，其格式如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30G2V-2.gif" alt="img"></p><h2 id="假设函数-损失函数">假设函数&amp;损失函数</h2><p>机器学习在构建模型的过程中会应用大量的数学函数，正因为如此很多初学者对此产生畏惧，那么它们真会有这么可怕吗？其实我认为至少没有你想的那么可怕。从编程角度来看，这些函数就相当于模块中内置好的方法，只需要调用相应的方法就可以达成想要的目的。而要说难点，首先你要理解你的应用场景，然后根据实际的场景去调用相应的方法，这才是你更应该关注的问题。</p><p>假设函数和损失函数是机器学习中的两个概念，它并非某个模块下的函数方法，而是我们根据实际应用场景确定的一种函数形式，就像你解决数学的应用题目一样，根据题意写出解决问题的方程组。下面分别来看一下它们的含义。</p><h4 id="1-假设函数">1) 假设函数</h4><p>假设函数（Hypothesis Function）可表述为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y=f(x)</span><br></pre></td></tr></table></figure><p>其中 x 表示输入数据，而 y 表示输出的预测结果，而这个结果需要不断的优化才会达到预期的结果，否则会与实际值偏差较大。</p><h4 id="2-损失函数">2) 损失函数</h4><p>损失函数（Loss Function）又叫目标函数，简写为 L(x)，这里的 x 是假设函数得出的预测结果“y”，如果 L(x) 的返回值越大就表示预测结果与实际偏差越大，越小则证明预测值越来越“逼近”真实值，这才是机器学习最终的目的。因此损失函数就像一个度量尺，让你知道“假设函数”预测结果的优劣，从而做出相应的优化策略。</p><h4 id="3-优化方法">3) 优化方法</h4><p>“优化方法”可以理解为假设函数和损失函数之间的沟通桥梁。通过 L(x) 可以得知假设函数输出的预测结果与实际值的偏差值，当该值较大时就需要对其做出相应的调整，这个调整的过程叫做“参数优化”，而如何实现优化呢？这也是机器学习过程中的难点。其实为了解决这一问题，数学家们早就给出了相应的解决方案，比如梯度下降、牛顿方与拟牛顿法、共轭梯度法等等。因此我们要做的就是理解并掌握“科学巨人”留下的理论、方法。</p><p>对于优化方法的选择，我们要根据具体的应用场景来选择应用哪一种最合适，因为每一种方法都有自己的优劣势，所以只有合适的才是最好的。</p><p>上述函数的关系图如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30JR3-3.gif" alt="损失函数关系图"><br>图3：函数关系图</p><h2 id="拟合-过拟合-欠拟合，泛化能力">拟合&amp;过拟合&amp;欠拟合，泛化能力</h2><p>泛化能力是指机器学习算法对新鲜样本的适应<strong>能力</strong>。 学习的目的是学到隐含在数据背后的规律，对具有同一规律的学习集以外的数据，经过训练的网络也能给出合适的输出，该<strong>能力</strong>称为<strong>泛化能力</strong>。</p><p>提取几个关键词：<em>新鲜样本、适应能力、规律、合适输出</em>。由此可见，经训练样本训练的模型需要对新样本做出合适的预测，这是泛化能力的体现。</p><p>举个例子，高中生每天各种做题，五年高考三年模拟一遍遍的刷，为的什么，当然是想高考能有个好成绩。高考试题一般是新题，谁也没做过，平时的刷题就是为了掌握试题的规律，能够举一反三、学以致用，这样面对新题时也能从容应对。这种规律的掌握便是泛化能力，有的同学很聪明，考上名校，很大程度上是该同学的泛化能力好。</p><p>考试成绩差的同学，有这三种可能：一、泛化能力弱，做了很多题，始终掌握不了规律，不管遇到老题新题都不会做；二、泛化能力弱，做了很多题，只会死记硬背，一到考试看到新题就蒙了；三、完全不做题，考试全靠瞎蒙。机器学习中，第一类情况称作<strong>欠拟合</strong>，第二类情况称作<strong>过拟合，<strong>第三类情况称作</strong>不收敛</strong>。</p><p><img src="https://pic1.zhimg.com/80/v2-860b868b2d31113c93b6ac5bf9e8bb18_720w.jpg" alt="4图"></p><p>拟合是机器学习中的重要概念，也可以说，机器学习的研究对象就是让模型能更好的拟合数据，那到底如何理解“拟合”这个词呢？</p><h4 id="1-拟合">1)拟合</h4><p>形象地说，“拟合”就是把平面坐标系中一系列散落的点，用一条光滑的曲线连接起来，因此拟合也被称为“曲线拟合”。拟合的曲线一般用函数进行表示，但是由于拟合曲线会存在许多种连接方式，因此就会出现多种拟合函数。通过研究、比较确定一条最佳的“曲线”也是机器学习中一个重要的任务。如下图所示，展示一条拟合曲线（蓝色曲线）：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30L035-4.gif" alt="拟合曲线"><br>图4：曲线拟合</p><p>提示：很多和数学相关的编程语言都内置计算拟合曲线的函数，比如 MATLAB 、Python Scipy 等，在后续内容中还会介绍。</p><h4 id="2-过拟合">2) 过拟合</h4><p>过拟合（overfitting）与是机器学习模型训练过程中经常遇到的问题，所谓过拟合，通俗来讲就是模型的泛化能力较差，也就是过拟合的模型在训练样本中表现优越，但是在验证数据以及测试数据集中表现不佳。</p><p>举一个简单的例子，比如你训练一个识别狗狗照片的模型，如果你只用金毛犬的照片训练，那么该模型就只吸纳了金毛狗的相关特征，此时让训练好的模型识别一只“泰迪犬”，那么结果可想而知，该模型会认为“泰迪”不是一条狗。如下图所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30L3K-5.gif" alt="过拟合模型"><br>图5：过拟合</p><p>过拟合问题在机器学习中经常原道，主要是因为训练时样本过少，特征值过多导致的，后续还会详细介绍。</p><h4 id="3-欠拟合">3) 欠拟合</h4><p>欠拟合（underfitting）恰好与过拟合相反，它指的是“曲线”不能很好的“拟合”数据。在训练和测试阶段，欠拟合模型表现均较差，无法输出理想的预测结果。如下图所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30GK3-6.gif" alt="欠拟合"><br>图6：欠拟合</p><p>造成欠拟合的主要原因是由于没有选择好合适的特征值，比如使用一次函数（y=kx+b）去拟合具有对数特征的散落点，示例图如下所示：</p><p><img src="http://c.biancheng.net/uploads/allimg/210902/1F30JW0-7.gif" alt="欠拟合"><br>图7：欠拟合示例图</p><p>欠拟合和过拟合是机器学习中会遇到的问题，这两种情况都不是我期望看到的，因此要避免，关于如何处理类似问题，在后续内容中还会陆续讲解，本节只需要大家熟悉并理解常见的机器学习术语和一些概念即可。</p><p><a href="http://c.biancheng.net/ml_alg/sklearn-decision.html">sklearn决策树分类算法应用 (biancheng.net)</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学竞赛（非数学系）考试大纲</title>
      <link href="/2022/09/20/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B%EF%BC%88%E9%9D%9E%E6%95%B0%E5%AD%A6%E7%B3%BB%EF%BC%89%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/"/>
      <url>/2022/09/20/%E6%95%B0%E5%AD%A6%E7%AB%9E%E8%B5%9B%EF%BC%88%E9%9D%9E%E6%95%B0%E5%AD%A6%E7%B3%BB%EF%BC%89%E8%80%83%E8%AF%95%E5%A4%A7%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="一、函数、极限、连续">一、函数、极限、连续</h2><p>1.函数的概念及表示法、简单应用问题的函数关系的建立</p><p>2.函数的性质:有界性、单调性、周期性和奇偶性</p><p>3.复合函数、反函数、分段函数和隐函数、基本初等函数的性质及其图形、初等函数</p><p>4.数列极限与函数极限的定义及其性质、函数的左极限与右极限</p><p>5.无穷小和无穷大的概念及其关系、无穷小的性质及无穷小的比较</p><p>6.极限的四则运算、极限存在的单调有界准则和夹逼准则、两个重要极限</p><p>7.函数的连续性(含左连续与右连续)、函数间断点的类型</p><p>8.连续函数的性质和初等函数的连续性</p><p>9.闭区间上连续函数的性质(有界性、最大值和最小值定理、介值定理)</p><h2 id="二、一元函数微分学">二、一元函数微分学</h2><p>\1. 导数和微分的概念、导数的几何意义和物理意义、函数的可导性与连续性之间的关系、平面曲线的切线和法线</p><p>2.基本初等函数的导数、导数和微分的四则运算、一阶微分形式的不变性</p><p>\3. 复合函数、反函数、隐函数以及参数方程所确定的函数的微分法</p><p>4.高阶导数的概念、分段函数的二阶导数、某些简单函数的n阶导数</p><p>5.微分中值定理，包括罗尔定理、拉格朗日中值定理、柯西中值定理和泰勒定理。</p><p>6.洛必达(L’Hospital)法则与求未定式极限</p><p>7.函数的极值、函数单调性、函数图形的凹凸性、拐点及渐近线（水平、铅直和斜渐近线）、函数图形的描绘</p><p>8.函数最大值和最小值及其简单应用</p><p>9.弧微分、曲率、曲率半径</p><h2 id="三、一元函数积分学">三、一元函数积分学</h2><p>1.原函数和不定积分的概念</p><p>2.不定积分的基本性质、基本积分公式</p><p>3.定积分的概念和基本性质、定积分中值定理、变上限定积分确定的函数及其导数、牛顿—莱布尼兹（Newton—Leibniz）公式</p><p>4.不定积分和定积分的换元积分法与分部积分法</p><p>5.有理函数、三角函数的有理式和简单无理函数的积分</p><p>6.广义积分</p><p>7.定积分的应用：平面图形的面积、平面曲线的弧长、旋转体的体积及侧面积、平行截面面积为已知的立体体积、功、引力、压力及函数的平均值</p><h2 id="四、常微分方程">四、常微分方程</h2><p>1.常微分方程的基本概念：微分方程及其解、阶、通解、初始条件和特解等</p><p>2.变量可分离的微分方程、齐次微分方程、一阶线性微分方程、伯努利（Bernoulli）方程、全微分方程</p><p>3.可用简单的变量代换求解的某些微分方程，可降阶的高阶微分方程</p><p>4.线性微分方程解的性质及解的结构定理</p><p>5.二阶常系数齐次线性微分方程、高于二阶的某些常系数齐次线性微分方程</p><p>6.简单的二阶常系数非齐次线性微分方程：自由项为多项式、指数函数、正弦函数、余弦函数，以及它们的和与积</p><p>7.欧拉( Euler)方程</p><p>8.微分方程的简单应用</p><h2 id="五、向量代数和空间解析几何">五、向量代数和空间解析几何</h2><p>1.向量的概念、向量的线性运算、向量的数量积和向量积、向量的混合积</p><p>2.两向量垂直、平行的条件、两向量的夹角</p><p>3.向量的坐标表达式及其运算、单位向量、方向数与方向余弦</p><p>4.曲面方程和空间曲线方程的概念、平面方程、直线方程</p><p>\5. 平面与平面、平面与直线、直线与直线的夹角以及平行、垂直的条件、点到平面和点到直线的距离</p><p>6.球面、母线平行于坐标轴的柱面、旋转轴为坐标轴的旋转曲面的方程、常用的二次曲面方程及其图形</p><p>7.空间曲线的参数方程和一般方程、空间曲线在坐标面上的投影曲线方程</p><h2 id="六、多元函数微分学">六、多元函数微分学</h2><p>1.多元函数的概念、二元函数的几何意义</p><p>2.二元函数的极限和连续的概念、有界闭区域上多元连续函数的性质</p><p>3.多元函数偏导数和全微分、全微分存在的必要条件和充分条件</p><p>4.多元复合函数、隐函数的求导法</p><p>5.二阶偏导数、方向导数和梯度</p><p>6.空间曲线的切线和法平面、曲面的切平面和法线</p><p>7.二元函数的二阶泰勒公式</p><p>8.多元函数极值和条件极值、拉格朗日乘数法、多元函数的最大值、最小值及其简单应用</p><h2 id="七、多元函数积分学">七、多元函数积分学</h2><p>1.二重积分和三重积分的概念及性质、二重积分的计算，包括直角坐标和极坐标、三重积分的计算，包括直角坐标、柱面坐标、球面坐标</p><p>\2. 两类曲线积分的概念、性质及计算、两类曲线积分的关系</p><p>3.格林公式、平面曲线积分与路径无关的条件、已知二元函数全微分求原函数</p><p>4.两类曲面积分的概念、性质及计算、两类曲面积分的关系</p><p>5.高斯(Gauss)公式、斯托克斯公式、散度和旋度的概念及计算</p><p>6.重积分、曲线积分和曲面积分的应用(平面图形的面积、立体图形的体积、曲面面积、弧长、质量、质心、转动惯量、引力、功及流量等)</p><h2 id="八、无穷级数">八、无穷级数</h2><p>1.常数项级数的收敛与发散、收敛级数的和、级数的基本性质与收敛的必要条件</p><p>2.几何级数与p级数及其收敛性、正项级数收敛性的判别法、交错级数与莱布尼茨(Leibniz)判别法</p><p>3.任意项级数的绝对收敛与条件收敛</p><p>4.函数项级数的收敛域与和函数的概念</p><p>5.幂级数及其收敛半径、收敛区间(指开区间)、收敛域与和函数</p><p>8.幂级数在其收敛区间内的基本性质,包括和函数的连续性、逐项求导和逐项积分、简单幂级数的和函数的求法</p><p>7.初等函数的幂级数展开式</p><p>8.函数的傅里叶(Fourier)系数与傅里叶级数、狄利克雷定理、函数在 [−1,1] 上的傅里叶级数、函数在 [0,1] 上的正弦级数和余弦级数</p>]]></content>
      
      
      <categories>
          
          <category> 数学竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数竞大纲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博弈论（pxc）</title>
      <link href="/2022/09/12/%E5%8D%9A%E5%BC%88%E8%AE%BA%EF%BC%88pxc%EF%BC%89/"/>
      <url>/2022/09/12/%E5%8D%9A%E5%BC%88%E8%AE%BA%EF%BC%88pxc%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>博弈论</h1><p>博弈是指在一定的游戏规则约束下，基于直接相互作用的环境条件，各参与人依据所掌握的信息，选择各自的策略 (行动)，以实现<strong>利益最大化</strong>的过程。</p><p>所谓利益最大化，就是纯粹用理性思维，做一个“精致的利己主义者”，摒弃感性思维。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>竞品分析</title>
      <link href="/2022/09/11/%E7%AB%9E%E5%93%81%E5%88%86%E6%9E%90/"/>
      <url>/2022/09/11/%E7%AB%9E%E5%93%81%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>「竞品分析」的理念、流程、方法、工具</h1><p><a href="https://zhuanlan.zhihu.com/p/339502694">原文链接</a></p><p><strong>本文将对竞品分析的「道、法、术、器」（即竞品分析的理念、流程、方法、工具）做系统性介绍，可以为你解答以下关键问题：</strong></p><p><strong>竞品分析与市场分析有什么区别？为什么要做竞品分析？专业有效的竞品分析流程是怎样的？在对竞品做分析时，需要重点关注什么问题？竞品分析报告应该怎么写？…</strong></p><h2 id="一、重新认识竞品分析">一、重新认识竞品分析</h2><p>顾名思义，竞品分析是对竞争对手产品的分析。过去常用的分析方式总是围绕产品本身展开，这样就会导致分析的维度浮于表面，分析的结果也不能对产品规划与业务运营起到促进作用。</p><p>**1，我们应当跳出「产品」看竞争。**在对竞品进行分析时，除了功能、界面、交互体验之外，我们更需要关注产品背后的信息：</p><ul><li><strong>竞品做的怎么样？</strong></li><li><strong>他是如何做到的？</strong></li><li><strong>他为什么要这么做？</strong></li><li><strong>下一步他会怎么做？</strong></li></ul><p>**2，竞品分析与市场分析其实是有区别的。**市场分析、竞品分析、产品分析、产品体验分析在「分析目的」、「产品数量」、「分析维度」三个方面都是有所区别的，是一个从宏观到微观的过程。<strong>1、市场分析</strong>以寻找市场机会，帮助产品定位为目标，较宏观，对具体的产品没有深入分析，产品数量较多。分析维度有市场规模、增长趋势、市场份额、竞争状况、市场机会、市场细分、用户画像、产品分析等；<strong>2、竞品分析</strong>以竞争、借鉴、了解市场为目的，产品数量多在5个以内。分析维度包括功能、设计、技术、团队、运营、用户等；<strong>3、产品分析</strong>以学习、优化、借鉴为目的，多为1个产品，分析维度包括产品设计、产品商业模式分析；<strong>4、产品体验分析</strong>以学习借鉴为目的，多为1个产品，分析维度为产品设计维度。</p><p><strong>3，在产品不同阶段，竞品分析的目标应该有所侧重。</strong></p><p><img src="https://pic2.zhimg.com/80/v2-6ad2232443e37e28a749129cad7669a5_720w.jpg" alt="img"></p><p>**4，不要轻视竞品分析。**行业的发展离不开竞争，产品要成功自然不能闭门造车，及时了解对手的情况，适时制定相应的产品策略、运营策略，不断提升产品竞争力才能立于不败之地。</p><ul><li>**对于企业而言，**竞品分析可以协助企业制定产品战略与产品规划，及时了解对手的情况，学习借鉴，取长补短，打造具备竞争力的产品。同时，做竞品分析还有助于企业及时发现市场风险，比如政策变化、新技术、新对手、新替代品的出现等。</li><li>**对于个人来说，**不论是产品运营还是产品经理，竞品分析都是职业技能的重要组成部分，多做竞品分析还能提升我们的「产品感」。</li><li>一份优秀的「竞品分析报告」甚至有可能成为你职业生涯的转折点。</li></ul><h2 id="二、竞品分析流程">二、竞品分析流程</h2><p><strong>完整的竞品分析需要经过6个步骤：明确目标 → 选择竞品 → 确定分析维度 → 收集竞品信息 → 信息整理与分析 → 总结报告</strong></p><p><strong>1，明确目标</strong> 在行动前确认以下问题能够清晰回答：</p><ul><li><strong>我的产品是什么？（给哪个产品做竞品分析？）</strong></li><li><strong>我的产品当前处于什么阶段？</strong></li><li><strong>我的产品面临什么主要问题与挑战？</strong></li><li><strong>做竞品分析的目的是什么？（学习借鉴、决策支持、市场预警）</strong></li><li><strong>做竞品分析的目标是什么？（该不该做、定位是什么、卖点是什么、竞争策略是什么、缩小差距、标杆比较）</strong></li><li><strong>竞品分析输出的成果是什么？</strong></li></ul><p><strong>2，选择竞品</strong> 竞品分类包括直接竞品、间接竞品、替代品、参照品。很多人无法区分「直接竞品」和「间接竞品」，其实通过产品形式和用户群体这两个维度就能清晰定位：</p><ul><li><strong>直接竞品：产品形式一致，用户群体一致</strong></li><li><strong>间接竞品：产品形式不同，用户群体类似</strong></li><li><strong>替代品：抢占同类用户时间的产品，或者是颠覆同类用户使用习惯的产品（比如柯达胶卷与数码相机）</strong></li></ul><p>不同的产品阶段，竞品分析目标不同，选择竞品的原则也会有差异，可以归纳为：</p><ul><li><strong>市场份额TOP3的产品</strong></li><li><strong>具备大公司支持背景的产品</strong></li><li><strong>通过用户反馈了解到的产品</strong></li><li><strong>该领域的「创始鼻祖」</strong></li></ul><p><strong>3，明确分析维度</strong> 产品视角有八个竞品分析维度：（1）**功能设计：**功能分析需要精确到三级功能（2）**用户体验：**包括页面布局、页面色彩、logo设计、内容质量、内容数量（3）**用户情况：**包括画像、数据、反馈（4）**盈利模式：**常见的盈利模式有付费、免费增值、诱钓、广告、电子商务、渠道佣金、沉淀资金（5）**市场推广：**包括产品卖点、价格、推广渠道、促销策略（6）**团队背景：**包括人才构成、资金优势、资源优势、技术背景（7）**企业战略：**根据企业战略可以推测产品打法（8）**布局规划：**竞品下一步计划怎么做</p><p><strong>4，收集信息</strong> 可以通过行业媒体、社区、第三方平台、专利网站、企业及个人的人脉资源、产品体验测试、客服咨询、搜索查询等方式获得需要的信息。当然还有一些非常规手段，如套话、假招聘、假合作、假招标、猎头挖墙脚等方式，企业可以根据自身情况做判断。</p><p><strong>5，整理信息</strong> 这一环节重点是要保留可靠真实信息，剔除干扰与不实数据，对数据来源加以标注。</p><p><strong>6，输出竞品分析结果</strong> 完成竞品分析后，需要撰写分析报告，报告需要围绕分析目标展开。具体形式通常有word、PPT、Excel等。<strong>后台回复关键词【竞品分析】可领取竞品分析案例资料包</strong></p><h2 id="三、竞品分析工具">三、竞品分析工具</h2><p><strong>（1）竞品画布</strong> 竞品画布能够帮助新手快速上手，相当于竞品分析报告的MVP，能够快速验证分析思路是否正确（或符合领导要求），避免返工。</p><p><img src="https://pic4.zhimg.com/80/v2-1faa45973fbec60dad5ef0043e02058f_720w.jpg" alt="img"></p><p><strong>（2）精益画布</strong> 精益画布是关于产品商业模式的一种很好用的工具。可以用来做产品商业模式规划，也可以用来做产品商业模式分析。通过精益画布可以帮助产品经理更全面地思考、决策，从系统、商业的角度来规划产品、分析产品，建立产品的全局观。</p><p><img src="https://pic2.zhimg.com/80/v2-ba9b74d9aee1e09cd76c1626eeacfd01_720w.jpg" alt="img"></p><p><strong>（3）战略画布</strong> 我们也可以利用战略画布做竞品分析，图形化地描述产品与竞品在各竞争要素上的相对强弱表现，可以应用战略画布实现产品差异化创新。</p><p>战略画布横轴显示的是产品的竞争元素，纵轴反映了用户体验与评价，我们把竞品在各维度上的表现得分点都描绘出来，连成一条线，就得到了「价值曲线」。价值曲线反馈了产品在各个竞争维度上的强弱程度，以此来分析出产品的战略轮廓。</p><p><img src="https://pic2.zhimg.com/80/v2-b4da54eab9834558b0513e88cf5c7c91_720w.jpg" alt="img"></p><h2 id="三、竞品分析方法">三、竞品分析方法</h2><p><strong>分析方法包括：比较法、矩阵分析法、竞品跟踪矩阵、功能拆解、探索需求、PEST分析、波特五力模型、SWOT分析等。</strong></p><p><strong>这些工作方法应该在何时使用？如何使用？</strong></p><ul><li>产品战略规划阶段，可使用「PEST分析」与「波特五力模型」归纳出「SWOT分析」中的机会与威胁，从而得出「该不该做」的战略结论。</li><li>当产品属于发展阶段，想要找出自身产品与竞品的优势、劣势，可以使用「比较法」「矩阵分析法」「功能拆解」「探索需求」，取长补短，制定科学的竞争策略。</li><li>当产品同质化严重，想要寻找差异化创新突破时，可以使用「战略画布」+「加减乘除」法，寻找新的方向。</li></ul><p><strong>（1）比较法</strong> 通过对竞品的横向比较，分析找出各自的优势与劣势。比较常用的有打勾比较、评分比较、描述比较，见下图示例：</p><p><img src="https://pic4.zhimg.com/80/v2-16fff7c6607bb855d89b34e2f4dd526f_720w.jpg" alt="img"></p><p><strong>（2）矩阵分析法</strong> 矩阵分析法，又称定位网格、四象限分析。</p><p>通过二维矩阵的方式分析自己产品与竞品的定位、 特色、优势。可以帮助我们了解市场划分、产品定位、竞争优势、发现新机会。</p><p>使用方法也比较简单，先确定两个关键竞争要素，这两个竞争要素应该是用户最关注的或者对用户来说最重要、会影响他们购买决策的产品属性。</p><p><img src="https://pic3.zhimg.com/80/v2-41171b019c9f312f830955edeffa9eda_720w.jpg" alt="img"></p><p><strong>（3）竞品跟踪矩阵</strong> 通过竞品跟踪矩阵，可以对竞品的历史版本进行跟踪记录，找到各版本的发展规律，从而推测竞品下一步的行动计划。</p><p>竞品跟踪包括几个要素：时间、历史版本号、每个版本的变化要点、每个版本的外部环境变化。除了官网、应用市场历史版本记录外，也可以使用「七麦数据」这类第三方平台做辅助参考。</p><p><img src="https://pic2.zhimg.com/80/v2-3fbfb3cc59a57c9dd93c8e25108d4bb1_720w.jpg" alt="img"></p><p><strong>（4）功能拆解</strong> 功能拆解是把竞品分解成一级功能、二级功能、三级功能甚至四级功能，以便全面了解竞品的构成，避免遗漏。可以为下一步的产品探索做准备，可以使用脑图形式，也可以使用Excel表。</p><p><strong>（5）探索需求</strong> 探索需求是挖掘竞品功能所满足的深层次，以便找到更好的解决方案，提升自身产品竞争力。用户需求有三个层次，依次为：<strong>方案级需求→问题级需求→人性级需求。</strong></p><p>通常用户提出的都是解决方案，即方案级需求。我们需要继续深挖，探索这个解决方案究竟解决了用户什么问题，定位到具体问题后，还要更进一步，找到对应的人性级需求。可以使用「5 WHY 分析法」。</p><blockquote><p>「5 WHY 分析法」是丰田生产系统中的一种分析方法，对一个问题连问5个「为什么」，用来分析问题的根本原因。在实际操作时不一定要问5次，要以找到根本问题为目标。</p></blockquote><p><strong>（6）PEST分析</strong> PEST分析法是对宏观环境进行分析，通过分析找到机会，认清威胁与挑战的模型。宏观环境会影响行业发展，行业环境会影响企业发展，企业环境会影响产品发展。其分析框架如下：</p><p><img src="https://pic4.zhimg.com/80/v2-61bbaa5e8b2e54d7d36d0669c3a4137b_720w.jpg" alt="img"></p><p><strong>（7）波特五力模型</strong> 波特五力模型用于对行业环境的分析，是为了评估出某一行业的吸引力与利润率而形成的工具，可为企业是否进军一个新行业做决策参考。这一模型表现了一个行业中存在5种基本竞争力量。</p><p><img src="https://pic3.zhimg.com/80/v2-892665caaf353d80219c2262aa94285e_720w.jpg" alt="img"></p><p><strong>（8）SWOT分析</strong> SWOT分析也是竞品分析中常用的方法，通过分析得出优势、劣势、机会、威胁，以便制定竞争策略，如扬长（发挥优势）、避短（规避劣势）、趋利（抓住机会）、避害（避开威胁）等</p><p><strong>（9）加减乘除</strong> 当竞争对手已经取得了压倒性的领先优势时，与其想着如何比他更好，不如想象如何做得不同。加减乘除法的使用也很简单，通过「战略画布」绘制出竞品的价值曲线，在对方价值曲线上做「加减乘除」，能够帮助我们进行差异化创新：</p><ul><li>**加：**哪些竞争元素的表现可以比竞品好一些？用户对竞品的现状有哪些不满意的地方？针对以上问题，我们可以有目的地进行优化</li><li>**减：**哪些竞争元素的表现可以比竞品差一些？看看竞品是否在功能上过度设计，所提供的超过用户所需的功能徒然增加成本却没有好效果。我们通过弱化这些竞争元素来降低成本</li><li>**乘：**哪些元素是同行中从未有过的，可以创新？也就是要发现并创造新的用户价值，提升产品的竞争力</li><li>**除：**哪些元素是被同行认定为是理所当然的，需要删除？删除为了竞争而攀比的元素，这些元素经常被认为是理所当然的，虽然他们不再具有价值，甚至还减少了产品的价值</li></ul><p><img src="https://pic2.zhimg.com/80/v2-0e8e9061849da067cb7dc1db98ac2031_720w.jpg" alt="img"></p><p><strong>竞品分析的各种方法都有其适用的场景，要根据实际需要做选择和组合，不需要一次性用到所有方法。</strong></p><h2 id="四、竞品分析报告">四、竞品分析报告</h2><p><strong>（1）报告的结构 以「总分总」的结构来表达。</strong></p><ul><li>总述：包括竞品分析的背景、目的、目标、分析的思路、报告的目录、关键发现（类似论文前面的摘要）。</li><li>分述：主要按分析维度划分章节，介绍每个分析维度的具体分析过程与小结。</li><li>总结：包括结论、对产品提出的建议、行动计划、附录等。</li></ul><blockquote><p>要充分考虑读者的阅读体验，结论先行，把竞品分析的关键发现、要点总结放到前面。</p></blockquote><p><strong>（2）框架模版</strong> 这个文档结构往往不是一成不变的，根据不同的读者、竞品分析目标、篇幅、使用场景，需要编写成不同的结构，可以根据实际需要进行调整。可以把竞品分析报告作为一个产品去做：</p><ul><li><strong>用户是谁？——文档的读者是谁？</strong></li><li><strong>为什么要做？——通过竞品分析想解决什么问题？</strong></li><li><strong>使用场景是什么？——这份报告是在什么场合下使用？如何给用户更好的体验？</strong></li><li><strong>MVP验证——使用「竞品画布」和领导确认竞品分析框架与方向，降低返工风险。</strong></li></ul><p><img src="https://pic2.zhimg.com/80/v2-b86966bab16ef279f6f90449e8db077d_720w.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 产品运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞品分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>baseline基础模型</title>
      <link href="/2022/09/11/baseline%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9E%8B/"/>
      <url>/2022/09/11/baseline%E5%9F%BA%E7%A1%80%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1>baseline = 基础模型参照物</h1><p>baseline这个概念是作为算法提升的参照物而存在的，相当于一个基础模型，可以以此为基准来比较对模型的改进是否有效。通常在一些竞赛或项目中，baseline就是指能够顺利完成数据预处理、基础的特征工程、模型建立以及结果输出与评价，然后通过深入进行数据处理、特征提取、模型调参与模型提升或融合，使得baseline可以得到改进。所以这个没有明确的指代，改进后的模型也可以作为后续模型的baseline。</p><p>想强调一下，baseline 就只是「参照物」的意思，至于 baseline 系统是怎么来的、性能如何，并没有一定的标准。</p><p>比如：</p><ul><li>如果你是机器学习的初学者，在做课程作业，那么你可能用「随机猜测」作为 baseline；如果你是要在顶会发论文，那么很可能就需要用当前最好的系统（称为 state of the art）来作 baseline，否则审稿人就会质疑。</li><li>如果你的论文的论点是「我针对某系统作了改进，提升了性能」，那么 baseline 就应该是未改进的系统（相当于生物实验中的「对照组」），它与改进后的系统只有一处不同，这样才能下结论说你的改进就是提升性能的原因。如果你的论文的论点是「我提出的方法 A 比已有的方法 B 更好」，那么 baseline 就应该是方法 B，即使它跟方法 A 毫无关系。</li><li>当你选定了一个 baseline 系统后，如果你能联系上作者，索取到他的代码，就可以直接用作者的实现作为 baseline；如果联系不上，就只能自己复现。有时候，你选择的 baseline 是你要研究的更广阔的框架下的一个特例，而你自己实现了框架下的其它方法，此时为了让系统之间只有一处不同，你可能会主动选择在框架下重新实现 baseline。</li><li>如果你是参加比赛，那么主办方常常会主动提供 baseline 系统。你可以在它的基础上做修改，也可以另起炉灶重新实现自己的系统。</li></ul><p>参考链接：</p><p><a href="https://www.zhihu.com/question/313705075/answer/608578536">https://www.zhihu.com/question/313705075/answer/608578536</a></p><p><a href="https://www.zhihu.com/question/313705075/answer/1600825423">https://www.zhihu.com/question/313705075/answer/1600825423</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础参照物 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析笔记1</title>
      <link href="/2022/09/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B01/"/>
      <url>/2022/09/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h1>数据分析笔记</h1><h2 id="企业数据分析方向">企业数据分析方向</h2><ul><li>现状分析（分析<strong>当下</strong>数据）：现阶段整体情况和各个部分构成占比</li><li>原因分析（分析<strong>过去</strong>数据）：某一现状产生的原因，做出调整优化</li><li>预测分析（结合数据预测<strong>未来</strong>）：结合已有数据预测未来发展趋势</li></ul><h3 id="原因分析：">原因分析：</h3><h4 id="离线分析（批处理）">离线分析（批处理）</h4><p>面向过去，面向历史，分析已有数据：</p><p>在时间维度明显成批次性变化，1周1次/一天1次，又叫<strong>批处理</strong>。</p><h3 id="现状分析">现状分析</h3><h4 id="实时分析（流式处理）">实时分析（流式处理）</h4><p>面向当下，分析实时产生的数据。</p><p>所谓的实时是指从数据产生到数据分析到数据应用时间间隔很短，分秒毫秒级别。</p><h3 id="预测分析">预测分析</h3><h4 id="机器学习">机器学习</h4><p>基于历史数据和当下产生数据预测未来发生的事情。</p><p>侧重于数学算法的运用，如分类、聚类、关联、预测。</p><h2 id="数据分析步骤">数据分析步骤</h2><p>数据分析步骤重要性体现在：为开展数据分析提供了强有力的逻辑支撑。</p><p><strong>步骤</strong>：</p><p>1、明确分析目的思路</p><p>2、数据收集</p><p>3、数据处理</p><p>4、数据分析</p><p>5、数据展现</p><p>6、报告撰写</p><h3 id="1、明确分析目的和思路">1、明确分析目的和思路</h3><ul><li>目的是整个分析流程的起点，为数据收集处理分析提供清晰指引；</li><li>思路：使分析框架体系化，具有逻辑性，维度完整性，结果有效准确行；</li><li>需要数据分析方法论支持，如营销管理类理论。比如用户行为理论，PEST，5W2H分析法等。</li></ul><p><strong>PEST分析法:</strong></p><p>PEST分析是指宏观环境的分析，P是政治(politics)，E是经济(economy)，S是社会(society)，T是技术(technology)。 在分析一个企业集团所处的背景的时候，通常是通过这四个因素来分析企业集团所面临的状况。</p><img src="https://www.newton.com.tw/img/6/87a/cGcq5yM3EzNxI2Y4YGZlVDOhV2MkR2Y1I2YzMTNykTOlZGMlVjZkJTOyI2Mv0WZ0l2LjlGcvU2apFmYv02bj5SdklWYi5yYyN3Ztl2LvoDc0RHa.jpg" alt="图片替换文本" width="500" height="313" align="bottom" /><p><strong>5W2H分析法：</strong></p><p>发明者用五个以W开头的英语单词和两个以H开头的英语单词进行设问，发现解决问题的线索，寻找发明思路，进行设计构思，从而搞出新的发明项目，这就叫做5W2H法。</p><p>（1）<a href="https://baike.baidu.com/item/WHAT/61780">WHAT</a>——是什么？目的是什么？做什么工作？</p><p>（2）WHY——为什么要做？可不可以不做？有没有替代方案？</p><p>（3）<a href="https://baike.baidu.com/item/WHO/74453">WHO</a>——谁？由谁来做？</p><p>（4）<a href="https://baike.baidu.com/item/WHEN/2306122">WHEN</a>——何时？什么时间做？什么时机最适宜？</p><p>（5）WHERE——何处？在哪里做？</p><p>（6）<a href="https://baike.baidu.com/item/HOW/2286245">HOW</a> ——怎么做？如何提高效率？如何实施？方法是什么？</p><p>（7）HOW MUCH——多少？做到什么程度？数量如何？质量水平如何？费用产出如何？</p><img src="https://bkimg.cdn.bcebos.com/pic/4610b912c8fcc3ce74dfed169045d688d43f20f3?x-bce-process=image/resize,m_lfit,w_536,limit_1/format,f_jpg" alt="图片替换文本" width="500" height="313" align="bottom" /><h3 id="2、数据收集">2、数据收集</h3><p>数据从无到有~数据传输搬运</p><ul><li>业务数据</li><li>日志数据</li><li>爬虫数据</li><li>互联网公开数据</li></ul><h3 id="3、数据处理（数据预处理）">3、数据处理（数据预处理）</h3><p>数据预处理需要对数据进行加工整理。主要包括：</p><ul><li>数据清洗，数据转化，数据提取，数据计算；</li></ul><p>目的：保证数据一致性和有效性，让数据变成干净规整的结构化数据。</p><h3 id="4、数据分析">4、数据分析</h3><p>用适当的分析方法与工具，对处理过后的数据进行分析，提取有价值的细信息，形成有效结论的过程。</p><h3 id="5、数据展示（数据可视化）">5、数据展示（数据可视化）</h3><p>分析结果图表展示化。</p><h3 id="6、报告撰写">6、报告撰写</h3><h2 id="分布式与集群">分布式与集群</h2><h3 id="分布式：">分布式：</h3><p>多台机器，每台机器部署不同组件。</p><h3 id="集群：">集群：</h3><p>多台机器，每台机器部署相同组件</p><h2 id="SSH协议">SSH协议</h2><p>SSH为Secure Shell的缩写，是一种网络安全协议，专为远程登录会话和其他网络服务提供安全性的协议。</p><p>主要用途：<strong>用户加密实现远程登录，服务器之间的免密登录</strong>。</p><p>SSH协议中默认使用RSA算法实现<strong>非对称加密</strong>，需要2个密钥：<strong>公钥/私钥</strong>。</p><p>公钥与私钥是一对，如果用公钥对数据进行加密，只有用对应的私钥才能解密</p><p><img src="https://i.bmp.ovh/imgs/2022/03/c8cae6be69e40537.png" alt=""></p><h2 id="Hadoop介绍">Hadoop介绍</h2><p>用java语言实现，开源</p><p>允许用户使用<strong>简单的编程模型</strong>实现<strong>跨机器</strong>集群对海量数据进行<strong>分布式计算</strong>处理。</p><h3 id="Hadoop核心组件">Hadoop核心组件</h3><ul><li>Hadoop HDFS（分布式文件存储系统）：解决海量数据存储。</li><li>Hadoop YARN（集群资源管理和任务调度框架）：解决资源任务调度</li><li>Hadoop MapReduce（分布式计算框架）：解决海量数据计算</li></ul><p><a href="http://hadoop.apache.org/">官网</a></p><h3 id="Hadoop特性优点">Hadoop特性优点</h3><h4 id="扩容能力强">扩容能力强</h4><p>多台机器集群，可多可少灵活。</p><h4 id="成本低">成本低</h4><p>集群整体能力，集体廉价=廉价</p><h4 id="效率高">效率高</h4><p>分布式并行，并发数据</p><h4 id="可靠性强">可靠性强</h4><p>能自动维护数据的多份复制</p><h3 id="Hadoop集群整体概述">Hadoop集群整体概述</h3><ul><li>Hadoop集群包括两个集群：HDFS集群、YARN集群</li><li>逻辑上分离，物理上在一起</li><li>两个集群都是标准的主从架构集群</li></ul><p><img src="https://s3.bmp.ovh/imgs/2022/03/1673e1ef7c6f7211.png" alt=""></p><h3 id="分布式存储的优点">分布式存储的优点</h3><p>单机纵向扩展：磁盘不够加磁盘，有上限瓶颈限制</p><p>多机横向扩展：机器不够加机器，理论上无限扩展</p><h3 id="分块存储好处">分块存储好处</h3><ul><li>问题：文件过大导致单机存不下，上传下载效率低</li><li>解决：文件分块存储在不同机器，，针对块并行操作提高效率</li></ul><p>切成块，</p><h3 id="两个网站">两个网站</h3><p><a href="http://node1:8088/">http://node1:8088/</a></p><p><a href="http://node1:9870/">http://node1:9870/</a></p><h3 id="副本机制的作用">副本机制的作用</h3><p>冗余存储，保障数据安全</p><h3 id="HDFS设计目标">HDFS设计目标</h3><ul><li>硬件故障（Hardware Failure）是常态，HDFS可能有成百上千的服务器组成，每个组件都有可能故障。因此，<strong>故障检测和自动快速回复</strong>是HDFS的核心架构目标。</li><li>HDFS上的应用主要是以流式读取数据。HDFS被设计成<strong>用于批处理</strong>，而不是用户交互式的。相较于数据访问的反应时间，<strong>更注重数据访问的高吞吐量。</strong></li><li>典型的HDFS文件大小是GB到TB的级别。所以HDFS被调整成 <strong>支持</strong>大文件。他应该提高很高的聚合数据带宽，一个集群中支持数百个节点，一个集群中应该支持千万级别的文件。</li></ul><h3 id="MapReduce思想">MapReduce思想</h3><ul><li>Map表示第一阶段，负责<strong>拆分</strong>：即把复杂的任务分解为若干个“简单的子任务”来并行处理。可以进行拆分的前提是这些小人物可以并行计算，彼此间几乎没有依赖关系。</li><li>Reduce表示第二阶段，负责“<strong>合并</strong>”：即对map阶段的结果进行全局汇总。</li><li>MapReduce借鉴了 <strong>函数式</strong>语言中的思想，用MaP和Reduce两个函数提供了高层的并行编程抽象模型。<ul><li>map:对一组数据元素进行某种重复式的处理。</li><li>reduce：对Map的中间结果进行某种进一步的结果整理。</li></ul></li></ul><h3 id="MapReduce实例进程">MapReduce实例进程</h3><p>三类</p><ul><li>MRAppMaster：负责整个MR程序的过程调度及状态协调</li><li>MapTask：负责map阶段的整个数据处理流程</li><li>ReduceTask：负责reduce阶段的整个数据处理流程</li></ul><p>数据类型</p><ul><li>kv键值对。</li></ul><p>阶段组成：</p><p>一个Map一个Reduce，只能串行运行</p><h3 id="Map阶段执行过程">Map阶段执行过程</h3><h4 id="第一阶段：逻辑切片">第一阶段：逻辑切片</h4><h4 id="第二阶段：按行读取数据">第二阶段：按行读取数据</h4><h4 id="第三阶段：map方法处理数据">第三阶段：map方法处理数据</h4><h4 id="第四阶段：分区">第四阶段：分区</h4><h4 id="第五阶段：写入内存缓冲区，溢出的时候根据key进行排序">第五阶段：写入内存缓冲区，溢出的时候根据key进行排序</h4><h4 id="第六阶段：合并">第六阶段：合并</h4><h3 id="Reduce阶段执行过程">Reduce阶段执行过程</h3><ul><li>第一阶段：ReduceTask会主动从MapTask<strong>复制拉取</strong>属于需要自己处理的数据。</li><li>第二阶段：把拉去来的数据，全部进行 <strong>合并merge</strong>，把分散的数据合并成一个大的数据。再对合并后的数据排序。</li><li>第三阶段是对排序后的键值<strong>对调用reduce方法</strong>。键相等的键值对调用一次reduce方法。最后把这些输出的键值对传入到HDFS文件中。</li></ul><h3 id="shuffle概念">shuffle概念</h3><ul><li>Shuffle的本意是洗牌，混洗的意思，把一组有规则的数据尽量打乱成无规则的数据。</li><li>而在MapReduce中，Shuffle更像是洗牌的逆过程，指的是 <strong>将map端的无规则输出按指定的规则打乱成具有一定规则的数据，以便reduce端接受处理</strong>。</li><li>一般把从Map产生输出开始到Reduce取得数据作为输入之前的过程称作shuffle。</li></ul><h3 id="YARN3大组件">YARN3大组件</h3><ul><li>ResourceManager(RM)</li></ul><p>YARN集群中的主角色，决定系统中所用应用程序之间的资源分配的最终权限，及6最终仲裁者。</p><p>接受用户的作业提交，并通过NM分配，管理各个机器上的计算资源。</p><ul><li>NodeManager (NM)</li></ul><p>YARN中的从角色，一台机器上一个，负责管理本机器上的计算资源。</p><p>根据RM命令，启动Container容器、监视容器的资源使用情况。并向RM主角是汇报资源使用情况。</p><ul><li>ApplicationMaster (AM)</li></ul><p>用户提交的每个应用程序均包含一个AM。</p><p>应用程序内的“老大”，负责程序内部各阶段的资源申请，监督程序的执行情况。</p><h3 id="调度器策略">调度器策略</h3><ul><li>三种调度器</li></ul><p>FIFO Schedeler（先进先出调度器），默认的Capacity Scheduler（容量调度器），Fair Scheduler（公平调度器）</p><h3 id="什么是Hive">什么是Hive</h3><ul><li>Apache Hive是一款建立再Hadoop之上的开源<strong>数据仓库</strong>系统，可以将Hadoop文件中的结构化、半结构化数据文件映射为一张数据库表，基于表提供了一种类似SQL的查询模型，成为<strong>HQL</strong>（hive查询语言）。</li><li>核心：将HQL转化为MapReduce程序</li><li>Hive利用HDFS存储数据，利用MapReduce查询分析数据</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习相关知识</title>
      <link href="/2022/09/09/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/09/09/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1>Confusion matrix混淆矩阵</h1><p><a href="https://cjh0220.github.io/posts/792fda2a/">混淆矩阵</a></p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/45NBuzDIW489QBoVep5mcZ2W2.kP5EuomFAVHtKzXCNvG.5Fg2QHu70oplOqCqWRBUmUdf5cb3HnE1wW54oXTKfi6OfdS8nOLb9tHYRyEU8!/b&amp;bo=qgU*AQAAAAADF6M!&amp;rf=viewer_4" alt="img"></p><p><strong>混淆矩阵</strong>是 ROC 曲线绘制的基础，同时它也是衡量分类型模型 准确度中最基本、最直观、计算最简单的方法。以分类模型中的二分类为例，对于这 种问题，模型最终需要判断样本的结果是 0 还是 1，或者说是 Positive 还是 Negative。</p><p>因此，能得到这四个基础指标，可以看成是一级指标：</p><p>真实值是 Positive，模型认为 是 Positive 的数量(TP)。</p><p>真实值是 Positive，模型认为是 Negative 的数量(FN)。</p><p>真实值 是 Negative，模型认为是 Positive 的数量(FP)。</p><p>真实值是 Negative，模型认为是 Negative的数量(TN)。</p><p>将这四个指标一起呈现在表格中，就能得到如表 3 这样一个矩阵，称它 为<strong>混淆矩阵</strong>。预测性分类模型，是希望越准越好。在混淆矩阵中，TP 与 TN 的数量越 大越好，而 FP 与 FN 的数量越小越好。</p><h3 id="accuracy-rate：准确率">accuracy rate：准确率</h3><p><strong>准确率</strong>指的是预测值为 1 且真实值也为 1 的样本在预测值为 1 的所有样本中所占 的比例。</p><h3 id="recall-rate：召回率">recall rate：召回率</h3><p><strong>召回率</strong>指的是预测值为 1 且真实值也为 1 的样本在真实值为 1 的所有样本中 所占的比例。</p><h3 id="AUC：">AUC：</h3><p>AUC 是指 ROC 曲线下与坐标轴围成的面积，这个面积的数值小于等于 1。又因 为 ROC 曲线一般都处于 y=x 这条直线的上方，所以 AUC 的取值范围在 0.5 和 1 之间。 AUC 越接近 1.0，检测方法的实性越高；等于 0.5 时真实性最低，无应用价值。</p><h3 id="mAP-：">mAP ：</h3><p>是 <strong>Mean Average Precision</strong> 的缩写，即 <strong>均值平均精度</strong>。作为 <strong>object dection</strong> 中衡量<strong>检测精度</strong>的指标。计算公式为：</p><p><strong>mAP = 所有类别的平均精度求和除以所有类别</strong>。</p><h2 id="backbone：-主干网络">backbone： 主干网络</h2><p>翻译为主干网络的意思，既然说是主干网络，就代表其是网络的一部分，那么是哪部分呢？翻译的很好，主干部分，哈哈哈哈，文字游戏了哈。这个主干网络大多时候指的是提取特征的网络，其作用就是提取图片中的信息，共后面的网络使用。这些网络经常使用的是resnet VGG等，而不是我们自己设计的网络，因为这些网络已经证明了在分类等问题上的特征提取能力是很强的。在用这些网络作为backbone的时候，都是直接加载官方已经训练好的模型参数，后面接着我们自己的网络。让网络的这两个部分同时进行训练，因为加载的backbone模型已经具有提取特征的能力了，在我们的训练过程中，会对他进行微调，使得其更适合于我们自己的任务。</p><h2 id="head">head</h2><p>head是获取网络输出内容的网络，利用之前提取的特征，head利用这些特征，做出预测。</p><h2 id="neck">neck</h2><p>neck是放在backbone和head之间的，是为了更好的利用backbone提取的特征。</p><h2 id="bottleneck">bottleneck</h2><p>bottleneck:瓶颈的意思，通常指的是网网络输入的数据维度和输出的维度不同，输出的维度比输入的小了许多，就像脖子一样，变细了。经常设置的参数 bottle_num=256，指的是网络输出的数据的维度是256 ，可是输入进来的可能是1024维度的。</p><h2 id="Embedding">Embedding</h2><p>通过将高维数据映射到较低维空间来解决稀疏输入数据的核心问题。</p><p>在深度学习实验中经常会遇Embedding层,然而网络上的介绍可谓是相当含糊。比如 Keras中文文档中对嵌入层 Embedding的介绍除了一句 “嵌入层将正整数（下标）转换为具有固定大小的向量”之外就不愿做过多的解释。那么我们为什么要使用嵌入层 Embedding呢? 主要有这两大原因:</p><p>使用One-hot 方法编码的向量会很高维也很稀疏。假设我们在做自然语言处理（NLP）中遇到了一个包含2000个词的字典，当时用One-hot编码时，每一个词会被一个包含2000个整数的向量来表示，其中1999个数字是0，要是我的字典再大一点的话这种方法的计算效率岂不是大打折扣？</p><p>训练神经网络的过程中，每个嵌入的向量都会得到更新。如果你看到了博客上面的图片你就会发现在多维空间中词与词之间有多少相似性，这使我们能可视化的了解词语之间的关系，不仅仅是词语，任何能通过嵌入层 Embedding 转换成向量的内容都可以这样做。</p><h2 id="One-hot-representation独热编码">One hot representation独热编码</h2><p>程序中编码单词的一个方法是one hot encoding。<br>实例：有1000个词汇量。排在第一个位置的代表英语中的冠词&quot;a&quot;，那么这个&quot;a&quot;是用[1,0,0,0,0,…]，只有第一个位置是1，其余位置都是0的1000维度的向量表示，如下图中的第一列所示。</p><p><img src="https://img-blog.csdnimg.cn/20181028151249219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2syODQyMTM0OTg=,size_27,color_FFFFFF,t_70" alt="img"></p><h2 id="GAP-Global-Average-Pooling-层">GAP(Global Average Pooling)层</h2><p>把 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes7%5Ctimes7" alt="[公式]"> 映射为 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes1" alt="[公式]"> ，满足了输入不同尺度的image的需求。你不管输入图片是 <img src="https://www.zhihu.com/equation?tex=224%5Ctimes224" alt="[公式]"> 还是 <img src="https://www.zhihu.com/equation?tex=256%5Ctimes256" alt="[公式]"> ，最后都给你映射为 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes1" alt="[公式]">。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anchor-free</title>
      <link href="/2022/09/09/anchor-free/"/>
      <url>/2022/09/09/anchor-free/</url>
      
        <content type="html"><![CDATA[<h1>Anchor-Free</h1><p>自从去年8月CornerNet开始，Anchor-Free的目标检测模型层出不穷，最近达到了井喷的状态，宣告着目标检测迈入了Anchor-Free时代。</p><p>其实Anchor-Free并不是一个新概念了，大火的YOLO算是目标检测领域最早的Anchor-Free模型，而最近的Anchor-Free模型如FASF、FCOS、FoveaBox都能看到DenseBox的影子。</p><p>下面主要讲一下有代表性的Anchor-Free模型(包括DenseBox、YOLO、CornerNet、ExtremeNet、FSAF、FCOS、FoveaBox)，分成3个部分来介绍(早期探索、基于关键点、密集预测)，具体细节就不展开了~</p><h2 id="早期探索">早期探索</h2><h3 id="1-DenseBox">1.DenseBox</h3><p>最早知道这篇文章，是在去年刚接触目标检测的时候，看了一篇地平线对DenseBox作者的采访，当时因为刚接触感触不深，但是从当前的时间节点回头看，DenseBox的想法是多么的超前啊。采访中说道，当年DenseBox其实早在2015年初就已经开发出来了，这比同期的Faster-RCNN系列提前数月，但是论文直到9月才在arxiv上发布。如果DenseBox能在2015年初就发表，那么最近几年目标检测的发展会不会是另外一番景象呢~~</p><p><a href="https://zhuanlan.zhihu.com/p/24350950">地平线HorizonRobotics：黄李超：让算法成为一种生活方式 | 地平线算法工程师特稿zhuanlan.zhihu.com/p/24350950<img src="https://pic2.zhimg.com/v2-24cdfcc331a83a7dafda94ebb42fbf11_180x120.jpg" alt="img"></a></p><p><strong>两点贡献：</strong></p><p>1.证明单个FCN可以检测出遮挡严重、不同尺度的目标。</p><p>2.通过多任务引入landmark localization，能进一步提升性能。</p><p><img src="https://pic2.zhimg.com/80/v2-1a418dfed7c6d450a6ee81ae61010039_720w.jpg" alt="img"></p><p>如图1所示，单个FCN同时产生多个预测bbox和置信分数的输出。测试时，整个系统将图片作为输入，输出5个通道的feature map。每个pixel的输出feature map得到5维的向量，包括一个置信分数和bbox边界到该pixel距离的4个值。最后输出feature map的每个pixel转化为带分数的bbox，然后经过NMS后处理。</p><p><strong>Ground Truth Generation</strong></p><p><img src="https://pic2.zhimg.com/80/v2-e3f1853b90df41caa4cdd681548ced81_720w.jpg" alt="img"></p><p>第一个通道ground truth map的正标签区域由半径为r的圆填充，圆的中心点位于bbox的中点。而剩下的4个通道由bbox的2个角点决定。</p><p><strong>Refine with Landmark Localization</strong></p><p><img src="https://pic3.zhimg.com/80/v2-4f972a359f43187c73b380f6c77e494a_720w.jpg" alt="img"></p><p>在FCN结构中添加少量层能够实现landmark localization，然后通过融合landmark heatmaps和score map可以进一步提升检测结果。</p><h3 id="2-YOLO">2.YOLO</h3><p>YOLO将目标检测作为一个空间分离的边界框和相关的类概率的回归问题。可以直接从整张图片预测出边界框和分类分数。</p><p><strong>三个优点：</strong></p><p>1.速度快</p><p>2.通过整幅图进行推理得到预测结果</p><p>3.能学到目标的一般特征</p><p><img src="https://pic3.zhimg.com/80/v2-f9e5151dbc6dc9c48e6fce637a377d82_720w.jpg" alt="img"></p><p><strong>Unified Detection</strong></p><p><img src="https://pic2.zhimg.com/80/v2-652c18c78002bb8667f20268d01d0ab5_720w.jpg" alt="img"></p><p>YOLO将输入图片分成SXS个网格，如果某个目标的中心点落到其中一个格点，那么该格点就负责该目标的检测。每个格点预测出B个bbox和每个bbox的置信分数。</p><p>定义置信度为：</p><p><img src="https://pic1.zhimg.com/80/v2-6c83ceb0c48d6f669116929ee20c3340_720w.jpg" alt="img"></p><p>每个bbox由5个预测值组成：x，y，w，h 和 置信度。每个格点也预测C个类概率</p><p><img src="https://pic3.zhimg.com/80/v2-58c5de02cd12cfbe0b1db52bcb45e3b2_720w.png" alt="img"></p><p>测试的时候，将类概率和置信分数相乘，得到类置信分数</p><p><img src="https://pic4.zhimg.com/80/v2-8c79ba04aa36132b7f140b9bbb5efe47_720w.png" alt="img"></p><p>举个例子，在Pascal VOC数据集上评估YOLO，使用S=7，B=2，VOC有20类，所以C=20，那么最终的预测结果是7x7x30的向量。</p><p><strong>DenseBox和YOLO的区别：</strong></p><p>1.DenseBox应用于人脸检测，相当于只有两类，而YOLO是通用检测，通常大于两类。</p><p>2.DenseBox是密集预测，对每个pixel进行预测，而YOLO先将图片进行网格化，对每个grid cell进行预测。</p><p>3.DenseBox的gt通过bbox中心圆形区域确定的，而YOLO的gt由bbox中心点落入的grid cell确定的。</p><h2 id="基于关键点">基于关键点</h2><h3 id="3-CornerNet">3.CornerNet</h3><p><strong>两点贡献：</strong></p><p>1.通过检测bbox的一对角点来检测出目标。</p><p>2.提出corner pooling，来更好的定位bbox的角点。</p><p><img src="https://pic2.zhimg.com/80/v2-964a810d6bc468a5e71eb8baca089ffd_720w.jpg" alt="img"></p><p><strong>Detecting Corners</strong></p><p><img src="https://pic4.zhimg.com/80/v2-1f42c69604f932f8c6c9983fec46b58b_720w.jpg" alt="img"></p><p>首先预测出两组heatmaps，一组为top-left角点，另一组为bottom-right角点。每组heatmaps有C个通道，表示C个类别，尺寸为HxW。每个通道是一个binary mask，表示一个类的角点位置。</p><p><img src="https://pic4.zhimg.com/80/v2-0a93427bc7d569753cef72317278f1d3_720w.jpg" alt="img"></p><p>对于每个角点来说，只有一个gt正例位置，其他都为负例位置。训练时，以正例位置为圆心，设置半径为r的范围内，减少负例位置的惩罚(采用二维高斯的形式)，如上图所示。</p><p><strong>Grouping Corners</strong></p><p>受到多人姿态估计论文的启发，基于角点embedding之间的距离来对角点进行分组。</p><p><strong>Corner Pooling</strong></p><p><img src="https://pic1.zhimg.com/80/v2-0caf3b8130420dbb5279a43dbdc10d0c_720w.jpg" alt="img"></p><p>在每个pixel位置，最大池化第一个feature map右方的所有特征向量，最大池第二个feature map下方的所有特征向量，然后将两个池化结果相加。</p><h3 id="4-ExtremeNet">4.ExtremeNet</h3><p><strong>两个贡献：</strong></p><p>1.将关键点定义为极值点。</p><p>2.根据几何结构对关键点进行分组。</p><p><img src="https://pic1.zhimg.com/80/v2-93b0b62f02af9d126c6b5953c0199460_720w.jpg" alt="img"></p><p>作者使用了最佳的关键点估计框架，通过对每个目标类预测4个多峰值的heatmaps来寻找极值点。另外，作者使用每个类center heatmap来预测目标中心。仅通过基于几何的方法来对极值点分组，如果4个极值点的几何中点在center map上对应的分数高于阈值，则这4个极值点分为一组。</p><p><img src="https://pic3.zhimg.com/80/v2-5f2eb6e6cbfef24ac17be31dd84f3d2a_720w.jpg" alt="img"></p><p>offset的预测是类别无关的，而极值点的预测是类别相关的。center map没有offset预测。网络的输出是5xC heatmaps和4x2offset maps，C是类别数。</p><p><strong>Center Grouping</strong></p><p><img src="https://pic1.zhimg.com/80/v2-7a59bf5ac141593d3e49200a9f3e6f74_720w.jpg" alt="img"></p><p>分组算法的输入是每个类的5个heatmaps，一个center heatmap和4个extreme heatmaps，通过检测所有的峰值来提取出5个heatmaps的关键点。给出4个极值点，计算几何中心，如果几何中心在center map上对应高响应，那么这4个极值点为有效检测。作者使用暴力枚举的方式来得到所有有效的4个关键点。</p><p><strong>CornerNet和ExtremeNet的区别：</strong></p><p>1.CornerNet通过预测角点来检测目标的，而ExtremeNet通过预测极值点和中心点来检测目标的。</p><p>2.CornerNet通过角点embedding之间的距离来判断是否为同一组关键点，而ExtremeNet通过暴力枚举极值点、经过中心点判断4个极值点是否为一组。</p><h2 id="密集预测">密集预测</h2><h3 id="5-FSAF">5.FSAF</h3><p><strong>Motivation</strong></p><p>让每个实例选择最好的特征层来优化网络，因此不需要anchor来限制特征的选择。</p><p><img src="https://pic4.zhimg.com/80/v2-34e3d353e34c9b346def51e6888cd94b_720w.jpg" alt="img"></p><p>一个anchor-free的分支在每个特征金字塔层构建，独立于anchor-based的分支。和anchor-based分支相似，anchor-free分支由分类子网络和回归子网络。一个实例能够被安排到任意层的anchor-free分支。训练期间，基于实例的信息而不是实例box的尺寸来动态地为每个实例选择最合适的特征层。选择的特征层学会检测安排的实例。推理阶段，FSAF模块和anchor-based分支独立或者联合运行。</p><p><strong>Feature Selective Anchor-Free Module</strong></p><p><img src="https://pic2.zhimg.com/80/v2-955713880baa77cc6387d4d889dfef79_720w.jpg" alt="img"></p><p>在RetinaNet的基础上，FSAF模块引入了2个额外的卷积层，这两个卷积层各自负责anchor-free分支的分类和回归预测。具体的，在分类子网络中，feature map后面跟着K个3x3的卷积层和sigmoid，在回归子网络中，feature map后面跟着4个3x3的卷积层和ReLU。</p><p><strong>Ground-truth</strong></p><p><img src="https://pic2.zhimg.com/80/v2-91c6a3195f246c1a369db14b9d8724d5_720w.jpg" alt="img"></p><p>白色为有效区域，灰色为忽略区域，黑色为负样本区域。</p><p><strong>Online Feature Selection</strong></p><p><img src="https://pic1.zhimg.com/80/v2-73c19e4881f431644049df2d2e2cf154_720w.jpg" alt="img"></p><p>实例输入到特征金字塔的所有层，然后求得所有anchor-free分支focal loss和IoU loss的和，选择loss和最小的特征层来学习实例。训练时，特征根据安排的实例进行更新。推理时，不需要进行特征更新，因为最合适的特征金字塔层自然地输出高置信分数。</p><h3 id="6-FCOS">6.FCOS</h3><p><strong>四个优点：</strong></p><p>1.将检测和其他使用FCN的任务统一起来，容易重用这些任务的思想。</p><p>2.proposal free和anchor free，减少了超参的设计。</p><p>3.不使用trick，达到了单阶段检测的最佳性能。</p><p>4.经过小的修改，可以立即拓展到其他视觉任务上。</p><p><img src="https://pic4.zhimg.com/80/v2-26bae7ae323345a16fa4b6b72853427b_720w.jpg" alt="img"></p><p>和语义分割相同，检测器直接将位置作为训练样本而不是anchor。具体的，如果某个位置落入了任何gt中，那么该位置就被认为是正样本，并且类别为该gt的类别。基于anchor的检测器，根据不同尺寸安排anchor到不同的特征层，而FCOS直接限制边界框回归的范围(即每个feature map负责一定尺度的回归框)。</p><p><strong>Center-ness</strong></p><p><img src="https://pic3.zhimg.com/80/v2-203aef714dd276cd19e1f87218ddf1fe_720w.jpg" alt="img"></p><p>为了剔除远离目标中心的低质量预测bbox，作者提出了添加center-ness分支，和分类分支并行。</p><p><img src="https://pic3.zhimg.com/80/v2-2729a7d55dc2a266a2e04d922a95d61a_720w.jpg" alt="img"></p><p>开根号使center-ness衰退缓慢。center-ness范围为0-1之间，通过BCE训练。测试时，最终分数由center-ness预测结果和分类分数乘积得到。</p><h3 id="7-FoveaBox">7.FoveaBox</h3><p><strong>Motivation</strong></p><p>人类眼睛的中央凹：视野(物体)的中心具有最高的视觉敏锐度。FoveaBox联合预测对象中心区域可能存在的位置以及每个有效位置的边界框。由于特征金字塔的特征表示，不同尺度的目标可以从多个特征层中检测到。</p><p><img src="https://pic3.zhimg.com/80/v2-46e2ac9214429b1b6f9478d7f54548be_720w.jpg" alt="img"></p><p>FoveaBox添加了2个子网络，一个子网络预测分类，另一个子网络预测bbox。</p><p><strong>Object Fovea</strong></p><p><img src="https://pic4.zhimg.com/80/v2-f90d6abb905c7c638aa36700a9c316ef_720w.jpg" alt="img"></p><p>目标的中央凹如上图所示。目标中央凹只编码目标对象存在的概率。为了确定位置，模型要预测每个潜在实例的边界框。</p><p><strong>FSAF、FCOS、FoveaBox的异同点：</strong></p><p>1.都利用FPN来进行多尺度目标检测。</p><p>2.都将分类和回归解耦成2个子网络来处理。</p><p>3.都是通过密集预测进行分类和回归的。</p><p>4.FSAF和FCOS的回归预测的是到4个边界的距离，而FoveaBox的回归预测的是一个坐标转换。</p><p>5.FSAF通过在线特征选择的方式，选择更加合适的特征来提升性能，FCOS通过center-ness分支剔除掉低质量bbox来提升性能，FoveaBox通过只预测目标中心区域来提升性能。</p><p><strong>(DenseBox、YOLO)和(FSAF、FCOS、FoveaBox)的异同点：</strong></p><p>1.都是通过密集预测进行分类和回归的。</p><p>2.(FSAF、FCOS、FoveaBox)利用FPN进行多尺度目标检测，而(DenseBox、YOLO)只有单尺度目标检测。</p><p>3.(DenseBox、FSAF、FCOS、FoveaBox)将分类和回归解耦成2个子网络来得到，而(YOLO)分类和定位统一得到。</p><h3 id="总结：">总结：</h3><p>1.各种方法的关键在于gt如何定义</p><p>**ps：**关于这一点我稍加一点补充，目标检测的gt是一个矩形框，然而用这个矩形框信息来检测目标显然是不合理的，因为矩形框内只有一小部分是目标，而剩下的是背景，这可能会导致检测器的精度下降，而最近的一些anchor-free模型其实是改变了gt的定义，比如cornernet定义为角点，extremenet定义为极值点和中心点，FSAF、FoveaBox定义为矩形框的中间区域，FCOS虽然是矩形框，但是经过center-ness抑制掉低质量的框，其实也是一种变相的将gt定义为矩形框中心区域。gt重新定义之后，需要检测的目标语义变得更加明确了，有利于分类和回归。</p><p><strong>所以，我认为设计合适的gt，是提升目标检测速度和精度的关键！(回过头来看，当年说的gt定义就是后来的label assign)</strong></p><p>2.主要是基于关键点检测的方法和密集预测的方法来做Anchor-Free</p><p>3.本质上是将基于anchor转换成了基于point/region</p><p><strong>Reference</strong></p><p>1.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1509.04874">DenseBox: Unifying Landmark Localization with End to End Object Detection</a></p><p>2.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1506.02640">You Only Look Once: Unified, Real-Time Object Detection</a></p><p>3.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1808.01244">CornerNet: Detecting Objects as Paired Keypoints</a></p><p>4.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1901.08043">Bottom-up Object Detection by Grouping Extreme and Center Points</a></p><p>5.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1903.00621">Feature Selective Anchor-Free Module for Single-Shot Object Detection</a></p><p>6.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1904.01355">FCOS: Fully Convolutional One-Stage Object Detection</a></p><p>7.<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1904.03797v1">FoveaBox: Beyond Anchor-based Object Detector</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马尔可夫链</title>
      <link href="/2022/09/09/%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%93%BE/"/>
      <url>/2022/09/09/%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%93%BE/</url>
      
        <content type="html"><![CDATA[<h1>马尔可夫链</h1><h2 id="前言">前言</h2><p>马尔可夫链（Markov Chain）可以说是机器学习和人工智能的基石，在强化学习、自然语言处理、金融领域、天气预测、<a href="https://www.zhihu.com/search?q=%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%22448575579%22%7D">语音识别</a>方面都有着极其广泛的应用</p><blockquote><p>The future is independent of the past given the present<br>未来独立于过去，只基于当下。</p></blockquote><p>这句人生哲理的话也代表了马尔科夫链的思想：<strong>过去所有的信息都已经被保存到了现在的状态，基于现在就可以预测未来。</strong></p><p>一句话描述：状态空间中经过从一个状态到另一个状态的转换的随机过程。该过程要求具备**“无记忆”<strong>的性质：下一状态的概率分布</strong>只能由当前状态决定**，在时间序列中它前面的事件均与之无关。</p><p>虽然这么说可能有些极端，但是却可以大大简化模型的复杂度，因此马尔可夫链在很多时间序列模型中得到广泛的应用，比如循环神经网络 RNN，隐式马尔可夫模型 HMM 等，当然 MCMC 也需要它。</p><h2 id="1-随机过程是啥玩意儿">1. 随机过程是啥玩意儿</h2><p>马尔可夫链是<strong>随机过程</strong> 这门课程中的一部分，先来简单了解一下。</p><p>简单来说，<strong>随机过程就是使用统计模型一些事物的过程进行预测和处理</strong> ，比如股价预测通过今天股票的涨跌，却预测明天后天股票的涨跌；天气预报通过今天是否下雨，预测明天后天是否下雨。这些过程都是可以通过数学公式进行量化计算的。通过下雨、股票涨跌的概率，用公式就可以推导出来 N 天后的状况。</p><p><img src="https://pic2.zhimg.com/v2-e82fe2df706748875ba0a37255784215_b.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/v2-736245fb81c4e3b76b7a0c954ce5dafd_b.jpg" alt="img"></p><p>讲马尔可夫链不得不提到随机过程，因为它是随机过程课本中的，啊啊。</p><p>顾名思义，它其实就是个<strong>过程</strong>，比如今天下雨，那么明天下不下雨呢？后天下不下雨呢？从今天下雨到明天不下雨再到后天下雨，这就是个过程。那么怎么预测N天后到底下不下雨呢？这其实是可以利用公式进行计算的，随机过程就是这样一个工具，把整个过程进行量化处理，用公式就可以推导出来N天后的天气状况，下雨的概率是多少，不下雨的概率是多少。<strong>说白了，随机过程就是一些统计模型，利用这些统计模型可以对自然界的一些事物进行预测和处理</strong>，比如天气预报，比如股票，比如市场分析，比如人工智能。它的应用还真是多了去了。</p><p>话说回来，还真是佩服能构造出这些统计模型的大牛，简直脑洞大开啊。</p><h2 id="2-马尔可夫链-（Markov-Chain）又是什么鬼">2. 马尔可夫链 （Markov Chain）又是什么鬼</h2><p>好了，终于可以来看看马尔可夫链 （Markov Chain）到底是什么了。</p><p>它是随机过程中的一种过程，到底是哪一种过程呢？好像一两句话也说不清楚，还是先看个例子吧。</p><p>先说说我们村智商为0的<a href="https://www.zhihu.com/search?q=%E7%8E%8B%E4%BA%8C%E7%8B%97&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2226453269%22%7D">王二狗</a>，人傻不拉几的，见人就傻笑，每天中午12点的标配，仨状态：吃，玩，睡。<strong>这就是传说中的状态分布。</strong></p><p><img src="https://pic4.zhimg.com/v2-000da5e75cb94f5d73810ec29648333b_b.jpg" alt="img"></p><p>你想知道他n天后中午12点的状态么？是在吃，还是在玩，还是在睡？这些状态发生的概率分别都是多少？ （知道你不想，就假装想知道吧<s>学习真的好累</s>）</p><p>先看个假设，他每个状态的转移都是有概率的，比如今天玩，明天睡的概率是几，今天玩，明天也玩的概率是几几，看图更清楚一点。</p><p><img src="https://pic1.zhimg.com/v2-a37633055694cccb8532ebafc15b66d8_b.jpg" alt="img"></p><p>这个矩阵就是<strong>转移概率矩阵P</strong>，并且它是保持不变的，就是说第一天到第二天的转移概率矩阵跟第二天到第三天的转移概率矩阵是一样的。（这个叫<a href="https://www.zhihu.com/search?q=%E6%97%B6%E9%BD%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2226453269%22%7D">时齐</a>，不细说了，有兴趣的同学自行百度）。</p><p>有了这个矩阵，再加上已知的第一天的状态分布，就可以计算出第N天的状态分布了。</p><p><img src="https://pic2.zhimg.com/v2-6f323d3b7b9a48382541e59d77906871_b.jpg" alt="img"></p><p>S1 是4月1号中午12点的的<strong>状态分布矩阵</strong> [0.6, 0.2, 0.2]，里面的数字分别代表吃的概率，玩的概率，睡的概率。</p><p>那么</p><p>4月2号的状态分布矩阵 S2 = S1 * P (俩矩阵相乘)。</p><p>4月3号的状态分布矩阵 S3 = S2 * P (看见没，跟S1无关，只跟S2有关)。</p><p>4月4号的状态分布矩阵 S4 = S3 * P (看见没，跟S1，S2无关，只跟S3有关)。</p><p>…</p><p>4月n号的状态分布矩阵 Sn = Sn-1 * P (看见没，只跟它前面一个状态Sn-1有关)。</p><p>​</p><h2 id="总结：马尔可夫链就是这样一个任性的过程，它将来的状态分布只取决于现在，跟过去无关！">总结：马尔可夫链就是这样一个任性的过程，它将来的状态分布只取决于现在，跟过去无关！</h2><h2 id="就把下面这幅图想象成是一个马尔可夫链吧。实际上就是一个随机变量随时间按照Markov性进行变化的过程。">就把下面这幅图想象成是一个马尔可夫链吧。实际上就是一个<a href="https://www.zhihu.com/search?q=%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%2226453269%22%7D">随机变量</a>随时间按照Markov性进行变化的过程。</h2><p><img src="https://pic3.zhimg.com/v2-13a9848cdad479aaafa282e51c0d6e72_b.jpg" alt="img"></p><p>作者：Suprit</p><p>链接：<a href="https://zhuanlan.zhihu.com/p/448575579">https://zhuanlan.zhihu.com/p/448575579</a></p><p>来源：知乎</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="马尔科夫链">马尔科夫链</h2><h2 id="简介">简介</h2><p>俄国数学家 Andrey Andreyevich Markov 研究并提出一个用数学方法就能解释自然变化的一般规律模型，被命名为马尔科夫链（Markov Chain）。马尔科夫链为状态空间中经过从一个状态到另一个状态的转换的<a href="https://link.zhihu.com/?target=https%3A//www.wolai.com/sa7hMtUm6EygDZwSbgqR2r%23rm8sdcNgjZNtF4jfsLoLwd">随机过程</a>，该过程要求具备“<strong>无记忆性</strong> ”，即下一状态的概率分布只能由当前状态决定，在时间序列中它前面的事件均与之无关。这种特定类型的“<strong>无记忆性</strong> ”称作马尔可夫性质。</p><p><img src="https://pic2.zhimg.com/v2-523405fafe4484f7be72e0a5569c42a9_b.png" alt="img"></p><p>马尔科夫链认为<strong>过去所有的信息都被保存在了现在的状态下了</strong> 。比如这样一串数列 <code>1 - 2 - 3 - 4 - 5 - 6</code>，在马尔科夫链看来，6 的状态只与 5 有关，与前面的其它过程无关。</p><h2 id="数学定义">数学定义</h2><p>则假设我们的序列状态是…Xt−2,Xt−1,Xt,Xt+1… …X_{t-2},X_{t-1},X_{t},X_{t+1}…\，那么在Xt+1 X_{t+1}\时刻的状态的条件概率仅依赖于前一刻的状态Xt X_{t}\，即：</p><p>P(Xt+1∣…Xt−2,Xt−1,Xt)=P(Xt+1∣Xt) P\left(X_{t+1} \mid \ldots X_{t-2}, X_{t-1}, X_{t}\right)=P\left(X_{t+1} \mid X_{t}\right)\</p><p>既然某一时刻状态转移的概率<strong>只依赖于它的前一个状态</strong> ，那么我们只要能求出系统中任意两个状态之间的转换概率，这个马尔科夫链的模型就定了。</p><h2 id="转移概率矩阵">转移概率矩阵</h2><p>通过马尔科夫链的模型转换，我们可以将事件的状态转换成<strong>概率矩阵</strong> （又称<strong>状态分布矩阵</strong> ），如下例：</p><p><img src="https://pic3.zhimg.com/v2-1d8da501d1c59c9856919800333f6502_b.jpg" alt="img"></p><p>上图中有 A 和 B 两个状态，A 到 A 的概率是 0.3，A 到 B 的概率是 0.7；B 到 B 的概率是 0.1，B 到 A 的概率是 0.9。</p><ul><li>初始状态在 A，如果我们求 2 次运动后状态还在 A 的概率是多少？非常简单：<br>​P=A→A→A+A→B→A=0.3∗0.3+0.7∗0.9=0.72 P = A→A→A + A→B→A = 0.3 * 0.3 + 0.7 * 0.9 = 0.72\</li><li>如果求 2 次运动后的状态概率分别是多少？初始状态和终止状态未知时怎么办呢？这是就要引入<strong>转移概率矩阵</strong> ，可以非常直观的描述所有的概率。</li></ul><p><img src="https://pic2.zhimg.com/v2-9f4d033a1e83026e8085db2ee57c7245_b.jpg" alt="img"></p><p>有了状态矩阵，我们可以轻松得出以下结论：</p><ul><li><ul><li>初始状态 A，2 次运动后状态为 A 的概率是 0.72；</li><li>初始状态 A，2 次运动后状态为 B 的概率是 0.28；</li><li>初始状态 B，2 次运动后状态为 A 的概率是 0.36；</li><li>初始状态 B，2 次运动后状态为 B 的概率是 0.64；</li></ul></li><li><p>有了概率矩阵，即便求运动 n 次后的各种概率，也能非常方便求出。</p></li></ul><p>来看一个多个状态更复杂的情况：</p><p><img src="https://pic1.zhimg.com/v2-2be49302f70ccf31633504151e0e74d8_b.jpg" alt="img"></p><h3 id="状态转移矩阵的稳定性">状态转移矩阵的稳定性</h3><p>状态转移矩阵有一个非常重要的特性，经过一定有限次数序列的转换，最终一定可以得到一个<strong>稳定的概率分布</strong> ，且与初始状态概率分布无关。例如：</p><p>假设我们当前股市的概率分布为：，[0.3，0.4,0.3] [0.3， 0.4, 0.3]\，即 30% 概率的牛市，40% 概率的<a href="https://www.zhihu.com/search?q=%E7%86%8A%E7%9B%98&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%22448575579%22%7D">熊盘</a>与 30% 的横盘。然后这个状态作为序列概率分布的初始状态t0 t_0\，将其带入这个状态转移矩阵计算t1,t2,t3,… t_1,t_2,t_3,…\的状态。代码如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">matrix = np.matrix([[0.9, 0.075, 0.025],</span><br><span class="line">                    [0.15, 0.8, 0.05],</span><br><span class="line">                    [0.25, 0.25, 0.5]], dtype=float)</span><br><span class="line">vector1 = np.matrix([[0.3, 0.4, 0.3]], dtype=float)</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    vector1 = vector1 * matrix</span><br><span class="line">    print(&#x27;Courrent round: &#123;&#125;&#x27;.format(i+1))</span><br><span class="line">    print(vector1)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Current round: 1</span><br><span class="line">[[ 0.405   0.4175  0.1775]]</span><br><span class="line">Current round: 2</span><br><span class="line">[[ 0.4715   0.40875  0.11975]]</span><br><span class="line">Current round: 3</span><br><span class="line">[[ 0.5156  0.3923  0.0921]]</span><br><span class="line">Current round: 4</span><br><span class="line">[[ 0.54591   0.375535  0.078555]]</span><br><span class="line">。。。。。。</span><br><span class="line">Current round: 58</span><br><span class="line">[[ 0.62499999  0.31250001  0.0625    ]]</span><br><span class="line">Current round: 59</span><br><span class="line">[[ 0.62499999  0.3125      0.0625    ]]</span><br><span class="line">Current round: 60</span><br><span class="line">[[ 0.625   0.3125  0.0625]]</span><br><span class="line">。。。。。。</span><br><span class="line">Current round: 99</span><br><span class="line">[[ 0.625   0.3125  0.0625]]</span><br><span class="line">Current round: 100</span><br><span class="line">[[ 0.625   0.3125  0.0625]]</span><br></pre></td></tr></table></figure><p>可以发现，从第 60 轮开始，我们的状态概率分布就不变了，一直保持[0.625,0.3125,0.0625] [ 0.625,   0.3125,  0.0625]\，即 62.5% 的牛市，31.25% 的熊市与 6.25% 的横盘。</p><p>这个性质不仅对状态转移矩阵有效，对于绝大多数的其他的马尔可夫链模型的状态转移矩阵也有效。同时不光是离散状态，连续状态时也成立。</p><p>详细学习请参见：<a href="https://zhuanlan.zhihu.com/p/38764470">https://zhuanlan.zhihu.com/p/38764470</a></p><h2 id="非马尔科夫链过程的例子">非马尔科夫链过程的例子</h2><p>只有满足马尔科夫链的特性，才属于马尔科夫链过程。例如对于不放回的袋中取球问题：</p><p>显然当前取球的概率，不仅和我最后一次取的球的颜色有关，也和我之前每一次取球的颜色有关，所以这个过程不是一个马尔科夫链过程。</p><p>如果是放回的袋中取球问题，这就建立了一个马尔科夫随机过程。</p><h2 id="马尔科夫链在机器学习中的应用">马尔科夫链在机器学习中的应用</h2><p>自然语音处理研究让机器“听懂”人类的语言，马尔科夫模型就解决了：</p><p>语言模型：N-Gram 是一种简单有效的语言模型，基于独立输入假设：<strong>第 n 个词的出现只与前面 N-1 个词相关，而与其它任何词都不相关</strong> 。整句出现的概率就是各个词出现概率的乘积。这些概率可以通过直接从语料中统计 N 个词同时出现的次数得到。</p><p><img src="https://pic1.zhimg.com/v2-47283cff65ce7f3a49b2c6c17d94d134_b.jpg" alt="img"></p><p>声学模型：利用 HMM 建模（隐马尔可夫模型），HMM 是指这一马尔可夫模型的内部状态外界不可见，外界只能看到各个时刻的输出值。对语音识别系统，输出值通常就是从各个帧计算而得的声学特征。</p><h2 id="参考">参考</h2><p><a href="https://zhuanlan.zhihu.com/p/38764470">什么是马尔可夫链？</a></p><p><a href="https://link.zhihu.com/?target=https%3A//www.toutiao.com/a6669798537494004227/">马尔科夫链（Markov Chain），机器学习和人工智能的基石</a></p><p><a href="https://zhuanlan.zhihu.com/p/26453269">马尔可夫链 （Markov Chain）是什么鬼</a></p><p><img src="https://pic3.zhimg.com/v2-c98bb94fa2840cc341b871a13866ac46_b.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 马尔可夫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资本禀赋</title>
      <link href="/2022/09/09/%E8%B5%84%E6%9C%AC%E7%A6%80%E8%B5%8B/"/>
      <url>/2022/09/09/%E8%B5%84%E6%9C%AC%E7%A6%80%E8%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1>资本禀赋</h1><p>资源禀赋又称为要素禀赋，指一国拥有的各种<a href="https://baike.baidu.com/item/%E7%94%9F%E4%BA%A7%E8%A6%81%E7%B4%A0/4758567">生产要素</a>，包括劳动力、资本、土地、技术、管理等的方面。俄林早期师承瑞典著名经济学家赫克歇尔而深受启发，故他的要素禀赋说也被称为赫–俄模式。该模式是现代国际贸易理论的新开端，与李嘉图的<a href="https://baike.baidu.com/item/%E6%AF%94%E8%BE%83%E6%88%90%E6%9C%AC%E8%AF%B4/3362465">比较成本说</a>模式并列为国际贸易理论的两大基本模式。</p><p>国要素禀赋中某种要素供给所占比例大于别国同种要素的供给比例而价格相对低于别国同种要素的价格，则该国的这种要素相对丰裕;反之，如果在一国的生产要素禀赋中某种要素供给所占比例小于别国同种要素的供给比例而价格相对高于别国 同种要素的价格，则该国的这种要素相对稀缺。</p><p>资源禀赋与国际产业转移要素禀赋决定了各国的比较优势，由此也决定了国际产业转移的方向，不管是静态的还是动态的。但是在实际的经济运行中，国际产业的转移是存在刚性的，这体现为以下几个方面：</p><p>1.<a href="https://baike.baidu.com/item/%E7%94%9F%E4%BA%A7%E8%A6%81%E7%B4%A0">生产要素</a>的异质性</p><p>在旧的贸易理论和“<a href="https://baike.baidu.com/item/%E8%A6%81%E7%B4%A0%E7%A6%80%E8%B5%8B%E8%AE%BA">要素禀赋论</a>”中，都假定要素是同质的，没有任何差异，可以转移的(尽管土地不会搬家，特殊的地理位置，自然环境和气候也有它的特殊性)。一旦一个国家之间的要素禀赋发生变化，国际<a href="https://baike.baidu.com/item/%E4%BA%A7%E4%B8%9A%E7%BB%93%E6%9E%84">产业结构</a>也随之转移。然而每种要素实际上都不是同一的，它包含着许多小类和亚种，他们的组合千差万别，因此，各国的生产要素禀赋不仅有数量上的差异，还有质量上的差异。忽略<a href="https://baike.baidu.com/item/%E7%94%9F%E4%BA%A7%E8%A6%81%E7%B4%A0">生产要素</a>禀赋质的差异，就难以对贸易格局做出合理的解释。也就是说，因为要素素质的差异，国际产业的转移具有一定的刚性。</p><ol start="2"><li><a href="https://baike.baidu.com/item/%E4%BA%A7%E4%B8%9A%E9%9B%86%E8%81%9A">产业集聚</a>特性</li></ol><p>在“新<a href="https://baike.baidu.com/item/%E8%A6%81%E7%B4%A0%E7%A6%80%E8%B5%8B%E8%AE%BA">要素禀赋论</a>”看来，信息能力的转移也是有着极大困难的。IT产业的软、硬件<a href="https://baike.baidu.com/item/%E7%94%9F%E4%BA%A7%E9%A2%86%E5%9F%9F">生产领域</a>，都存在很高的<a href="https://baike.baidu.com/item/%E8%BF%9B%E5%85%A5%E5%A3%81%E5%9E%92">进入壁垒</a>。并且最领先的信息技术，越来越与整个社会环境有关，至少与<a href="https://baike.baidu.com/item/%E9%A3%8E%E9%99%A9%E8%B5%84%E6%9C%AC">风险资本</a>的形成能力和人才环境有关。另外新的产业(如信息产业)具有<a href="https://baike.baidu.com/item/%E7%BB%8F%E6%B5%8E%E5%A4%96%E9%83%A8%E6%80%A7">经济外部性</a>，产业<a href="https://baike.baidu.com/item/%E9%9B%86%E8%81%9A%E6%95%88%E5%BA%94">集聚效应</a>将会强化某一地区的产业能力，而不是产业外移。这就促使<a href="https://baike.baidu.com/item/%E6%96%B0%E5%85%B4%E4%BA%A7%E4%B8%9A">新兴产业</a>趋于集中在世界上的一些“智慧中心”(如硅谷)，而不是随市场而转移。</p><ol start="3"><li>完全<a href="https://baike.baidu.com/item/%E4%B8%93%E4%B8%9A%E5%8C%96">专业化</a>本身的刚性</li></ol><p>如果<a href="https://baike.baidu.com/item/%E8%A6%81%E7%B4%A0%E7%A6%80%E8%B5%8B%E8%AE%BA">要素禀赋论</a>要求的前提条件不能满足，如一国生产完全专业化，就不可能实现产业的国际转移。假如，在有限的时期内，两国生产两种商品X和Y，其中，X属于<a href="https://baike.baidu.com/item/%E5%8A%B3%E5%8A%A8%E5%AF%86%E9%9B%86%E5%9E%8B%E4%BA%A7%E4%B8%9A">劳动密集型产业</a>商品，Y属于<a href="https://baike.baidu.com/item/%E8%B5%84%E6%9C%AC%E5%AF%86%E9%9B%86%E5%9E%8B%E4%BA%A7%E4%B8%9A">资本密集型产业</a>产品，使用和两种<a href="https://baike.baidu.com/item/%E7%94%9F%E4%BA%A7%E8%A6%81%E7%B4%A0">生产要素</a>K(资本)和L(劳动)，K/L为一国要素的拥有比率，KX/LX，KY/LY为X和Y两种<a href="https://baike.baidu.com/item/%E4%BA%A7%E5%93%81%E7%9A%84%E8%A6%81%E7%B4%A0%E5%AF%86%E9%9B%86%E5%BA%A6">产品的要素密集度</a>，如果一国KLKY/LY，则其劳动将全部是用于Y的生产，因此，一国若完全实行<a href="https://baike.baidu.com/item/%E4%B8%93%E4%B8%9A%E5%8C%96">专业化</a>生产，就谈不上要素在不同部门间的流动，也就谈不上产业的跨国界转移了。因此，一国在参与<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E5%88%86%E5%B7%A5">国际分工</a>贸易的情况下完全实行非专业化生产的制约条件是KX/LX。</p><ol start="4"><li>贸易障碍</li></ol><p>要素禀赋决定了各国的<a href="https://baike.baidu.com/item/%E6%AF%94%E8%BE%83%E4%BC%98%E5%8A%BF">比较优势</a>，实行自由贸易、积极参与国际分工，必然使本国具有现实的或潜在的比较优势的产业得到发展或者承受<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E4%BA%A7%E4%B8%9A%E8%BD%AC%E7%A7%BB">国际产业转移</a>，使失去比较优势的产业在竞争中淘汰，<a href="https://baike.baidu.com/item/%E8%B4%B8%E6%98%93%E7%BB%93%E6%9E%84">贸易结构</a>和<a href="https://baike.baidu.com/item/%E4%BA%A7%E4%B8%9A%E7%BB%93%E6%9E%84">产业结构</a>因而不断得到调整，产业结构逐步优化。但是如果不能自由贸易，国内价格不能正确反映要素禀赋的丰缺与否，则国际产业转移就失去了平台。另外，它也没有考虑国际生产关系和国际政治环境的影响。在国际贸易中普遍存在关税和<a href="https://baike.baidu.com/item/%E9%9D%9E%E5%85%B3%E7%A8%8E%E5%A3%81%E5%9E%92">非关税壁垒</a>保护的情况下，极易导致国际产业分工失真，比较优势动态调整出现障碍，国际产业转移不能正常进行。</p><p>5.转出国内部的就业和政治压力，每个国家的国际产业转移都是有临界点的</p><p>按照要素禀赋理论，美国和欧洲应该放弃他们在纺织品行业的生产能力，并将其让位于像中国这样的<a href="https://baike.baidu.com/item/%E5%8F%91%E5%B1%95%E4%B8%AD%E5%9B%BD%E5%AE%B6">发展中国家</a>，以充分发挥后者劳动力廉价的优势。但是如果欧美放弃纺织品行业，不仅欧美国家面临着极大的、特别是来自失业上的政治压力，而且让这部分工人从<a href="https://baike.baidu.com/item/%E7%BA%BA%E7%BB%87%E4%B8%9A">纺织业</a>转移到高技术行业或是其他欧美国家具有比较优势的行业，其中的培训和迁移成本远远高于这些<a href="https://baike.baidu.com/item/%E4%BA%A7%E4%B8%9A%E5%B7%A5%E4%BA%BA">产业工人</a>的年薪收入。</p><p>6.国际市场容量限制下对招商引资的国际竞争不断加剧</p><p>根据要素禀赋的发展战略原理，中国这样的劳动力富裕国家自然应当生产和出口劳动力密集型产品，大力发展<a href="https://baike.baidu.com/item/%E5%8A%B3%E5%8A%A8%E5%AF%86%E9%9B%86%E5%9E%8B%E4%BA%A7%E4%B8%9A">劳动密集型产业</a>，但是当一大批发展中国家普遍起步发展，并根据这一原理决定发展战略时，世界市场的有限容量便对这一战略提出了疑问。所以，一个国家能够接受<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E4%BA%A7%E4%B8%9A%E8%BD%AC%E7%A7%BB">国际产业转移</a>，世界市场也是一个很重要的因素。</p><p><a href="https://zhuanlan.zhihu.com/p/455773315">https://zhuanlan.zhihu.com/p/455773315</a></p><p>[<a href="https://zhuanlan.zhihu.com/p/60648709">https://zhuanlan.zhihu.com/p/60648709</a>](</p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资本禀赋 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国赛2020B沙漠致富之路</title>
      <link href="/2022/09/09/%E5%9B%BD%E8%B5%9B2020B%E6%B2%99%E6%BC%A0%E8%87%B4%E5%AF%8C%E4%B9%8B%E8%B7%AF/"/>
      <url>/2022/09/09/%E5%9B%BD%E8%B5%9B2020B%E6%B2%99%E6%BC%A0%E8%87%B4%E5%AF%8C%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1><strong>B题穿越沙漠</strong></h1><p>考虑如下的小游戏：玩家凭借一张地图，利用初始资金购买一定数量的水和食物（包括食品和其他日常用品），从起点出发，在沙漠中行走。途中会遇到不同的天气，也可在矿山、村庄补充资金或资源，（<strong>赚钱</strong>）目标是在规定时间内到达终点，并保留尽可能多的资金。（资金max）</p><p>游戏的基本规则如下：</p><p>（1）以天为基本时间单位，游戏的开始时间为第0天，玩家位于起点。玩家必须在截止日期或之前到达终点，到达终点后该玩家的游戏结束。</p><p>（2）穿越沙漠需水和食物两种资源，它们的最小计量单位均为箱。每天玩家拥有的水和食物质量之和不能超过负重上限。若未到达终点而水或食物已耗尽，视为游戏失败。</p><p>（3）每天的天气为“晴朗”、“高温”、“沙暴”三种状况之一，沙漠中所有区域的天气相同。</p><p>（4）每天玩家可从地图中的某个区域到达与之相邻的另一个区域，也可在原地停留。沙暴日必须在原地停留。</p><p>（5）玩家在原地停留一天消耗的资源数量称为基础消耗量，行走一天消耗的资源数量为基础消耗量的                                                  倍。</p><p>（6）玩家第0天可在起点处用初始资金以基准价格购买水和食物。玩家可在起点停留或回到起点，但不能多次在起点购买资源。玩家到达终点后可退回剩余的水和食物，每箱退回价格为基准价格的一半。</p><p>（7）玩家在矿山停留时，可通过挖矿获得资金，挖矿一天获得的资金量称为基础收益。如果挖矿，消耗的资源数量为基础消耗量的   倍；如果不挖矿，消耗的资源数量为基础消耗量。到达矿山当天不能挖矿。沙暴日也可挖矿。</p><p>（8）玩家经过或在村庄停留时可用剩余的初始资金或挖矿获得的资金随时购买水和食物，每箱价格为基准价格的2倍。</p><p>请根据游戏的不同设定，建立数学模型，解决以下问题。</p><p>\1. 假设只有一名玩家，在整个游戏时段内每天天气状况事先全部已知，试给出一般情况下玩家的最优策略。求解附件中的“第一关”和“第二关”，并将相应结果分别填入Result.xlsx。</p><p>\2. 假设只有一名玩家，玩家仅知道当天的天气状况，可据此决定当天的行动方案，试给出一般情况下玩家的最佳策略，并对附件中的“第三关”和“第四关”进行具体讨论。</p><p>\3. 现有   名玩家，他们有相同的初始资金，且同时从起点出发。若某天其中的任意   名玩家均从区域A行走到区域B(   )，则他们中的任一位消耗的资源数量均为基础消耗量的   倍；若某天其中的任意   名玩家在同一矿山挖矿，则他们中的任一位消耗的资源数量均为基础消耗量的   倍，且每名玩家一天可通过挖矿获得的资金是基础收益的   ；若某天其中的任意   名玩家在同一村庄购买资源，每箱价格均为基准价格的   倍。其他情况下消耗资源数量与资源价格与单人游戏相同。</p><p>（1）假设在整个游戏时段内每天天气状况事先全部已知，每名玩家的行动方案需在第   天确定且此后不能更改。试给出一般情况下玩家应采取的策略，并对附件中的“第五关”进行具体讨论。</p><p>（2）假设所有玩家仅知道当天的天气状况，从第   天起，每名玩家在当天行动结束后均知道其余玩家当天的行动方案和剩余的资源数量，随后确定各自第二天的行动方案。试给出一般情况下玩家应采取的策略，并对附件中的“第六关”进行具体讨论。</p><p>注1：附件所给地图中，有公共边界的两个区域称为相邻，仅有公共顶点而没有公共边界的两个区域不视作相邻。</p><p>注2：Result.xlsx中剩余资金数（剩余水量、剩余食物量）指当日所需资源全部消耗完毕后的资金数（水量、食物量）。若当日还有购买行为，则指完成购买后的资金数（水量、食物量）。</p><p><a href="http://www.mcm.edu.cn/html_cn/node/10405905647c52abfd6377c0311632b5.html">全国大学生数学建模竞赛2020赛题 (mcm.edu.cn)</a></p><h1>沙漠捞钱笔记</h1><h2 id="穿越沙漠">穿越沙漠</h2><p>挖矿赚钱</p><p>买吃喝的花钱</p><p>结束的资源可以退款</p><h2 id="数据总和">数据总和</h2><ul><li>时间单位：天</li><li>资源单位：水 食物 （箱）</li><li>天气情况：<ul><li>晴朗：</li><li>高温：</li><li>沙暴：原地停留</li></ul></li><li>消耗情况：走 = 2 * 停留</li></ul><h2 id="每道题都是一种特殊的情况">每道题都是一种特殊的情况</h2><p>想到的模型：</p><ul><li>单目标，钱！</li></ul><p>约束条件：</p><ul><li>资源（水和食物）</li><li>载重</li><li>天数</li><li>地图？</li></ul><p>特殊因素：</p><p>天气：沙尘暴可以挖矿</p><p>地图规划：</p><h1>第一题</h1><p>可能的情况：</p><p>1、直接跑终点（资源够不够，打工是否有收益）（论文：这个工作一定要做）</p><p>2、去矿山村庄来回打工赚money。（2大于1才能打工）</p><ul><li>三阶段<ul><li>起点到矿山/村庄。（一条最适合的路）</li><li>村庄矿山来回刷money。</li><li>回终点。（一条最适合的路）</li></ul></li></ul><blockquote><p>李龙：天气卡住节奏，天气是否过来，组合不一样。动态规划。卡天气可以原地呆着！</p><p>鑫成：最短路，贪心算法。发证最近的路程可以找。</p></blockquote><h4 id="刷钱模型？">刷钱模型？</h4><p>考虑因素：</p><ul><li>矿山与村庄的距离因素。</li><li>矿山与村庄位移的天数。</li><li>到矿山当天不能干活。</li><li>天气情况。</li></ul><h4 id="三步算，一步算代码冗杂，容易局部最优解。体现的思考，与简化问题。">三步算，一步算代码冗杂，容易局部最优解。体现的思考，与简化问题。</h4><p>代码去实现！</p><p>st：</p><blockquote><p>李龙：先写个赚钱循环！</p><p>jh：Question：如果天气差停下来可以不呜呜呜？</p></blockquote><blockquote><p>鑫成：一步步来。（卑鄙的资本家）</p><p>先起点买爆！</p><p>默认行走更赚。虽然天气很差，但是只要收益大，就累点吧。</p><p>你这个年纪怎么睡得着。</p></blockquote><p>最后把这么情况，算入优化模型中。列数学公式。</p><p>优化模型：</p><h3 id="第一阶段：">第一阶段：</h3><blockquote><p>李龙：一阶段固定，省事~</p></blockquote><h3 id="第二阶段：">第二阶段：</h3><blockquote><p>根据一阶段后的数据,以及各个因素，构建<strong>单目标多约束优化模型。</strong></p></blockquote><h3 id="第三阶段：">第三阶段：</h3><blockquote><p>由于比较麻烦，不关键，单独计算，减回去！反正不是重点。已经考虑很多东西了。</p></blockquote><h2 id="第二关，两种情况，也是图形规划。">第二关，两种情况，也是图形规划。</h2><p>可以沿着第一关的思路继续做</p><h1>第二题</h1><blockquote><p>动态规划。注意收益？</p><p>加强对天气的关注。工作收益。</p></blockquote><ul><li>直接走到终点？</li><li>是否打工？单向地图！</li><li>博弈问题。</li></ul><blockquote><p>是否补满装备？</p></blockquote><h3 id="第三关">第三关</h3><p>各个天气的概率确定。</p><blockquote><p>动态规划。注意收益？</p><p>加强对天气的关注。工作收益。</p></blockquote><ul><li>直接走到终点？</li><li>是否打工？单向地图！</li><li>博弈问题。</li></ul><blockquote><p>是否补满装备？</p></blockquote><h3 id="第四关（基于状态机）">第四关（基于状态机）</h3><p>较少的定义：<strong>概率</strong>定下来。各个温度的概率。</p><p>（天气来回不影响，每天单独）</p><blockquote><p>鑫成：天数固定。还是用优化模型。否定！</p></blockquote><p><strong>状态机</strong>！！！</p><p>期望值（）风险系数：指标。</p><h1>第三题</h1><h2 id="第五关">第五关</h2><blockquote><p>鑫成：遗传算法</p><p>可能得使用暴力算法了。代码问题。</p><p>供求关系。</p></blockquote><blockquote><p>劲铧：加博弈论的第一第二题</p></blockquote><blockquote><p>CJ：暴力模型：计算机遍历，蒙特罗塔。验证。</p></blockquote><h1>沙漠致富之路 总结</h1><h2 id="包含算法">包含算法</h2><ul><li>动态规划</li><li>单目标优化模型</li><li>博弈论，静态博弈</li><li>启发式算法（基于经验和直觉）</li><li>模拟仿真，暴力解法</li><li>马尔科夫链（近似状态机）</li><li>图论算法（最小图路径 迪杰斯特，Floyd）</li></ul><h2 id="论文应有内容">论文应有内容</h2><ul><li>影响因素的分布图</li><li>排序好的捕捉条件约束</li><li>优化后的简化图结构</li><li>适当补充流程图</li><li>最短路径的floyd或迪杰斯特的伪代码</li><li>排序好的决策表格</li><li>博弈论具体博弈数值</li><li>具体玩家收益表格，期望值表格</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 国赛原题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2022/09/09/%E5%9B%BE%E8%AE%BA/"/>
      <url>/2022/09/09/%E5%9B%BE%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1>图论</h1><p><a href="http://t.csdn.cn/uJlaT">推荐博客</a></p><h3 id="基本概念补充">基本概念补充</h3><p>图论中图是由点和边构成的，可以反映一些对象之间的关系。</p><p><img src="https://img-blog.csdnimg.cn/20200622115303152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1NTMzMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="无向图">无向图</h3><p><strong>无向图（简称图）</strong>：没有方向，由点和边构成的图，记做G =(V , E)，点是V，边是E。<br><strong>注</strong>：图论的图与几何图、工程图不一样。</p><p>因为一般情况下的图中点的相对位置及点间连线长短，对于反映对象之间的关系并不是重要的。</p><p><strong>联结</strong>$ v_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mtext>和</mtext><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**和**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span></span></span></span> v_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mtext>的链</mtext><mo>∗</mo><mo>∗</mo><mtext>：在无向图</mtext><mi>G</mi><mtext>中，若存在一个点边的交错序列</mtext><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">**的链**：在无向图G中，若存在一个点边的交错序列(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">的链</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">：在无向图</span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">中，若存在一个点边的交错序列</span><span class="mopen">(</span></span></span></span> v_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> v_{i2}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{i2}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo><mo>…</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">,……</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3174em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span></span></span></span> v_{ik-1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{ik-1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> c_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">)</mo><mtext>其中</mtext></mrow><annotation encoding="application/x-tex">)其中</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span><span class="mord cjk_fallback">其中</span></span></span></span> v_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>属于</mtext><mi>V</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">属于V(G),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">属于</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> e_{ij}$属于E(G)。</p><p><strong>联结 v_{i1} 和 v_{ik} 的圈</strong>：在上述的链中，若 v_{i1} = v_{ik}，也就是首尾相连。</p><p><strong>连通图</strong>：对于一个无向图，若任何两个不同的点之间，至少存在一条链。</p><p><strong>简单图</strong>：一个图如果它既没有环也没有平行边（两条边连接同一对顶点）,称为简单图(simple graph)。</p><p><img src="https://img-blog.csdnimg.cn/20200622152517968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1NTMzMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>完全图</strong>:其中每对不同的顶点之间都恰连有一条边相连</p><p><img src="https://img-blog.csdnimg.cn/20200622152815131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1NTMzMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>赋权图</strong>：对无向图的每一条边（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>),都有一个数（称为权重）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mi>j</mi></mrow><annotation encoding="application/x-tex">w_ij</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>对应。</p><p><strong>二分图</strong>又称作二部图，是图论中的一种特殊模型。 设G=(V,E)是一个无向图，如果顶点V可分割为两个互不相交的子集(A,B)，并且图中的每条边（i，j）所关联的两个顶点i和j分别属于这两个不同的顶点集(i in A,j in B)，则称图G为一个二分图。</p><p><img src="https://img-blog.csdnimg.cn/20200622153248842.png" alt="在这里插入图片描述"></p><p><strong>顶点的度</strong>：与顶点v关联的边的个数称为顶点v 的<br>度(degree) （环计两度），记作 d(v) .</p><p>度为零的点称为<strong>弧立点</strong>，度为1的点称为<strong>悬挂点</strong>。悬挂点的关联边称为<strong>悬挂边</strong>。度为奇数的点称为<strong>奇点</strong>(odd point) ，度为偶数的点称为<strong>偶点</strong>(even point) 。</p><h3 id="有向图">有向图</h3><p><strong>有向图</strong>：由点和弧构成的图，记做D =(V , A)，其中V是图D的点集，A是图D的弧集。<br><strong>注</strong>：无向图是一种特殊的有向图，无向图的边实际上就是等 价于两条方向相反的弧。</p><p><strong>联结</strong>$ v_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mtext>和</mtext><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**和**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span></span></span></span> v_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mtext>的链</mtext><mo>∗</mo><mo>∗</mo><mtext>：在无向图</mtext><mi>G</mi><mtext>中，若存在一个点边的交错序列</mtext><mo stretchy="false">(</mo></mrow><annotation encoding="application/x-tex">**的链**：在无向图G中，若存在一个点边的交错序列(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">的链</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">：在无向图</span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">中，若存在一个点边的交错序列</span><span class="mopen">(</span></span></span></span> v_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{i1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> v_{i2}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{i2}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo><mo>…</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">,……</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3174em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span></span></span></span> v_{ik-1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> e_{ik-1}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.1944em;"></span><span class="mpunct">,</span></span></span></span> c_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">)</mo><mtext>其中</mtext></mrow><annotation encoding="application/x-tex">)其中</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span><span class="mord cjk_fallback">其中</span></span></span></span> v_{ik}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>属于</mtext><mi>V</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">属于V(D),</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">属于</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span> e_{ij}$属于V(D)。</p><p><strong>联结 v_{i1} 和 v_{ik} 的回路</strong>：在上述的链中，若 v_{i1} = v_{ik}，也就是首尾相连。</p><p><strong>赋权图</strong>：对无向图的每一条弧(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ),都有一个数（称为权重）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">c_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>对应。</p><p><strong>网络</strong>：在赋权的有向图D中指定一点为发点(记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">v_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)m指定另一点为收点（记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">v_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>),其余的点为中间点，并把 D 中的每一条弧的赋权数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, j称为弧(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> )的容量，这样的赋权有向图 D 就称为网络。</p><h2 id="图与网络的数据结构">图与网络的数据结构</h2><p>描述图与网络的3种常用表示方法：<strong>邻接矩阵表示法、关联矩阵表示法、弧表表示法</strong></p><h2 id="邻接矩阵表示法">邻接矩阵表示法</h2><p>邻接矩阵表示法是将图以邻接矩阵（adjacency matrix）的形式存储在计算机中。图 G=(V,A) 的邻接矩阵是如下定义的：C是一个 n * n 的0-1矩阵</p><p><img src="https://img-blog.csdnimg.cn/20200622162359217.png" alt="在这里插入图片描述"></p><p><strong>也就是说，如果两节点之间有一条弧，则邻接矩阵中对应的元素为1；否则为0。</strong></p><p>例一：对于下图，可以用邻接矩阵表示为</p><p><img src="https://img-blog.csdnimg.cn/20200622164414495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1NTMzMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解释：现在有五个图，邻接矩阵a就是5 ∗ 5 5*55∗5的方阵，∵ 1→2，∴a[1][2]=1；∵1→3所以a[1][3]=1；∵ 4→3，∴a[4][3]=1，其他都是一样的，所有的都写出来就是：</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200622165316565.png" alt="在这里插入图片描述"><br>同样，对于网络中的权，也可以用类似邻接矩阵的矩阵表示。只是此时一条弧所对应的元素不再是1，而是相应的权而已。如果网络中每条 弧赋有多种权，则可以用多个矩阵表示这些权。</p><h2 id="关联矩阵表示法">关联矩阵表示法</h2><p>关联矩阵表示法是将图以关联矩阵（incidence matrix）的形式存储在计算机中．</p><p>$ \mathrm{B}=\left(\mathrm{b}<em>{\mathrm{ik}}\right)</em>{\mathrm{n} * \mathrm{~m}} \in(-1,0,1)^{\mathrm{n} * \mathrm{~m}} $的关联矩阵B是如下定义，B是一个N*M的矩阵，即</p><p><img src="https://img-blog.csdnimg.cn/20200622170917785.png" alt="在这里插入图片描述"></p><p>如果一个顶点是一条弧的起点，则关联矩阵中对应的元素为1；如果一个顶点是一条弧的终点，则关联矩阵中对应的元素为-1；如果一个顶点与一条弧不关联，则关联矩阵中对应的元素为0。</p><p>例2 对于例1所示的图，如果关联矩阵中每列对应弧的顺序为 <strong>(1,2)，(1,3)，(2,4)，(3,2)，(4,3)</strong>，<strong>(4,5)，(5,3)和(5,4)</strong>，则关联矩阵表示为（列单位为弧）<br><img src="https://img-blog.csdnimg.cn/20200623115342271.png" alt="在这里插入图片描述"></p><p>这个图有4个节点，7条连线，所以是4 ∗7的矩阵，每一列都是只有一个1，一个 -1。<br>看e1这条线，头是v1尾是v2，所以v1=1，v2=-1<br>e3，头是v3，尾是v4，所以v3是1，v4是-1；<br><img src="https://img-blog.csdnimg.cn/20200623115409924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc1NTMzMg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="弧表表示法">弧表表示法</h2><p>弧表表示法将图以弧表（arc list）的形式存储在计算机中。所谓图的弧表，也就是图的弧集合中的所有有序对。</p><p>假设例1中的弧(1,2)，(1,3)，(2,4)，(3,2)，(4,3)，(4,5)，(5,3)和(5,4)上的权分别为8，9，6，4，0，3，6和7，则弧表表示如下：</p><p><img src="https://img-blog.csdnimg.cn/20200623092740789.png" alt="在这里插入图片描述"></p><h3 id="网络流模型">网络流模型</h3><blockquote><p>对于一个网络流我们可以用一个有向图G = （V，E，C）表示；V表示顶点的集合，E表示有向边的集合，C表示有向边的最大流量。对于每一个网络，有一个源输入点，称之为source，一个输出点，称之为sink。在不是出发点source也不是输出点sink的其他点，流量不能超过有向边的最大流量，这是一个约束条件。<br>下图就是一个简单的网络流模型：<br><a href="https://i.loli.net/2020/02/03/SHIw21EnNCq4mZO.png"><img src="https://i.loli.net/2020/02/03/SHIw21EnNCq4mZO.png" alt="image.png"></a><br><strong><a href="https://blog.csdn.net/changyuanchn/article/details/17097807">https://blog.csdn.net/changyuanchn/article/details/17097807</a></strong></p></blockquote><h3 id="最短路">最短路</h3><blockquote><p><strong>最短路径问题</strong><br>画图在线平台：<br><strong><a href="https://csacademy.com/app/graph_editor/">https://csacademy.com/app/graph_editor/</a></strong><br>注意邻接矩阵和关联矩阵的概念！<br><a href="https://i.loli.net/2020/02/03/RvLaVzcdrN3umXO.png"><img src="https://i.loli.net/2020/02/03/RvLaVzcdrN3umXO.png" alt="9_GJHOYM9__MAR_K0_F6CNT.png"></a><br>邻接矩阵：元素为权值，不连接时为无穷(无权时为0/1表示是否相连)<br><a href="https://i.loli.net/2020/02/03/PJ9D8QyEMj1sFml.png"><img src="https://i.loli.net/2020/02/03/PJ9D8QyEMj1sFml.png" alt="84"></a><br>解决方法：Dijkstra算法 Floyd算法<br><strong><a href="https://www.cnblogs.com/biyeymyhjob/archive/2012/07/31/2615833.html">https://www.cnblogs.com/biyeymyhjob/archive/2012/07/31/2615833.html</a></strong><br><strong><a href="https://blog.csdn.net/weixin_43791406/article/details/89314614">https://blog.csdn.net/weixin_43791406/article/details/89314614</a></strong></p></blockquote><h3 id="最大流">最大流</h3><blockquote><p>网络流图是一张只有一个源点和汇点的有向图，而最大流就是求源点到汇点间的最大水流量，下图的问题就是一个最基本，经典的最大流问题<br><a href="https://i.loli.net/2020/02/03/gJQO9F2SepzR6xy.png"><img src="https://i.loli.net/2020/02/03/gJQO9F2SepzR6xy.png" alt="image.png"></a><br><strong>流量,容量,可行流,增广路</strong><br><strong><a href="https://blog.csdn.net/stevensonson/article/details/79177530">https://blog.csdn.net/stevensonson/article/details/79177530</a></strong></p></blockquote><blockquote><p>图就是一种管道，管道有最大通过流量的限制，图中边的权值就是所谓的“容量”。同时，注意有唯一的源点和汇点。<br>算法的关键在于<br><strong>1）何为增广路径，如何找出增广路径。</strong><br><strong>2）如何更新流量</strong><br>所谓增广路径，就是找到这样一条路径，其流量不满，未达到容量上限。<br>所有的可能的增广路径在一起便构成了残留网络<br>第一步，计算可增加流量<br>设某一增广路径上的节点为（a1,a2,a3,a4,…,an）<br>如果（u,v）是正向边，则增加流量d = min{ c(ai,aj) - f(ai,aj) | j = i +1, i =1,2,3…,n-1}<br>如果是逆向边，则增加流量d = min{ f(ai, aj) | j = i +1, i =1,2,3…,n-1}<br>第二步，更新流量<br>如果（u,v）是正向边，则 f(u,v) = f(u,v) + d<br>是逆向边，则f(u,v) = f(u,v) - d<br>注意，如果是逆向边，就是减法，当前管道从中减去部分流量，而且，伴随着这部分减去的流量，必有另一部分管道的流量会增加。。而且，最后的总流量增加了d<br><strong>来自 <a href="https://www.cnblogs.com/ShaneZhang/p/3755479.html">https://www.cnblogs.com/ShaneZhang/p/3755479.html</a></strong></p></blockquote><h3 id="最小生成树">最小生成树</h3><blockquote><p>图G=（V(G),E(G)）树T=（V(T),E’(T)）<br>在一个连通无向图G=(V, E)中，对于其中的每条边(u,v)∈E，赋予其权重w(u, v)，则最小生成树问题就是要在G中找到一个连通图G中所有顶点的无环子集T⊆E，使得这个子集中所有边的权重之和最小。<br>即生成树为一条连接所有点的路径，最小生成树为权重和最小那个生成树（非环）<br>解决最小生成树问题有两个算法：Prim算法和Kruskal算法<br><strong>Prim算法</strong>基本思想是从选点开始，再选择和不连通点之间的边，进而循环，每一次循环中，一个关键在于判断点之间是否不连通（对连通点集团进行编号，即只需判断集团编号是否相等即可），另一个在于选择最小的边。<br><strong>Kruskal算法</strong>基本思想是从选最小边开始，连通成一个集团，进行编号，再选择不连通的集团的最小赋权边进行连接，依次循环。<br><a href="https://i.loli.net/2020/02/03/ZGHkLWOPjENM6Vg.png"><img src="https://i.loli.net/2020/02/03/ZGHkLWOPjENM6Vg.png" alt="3"></a><br><strong><a href="https://blog.csdn.net/luoshixian099/article/details/51908175">https://blog.csdn.net/luoshixian099/article/details/51908175</a></strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间序列模型</title>
      <link href="/2022/09/09/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B/"/>
      <url>/2022/09/09/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p><a href="https://bbs.spsspro.com/news/129">原文出处</a></p><p><a href="https://baike.baidu.com/item/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97/1389644">时间序列（按照时间排序的一组随机变量）_百度百科 (baidu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/349897496">时间序列基础知识 - 知乎 (zhihu.com)</a></p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part1_introduction_and_models/">一</a></p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part2_stability/">二</a></p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part3_arima_models/">三</a></p><h1>时间序列(ARIMA)案例超详细讲解</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间序列是按照一定的时间间隔排列的一组数据，其时间间隔可以是任意的时间单位，如小时、日、周月等。通过对这些时间序列的分析，从中发现和揭示现象发展变化的规律，并将这些知识和信息用于预测。</span><br></pre></td></tr></table></figure><p>想象一下，你的任务是：根据已有的历史时间数据，预测未来的趋势走向。作为一个数据分析师，你会把这类问题归类为什么？当然是时间序列建模。</p><p>从预测一个产品的销售量到估计每天产品的用户数量，时间序列预测是任何数据分析师都应该知道的核心技能之一。常用的时间序列模型有很多种，在本文中主要研究ARIMA模型，也是实际案例中最常用的模型，这种模型主要针对平稳非白噪声序列数据。</p><h3 id="时间序列概念">时间序列概念</h3><p>时间序列是按照一定的时间间隔排列的一组数据，其时间间隔可以是任意的时间单位，如小时、日、周月等。通过对这些时间序列的分析，从中发现和揭示现象发展变化的规律，并将这些知识和信息用于预测。比如销售量是上升还是下降，是否可以通过现有的数据预测未来一年的销售额是多少等。</p><p>构成要素：长期趋势，季节变动，循环变动，不规则变动。</p><p>1）<a href="https://baike.baidu.com/item/%E9%95%BF%E6%9C%9F%E8%B6%8B%E5%8A%BF/6458640">长期趋势</a>（T）现象在较长时期内受某种根本性因素作用而形成的总的变动趋势。</p><p>2）<a href="https://baike.baidu.com/item/%E5%AD%A3%E8%8A%82%E5%8F%98%E5%8A%A8/1700201">季节变动</a>（S）现象在一年内随着季节的变化而发生的有规律的周期性变动。</p><p>3）<a href="https://baike.baidu.com/item/%E5%BE%AA%E7%8E%AF%E5%8F%98%E5%8A%A8/6427021">循环变动</a>（C）现象以若干年为周期所呈现出的波浪起伏形态的有规律的变动。</p><p>4）<a href="https://baike.baidu.com/item/%E4%B8%8D%E8%A7%84%E5%88%99%E5%8F%98%E5%8A%A8/9661423">不规则变动</a>（I）是一种无规律可循的变动，包括严格的随机变动和不规则的突发性影响很大的变动两种类型。</p><p><strong>时间数列的组合模型</strong></p><p>1加法模型：Y=T+S+C+I（Y,T计量单位相同的总量指标）（S,C,I对长期趋势产生的或正或负的偏差）</p><p>2乘法模型：Y=T·S·C·I（常用模型）（Y,T计量单位相同的总量指标）（S,C,I对原数列指标增加或减少的百分比）</p><h2 id="1-ARIMA（差分自回归移动平均模型）简介">1 ARIMA（差分自回归移动平均模型）简介</h2><p><img src="https://bbs.spsspro.com/api/v2/files/1412" alt="image.png"></p><p>模型的一般形式如下式所示：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1413" alt="image.png"></p><h3 id="1-1-适用条件">1.1 适用条件</h3><p>数据序列是平稳的，这意味着均值和方差不应随时间而变化。通过对数变换或差分可以使序列平稳。</p><p>输入的数据必须是单变量序列，因为ARIMA利用过去的数值来预测未来的数值。</p><h3 id="1-2-分量解释">1.2 分量解释</h3><p>AR(自回归项)、I(差分项)和MA(移动平均项)：</p><p>AR项是指用于预测下一个值的过去值。AR项由ARIMA中的参数p定义。p值是由PACF图确定的。</p><p>MA项定义了预测未来值时过去预测误差的数目。ARIMA中的参数q代表MA项。ACF图用于识别正确的q值</p><p>差分顺序规定了对序列执行差分操作的次数，对数据进行差分操作的目的是使之保持平稳。ADF可以用来确定序列是否是平稳的，并有助于识别d值。</p><h3 id="1-3-模型基本步骤">1.3 模型基本步骤</h3><h4 id="1-31-序列平稳化检验，确定d值">1.31 序列平稳化检验，确定d值</h4><p>对序列绘图，进行 ADF 检验，观察序列是否平稳（一般为不平稳）；对于非平稳时间序列要先进行 d 阶差分，转化为平稳时间序列</p><h4 id="1-32-确定p值和q值">1.32 确定p值和q值</h4><p>(1)p 值可从偏自相关系数（PACF）图的最大滞后点来大致判断，q 值可从自相关系数（ACF）图的最大滞后点来大致判断</p><p>(2)遍历搜索AIC和BIC最小的参数组合</p><h4 id="1-33-拟合ARIMA模型-p-d-q">1.33 拟合ARIMA模型 (p,d,q)</h4><h4 id="1-34-预测未来的值">1.34 预测未来的值</h4><h2 id="2-案例介绍及操作">2 案例介绍及操作</h2><p>基于 1985-2021年某杂志的销售量，预测某商品的未来五年的销售量。</p><p><img src="https://bbs.spsspro.com/api/v2/files/1414" alt="image.png"></p><h3 id="2-1-序列平稳化检验，确定d值">2.1 序列平稳化检验，确定d值</h3><p><strong>平稳性概念</strong></p><p>假定某个时间序列是由一系列随机过程生成的，即假定时间序列的每一个数值都是从一个概率分布中随机得到，如果满足下列条件：</p><p>均值u是与时间t无关的常数；</p><p>方差是与时间t无关的常数；</p><p>协方差是只与时间间隔K有关，与时间t无关的常数</p><p>则称该随机时间序列是平稳的，而该随机过程是平稳随机过程。</p><p><strong>ADF思路</strong></p><p>白噪声的过程是：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1415" alt="image.png"></p><p><img src="https://bbs.spsspro.com/api/v2/files/1416" alt="image.png"></p><p>对于白噪声序列，基本是在均值附近较为平均的随机震荡。它满足正态分布，均值与方差都是与时间t无关的函数，它满足平稳性要求。</p><p><strong>随机游走的过程是：</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1417" alt="image.png"></p><p><img src="https://bbs.spsspro.com/api/v2/files/1418" alt="image.png"></p><p>对于随机游走，可以看到比白噪声平滑很多，并且呈现出一些“趋势性”的感觉。它的均值为0，方差与时间t有关，他不满足平稳性要求。</p><p>而随机游走的一阶差分是平稳的：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1419" alt="image.png"></p><p>如果一个时间序列是非平稳的，它常常可以通过取差分的方法而形成平稳序列。</p><p>ADF 大致的思想就是基于随机游走的，对回归，如果发现p=1，说明序列满足随机游走，就是非平稳的。</p><p>下图是通过spsspro软件生成：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1420" alt="image.png"></p><p><strong>如何确定该序列是否平稳呢？</strong></p><p><strong>（1）临界值检验</strong></p><p>临界值1%、5%、10%不同程度拒绝原假设的统计值和假设检验值t进行比较，t同时小于1%、5%、10%即说明非常好地拒绝该假设</p><p><strong>（2）显著性检验p&lt;0.05</strong></p><p>本数据中，原序列的 ADF 假设检验值t为1.814， 大于三个level的统计值，所以是非平稳的。而一阶差分序列的 ADF 假设检验值t为-3.156，小于三个level的统计值，再来看显著性p的值为0.023&lt;0.05，所以是平稳的。</p><p>经过二阶差分，与一阶差分相比，只是在显著性程度上扩大了，因此对于该序列，采用一阶差分比较合适。一般情况下，采用一阶、二阶差分就可以使序列变得平稳。</p><p>所以差分阶数d=1</p><h3 id="2-2-确定p值和q值">2.2 确定p值和q值</h3><h4 id="2-21-绘制ACF-、PACF图">2.21 绘制ACF 、PACF图</h4><p>先来介绍几个概念：</p><p>拖尾和截尾</p><p>拖尾，顾名思义，就是序列缓慢衰减，“尾巴”慢慢拖着滑下来，或者震荡衰减</p><p>而截尾则是突然截断了，像个悬崖，指序列从某个时点变得非常小</p><p>专业点来说呢，就是：</p><p>如果样本自相关系数和样本偏自相关系数在最初的阶明显大于2倍标准差（下图虚线），而后几乎95%的系数都落在2倍标准差的范围内，且非零系数衰减为小值波动的过程非常突然，通常视为k阶截尾。</p><p>如果有超过5%的样本相关系数大于2倍标准差，或者非零系数衰减为小值波动的过程比较缓慢或连续，通常视为拖尾。</p><p>自相关系数（ACF）</p><p><img src="https://bbs.spsspro.com/api/v2/files/1421" alt="image.png"></p><p>自相关系数度量的是同一事件在两个不同时期之间的相关程度，形象的讲就是度量自己过去的行为对自己现在的影响。在这里可以通过自相关系数（ACF）图的最大滞后点来大致判断q 值。</p><p>偏自相关系数（PACF）</p><p><img src="https://bbs.spsspro.com/api/v2/files/1422" alt="image.png"></p><p>计算某一个要素对另一个要素的影响或相关程度时，把其他要素的影响视为常数，即暂不考虑其他要素的影响，而单独研究那两个要素之间的相互关系的密切程度时，称为偏相关。在这里可以通过偏自相关系数（PACF）图的最大滞后点来大致判断p 值。</p><p>下图是通过spsspro软件生成：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1423" alt="image.png"> 差分数据自相关图（ACF）</p><p><img src="https://bbs.spsspro.com/api/v2/files/1424" alt="image.png"> 差分数据偏自相关图（PACF）</p><p>从上图可以看到：趋势序列 ACF 有 1 阶截尾，PACF 有 1 阶截尾尾。因此可以选 p=1， q=1。</p><p>通过拖尾和截尾对模型定阶，具有很强的主观性。</p><h4 id="2-22-AIC、BIC准则">2.22 AIC、BIC准则</h4><p>AIC 准则全称是最小化信息量准则</p><p><img src="https://bbs.spsspro.com/api/v2/files/1425" alt="image.png"></p><p>其中 L 表示模型的极大似然函数， K 表示模型参数个数。</p><p>当样本容量很大时，采用BIC贝叶斯信息准则</p><p><img src="https://bbs.spsspro.com/api/v2/files/1426" alt="image.png"></p><p>其中 n 表示样本容量。</p><p>通过比较不同差分阶数的AIC、BIC的值，取两者最小值p、q</p><p>从评价准则的结果看：p = 0， q = 1 时，两者值最小，AIC为251.973，BIC为256.724。</p><h3 id="2-3-拟合ARIMA模型-p-d-q">2.3 拟合ARIMA模型 (p,d,q)</h3><p>由上述步骤，我们已知d=1，p=0，q=1，故拟合模型为ARIMA（0,1,1）</p><p>采用多元线性回归，得到y(t)=4.996+0.671*ε(t-1)</p><h3 id="2-4-预测">2.4 预测</h3><p>使用该公式，得到未来五年的杂志销量分别为285.097、290.093、295.089、300.085、305.081。</p><h2 id="3-案例工具实现">3 案例工具实现</h2><h3 id="3-1使用工具">3.1使用工具</h3><p>SPSSPRO—&gt;【预测模型—&gt;时间序列分析（ARIMA）】</p><h4 id="3-11-案例操作">3.11 案例操作</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1427" alt="image.png"></p><p>Step1：新建分析；</p><p>Step2：上传数据；</p><p>Step3：选择对应数据打开后进行预览，确认无误后点击开始分析；</p><p><img src="https://bbs.spsspro.com/api/v2/files/1428" alt="image.png"></p><p>step4：选择【时间序列分析（ARIMA）】；</p><p>step5：查看对应的数据数据格式，【时间序列分析（ARIMA）】要求输入１个时间序列数据定量变量。</p><p>step6：选择向后预测的期数。</p><p>step7：点击【开始分析】，完成全部操作。</p><h4 id="3-12-分析结果解读">3.12 分析结果解读</h4><p>以下生成的结果来源于SPSSPRO软件的分析结果导出，SPSSPRO输出的结果中会给出智能解读结果，直接查看智能分析：</p><p><strong>输出结果 1：ADF 检验表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1429" alt="image.png"></p><p>图表说明：该序列检验的结果显示，基于字段年度销量:</p><p>在差分为 0 阶时，显著性 P 值为 0.998，水平上不要呈现显著性，不能拒绝原假设，该序列为不平稳的时间序列。在差分为 1 阶时，显著性 P 值为 0.023，水平上呈现显著性，拒绝原假设，该序列为平稳的时间序列。</p><p>在差分为 2 阶时，显著性 P 值为 0.000，水平上呈现显著性，拒绝原假设，该序列为平稳的时间序列。</p><p>（注意：在理论上，足够多的差分运算可以充分提取原时间序列中的非平稳确定性信息。但进行差分运算需要注意的是，差分运算的阶数不是越多越好。差分是对信息的提取、加工的过程，每次差分都会有信息的损失，所以差分的阶数需要适当，以免过度差分。）</p><p><strong>输出结果 2：最佳差分序列图</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1430" alt="image.png"></p><p>图表说明：由于一阶差分后序列进行单位根检验的 P 值小于 0.05，说明一阶差分后序列是平稳数据，上图展示了原始数据 1 阶差分后的时序图。</p><p><strong>输出结果 3：最终差分数据自相关图（ACF）</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1431" alt="image.png"></p><p>图表说明：由自相关图可知，一阶自相关系数很明显地大于 2 倍标准差范围，自一阶自相关系数后，其余自相关系数都在 2 倍标准差范围以内，我们可以判断自相关图为截尾。</p><p><strong>输出结果 4：最终差分数据偏自相关图（PACF）</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1432" alt="image.png"></p><p>图表说明：由偏自相关图可知，一阶偏自相关系数很明显地大于 2 倍标准差范围，自一阶偏自相关系数后，其余自相关系数都在 2 倍标准差范围以内，我们可以判断偏自相关图为截尾。</p><p><strong>输出结果 5：模型参数表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1433" alt="image.png"></p><p>图表说明：由于通过自相关分析和偏自相关分析来判断 ARIMA 的参数存在人为主观性，SPSSPRO 基于 AIC 信息准则自动寻找最优参数，模型结果为 ARIMA 模型（0,1,1）检验表，基于字段：年度销量，从 Q 统计量结果分析可以得到：Q6 在水平上不呈现显著性，不能拒绝模型的残差为白噪声序列的假设，同时模型的拟合优度 R2 为 0.981，模型表现优秀，模型基本满足要求。（注意：一般来说，只检验前 6 期和前 12 延迟的 Q 统计量（即 Q6 和 Q12）就可得出残差是否是随机序列的结论。这是因为平稳序列通常具有短期相关性，如果一个短期延迟序列值之间不存在显著的相关关系，通常延迟之间就更不会存在显著的相关关系。）</p><p><strong>输出结果 6：模型残差自相关图（ACF）</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1434" alt="image.png"></p><p>图表说明：上图展示了模型的残差自相关图，（ACF）若相关系数均在虚线（2 倍标准差）内，自回归模型（AR）残差为白噪声序列，时间序列要求模型残差为白噪声序列。很明显，残差的自相关系数均在虚线内。</p><p><strong>输出结果 7：模型残差偏自相关图（PACF）</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1435" alt="image.png"></p><p>图表说明：上图展示了模型的残差偏自相关图（PACF），若相关系数均在虚线内，滑动平均模型（MA）残差为白噪声序列，时间序列要求模型残差为白噪声序列。很明显，残差的大部分偏自相关系数均在虚线内，即便第 9 阶与第 14 阶超过了 2 倍标准差，这可能是由于偶然因素引起的。</p><p><strong>输出结果 8：模型检验表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1436" alt="image.png"></p><p>图表说明：基于字段年度销量，SPSSPRO 基于 AIC 信息准则自动寻找最优参数，模型结果为 ARIMA 模型（0,1,1）检验表且基于 1 差分数据，模型公式如下：y(t)=4.996+0.671*ε(t-1)</p><p><strong>输出结果 9：时间序列图</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1437" alt="image.png"></p><p>图表说明：上图表示了该时间序列模型的原始数据图、模型拟合值、模型预测值。从图可知，拟合序列趋势与真实序列趋势有着极大的相似性，说明拟合效果较好。</p><p><strong>输出结果 10：时间序列预测表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1438" alt="image.png"></p><p>图表说明：上表显示了时间序列模型最近 5 期数据预测情况。</p><h2 id="4-结论">4 结论</h2><p>ARIMA 是用于单变量时间序列数据预测的最广泛使用方法之一，模型十分简单，只需要内生变量而不需要借助其他外生变量，但是，采用ARIMA模型预测时序，数据必须是稳定的，如果不稳定的数据，是无法捕捉到规律的。比如股票数据用ARIMA无法预测的原因就是股票数据是非稳定的，常常受政策和新闻的影响而波动。</p><h1>时间序列（一）：时间序列数据与时间序列预测模型</h1><h2 id="朴素法">朴素法</h2><p>朴素法就是<strong>预测值等于实际观察到的最后一个值</strong>。它假设数据是平稳且没有趋势性与季节性的。通俗来说就是以后的预测值都等于最后的值。</p><p>这种方法很明显适用情况极少，所以我们重点通过这个方法来熟悉一下数据可视化与模型的评价及其相关代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#朴素法</span></span><br><span class="line">dd = np.asarray(train[<span class="string">&#x27;Count&#x27;</span>])<span class="comment">#训练组数据</span></span><br><span class="line">y_hat = test.copy()<span class="comment">#测试组数据</span></span><br><span class="line">y_hat[<span class="string">&#x27;naive&#x27;</span>] = dd[<span class="built_in">len</span>(dd) - <span class="number">1</span>]<span class="comment">#预测组数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">8</span>))</span><br><span class="line">plt.plot(train.index, train[<span class="string">&#x27;Count&#x27;</span>], label=<span class="string">&#x27;Train&#x27;</span>)</span><br><span class="line">plt.plot(test.index, test[<span class="string">&#x27;Count&#x27;</span>], label=<span class="string">&#x27;Test&#x27;</span>)</span><br><span class="line">plt.plot(y_hat.index, y_hat[<span class="string">&#x27;naive&#x27;</span>], label=<span class="string">&#x27;Naive Forecast&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Naive Forecast&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>得到结果：<br><img src="https://img-blog.csdnimg.cn/202009202338285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjkyMzg2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们通过计算均方根误差，检查模型在测试数据集上的准确率。<br>其中均方根误差（RMSE）是各数据偏离真实值的距离平方和的平均数的开方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算均方根误差RMSE</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># mean_squared_error求均方误差</span></span><br><span class="line">rmse = sqrt(mean_squared_error(test[<span class="string">&#x27;Count&#x27;</span>], y_hat[<span class="string">&#x27;naive&#x27;</span>]))</span><br><span class="line"><span class="built_in">print</span>(rmse)</span><br></pre></td></tr></table></figure><p>得到均方根误差为1053</p><h2 id="简单平均法">简单平均法</h2><p>简单平均法就是<strong>预测的值为之前过去所有值的平均</strong>.当然这不会很准确，但这种预测方法在某些情况下效果是最好的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简单平均法</span></span><br><span class="line">y_hat_avg = test.copy()</span><br><span class="line">y_hat_avg[<span class="string">&#x27;avg_forecast&#x27;</span>] = train[<span class="string">&#x27;Count&#x27;</span>].mean()</span><br></pre></td></tr></table></figure><p>其后续可视化与模型效果评估方法与上述一致，这里不再赘述，需要详细代码可以查看相关源码。得到RMSE值为2637</p><h2 id="移动平均法">移动平均法</h2><p>我们经常会遇到这种数据集，比如价格或销售额某段时间大幅上升或下降。如果我们这时用之前的简单平均法，就得使用所有先前数据的平均值，但在这里使用之前的所有数据是说不通的，因为用开始阶段的价格值会大幅影响接下来日期的预测值。因此，我们只取最近几个时期的价格平均值。很明显这里的逻辑是只有最近的值最要紧。这种用<strong>某些窗口期计算平均值</strong>的预测方法就叫移动平均法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#移动平均法</span></span><br><span class="line">y_hat_avg = test.copy()</span><br><span class="line"><span class="comment">#利用时间窗函数rolling求平均值u</span></span><br><span class="line">y_hat_avg[<span class="string">&#x27;moving_avg_forecast&#x27;</span>] = train[<span class="string">&#x27;Count&#x27;</span>].rolling(<span class="number">60</span>).mean().iloc[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>其后续可视化与模型效果评估方法与上述一致，这里不再赘述，需要详细代码可以查看相关源码。得到RMSE值为1121</p><h2 id="指数平滑法">指数平滑法</h2><p>在做时序预测时，一个显然的思路是：认为离着预测点越近的点，作用越大。比如我这个月体重100斤，去年某个月120斤，显然对于预测下个月体重而言，这个月的数据影响力更大些。</p><p>假设随着时间变化权重以指数方式下降——最近为0.8，然后0.8<strong>2，0.8</strong>3…，最终年代久远的数据权重将接近于0。将<strong>权重按照指数级进行衰减</strong>，这就是指数平滑法的基本思想。</p><p>指数平滑法有几种不同形式：一次指数平滑法针对没有趋势和季节性的序列，二次指数平滑法针对有趋势但没有季节性的序列，三次指数平滑法针对有趋势也有季节性的序列。“</p><p>所有的指数平滑法都要更新上一时间步长的计算结果，并使用当前时间步长的数据中包含的新信息。它们通过”混合“新信息和旧信息来实现，而相关的新旧信息的权重由一个可调整的参数来控制。</p><h3 id="一次指数平滑">一次指数平滑</h3><p>一次指数平滑法的递推关系如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo>=</mo><mi>a</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mtext>其中</mtext><mi>a</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S_i = ax_i + (1 - a)s_{i-1},其中a \in (0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">其中</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>其中,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是时间步长i（理解为第i个时间点）上经过的平滑后的值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是这个时间步长上的实际数据。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>可以是0，1之间的任意值，他控制的新旧信息之间的平衡：a接近1保留当前数据点，a接近0时，保留前面的平滑值。其递推关系式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>α</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>i</mi></munderover><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><msup><mo stretchy="false">)</mo><mi>j</mi></msup><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">s_i = \alpha \sum_{j=0}^{i}(1-\alpha)^{j} x_{i-j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2254em;vertical-align:-1.4138em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8117em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1608em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>可以看出，在指数平滑法中，所有先前的观测值都对当前的平滑值产生了影响，但它们所起的作用随着参数 α 的幂的增大而逐渐减小。那些相对较早的观测值所起的作用相对较小。同时，称α为记忆衰减因子可能更合适——因为α的值越大，模型对历史数据“遗忘”的就越快。从某种程度来说，指数平滑法就像是拥有无限记忆（平滑窗口足够大）且权值呈指数级递减的移动平均法。一次指数平滑</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mi>h</mi></mrow></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_{i+h} = s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>si已经是最后一个算出来的值，h等于1代表预测的下一个值。</p><p>我们可以通过statsmodels中的时间序列模型进行指数平滑建模。官方文档地址为：<br><a href="https://www.statsmodels.org/stable/generated/statsmodels.tsa.holtwinters.SimpleExpSmoothing.html">https://www.statsmodels.org/stable/generated/statsmodels.tsa.holtwinters.SimpleExpSmoothing.html</a><br>具体代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一次指数平滑</span></span><br><span class="line"><span class="keyword">from</span> statsmodels.tsa.api <span class="keyword">import</span> SimpleExpSmoothing</span><br><span class="line"> </span><br><span class="line">y_hat_avg = test.copy()</span><br><span class="line">fit = SimpleExpSmoothing(np.asarray(train[<span class="string">&#x27;Count&#x27;</span>])).fit(smoothing_level=<span class="number">0.6</span>, optimized=<span class="literal">False</span>)</span><br><span class="line">y_hat_avg[<span class="string">&#x27;SES&#x27;</span>] = fit.forecast(<span class="built_in">len</span>(test))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">16</span>, <span class="number">8</span>))</span><br><span class="line">plt.plot(train[<span class="string">&#x27;Count&#x27;</span>], label=<span class="string">&#x27;Train&#x27;</span>)</span><br><span class="line">plt.plot(test[<span class="string">&#x27;Count&#x27;</span>], label=<span class="string">&#x27;Test&#x27;</span>)</span><br><span class="line">plt.plot(y_hat_avg[<span class="string">&#x27;SES&#x27;</span>], label=<span class="string">&#x27;SES&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201002144630712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjkyMzg2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="二次指数平滑-线性回归">二次指数平滑(线性回归)</h3><p>在介绍二次指数平滑前介绍一下趋势的概念。</p><p>趋势，或者说斜率的定义很简单b=Δy/Δx,</p><p>所以对于一个序列而言，相邻两个点的Δ x = 1 Δx=1Δx=1，因此)b=Δy=y(x)−y(x−1)。 除了用点的增长量表示，也可以用二者的比值表示趋势。比如可以说一个物品比另一个贵20块钱，等价地也可以说贵了5%，前者称为可加的（addtive），后者称为可乘的（multiplicative）。在实际应用中，可乘的模型预测稳定性更佳，但是为了便于理解，我们在这以可加的模型为例进行推导。</p><p>指数平滑考虑的是数据的baseline，二次指数平滑在此基础上将趋势作为一个额外考量，保留了趋势的详细信息。即我们保留并更新两个量的状态：平滑后的信号和平滑后的趋势。公式如下：<br>基准等式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>a</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_i = ax_i + (1 - a)(s_{i-1} + t_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>趋势等式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>=</mo><mi>β</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo>−</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">t_i = \beta(s_i- s_{i-1}) + (1 - \beta)t_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>第二个等式描述了平滑后的趋势。当前趋势的未平滑“值” (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">t_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)是当前平滑值（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）和上一个平滑值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">s_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>的差；<br>的差；也就是说，当前趋势告诉我们在上一个时间步长里平滑信号改变了多少。要想使趋势平滑，我们用一次指数平滑法对趋势进行处理，并使用参数 β<br>对(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">t_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)的处理类似于一次平滑指数法中的（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），即对趋势也需要做一个平滑，临近的趋势权重大。</p><p>为获得平滑信号，我们像上次那样进行一次混合，但要同时考虑到上一个平滑信号及趋势。假设单个步长时间内保持着上一个趋势，那么第一个等式的最后那项就可以对当前平滑信号进行估计。</p><p>若要利用该计算结果进行预测，就取最后那个平滑值，然后每增加一个时间步长就在该平滑值上增加一次最后那个平滑趋势：<br><img src="https://img-blog.csdnimg.cn/20201005153225313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjkyMzg2,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><h3 id="三次指数平滑">三次指数平滑</h3><p>在应用这种算法前，我们先介绍一个新术语。假如有家酒店坐落在半山腰上，夏季的时候生意很好，顾客很多，但每年其余时间顾客很少。因此，每年夏季的收入会远高于其它季节，而且每年都是这样，那么这种重复现象叫做“季节性”（Seasonality）。如果数据集在一定时间段内的固定区间内呈现相似的模式，那么该数据集就具有季节性。</p><p>二次指数平滑考虑了序列的基数和趋势，三次就是在此基础上<strong>增加了一个季节分量</strong>。类似于趋势分量，对季节分量也要做指数平滑。比如预测下一个季节第3个点的季节分量时，需要指数平滑地考虑当前季节第3个点的季节分量、上个季节第3个点的季节分量…等等。详细的有下述公式(累加法)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>α</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>k</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>t</mi><mi>i</mi></msub><mo>=</mo><mi>β</mi><mrow><mo fence="true">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo>−</mo><msub><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><msub><mi>t</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>γ</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>s</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>γ</mi><mo stretchy="false">)</mo><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>k</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;s_{i}=\alpha\left(x_{i}-p_{i-k}\right)+(1-\alpha)\left(s_{i-1}+t_{i-1}\right) \\&amp;t_{i}=\beta\left(s_{i}-s_{i-1}\right)+(1-\beta) t_{i-1} \\&amp;p_{i}=\gamma\left(x_{i}-s_{i}\right)+(1-\gamma) p_{i-k}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中 pi是指“周期性”部分。预测公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo>+</mo><mi>h</mi></mrow></msub><mo>=</mo><msub><mi>s</mi><mi>i</mi></msub><mo>+</mo><mi>h</mi><msub><mi>t</mi><mi>i</mi></msub><mo>+</mo><msub><mi>p</mi><mrow><mi>i</mi><mo>−</mo><mi>k</mi><mo>+</mo><mi>h</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{i+h} = s_i + ht_i +p_{i-k+h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>k 是这个周期的长度</p><p>在使用二次平滑模型与三次平滑模型前，我们可以使用sm.tsa.seasonal_decompose分解时间序列，可以得到以下分解图形——从上到下依次是原始数据、趋势数据、周期性数据、随机变量（残差值）</p><p><img src="https://img-blog.csdnimg.cn/20201206154401501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjkyMzg2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>AR模型</p><p>AR(Auto Regressive Model)自回归模型是线性时间序列分析模型中最简单的模型。通过自身前面部分的数据与后面部分的数据之间的<strong>相关关系（自相关）来建立回归方程</strong>，从而可以进行预测或者分析。服从p阶的自回归方程表达式AR§如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>ϕ</mi><mn>1</mn></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>ϕ</mi><mn>2</mn></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>ϕ</mi><mi>p</mi></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mi>p</mi></mrow></msub><mo>+</mo><msub><mi>μ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_{t}=\phi_{1} x_{t-1}+\phi_{2} x_{t-2}+\cdots+\phi_{p} x_{t-p}+\mu_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">u_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为白噪声，是时间序列中的数值的随机波动，但是这些波动会相互抵消，最终是0。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span></span></span></span>为自回归系数。</li></ul><p>所以当只有一个时间记录点时，称为一阶自回归过程，即AR(1)。其表达式为：$ x_t = \phi x_{t-1} + u_t$</p><p>利用Python建立AR模型一般会用到我们之后会说到的ARIMA模型（AR模型中的p是ARIMA模型中的参数之一，只要将其他的参数设置为0即为AR模型）。您可以先阅读后续ARIMA模型的内容并参考文件中的代码查看具体的内容</p><h2 id="MA模型">MA模型</h2><p>MA(Moving Average Model)移动平均模型通过将一段时间序列中白噪声(误差)进行加权和，可以得到移动平均方程。如下模型为q阶移动平均过程，表示为MA(q)。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><mi>μ</mi><mo>+</mo><msub><mi>μ</mi><mi>t</mi></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>θ</mi><mn>2</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>θ</mi><mi>q</mi></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t}=\mu+\mu_{t}+\theta_{1} \mu_{t-1}+\theta_{2} \mu_{t-2}+\cdots+\theta_{q} \mu_{t-q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：t期的值，当期的值由前q期的误差值来决定</p></li><li><p><em>μ</em>：常数项，相当于普通回归中的截距项</p></li><li><p>μt: 当期的随机误差。</p><p>核心思想是每一期的随机误差都会影响当期值，把前q期的所有误差加起来就是对t期值的影响。</p></li></ul><p>同样，利用Python建立MA模型一般会用到我们之后会说到的ARIMA模型,您可以先阅读后续ARIMA模型的内容并参考文件中的代码查看具体的内容</p><h2 id="ARMA模型">ARMA模型</h2><p>ARMA(Auto Regressive and Moving Average Model)自回归移动平均模型是与自回归和移动平均模型两部分组成。所以可以表示为ARMA(p, q)。p是自回归阶数，q是移动平均阶数。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>ϕ</mi><mn>1</mn></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>ϕ</mi><mn>2</mn></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>ϕ</mi><mi>p</mi></msub><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mi>p</mi></mrow></msub><mo>+</mo><msub><mi>μ</mi><mi>t</mi></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>θ</mi><mn>2</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>θ</mi><mi>q</mi></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t}=\phi_{1} x_{t-1}+\phi_{2} x_{t-2}+\cdots+\phi_{p} x_{t-p}+\mu_{t}+\theta_{1} \mu_{t-1}+\theta_{2} \mu_{t-2}+\cdots+\theta_{q} \mu_{t-q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>从式子中就可以看出，自回归模型结合了两个模型的特点，其中，AR可以解决当前数据与后期数据之间的关系，MA则可以解决随机变动也就是噪声的问题。</p><p>ARIMA模型<br>ARIMA(Auto Regressive Integrate Moving Average Model)差分自回归移动平均模型是在ARMA模型的基础上进行改造的，ARMA模型是针对t期值进行建模的，而ARIMA是针对t期与t-d期之间差值进行建模，我们把这种不同期之间做差称为差分，这里的d是几就是几阶差分。ARIMA模型也是基于平稳的时间序列的或者差分化后是稳定的，另外前面的几种模型都可以看作ARIMA的某种特殊形式。表示为ARIMA(p, d, q)。p为自回归阶数，q为移动平均阶数，d为时间成为平稳时所做的差分次数，也就是Integrate单词的在这里的意思。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><msub><mi>ϕ</mi><mn>1</mn></msub><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>ϕ</mi><mn>2</mn></msub><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>ϕ</mi><mi>p</mi></msub><msub><mi>w</mi><mrow><mi>t</mi><mo>−</mo><mi>p</mi></mrow></msub><mo>+</mo><msub><mi>μ</mi><mi>t</mi></msub><mo>+</mo><msub><mi>θ</mi><mn>1</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>θ</mi><mn>2</mn></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>θ</mi><mi>q</mi></msub><msub><mi>μ</mi><mrow><mi>t</mi><mo>−</mo><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{t}=\phi_{1} w_{t-1}+\phi_{2} w_{t-2}+\cdots+\phi_{p} w_{t-p}+\mu_{t}+\theta_{1} \mu_{t-1}+\theta_{2} \mu_{t-2}+\cdots+\theta_{q} \mu_{t-q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="SARIMA模型">SARIMA模型</h2><p>SARIMA季节性自回归移动平均模型模型在ARIMA模型的基础上添加了季节性的影响，结构参数有七个：SARIMA(p,d,q)(P,D,Q,s)<br>其中p,d,q分别为之前ARIMA模型中我们所说的p:趋势的自回归阶数。d:趋势差分阶数。q:趋势的移动平均阶数。<br>P:季节性自回归阶数。<br>D:季节性差分阶数。<br>Q:季节性移动平均阶数。<br>s:单个季节性周期的时间步长数。</p><h2 id="时间序列的平稳性、随机性检验">时间序列的平稳性、随机性检验</h2><p>本篇文章我们介绍时间序列的平稳性、随机性检验及相关时间序列数据处理方法。</p><p>在拿到时间序列数据后，首先要对数据的随机性和平稳性进行检测， 这两个检测是时间序列预测的重要部分。根据不同检测结果需要采取不同的分析方法。</p><p>为什么时间序列要求平稳性呢？</p><p>平稳性就是要求由样本拟合出的曲线在未来一段时间内仍然能够以现有的形态和趋势发展下去，这样预测结果才会有意义。</p><p>对于平稳声序列， 它的均值和方差是常数， 现已有一套非常成熟的平稳序列的建模方法。 通常是建立一个线性模型来拟合该序列的发展 借此提取该序列的有用信息。</p><p>对于非平稳序列， 由于它的均值和方差不稳定， 处理方法一般是将其转变为平稳序列，这样就可以应用有关平稳时间序列的分析方法， 如建立 ARIMA模型来进行相应的研究，或者分解趋势与季节性等并根据情况应用指数平滑模型等。</p><p>于它的均值和方差不稳定， 处理方法一般是将其转变为平稳序列，这样就可以应用有关平稳时间序列的分析方法， 如建立 ARIMA模型来进行相应的研究，或者分解趋势与季节性等并根据情况应用指数平滑模型等。<br>对于纯随机序列， 又称为白噪声序列， 序列的各项之间没有任何相关关系， 序列在进行完全无序的随机波动， 可以终止对该序列的分析。 白噪声序列是没有信息可提取的平稳序列。</p><p>在讲解平稳性和随机性的定义之前，我们先介绍一下时间序列中常用的几个特征统计量。</p><h2 id="时间序列的特征统计量">时间序列的特征统计量</h2><p>对于一个时间序列任意时刻的序列值{Xt,t∈T}{Xt,t∈T}</p><p>任意时刻的序列值  X t Xt都是一个随机变量，记其分布函数为 F t ( x ) Ft(x),则其特征统计量均值、方差、自协方差函数、自相关系数的定义分别如下:</p><p><strong>均值：</strong> 表示时间序列在各个时刻取值的平均值，其定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>u</mi><mi>t</mi></msub><mo>=</mo><mi>E</mi><msub><mi>X</mi><mi>t</mi></msub><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mi>x</mi><mi>d</mi><msub><mi>F</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">u_t =EX_t = \int_{-\infty}^{+\infty}{xdF_t(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></span></p><p><strong>方差</strong>：表示时间序列在各个时刻围绕其均值波动的平均程度，其定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>σ</mi><mi>t</mi><mn>2</mn></msubsup><mo>=</mo><mi>D</mi><msub><mi>X</mi><mi>t</mi></msub><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>t</mi></msub><mo>+</mo><msub><mi>u</mi><mi>t</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>u</mi><mi>t</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mi>d</mi><msub><mi>F</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\sigma_t^2 = DX_t = E(X_t +u_t)^2 = \int_{-\infty}^{+\infty}{(x-u_t)^2dF_t(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4915em;vertical-align:-0.9703em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5212em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></span></p><p>**自协方差：**表示时间序列任意两个时刻直接的相关性，任取t,s其定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>τ</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>t</mi></msub><mo>−</mo><msub><mi>u</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>s</mi></msub><mo>−</mo><msub><mi>u</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\tau(t,s) = E[(X_t - u_t)(X_s - u_s)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span></span></p><p>**自相关系数：**同自协方差函数，其定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>γ</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><msqrt><mrow><mi>D</mi><msub><mi>X</mi><mi>t</mi></msub><mo separator="true">⋅</mo><mi>D</mi><msub><mi>X</mi><mi>s</mi></msub></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\rho(t,s) = \frac {\gamma(t,s)}{\sqrt{DX_t · DX_s}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.357em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.2583em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8517em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8117em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1883em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="平稳时间序列的定义与检验">平稳时间序列的定义与检验</h2><p><strong>严平稳时间序列</strong>： 指时间序列的所有统计性质不会随着时间的推移而发生变化，即其联合概率分布在任何时间间隔都是相同的。</p><p><strong>宽平稳时间序列</strong>： 宽平稳时间序列则认为只要时间序列的低阶距（二阶）平稳，则该时间序列近似平稳。    应该如何对其进行平稳性的检验呢？目前，对时间序列的平稳性检验主要有两种方法，一种是图检法，即根据时序图和自相关图进行直观判断，另一种是构造检验统计量的方法，有单位根检验法等方法。</p><ul><li>图检法</li><li>统计检验法</li><li>ADF检验</li></ul><p>后进行平稳化操作。去看博客吧吐了，。</p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part1_introduction_and_models/">一</a></p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part2_stability/">二</a></p><p><a href="http://smilecoc.vip/2021/01/15/time_series_part3_arima_models/">三</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间序列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排队论</title>
      <link href="/2022/09/08/%E6%8E%92%E9%98%9F%E8%AE%BA/"/>
      <url>/2022/09/08/%E6%8E%92%E9%98%9F%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1>排队论</h1><p><a href="http://t.csdn.cn/3CuW7">博客1</a></p><p><a href="http://t.csdn.cn/Idc3N">博客2</a></p><p><a href="https://www.zhihu.com/column/c_1431554775167324160">优秀博主的专栏</a></p><h2 id="零-排队论简述">零.排队论简述</h2><h3 id="什么是排队论：">什么是排队论：</h3><p>排队论（queueing theory）是专门研究带有随机因素产生拥挤现象的优化理论，是有关于服务设施与被服务者构成的排队服务系统的理论。</p><p>亦称<strong>随机服务系统理论</strong>。因为被服务者到达系统的时间是不确定的。</p><p>排队论是计算机通信网络和计算机系统中通信信息量研究的基础理论，信息系统通信问题的定量研究往往要求借助于排队论才能得到解决。</p><p>经典模型：</p><p><img src="https://img-blog.csdn.net/20171012191405316?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYTQ5MzgyMzg4Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><h2 id="一-基本组成">一.基本组成</h2><p><img src="https://pic3.zhimg.com/80/v2-01ebdd2e0be3b3fe17e62fd274e65cce_720w.jpg" alt="img"></p><h3 id="1-输入过程">1.输入过程</h3><p>顾客到达的方式通常是一个给一个到达的，也可能是成批的。顾客到达总是有一定规律，即到达的过程或到达时间间隔符合一定的分布，称<strong>到达分布</strong>。</p><p>顾客到达或到达时间通常假定为相互独立的且遵从同一分布的随机变</p><ul><li>顾客来源：有限/无限</li><li>顾客数量：有限/无限</li><li>经常性的顾客来源：顾客到达间隔时间服从某一概率分布</li><li>顾客的行为假定：在未服务之前不会离开、当看到队列很长的时候离开、从一个队列移到另一个队列</li></ul><h3 id="2-服务规则">2.服务规则</h3><ul><li>服务规则<ul><li>服务台数量：单服务台、多服务台、无限服务台</li><li>服务协议：FCFS、LCFS、RSS、PR、PS、IS<ul><li>先来先服务：<strong>FCFS</strong>（First-Come-First-Served）</li><li>后来后服务：<strong>LCFS</strong>（Last-Come-First-Served）队列是一种堆栈形式，如果队列中有两个以上等待的顾客，则把最后到达的顾客作为下一个服务对象。</li><li>随机服务系统：<strong>RSS</strong>（Random Service System）在服务时从等待顾客中随意抽取一个进行服务。</li><li>优先服务和动态优先服务：<strong>PR</strong>（Priority Service）预先规定优先顺序位的类别，且给到达顾客规定优先顺序位作为标记的优先权。通常按照FCFS服务，优先权分为三类：排队优先权、中断优先权、动态优先权。如计算机中断的优先级。</li><li>处理器共享：<strong>PS</strong>（Processor Sharing）服务台的处理能力被平均分配给队列中的所有顾客，没有排队现象出现，当顾客的数量增加时，只是顾客的服务时间边长。如：网络服务系统。</li><li>无限服务台：<strong>IS</strong>（Infinite Server）在这种情况下，队列中的每个顾客接收完全相同的服务，而且就好像它是唯一的一个顾客一样。好像对于每个顾客都可以“克隆”出一个心得服务台，而且克隆的数目可以无限。</li></ul></li><li>服务时间分布：指数、常熟、k阶爱尔朗分布</li></ul></li></ul><h3 id="3-排队规则">3.排队规则</h3><ul><li>队列容量：有限/无限</li><li>排队方式：单队列、并联式多队列、串联式多队列、杂乱队列</li></ul><h3 id="4-数量指标">4.数量指标</h3><ul><li>平均队长：排队系统中顾客数的平均值， <img src="https://www.zhihu.com/equation?tex=%5Csmall+L_s" alt="[公式]"> 。</li><li>平均队列长：排队系统中等待服务的顾客数的平均值， <img src="https://www.zhihu.com/equation?tex=%5Csmall+L_q" alt="[公式]"> 。</li><li>平均逗留时间：一个顾客在系统中停留的时间的平均值， <img src="https://www.zhihu.com/equation?tex=%5Csmall+W_s" alt="[公式]"> 。</li><li>平均等待时间：一个顾客在系统中排队等待的时间的平均值， <img src="https://www.zhihu.com/equation?tex=%5Csmall+W_q" alt="[公式]"> 。</li><li>稳态顾客数： <img src="https://www.zhihu.com/equation?tex=%5Csmall+P_n" alt="[公式]"> ,表示当稳定时有 <img src="https://www.zhihu.com/equation?tex=%5Csmall+n" alt="[公式]"> 位顾客的概率。</li><li>平均到达率：单位时间内到达顾客的平均数 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda" alt="[公式]"> 。</li><li>平均服务率：单位时间内被服务顾客的平均数 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Cmu" alt="[公式]"> 。</li><li>服务强度：单位时间内的服务强度， <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Crho%3D%5Clambda+%2F%5Cmu" alt="[公式]"> 。</li></ul><h2 id="二。常见的分布">二。常见的分布</h2><h3 id="1-泊松分布">1.泊松分布</h3><ul><li>需要满足的条件：</li><li><ul><li>在 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5CDelta+t" alt="[公式]"> 时间内，有一个顾客到达的概率为 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda%5CDelta+t" alt="[公式]"> 。</li><li>没有一个顾客到达的概率 <img src="https://www.zhihu.com/equation?tex=%5Csmall+1-%5Clambda%5CDelta+t" alt="[公式]"></li><li>不可能多于一个顾客到达。</li><li>注意这里直接将 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5CDelta+t" alt="[公式]"> 视为无穷小量</li></ul></li><li>顾客到达服从参数为 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda" alt="[公式]"> 的泊松流。</li></ul><h3 id="2-负指数分布">2.负指数分布</h3><ul><li>需要满足的条件：</li><li><ul><li>在 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5CDelta+t" alt="[公式]"> 时间内，有一个顾客被服务完的概率为 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Cmu%5CDelta+t" alt="[公式]"> 。</li><li>没有一个顾客被服务完的概率 <img src="https://www.zhihu.com/equation?tex=%5Csmall+1-%5Cmu%5CDelta+t" alt="[公式]"></li><li>不可能多于一个顾客被服务完。</li><li>注意这里直接将 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5CDelta+t" alt="[公式]"> 视为无穷小量</li></ul></li><li>服务时间服从参数为 <img src="https://www.zhihu.com/equation?tex=%5Cmu" alt="[公式]"> 。</li></ul><h2 id="三。排队模型记号">三。排队模型记号</h2><p>一般形式：<strong>X/Y/Z/A/B/X</strong></p><ul><li><ul><li><strong>X</strong>顾客到达时间间隔分布。</li><li><strong>Y</strong>服务时间分布。</li><li><strong>Z</strong>服务台数目。</li><li><strong>A</strong>排队系统允许的最大顾客容量。</li><li><strong>B</strong>顾客总体数量。</li><li><strong>C</strong>排队规则(一般情况为先到先服务)。</li></ul></li></ul><h2 id="四。单服务台模型">四。单服务台模型</h2><h3 id="0-Little公式">0.Little公式</h3><p>运行指标之间的关系：</p><ul><li><ul><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+L_s%3D%5Clambda+W_s" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+L_q%3D%5Clambda+W_q" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+L_s%3DL_q%2B%5Cdisplaystyle%5Cfrac%7B%5Clambda%7D%7B%5Cmu%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+W_s%3DW_q%2B%5Cdisplaystyle%5Cfrac%7B1%7D%7B%5Cmu%7D" alt="[公式]"></li></ul></li></ul><h3 id="1-标准型M-M-1-公式">1.标准型M/M/1/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin%2F%5Cinfin" alt="[公式]"></h3><ul><li>特点：</li><li><ul><li>顾客源为无限的，顾客的到达相互独立，到达规律服从参数为 <img src="https://www.zhihu.com/equation?tex=%5Clambda" alt="[公式]"> 的泊松分布。</li><li>单服务台、队长无限、先到先服务。</li><li>各顾客的服务时间相互独立，且同服从于参数为 <img src="https://www.zhihu.com/equation?tex=%5Cmu" alt="[公式]"> 的负指数分布。</li></ul></li><li>首先计算出来对应的P值：</li></ul><p><img src="https://www.zhihu.com/equation?tex=P_0%3D1-%5Crho%5C%5C+P_n%3D%281-%5Crho%29%5Crho%5E%7Bn%7D%5C%5C" alt="[公式]"></p><ul><li>计算出的参数结果：</li></ul><p><img src="https://www.zhihu.com/equation?tex=%E5%B9%B3%E5%9D%87%E9%98%9F%E9%95%BF%EF%BC%9AL_s%3D%5Cfrac%7B%5Clambda%7D%7B%5Cmu-%5Clambda%7D%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%98%9F%E5%88%97%E9%95%BF%EF%BC%9AL_q+%3D%5Cfrac%7B%5Crho%5Clambda%7D%7B%5Cmu-%5Clambda%7D%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%80%97%E7%95%99%E6%97%B6%E9%97%B4%EF%BC%9AW_s%3D%5Cfrac%7B1%7D%7B%5Cmu-%5Clambda%7D%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%EF%BC%9AW_q%3D%5Cfrac%7B%5Crho%7D%7B%5Cmu-%5Clambda%7D" alt="[公式]"></p><h3 id="2-系统容量有限型M-M-1-N-公式">2.系统容量有限型M/M/1/N/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin" alt="[公式]"></h3><p>损失制:当顾客到达时，所有的服务台均被占用，顾客随即离去。 首先计算出来对应的P值：</p><p><img src="https://pic2.zhimg.com/80/v2-fde7e480f8b042202e760ddf666b4c99_720w.jpg" alt="img"></p><ul><li>计算出的参数结果：</li></ul><p><img src="https://www.zhihu.com/equation?tex=%E6%9C%89%E6%95%88%E5%88%B0%E8%BE%BE%E7%8E%87%EF%BC%9A%5Clambda_e%3D%5Clambda%281-P_N%29%5C%5C+~~%5C%5C+%E6%9C%89%E6%95%88%E6%9C%8D%E5%8A%A1%E5%BC%BA%E5%BA%A6%EF%BC%9A%5Cfrac%7B%5Clambda_e%7D%7B%5Cmu%7D%3D1-P_0%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%98%9F%E9%95%BF%EF%BC%9AL_s%3D%5Cfrac%7B1%7D%7B1-%5Crho%7D-%5Cfrac%7B%28N%2B1%29%5Crho%5E%7BN%2B1%7D%7D%7B1-%5Crho%5E%7BN%2B1%7D%7D%28%5Crho%5Cnot+%3D%7B1%7D%2C%E5%BD%93%5Crho%3D1%E6%97%B6%E8%AF%B4%E6%98%8E%E6%B5%81%E5%85%A5%E5%92%8C%E6%B5%81%E5%87%BA%E7%9B%B8%E7%AD%89%EF%BC%8C%E6%B2%A1%E6%9C%89%E6%8E%92%E9%98%9F%E7%8E%B0%E8%B1%A1%E4%BA%A7%E7%94%9F%29%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%98%9F%E5%88%97%E9%95%BF%EF%BC%9AL_q+%3DL_s-%281-P_0%29%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%80%97%E7%95%99%E6%97%B6%E9%97%B4%EF%BC%9AW_s%3D%5Cfrac%7BL_s%7D%7B%5Clambda_e%7D%3D%5Cfrac%7BL_s%7D%7B%5Clambda%281-P_N%29%7D%3D%5Cfrac%7BL_q%7D%7B%5Clambda%281-P_N%29%7D%2B%5Cfrac%7B1%7D%7B%5Cmu%7D%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%EF%BC%9AW_q%3D%5Cfrac%7BL_q%7D%7B%5Clambda_e%7D%3D%5Cfrac%7BL_q%7D%7B%5Clambda%281-P_N%29%7D%3DW_s-%5Cfrac%7B1%7D%7B%5Cmu%7D" alt="[公式]"></p><h3 id="3-顾客源有限型M-M-1-公式-M">3.顾客源有限型M/M/1/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin" alt="[公式]"> /M</h3><p>首先说明一下，因为顾客源只有m，所以最多的情况就是来m个顾客，因此这个模型和 <strong>M/M/1/m/m</strong> 其实是完全一样的。 但是注意这里的 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda" alt="[公式]"> 的定义和前面有一些区别，这里的 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda" alt="[公式]"> 定义为单位时间内该顾客来到系统请求服务的次数。</p><ul><li>下面首先计算出来对应的P值：</li></ul><p><img src="https://pic1.zhimg.com/80/v2-01b056e2b104c01f2dc1d64674268aa8_720w.jpg" alt="img"></p><ul><li>计算出的参数结果：</li></ul><p><img src="https://www.zhihu.com/equation?tex=%E5%B9%B3%E5%9D%87%E9%98%9F%E9%95%BF%EF%BC%9AL_s%3Dm-%5Cfrac%7B%5Cmu%7D%7B%5Clambda%7D%281-P_0%29%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%98%9F%E5%88%97%E9%95%BF%EF%BC%9AL_q+%3D+m-%5Cfrac%7B%28%5Clambda%2B%5Cmu%29%281-P_0%29%7D%7B%5Clambda%7D%3DL_s-%281-P_0%29%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E9%80%97%E7%95%99%E6%97%B6%E9%97%B4%EF%BC%9AW_s%3D%5Cfrac%7Bm%7D%7B%5Cmu%281-P_0%29%7D-%5Cfrac%7B1%7D%7B%5Clambda%7D%5C%5C+~~%5C%5C+%E5%B9%B3%E5%9D%87%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%EF%BC%9AW_q%3DW_s-%5Cfrac%7B1%7D%7B%5Cmu%7D" alt="[公式]"></p><h2 id="五。多服务台模型">五。多服务台模型</h2><h3 id="1-多服务台标准型M-M-c">1.多服务台标准型M/M/c/</h3><ul><li>顾客流为泊松流，平均到达率为 <img src="https://www.zhihu.com/equation?tex=%5Clambda" alt="[公式]"> ,各个服务台的平均服务率是 <img src="https://www.zhihu.com/equation?tex=%5Cmu" alt="[公式]"> 。</li><li>整个服务机构的平均服务率为 <img src="https://www.zhihu.com/equation?tex=n%5Cmu%28n%3Cc%29" alt="[公式]"> 或 <img src="https://www.zhihu.com/equation?tex=c%5Cmu%28n%5Cge+c%29" alt="[公式]"> 。</li><li>系统服务强度为（当 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Crho%3E1" alt="[公式]">会产生排队现象） <img src="https://www.zhihu.com/equation?tex=%5Crho+%3D+%5Cfrac%7B%5Clambda%7D%7Bc%5Cmu%7D%5C%5C" alt="[公式]"></li><li>首先计算出来对应的P值：</li></ul><p><img src="https://pic2.zhimg.com/80/v2-f0736771d31c8aef843453700761f0b5_720w.jpg" alt="img"></p><ul><li>计算出系统的运行指标：</li></ul><p><img src="https://pic1.zhimg.com/80/v2-acd7c0d6d5c32b4869365c187433cd78_720w.jpg" alt="img"></p><ul><li><strong>一个有用的结论</strong>： 顾客逗留时间服从 <img src="https://www.zhihu.com/equation?tex=%5Cmu-%5Clambda" alt="[公式]"> 的指数分布(参考平均逗留时间 <img src="https://www.zhihu.com/equation?tex=W_s" alt="[公式]"> )。</li></ul><h3 id="2-多服务台M-M-c-N-公式">2.多服务台M/M/c/N/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin" alt="[公式]"></h3><ul><li>首先计算出来对应的P值：</li></ul><p><img src="https://pic1.zhimg.com/80/v2-249b3e5b98110b36fde8e0f2a4b0ff04_720w.jpg" alt="img"></p><ul><li>计算出系统的运行指标：</li></ul><p><img src="https://pic4.zhimg.com/80/v2-b6e751da8288b5250fed299a16323b33_720w.jpg" alt="img"></p><h3 id="3-多服务台M-M-c-公式-m">3.多服务台M/M/c/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin" alt="[公式]"> /m</h3><ul><li>首先计算出来对应的P值：</li></ul><p><img src="https://pic2.zhimg.com/80/v2-19a64d463ac9768d88dc4e32cee71ed1_720w.jpg" alt="img"></p><ul><li>计算出系统的运行指标：</li></ul><p><img src="https://pic3.zhimg.com/80/v2-0466641cacb485039571528583af9d1a_720w.jpg" alt="img"></p><h2 id="六。排队系统最优化">六。排队系统最优化</h2><h3 id="1-标准M-M-1系统的最优服务率">1.标准M/M/1系统的最优服务率</h3><ul><li>参数引入：</li><li><ul><li><img src="https://www.zhihu.com/equation?tex=C_s" alt="[公式]"> :对每个顾客的单位时间服务费。</li><li><img src="https://www.zhihu.com/equation?tex=C_w" alt="[公式]"> :为每个顾客在系统停留单位时间的损失费。</li><li><img src="https://www.zhihu.com/equation?tex=G" alt="[公式]"> :单位时间对每位顾客服务的收入。</li><li><img src="https://www.zhihu.com/equation?tex=z" alt="[公式]"> :总费用。</li></ul></li><li>优化目标(单位时间费用最小)： <img src="https://www.zhihu.com/equation?tex=%5Cmin%7Bz%7D%3DC_s%5Cmu%2BC_wL_s" alt="[公式]"></li><li>求得最优取值： <img src="https://www.zhihu.com/equation?tex=%5Cmu%5E%7B%2A%7D%3D%5Clambda%2B%5Csqrt%7B%5Cdfrac%7BC_w%7D%7BC_s%7D%5Clambda%7D%5C%5C" alt="[公式]"></li><li>优化目标(服务利润最大)： <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Cmax%7Bz%7D%3D%5Cmu%281-P_0%29G-C_s%5Cmu" alt="[公式]"> ( <img src="https://www.zhihu.com/equation?tex=%5Csmall+1-P_0" alt="[公式]"> 表示排除没有人的情况)</li></ul><h3 id="2-系统容量有限M-M-1-N-公式-的最优服务率">2.系统容量有限M/M/1/N/ <img src="https://www.zhihu.com/equation?tex=%5Cinfin" alt="[公式]"> 的最优服务率</h3><ul><li>与标准情况的差别：这里相当于如果系统中已经有 <img src="https://www.zhihu.com/equation?tex=N" alt="[公式]"> 个顾客了，那么后来的都会被拒绝，所以说这里实际进入(稳定状态下服务完)的客户多一个 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%281-P_N%29" alt="[公式]"> 的系数，为 <img src="https://www.zhihu.com/equation?tex=%5Csmall+%5Clambda%281-P_N%29" alt="[公式]"></li><li>优化目标为： <img src="https://www.zhihu.com/equation?tex=%5Cmin%7Bz%7D%3D%5Clambda%281-P_N%29G-C_s%5Cmu%3D%5Clambda+G%5Cfrac%7B1-%5Crho%5E%7BN%7D%7D%7B1-%5Crho%5E%7BN%2B1%7D%7D-C_s%5Cmu%5C%5C" alt="[公式]"></li><li>求得结果：</li></ul><p><img src="https://www.zhihu.com/equation?tex=%5Crho%5E%7BN%2B1%7D%5Cfrac%7BN-%28N%2B1%29%5Crho%2B%5Crho%5E%7BN%2B1%7D%7D%7B%281-%5Crho%5E%7BN%2B1%7D%29%5E2%7D%3D%5Cfrac%7BC_s%7D%7BG%7D%5C%5C" alt="[公式]"></p><p>注意这里面 <img src="https://www.zhihu.com/equation?tex=%5Cdisplaystyle%5Crho%3D%5Cfrac%7B%5Clambda%7D%7B%5Cmu%7D" alt="[公式]"> ，其他的参量也都知道，因此最后只需要通过数值方法求解 <img src="https://www.zhihu.com/equation?tex=%5Cmu%5E%7B%2A%7D" alt="[公式]"> 。</p><h3 id="3-顾客源有限M-M-1-m-m的最优服务率">3.顾客源有限M/M/1/m/m的最优服务率</h3><ul><li>根据之前的模型可知，单位时间服务完的顾客数为 <img src="https://www.zhihu.com/equation?tex=%5Clambda%28m-L_s%29" alt="[公式]"> 。</li><li>优化目标(服务利润最大)： <img src="https://www.zhihu.com/equation?tex=%5Cmax%7Bz%7D%3D%5Clambda%28m-L_s%29G-C_s%5Cmu" alt="[公式]"> ( <img src="https://www.zhihu.com/equation?tex=1-P_0" alt="[公式]"> 表示排除没有人的情况)</li><li>优化结果为：</li></ul><p><img src="https://pic1.zhimg.com/80/v2-cf12f236c40810435ef73972995b732c_720w.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-2cbcea02bdd9d6ca4a49282740bd21f8_720w.jpg" alt="img"></p><h3 id="4-标准M-M-c的最优服务台数">4.标准M/M/c的最优服务台数</h3><ul><li>优化目标(单位时间费用最小)： <img src="https://www.zhihu.com/equation?tex=%5Cmin%7Bz%7D%3DC_s%5Cmu%2BC_wL_s" alt="[公式]"> ，注意这里因为 <img src="https://www.zhihu.com/equation?tex=L_s%3DL_s%28c%29" alt="[公式]"> 所以个服务台的个数有关。</li><li>由于 <img src="https://www.zhihu.com/equation?tex=c" alt="[公式]"> 是离散的取值，因此采用边际分析法求解，假定 <img src="https://www.zhihu.com/equation?tex=c" alt="[公式]"> 的最优值为 <img src="https://www.zhihu.com/equation?tex=c%5E%7B%2A%7D" alt="[公式]"> ，此时 <img src="https://www.zhihu.com/equation?tex=z%28c%5E%7B%2A%7D%29" alt="[公式]"> 为最少费用。</li><li>根据最小值的特性可以得到如下的不等式：</li></ul><p><img src="https://www.zhihu.com/equation?tex=z%28c%5E%7B%2A%7D%29%5Cle+z%28c%5E%7B%2A%7D-1%29%5C%5C+z%28c%5E%7B%2A%7D%29%5Cle+z%28c%5E%7B%2A%7D%2B1%29" alt="[公式]"></p><ul><li>化简得到结果：</li></ul><p><img src="https://pic3.zhimg.com/80/v2-8ee32a73ae69f1be691ddfb901471b6a_720w.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排队模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>遗传算法</title>
      <link href="/2022/09/08/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>遗传算法</h1><p>遗传算法（Genetic Algorithm，GA）是由John Holland于20世纪70年代提出，该算法是根据大自然中生物体进化规律而设计提出的，来模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。其本质是一种高效、并行、全局搜索的方法，能在搜索过程中自动获取和积累有关搜索空间的知识，并自适应地控制搜索过程以求得最佳解。</p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/ruAMsa53pVQWN7FLK88i5hxcI9YFYZf8uDa7rxRl27GqrEcJMDcHY2GuI2qlJdngDf8ZeMeq0APTSwS5WYkEohohtoTj*yg4ETbgh4pHw*c!/b&amp;bo=ywAIAQAAAAABB.I!&amp;rf=viewer_4" alt="img"></p><h2 id="遗传算法的流程：">遗传算法的流程：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.评估每条染色体所对应个体的适应度</span><br><span class="line">While（未找到满意的解）：</span><br><span class="line">2.遵照适应度越高，选择概率越大的原则，从种群中选择两个个体作为父方和母方</span><br><span class="line">3.抽取父母双方的染色体，进行交叉，产生子代</span><br><span class="line">4.对子代的染色体进行变异</span><br></pre></td></tr></table></figure><h2 id="优点：">优点：</h2><p>1） 遗传算法具有广泛的应用领域<br>2） 遗传算法具有群体搜索的特性<br>3） 遗传算法基于概率规则，搜索更为灵活</p><p>4） 遗传算法直接以目标函数作为搜索信息，不涉及目标函数值求微分的过程</p><h2 id="缺点：">缺点：</h2><p>1） 遗传算法效率比较低</p><p>2） 遗传算法容易过早收敛<br>3） 遗传算法在编码时容易出现不规范不准确的问题</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 遗传算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主成分分析法</title>
      <link href="/2022/09/08/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90%E6%B3%95/"/>
      <url>/2022/09/08/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>主成分分析法(PCA)</h1><p>参考资料：</p><p><a href="https://bbs.spsspro.com/news/121">spssspro</a></p><p><a href="https://blog.csdn.net/qq_38262266/article/details/100592330">PCA(主成分分析)过程详解</a></p><p><a href="https://www.jianshu.com/p/9176c2f92057">简书</a></p><p><img src="https://img-blog.csdnimg.cn/20190907122225372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4MjYyMjY2,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>数据降维大法–主成分分析法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主成分分析法是运用“降维”思想，把多个指标变换成少数综合指标的多元统计方法，这里的综合指标就是主成分。每个主成分都是原始变量的线性组合，彼此相互独立，并保留了原始变量绝大部分信息。其本质是通过原始变量的相关性，寻求相关变量的综合替代对象，并且保证了转化过程中的信息损失最小 。</span><br></pre></td></tr></table></figure><p><strong>前言废话篇：</strong></p><p>什么，老板既然让我一天内分析完今年公司的经营状态？？</p><p>光是公司财务数据就已经包含20+个变量，固定资产、流动资金、每一笔借贷的数额和期限、各种税费、工资支出、原料消耗、产值、利润、等等，何况公司还有其他的部门！</p><p><img src="https://bbs.spsspro.com/api/v2/files/1255" alt="image.png"></p><p>老板虐我千百遍，我待老板如初恋，再见了，我也该去寻找真正属于我的幸福了。可是工作做不完，晚上就没时间去寻找幸福了，作为一名专业首席财务官（公司唯一的会计），偷懒这件事情上我还没有输过谁，既然那么多变量，那我就把20个变量偷偷的变成5个变量，四舍五入我只要分析5个变量的数据，是时候打开微信约妹子了。</p><p><strong>废话结束，开启正文模式</strong></p><p>那哪些才是可选择的重要指标呢？这就是我们所说的数据降维，将原来20多个变量降到用3个或者5个变量来解释，并且这几个变量可以解释原数据的大部分信息（比如85%以上），且各个指标保持独立。</p><p>达到降维目的的方法有：主成分分析法和因子分析法，并且可以认为主成分分析法是因子分析的一个特例。</p><p>那么今天我们来详细讲解一下主成分分析法，包含原理+案例+操作，不想看原理的宝宝可直接跳到后面看案例。</p><h3 id="1-1-主成分分析法-PCA-的原理">1.1 主成分分析法(PCA)的原理</h3><p>主成分分析法是运用“降维”思想，把多个指标变换成少数综合指标的多元统计方法，这里的综合指标就是主成分。每个主成分都是原始变量的线性组合，彼此相互独立，并保留了原始变量绝大部分信息。其本质是通过原始变量的相关性，寻求相关变量的综合替代对象，并且保证了转化过程中的信息损失最小 。</p><p>主成分与原始变量之间的关系：</p><ol><li>主成分是原始变量的线性组合</li><li>主成分的数量相对于原始数量更少</li><li>主成分保留了原始变量的大部分信息</li><li>主成分之间相互独立</li></ol><h3 id="1-2-主成分分析法的应用步骤">1.2 主成分分析法的应用步骤</h3><h4 id="1-21-根据标准化后的数据集计算协方差矩阵Z">1.21 根据标准化后的数据集计算协方差矩阵Z:</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1258" alt="image.png"> <img src="https://bbs.spsspro.com/api/v2/files/1257" alt="image.png"></p><p>相关系数程度区分列如下面两个表所示：</p><p><img src="https://bbs.spsspro.com/api/v2/files/1259" alt="image.png"></p><h4 id="1-22-计算R的特征值及对应特征向量">1.22 计算R的特征值及对应特征向量</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1260" alt="image.png"></p><p>主成分分析的一个关键问题是：主成分的个数选多少个比较合适？</p><p>有3个主要的衡量标准：</p><ol><li>保留的主成分使得方差贡献率达到85%以上</li><li>保留的主成分的方差（特征值）大于1</li><li>碎石图绘制了关于各主成分及其特征值的图形，我们只需要保留图形中变化最大之处以上的主成分即可</li></ol><h2 id="2-主成分分析法应用实例">2 主成分分析法应用实例</h2><h3 id="2-1-背景介绍">2.1 背景介绍</h3><p>某金融服务公司为了了解贷款客户的信用程度，评价客户的信用等级，采用信用评级常用的 5C(能力，品格 ，担保 ，资本，环境)方法对15名客户进行打分， 由此判断客户违约的可能性。</p><ul><li>品格:指客户的名誉；</li><li>能力:指客户的偿还能力；</li><li>资本:指客户的财务实力和财务状况；</li><li>担保:指对申请贷款项担保的覆盖程度；</li><li>环境:指外部经济政策环境对客户的影响；</li></ul><p><img src="https://bbs.spsspro.com/api/v2/files/1261" alt="image.png"> 由于各项指标的难易程度不同，因此需要对5项指标进行赋权，以便能够更加合理的对15名客户进行评价。</p><h3 id="2-2-数据处理">2.2 数据处理</h3><h4 id="2-21-计算每一列的平均值">2.21 计算每一列的平均值</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1262" alt="image.png"></p><h4 id="2-22-计算每一列的标准差">2.22 计算每一列的标准差</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1263" alt="image.png"></p><p>例如能力该指标，我们计算其标准差</p><p><img src="https://bbs.spsspro.com/api/v2/files/1264" alt="image.png"></p><h4 id="2-23-数据标准化处理">2.23 数据标准化处理</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1265" alt="image.png"></p><p>例如客户1的能力该项指标，使用公式:</p><p><img src="https://bbs.spsspro.com/api/v2/files/1266" alt="image.png"></p><h4 id="2-24-计算相关系数矩阵">2.24 计算相关系数矩阵</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1267" alt="image.png"></p><p>例如品格与能力的相关系数，使用公式 :</p><p><img src="https://bbs.spsspro.com/api/v2/files/1268" alt="image.png"></p><h4 id="2-25-计算特征值">2.25 计算特征值</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1269" alt="image.png"></p><h4 id="2-26-计算特征向量">2.26 计算特征向量</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1270" alt="image.png"></p><h4 id="2-27-计算贡献率">2.27 计算贡献率</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1271" alt="image.png"></p><p>例如能力，我们使用公式</p><p><img src="https://bbs.spsspro.com/api/v2/files/1272" alt="image.png"></p><h4 id="2-28-计算累积贡献率">2.28 计算累积贡献率</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1273" alt="image.png"></p><h2 id="3、案例工具实现">3、案例工具实现</h2><h3 id="3-1使用工具">3.1使用工具</h3><h4 id="3-11-SPSSPRO—-【统计建模—-主成分分析（PCA）】">3.11 SPSSPRO—&gt;【统计建模—&gt;主成分分析（PCA）】</h4><h4 id="3-12案例操作">3.12案例操作</h4><p><img src="https://bbs.spsspro.com/api/v2/files/1274" alt="image.png"></p><p>Step1：新建项目；</p><p>Step2：上传数据；</p><p>Step3：选择对应数据打开后进行预览，确认无误后点击开始分析；</p><p><img src="https://bbs.spsspro.com/api/v2/files/1275" alt="image.png"></p><p>step4：选择【主成分分析】；</p><p>step5：查看对应的数据数据格式，【主成分分析】要求输入数据为放入 [定量] 自变量 X（变量数 ≥2）。</p><p>step6：选择主成分个数（注意：主成分个数的选择，依赖于个人能接受的最大主成分个数，而特征根选择则是根据设定的阈值为界限，以大于该界限对应的主成分个数作为选取的主成分个数，默认为 1。）</p><p>step7：点击【开始分析】，完成全部操作。</p><h4 id="3-13-分析结果解读">3.13 分析结果解读</h4><p>以下生成的结果来源于SPSSPRO软件的分析结果导出</p><p><strong>输出结果1：KMO检验和Bartlett的检验</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1276" alt="image.png"></p><p>*这两项检验是用来判断是否可以进行主成分分析。 对于KMO值：0.8上非常合适做主成分分析，0.7-0.8之间一般适合，0.6-0.7之间不太适合，0.5-0.6之间表示差，0.5下表示极不适合，对于 Bartlett的检验（p &lt; 0.05,严格来说p &lt; 0.01），若显著性小于0.05或0.01，拒绝原假设，则说明可以做主成分分析</p><p>KMO检验的结果显示，KMO的值为0.713，同时，Bartlett球形检验的结果显示，显著性P值为0.000***，水平上呈现显著性，拒绝原假设，各变量间具有相关性，主成分分析有效，程度为一般。</p><p><strong>输出结果2：方差解释表格</strong>*</p><p><img src="https://bbs.spsspro.com/api/v2/files/1277" alt="image.png"></p><p>方差解释表中，在主成分3时，总方差解释的特征根低于1.0，变量解释的贡献率达到97.1%，所以我们选择三个主成分是有效的。</p><p>在这里，特征根的值是按照从大到小进行排序。</p><p><strong>输出结果3：碎石图</strong>*</p><p><img src="https://bbs.spsspro.com/api/v2/files/1278" alt="image.png"></p><p>碎石图是根据特征值下降的坡度来确认需要选择的主成分个数，当曲线变得平缓时，对应的因子数就可以作为参考因子数。由图可知，从第三个主成分开始，主成分的特征根值开始缓慢的下降，且在满足主成分累积解释的贡献率达到 90%的情况下，我们可以选择三个主成分。</p><p><strong>输出结果4：因子载荷系数表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1279" alt="image.png"></p><p>上表可以分析到每个主成分中隐变量的重要性。 第一个主成分与能力、品格、资本、担保这四个变量的相关程度较大，可以概括为“个人信用品质”；第二个主成分主与环境这一个变量的相关程度较大，可以概括为“外部政策影响”。</p><p><strong>输出结果5：因子载荷矩阵热力图</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1280" alt="image.png"></p><p>上图可以分析到每个主成分中隐变量的重要性，热力图颜色越深说明相关性越大。第一个主成分与能力、品格、资本、担保这四个变量的相关程度较大，第二个主成分主与环境这一个变量的相关程度较大。</p><p><strong>输出结果6：因子载荷象限分析</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1281" alt="image.png"></p><p>因子载荷图通过将多因子降维成双主成分或者三主成分，通过象限图的方式呈现主成分的空间分布。如果提取 3 个主成分时，则呈现三维载荷因子散点图。（二维图三维图可以自行选择）</p><p><strong>输出结果7：成分矩阵表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1282" alt="image.png"></p><p>由上表可得到主成分分析降维后的计算公式：</p><p>F1=0.259×能力+0.276×品格+0.244×担保+0.276×资本+0.102×环境</p><p>F2=-0.301×能力-0.12×品格+0.355×担保-0.185×资本+0.743×环境</p><p>F3=1.004×能力+0.254×品格-1.724×担保-0.128×资本+1.238×环境</p><p>由上可以得到： F=(0.691/0.971)×F1+(0.245/0.971)×F2+(0.036/0.971)×F3</p><p><strong>输出结果8：因子权重分析</strong>*</p><p><img src="https://bbs.spsspro.com/api/v2/files/1283" alt="image.png"></p><p>主成分分析的权重计算结果显示，主成分1的权重为71.126%、主成分2的权重为25.192%、主成分3的权重为3.681%。</p><p><strong>输出结果9：综合得分表</strong></p><p><img src="https://bbs.spsspro.com/api/v2/files/1284" alt="image.png"></p><p>由图可知，其中第10位客户的综合得分最高，也就是他的信用等级最高，其次是第15位客户。</p><p><strong>注：</strong></p><p>主成分要求变量之间的共线性或相关关系比较强，否则不能通过 KMO 检验和 Bartlett 球形检验； 主成分分析倾向于降维，从而达到简化系统结构，抓住问题实质的目的。（可侧重于输出结果 2、输出结果 3、输出结果 8）； 主成分分析时通常需要综合自己的专业知识，以及软件结果进行综合判断，即使是特征根值小于 1，也一样可以提取主成分； KMO 值为 null 不存在可能导致的原因为：1）样本量过少容易导致相关系数过高，一般希望分析样本量大于 5 倍分析项个数； （2）各个分析项之间的相关关系过高或过低。</p><h2 id="4-结论">4.结论</h2><p>主成分分析作为一个非监督学习的降维方法，它只需要特征值分解，就可以对数据进行压缩，去噪。因此在实际场景应用很广泛。通过对原始变量进行综合与简化，可以客观地确定各个指标的权重，避免主观判断的随意性。并且不要求数据呈正态分布，其就是按数据离散程度最大的方向对基组进行旋转，这特性扩展了其应用范围，比如，用于人脸识别。但同时，其适用于变量间有较强相关性的数据，若原始数据相关性弱，则起不到很好的降维作用（必须通过KMO和Bartlett的检验），并且降维后，存在少量信息丢失，不可能包含100%原始数据，原始数据经过标准化处理之后，含义会发生变化，且主成分的解释含义较原始数据比较模糊。</p><h2 id="5-PCA过程讲解">5.PCA过程讲解</h2><p>当数据维度太大时，我们通常需要进行降维处理，降维处理的方式有很多种，PCA主成分分析法是一种常用的一种降维手段，它主要是基于方差来提取最有价值的信息，虽然降维之后我们并不知道每一维度的数据代表什么意义，但是它将主要的信息成分保留了下来，那么PCA是如何实现的呢？</p><p>我们首先要知道基坐标的概念，基坐标其实就是我们定义的坐标轴，我们平时最常用的基坐标便是X，Y坐标轴，如果我们重新定义了一个基坐标，那么原来的点就需要和新的坐标轴的单位向量做内积，这样才能得到新的坐标轴上点的坐标，这个过程就是基变换，其实就是把原来的点投影到我们重新定义的基坐标轴上。</p><p>因为上面我们说了基坐标的概念，那么我们如何选择一个基坐标才能尽量保留更多的信息呢？一种直观的看法就是希望投影后的投影值尽可能分散，为什么呢？因为我们把原来的数据投影到新的坐标轴上，数据只有尽可能分散，那么我们才能更好的将数据区分开来，所以我们就要寻找一个基，使得所有数据变换为这个基上的坐标后，方差值最大，其实就是数据最分散。</p><p>但是还有一个问题，如果我们单纯只是选择方差最大的方向，后续方向应该会和方差最大的方向接近重合，其实就是我们的基坐标轴会重合在一起，听不懂也没关系，我们只需要知道我们需要让基坐标的各个坐标轴垂直，不垂直就不好就可以了。</p><p>我们需要让基坐标的各个坐标轴垂直的话，那么就有了协方差的概念，协方差其实就是判断两个特征之间的关系，如果我们让协方差等于0，那么两个特征就不相关了，也就是它们对应的基坐标其实就垂直了。</p><p>这就是我们优化的目标：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将一组N维向量降为K维（K大于0，小于N），目标是选择K个单位正交基，使 原始数据变换到这组基上后，各字段两两间协方差为0，字段的方差则尽可能大。</span><br></pre></td></tr></table></figure><h2 id="6-Q-A">6.Q&amp;A</h2><h4 id="Q-A">Q&amp;A</h4><p><strong>Q：为什么要做中心化</strong><br>**A：**中心化并不属于预处理，而是 PCA 本身流程的一部分。如果数据其中某一特征（矩阵的某一列）的数值特别大，那么它在整个误差计算的比重上就很大，那么可以想象在投影到低维空间之后，为了使低秩分解逼近原数据，整个投影会去努力逼近最大的那一个特征，而忽略数值比较小的特征。因为在建模前我们并不知道每个特征的重要性，这很可能导致了大量的信息缺失。为了“公平”起见，防止过分捕捉某些数值大的特征，我们会对每个特征先进行标准化处理，使得它们的大小都在相同的范围内，然后再进行PCA。</p><p>减去均值等同于坐标移动，这样就能把原始数据点的中心移到与原点重合。</p><p>附：<br>标准化是将每个特征(即矩阵的每一列)减去均值并除以标准差。除以标准差是为了统一并消除量纲。<br>归一化仅仅是指除以标准差或类似意思。</p><p><strong>Q：为什么选协方差矩阵</strong><br>**A：**因为目标函数就是要让方差最大，让协方差最小</p><p><strong>Q：为什么要找特征值和特征向量</strong><br>**A：**当协方差矩阵分解为特征向量和特征值之后，特征向量表示着变换方向，而特征值表示着伸缩尺度。在PCA中，特征值描述着数据间的协方差。我们可以按照特征值的大小降序排列特征向量，如此我们就按照重要性的次序得到了主成分排列。</p><p><strong>Q：为什么要让协方差最小</strong><br>**A：**如果我们单纯只选择方差最大的方向，很明显，第二个选择的维度与第一个维度应该是“几乎重合在一起”，显然这样的维度是没有用的，因此，应该有其他约束条件。从直观上说，让不同尽可能表示更多的原始信息，我们是不希望它们之间存在（线性）相关性的，因为相关性意味着两个维度不是完全独立，必然存在重复表示的信息。</p><p><strong>Q：主元成份分析（PCA）对输入数据的要求?</strong><br><strong>A：</strong><br>1.线形性假设。<br>PCA的内部模型是线性的。这也就决定了它能进行的主元分析之间的关系也是线性的。现在比较流行的kernel-PCA的一类方法就是使用非线性的权值对原有PCA技术的拓展。<br>2.使用中值和方差进行充分统计。<br>使用中值和方差进行充分的概率分布描述的模型只限于指数型概率分布模型。（例如高斯分布），也就是说，如果我们考察的数据的概率分布并不满足高斯分布或是指数型的概率分布，那么PCA将会失效。在这种模型下，不能使用方差和协方差来很好的描述噪音和冗余，对教化之后的协方差矩阵并不能得到很合适的结果。事实上，去除冗余的最基础的方程是：其中 代表概率分布的密度函数。基于这个方程进行冗余去除的方法被称作独立主元分析(ICA)方法(Independent Component Analysis)。不过，所幸的是，根据中央极限定理，现实生活中所遇到的大部分采样数据的概率分布都是遵从高斯分布的。所以PCA仍然是一个使用于绝大部分领域的稳定且有效的算法。<br>3.大方差向量具有较大重要性。<br>PCA方法隐含了这样的假设：数据本身具有较高的信噪比，所以具有最高方差的一维向量就可以被看作是主元，而方差较小的变化则被认为是噪音。这是由于低通滤波器的选择决定的。<br>4.主元正交。PCA方法假设主元向量之间都是正交的，从而可以利用线形代数的一系列有效的数学工具进行求解，大大提高了效率和应用的范围。</p><p><strong>Q：输入需要满足高斯么？</strong><br>**A：**这个问题请教了大牛，因为有时数据的分布并不是满足高斯分布。在非高斯分布的情况下，PCA方法得出的主元可能并不是最优的。在寻找主元时不能将方差作为衡量重要性的标准。要根据数据的分布情况选择合适的描述完全分布的变量，然后根据概率分布式来计算两个向量上数据分布的相关性。等价的，保持主元间的正交假设，寻找的主元同样要使。这一类方法被称为独立主元分解(ICA)。</p><p><strong>Q：样本数和特征维数有要求么？</strong><br>**A：**pca降维不需要样本的个数大于特征的维数，没有特别要求，如果降维到30*29，这个是因为映射到另一个空间了，无需担心丢失了很多信息，并非特征选择直接丢掉了特征了，只是在另一个空间而已表达出原空间的高维。因此，要保证训练样本和测试样本被映射到同一个特征空间，这样才能保证数据的一致性。</p><p><strong>Q：样本数小于特征维数怎么办？</strong><br>**A：**假设在3维空间中有N=2个点，N个点来自维度为N-1的manifold，因为2个点必然在一条直线上，即这2个点得到1维子空间，它们的方差是“spread”在这个1维子空间上的，和样本的维度并没有什么关系。也就是说，N个样本的方差是spread在N-1维子空间上，即只有N-1个components。</p><p>举个例子来说，有两个点(1,1,1),(2,2,2)，根据PCA的投影步骤：<br>(1)找到新的坐标系统的原点(1.5,1.5,1.5)<br>(2)两个点到新坐标轴的投影距离尽可能小，此处为0<br>(3)第一个component将是从(0,0,0)到(3,3,3)的直线，这个直线是使样本点投影到它后方差最大的一条线<br>(4)第二个component方向必须和第一个component正交，这条线可能是从(0,0,3)到(3,3,0)，或者(0,3,0)到(3,0,3)，但无论向谁投影，这两个点投影后它们的方差为0.<br>当样本数小于样本维度时，出现的这种现象就是“the curse of dimensionality”</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分析模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊综合评价</title>
      <link href="/2022/09/08/%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7/"/>
      <url>/2022/09/08/%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7/</url>
      
        <content type="html"><![CDATA[<h1>模糊综合评价</h1><p>模糊综合评价的实质是通过“<a href="https://www.zhihu.com/search?q=%E9%9A%B6%E5%B1%9E%E5%BA%A6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A%2265802503%22%7D">隶属度</a>”的概念，来计算每一个要素的隶属度向量：虽不能给出准确的答案，但是可以给出要素处于某一状态的概率。<strong>个人的感觉，很像薛定谔方程用波函数来描述单个粒子处于某一位置的概率。</strong></p><p>模糊综合评价法并非是让二值逻辑的结果更客观，<strong>而是彻底摒弃了{0,1}的二值逻辑，改用[0,1]的区间取值来描述要素的状态</strong>，能把主观性的数据尽量客观化，<strong>方法的核心是模糊算子的选择</strong>，本质是一种数据处理的方法。</p><blockquote><p><strong>1.建立综合评价的因素集</strong><br><a href="https://i.loli.net/2020/02/04/iWFAPeQa3kc96Kt.png"><img src="https://i.loli.net/2020/02/04/iWFAPeQa3kc96Kt.png" alt="image.png"></a><br><strong>2.建立综合评价的评价集</strong><br><a href="https://i.loli.net/2020/02/04/Ar3expYbJXVCj7L.png"><img src="https://i.loli.net/2020/02/04/Ar3expYbJXVCj7L.png" alt="image.png"></a><br><strong>3.进行单元素模糊评价，获得评价矩阵</strong><br><a href="https://i.loli.net/2020/02/04/pH26unJlESLYKZ9.png"><img src="https://i.loli.net/2020/02/04/pH26unJlESLYKZ9.png" alt="image.png"></a><br><strong>4.确定因素权向量</strong><br><a href="https://i.loli.net/2020/02/04/WN4a9Knukd5oh1H.png"><img src="https://i.loli.net/2020/02/04/WN4a9Knukd5oh1H.png" alt="image.png"></a><br><strong>5.建立综合评价模型</strong><br><a href="https://i.loli.net/2020/02/04/OIoYlxQjsV1greF.png"><img src="https://i.loli.net/2020/02/04/OIoYlxQjsV1greF.png" alt="image.png"></a><br><a href="https://i.loli.net/2020/02/04/njQg5yq93vuCXYN.png"><img src="https://i.loli.net/2020/02/04/njQg5yq93vuCXYN.png" alt="image.png"></a><br><strong>6.确定系统总得分</strong><br><a href="https://i.loli.net/2020/02/04/dLfOj9tx2JHqBP5.png"><img src="https://i.loli.net/2020/02/04/dLfOj9tx2JHqBP5.png" alt="image.png"></a><br><strong><a href="https://zhuanlan.zhihu.com/p/32666445">https://zhuanlan.zhihu.com/p/32666445</a></strong></p></blockquote><h3 id="隶属度函数选取与构造">隶属度函数选取与构造</h3><blockquote><p>常用的方法：<strong>直觉方法，二元对比排序法，模糊统计试验法，最小模糊度法</strong>（根据先验知识和采集的数据，确定出描述模糊概念的候选隶属函数，利用最小化模糊度的原则计算相关的参数，进而获得合适的隶属函数）。<br>下面介绍三种最常用的隶属度函数：<strong>三角形隶属度函数、梯形隶属度函数、高斯型隶属度函数：</strong><br><strong>三角形隶属度函数</strong><br><a href="https://i.loli.net/2020/02/04/GUTEVZDzRcYHXv3.png"><img src="https://i.loli.net/2020/02/04/GUTEVZDzRcYHXv3.png" alt="image.png"></a><br><strong>梯形隶属度函数</strong><br><a href="https://i.loli.net/2020/02/04/TmEJY6WvuNxO23t.png"><img src="https://i.loli.net/2020/02/04/TmEJY6WvuNxO23t.png" alt="image.png"></a><br><strong>高斯型隶属度函数</strong><br><a href="https://i.loli.net/2020/02/04/uqkzCd7jrvbMpmw.png"><img src="https://i.loli.net/2020/02/04/uqkzCd7jrvbMpmw.png" alt="image.png"></a><br><strong><a href="https://zhuanlan.zhihu.com/p/37616833">https://zhuanlan.zhihu.com/p/37616833</a></strong></p></blockquote><h1>模糊综合评价是用各个区别来评价，具体权重可使用层次分析法。</h1><p>各个取权重方法：</p><p><img src="https://pic2.zhimg.com/80/v2-58abf2aa3dc8ecb23ed28cffe9ceb18f_720w.jpg" alt="img"></p><h2 id="可参考论文：">可参考论文：</h2><p><a href="http://www.huaxuejia.cn/ism/good_paper/001.pdf">001.pdf (huaxuejia.cn)</a></p><p>上面一篇就是模糊综合评价的论文。</p><p>用ANP求得权重。</p><p><img src="https://pic1.zhimg.com/80/v2-0e82c7b05571dc08cd34edda35396c38_720w.jpg?source=1940ef5c" alt="img"></p><p>第58页开始就是模糊综合评价。</p><p>上面是10个专家的评分情况，把牛逼，非常好，垃圾等评语转化成数值型。</p><p><img src="https://pic1.zhimg.com/50/v2-1517f943bc858fc6659c038d23ef37ea_720w.jpg?source=1940ef5c" alt="img"><img src="https://pic1.zhimg.com/80/v2-1517f943bc858fc6659c038d23ef37ea_720w.jpg?source=1940ef5c" alt="img"></p><p>63页就是给出结果。</p><h2 id="优缺点">优缺点</h2><h3 id="优点：">优点：</h3><ul><li>结果清晰，</li><li>系统性强</li><li>能较好地解决模糊的、难以量化的问题</li><li>适合各种非确定性问题的解决。</li></ul><p>模糊综合评价法的优点</p><p>(1)模糊评价通过精确的数字手段处理模糊的评价对象，能对蕴藏信息呈现模糊性的资料作出比较科学、合理、贴近实际的量化评价；</p><p>(2)评价结果是一个矢量，而不是一个点值，包含的信息比较丰富，既可以比较准确的刻画被评价对象，又可以进一步加工，得到参考信息。</p><h3 id="缺点：">缺点：</h3><p>(1)计算复杂，对指标权重矢量的确定主观性较强；</p><p>(2)当指标因素集U UU较大，即指标集个数凡较大时，在权矢量和为1的条件约束下，相对隶属度权系数往往偏小，权矢量与模糊矩阵R不匹配，结果会出现超模糊现象，分辨率很差，无法区分谁的隶属度更高，甚至造成评判失败，此时可用分层模糊评估法加以改进。</p><h2 id="相关术语">相关术语</h2><p>1．评价因素（F）：是指对招标项目评议的具体内容（例如，价格、各种指标、参数、规范、性能、状况，等等）。</p><p>为便于权重分配和评议，可以按评价因素的属性将评价因素分成若干类（例如，商务、技术、价格、伴随服务，等），把每一类都视为单一评价因素，并称之为第一级评价因素（F1）。第一级评价因素可以设置下属的第二级评价因素（例如，第一级评价因素“商务”可以有下属的第二级评价因素：交货期、付款条件和付款方式，等）。第二级评价因素可以设置下属的第三级评价因素（F3）。依此类推。</p><p>2．评价因素值（Fv）：是指评价因素的具体值。例如，某投标人的某技术参数为120，那么，该投标人的该评价因素值为120。</p><p>3．评价值（E）：是指评价因素的优劣程度。评价因素最优的评价值为1（采用百分制时为100分）；欠优的评价因素，依据欠优的程度，其评价值大于或等于零、小于或等于1（采用百分制时为100分），即0≤E≤1（采用百分制时0≤E≤100）。</p><p>4．平均评价值（Ep）：是指评标委员会成员对某评价因素评价的平均值。</p><p>平均评价值（Ep）=全体评标委员会成员的评价值之和÷评委数</p><p>5．权重（W）：是指评价因素的地位和重要程度。</p><p>第一级评价因素的权重之和为1；每一个评价因素的下一级评价因素的权重之和为1 。</p><p>6．加权平均评价值（Epw）：是指加权后的平均评价值。</p><p>加权平均评价值（Epw）=平均评价值（Ep）×权重（W）。</p><p>7．综合评价值（Ez）：是指同一级评价因素的加权平均评价值（Epw）之和。综合评价值也是对应的上一级评价。</p><h2 id="推荐博客">推荐博客</h2><p><a href="http://t.csdn.cn/H7LGr">http://t.csdn.cn/H7LGr</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评价模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>规划算法</title>
      <link href="/2022/09/08/%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>规划算法</h1><h2 id="前言">前言</h2><p>随着机器人技术、智能控制技术、硬件传感器的发展，机器人在工业生产、军事国防以及日常生活等领域得到了广泛的应用。而作为机器人行业的重要研究领域之一，移动机器人行业近年来也到了迅速的发展。移动机器人中的路径规划便是重要的研究方向。移动机器人的路径规划方法主要分为传统的路径规划算法、基于采样的路径规划算法、智能仿生算法。传统的路径规划算法主要有A算法、Dijkstra算法、D算法、人工势场法，基于采样的路径规划算法有PRM算法、RRT算法，智能仿生路径规划算法有神经网络算法、蚁群算法、遗传算法等。</p><p><img src="http://a1.qpic.cn/psc?/V12XQ1QV3cpyPD/ruAMsa53pVQWN7FLK88i5uGjm7E2E.Xd6x6VWLqZ6JH73cViDfxum2J5dBYHYTWczBVrOka0RsbahR9ZOZCEcrjHR9i50rrB3.qj42RA25o!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=NwIpAQAAAAADFy8!&amp;tl=1&amp;vuin=1005741898&amp;tm=1658455200&amp;dis_t=1658457012&amp;dis_k=80974f44f7c70f3bf82f7beb7b877ba9&amp;sce=60-2-2&amp;rf=viewer_4" alt="img"></p><h2 id="传统路径规划算法">传统路径规划算法</h2><h2 id="1-Dijkstra算法">1.<a href="https://so.csdn.net/so/search?q=Dijkstra%E7%AE%97%E6%B3%95&amp;spm=1001.2101.3001.7020">Dijkstra算法</a></h2><p>Dijkstra算法是Edsger Wybe Dijkstra在1956年提出的一种用来寻找图形中结点之间最短路径的算法。Dijkstra算法的基本思想是贪心思想，主要特点是以起始点为中心向外层层扩展，直到扩展到目标点为止。Dijkstra算法在扩展的过程中，都是取出未访问结点中距离该点距离最小的结点，然后利用该结点去更新其他结点的距离值。<br>Dijkstra算法流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.将初始点s放入到集合S中，初始时集合S中只有s；</span><br><span class="line">2.无自环的初始点s到自己的最短路径为0；</span><br><span class="line">3.For（目标点ei不在集合S中）：</span><br><span class="line">4.   计算集合S中以外的所有结点到集合S中结点的最短距离，即从s出发，到达所有结点且只允许通过初始点s的最短路径。如果没有直达的通路，那么就设置为无穷，意味着暂时到达不了的结点。</span><br><span class="line">5.While（集合V-S不是空集）：</span><br><span class="line">6.   选出第一次for循环之后在集合V-S中，且相对于集合S的最短路径中距离最短的目标点ej。</span><br><span class="line">7.   将该目标点ej并入到集合S中。</span><br><span class="line">8.   将目标点ej并入集合S之后会对V-S以外的顶点相对于集合S的最短路径长度产生影响。</span><br><span class="line">9.   For（更新S中的结点路径）</span><br><span class="line">10.      If（dist[s,ej]+wj,i &lt; dist[s,ei]）</span><br><span class="line">11.         dist[s,ei] = dist[s,ej]+wj,i</span><br></pre></td></tr></table></figure><p>注：该算法不允许图中存在负权边。</p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/ruAMsa53pVQWN7FLK88i5rjTJ4P3sWPbRRBCHCNSeW94NYcHm9fev2BvFSd1FAiZhzDKRv1LjT6nKNUjIhArcqhngXz9YEb3ELz94NQ4dgg!/b&amp;bo=0AJdAQAAAAACN50!&amp;rf=viewer_4" alt="img"></p><p>优点：<br>1） 如果最优路径存在，那么一定能找到最优路径<br>缺点：<br>1） 有权图中可能是负边<br>2） 扩展的结点很多，效率低</p><h3 id="2-A-算法">2.A*算法</h3><p>A<em>算法发表于1968年，A</em>算法是将Dijkstra算法与广度优先搜索算法（BFS）二者结合而成，通过借助启发式函数的作用，能够使该算法能够更快的找到最优路径。A<em>算法是静态路网中求解最短路径最有效的直接搜索方法。A</em>算法的启发式函数：f(n)=g(n)+h(n)</p><p>f(n)表示结点的综合优先级，在选择结点时考虑该结点的综合优先级；<br>g(n)表示起始点到当前结点的代价值；<br>h(n)表示当前结点到目标点的代价估计值，启发式函数。</p><p>当h(n)趋近于0时，此时算法退化为Dijkstra算法，路径一定能找到，但速度比较慢；当g(n)趋近于0时，算法退化为BFS算法，不能保证一定找到路径，但速度特别快。我们可以通过调节h(n)的大小来调整算法的精度与速度。<br>在A算法中，采用最多的是欧几里得距离，即dist = srqt((y2-y1)2+(x2-x1)2)。<br>A算法流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.将起始点s加入到开启列表openlist中</span><br><span class="line">2.重复以下过程：</span><br><span class="line">a)遍历开启列表openlist，寻找F值最小的结点，并将其作为当前要处理的结点</span><br><span class="line">b)将要处理的结点移到关闭列表closelist</span><br><span class="line">c)对当前结点的8个相邻结点的每个结点：</span><br><span class="line">i.如果他是不可抵达的或者已经在关闭列表closelist中，忽略； </span><br><span class="line">ii.如果他不在开启列表openlist中，将其加入openlist，并把当前结点设置为其父节点，记录当前结点的F、G、H值；</span><br><span class="line">iii.如果他已经在开启列表openlist中，检查这条路径（即经由当前结点到达相邻结点）是否更好，用G值做参考，更小的G值表示这个更好的路径，如果是这样，将其父节点设置为当前结点，并重新计算他的G值和F值，如果开启列表openlist是按F值进行排序，改变后需要重新排序。</span><br><span class="line">d)停止，当</span><br><span class="line">i.终点加入到了开启列表openlist中，此时路径已经找到</span><br><span class="line">ii.查找重点失败，并且开启列表openlist中是空的，此时没有路径</span><br><span class="line">3.保存路径，从终点开始，每个结点沿着其父节点移动直到起点。</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5qzWZEsi8M92IMB.cuIBcBTKuyDnt.I7i3ZnjKM3JynMNUVotCRUokba9So9NPVxASW6BvEYbDGvyJuk4uk2vIs!/b&amp;bo=JgHdAAAAAAABB9o!&amp;rf=viewer_4" alt="img"></p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5qrzfmRpXP9qnoSM4GDTu3IPKQJ67CSeR41gFzWLm738ksZLxmPVuEJp4B5BGteBp8yxrPzHig.o7XviQhcMCCk!/mnull&amp;bo=.gDjAAAAAAABBzk!&amp;rf=photolist&amp;t=5" alt="img"></p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5qrzfmRpXP9qnoSM4GDTu3KmcEC1F9M0V5LQMFO.RJfAXeJwyutv140OWhrOTTx8dfawULjWKQfA7HJX*JSc4D8!/mnull&amp;bo=FAEgAQAAAAABBxQ!&amp;rf=photolist&amp;t=5" alt="img"></p><p>优点：<br>1） 利用启发式函数，搜索范围小，提高了搜索效率<br>2） 如果最优路径存在，那么一定能找到最优路径<br>缺点：<br>1） A<em>算法不适用于动态环境2） A</em>算法不太适合于高维空间，计算量大<br>3） 目标点不可达时会造成大量性能消耗</p><h3 id="3-D算法">3.D算法</h3><p>D算法是卡耐基梅隆机器人中心的Stentz在1994年提出的主要用于机器人探路，并且美国火星探测器上就是应用的D<em>路径规划算法。A</em>算法适用于在静态路网中寻路，在环境变化后，往往需要replan，由于A<em>不能有效利用上次计算的信息，故计算效率较低。D</em>算法由于储存了空间中每个点到终点的最短路径信息，故在重规划时效率大大提升。A*是正向搜索，而D特点是反向搜索，即从目标点开始搜索过程。在初次遍历时候，与Dijkstra算法一致，它将每个节点的信息都保存下来。</p><p><code>D*</code>算法流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1.先用Dijkstra算法从目标节点G向起始节点搜索。储存路网中目标点到各个节点的最短路和该位置到目标点的实际值h，k（k为所有变化h之中最小的值，当前为k=h）原OPEN和CLOSE中节点信息保存。</span><br><span class="line">2.机器人沿最短路开始移动，在移动的下一节点没有变化时，无需计算，利用上一步Dijkstra计算出的最短路信息从出发点向后追述即可，当在Y点探测到下一节点X状态发生改变，如堵塞。机器人首先调整自己在当前位置Y到目标点G的实际值h（Y），h（Y）=X到Y的新权值C（X，Y）+X的原实际值h（X）。X为下一节点（到目标点方向Y-&gt;X-&gt;G），Y是当前点。K值去h值变化前后的最小。</span><br><span class="line">3.用A*或其他算法计算，这里假设用A*算法，遍历Y的子节点，放入CLOSE，调整Y的子节点a的h值，h（a）=h（Y）+Y到子节点a的权重C（Y，a），比较a点是否存在于OPEN和CLOSE中，方法如下：用A*或者其他算法计算，这里假设用A*算法，遍历Y的子节点，放入CLOSE，调整Y的子节点a的h值，h（a）=h（Y）+Y到子节点a的权重C（Y，a），比较a点是否存在于OPEN和CLOSE中，方法如下：</span><br><span class="line">while()</span><br><span class="line">&#123;</span><br><span class="line">从OPEN表中取k值最小的节点Y;</span><br><span class="line">遍历Y的子节点a,计算a的h值 h(a)=h(Y)+Y到子节点a的权重C(Y,a)</span><br><span class="line">&#123;</span><br><span class="line">    if(a in OPEN)     比较两个a的h值 </span><br><span class="line">    if( a的h值小于OPEN表a的h值 )</span><br><span class="line">    &#123;</span><br><span class="line">更新OPEN表中a的h值;k值取最小的h值</span><br><span class="line">          有未受影响的最短路经存在</span><br><span class="line">          break; </span><br><span class="line">    &#125;</span><br><span class="line">    if(a in CLOSE) 比较两个a的h值 //注意是同一个节点的两个不同路径的估价值</span><br><span class="line">    if( a的h值小于CLOSE表的h值 )</span><br><span class="line">    &#123;</span><br><span class="line">更新CLOSE表中a的h值; k值取最小的h值;将a节点放入OPEN表</span><br><span class="line">       有未受影响的最短路经存在</span><br><span class="line">       break;</span><br><span class="line">    &#125;</span><br><span class="line">    if(a not in both)</span><br><span class="line">        将a插入OPEN表中;　//还没有排序</span><br><span class="line">&#125;</span><br><span class="line">放Y到CLOSE表；</span><br><span class="line">OPEN表比较k值大小进行排序；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5jdxg7pj4rCA2IeLJrAGjYOl0XyBZ*auzyYB6qjDWBjob2jrum*f8vqGcg5F8FRROWo8wRQO.xmMEdVKR2D12uU!/mnull&amp;bo=fgLMAQAAAAACB5I!&amp;rf=photolist&amp;t=5" alt="img"></p><p>优点：<br>1）适用于动态环境的路径规划，搜索效率高<br>缺点：<br>1） 不适用于高维空间，计算量大<br>2） 不太适用于在距离较远的最短路径上发生变化的场景</p><h3 id="4-人工势场法">4.人工势场法</h3><p>人工势场法是由Khatib在1985年提出的一种基于虚拟力场的局部路径规划算法，该算法的基本思想是当机器人在周围环境中运动时，将环境设计成一种抽象的人造引力场，目标点对移动机器人产生“引力”，障碍物对移动机器人产生“斥力”，最后通过二者的合力来控制移动机器人的运动。应用人工势场法规划出来的路径一般是比较平滑并且安全的，但是存在着局部最优的问题。<br>利用势场函数U来建立人工势场，势场函数是一种可微函数，空间中某点处势场函数值的大小，代表了该点的势场强度。我们采用引力势场函数与斥力势场函数，用U（q）表示二者之和。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>U</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>U</mi><mrow><mi>a</mi><mi>t</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U(q)=U_{a t t}(q)+U_{r e p}(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">tt</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>引力势场函数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>U</mi><mtext>attr </mtext></msub><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>ξ</mi><msup><mi>ρ</mi><mn>2</mn></msup><mrow><mo fence="true">(</mo><mi>q</mi><mo separator="true">,</mo><msub><mi>q</mi><mtext>goal </mtext></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">U_{\text {attr }}(q)=\frac{1}{2} \xi \rho^{2}\left(q, q_{\text {goal }}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">attr </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">goal </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>e表示引力增益，p(q,qgoal)表示当前点到目标点的距离；<br>斥力势场函数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>U</mi><mrow><mi>r</mi><mi>e</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>ρ</mi><mrow><mo fence="true">(</mo><mi>q</mi><mo separator="true">,</mo><msub><mi>q</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>&gt;</mo><msub><mi>ρ</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>η</mi><msup><mrow><mo fence="true">(</mo><mfrac><mn>1</mn><mrow><mi>ρ</mi><mrow><mo fence="true">(</mo><mi>q</mi><mo separator="true">,</mo><msub><mi>q</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mfrac><mo>−</mo><mfrac><mn>1</mn><msub><mi>ρ</mi><mn>0</mn></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>ρ</mi><mrow><mo fence="true">(</mo><mi>q</mi><mo separator="true">,</mo><msub><mi>q</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo fence="true">)</mo></mrow><mo>≤</mo><msub><mi>ρ</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">U_{r e p}(q)\left\{\begin{array}{cc}0 &amp; \rho\left(q, q_{o b s}\right)&gt;\rho_{0} \\\frac{1}{2} \eta\left(\frac{1}{\rho\left(q, q_{o b s}\right)}-\frac{1}{\rho_{0}}\right)^{2} &amp; \rho\left(q, q_{o b s}\right) \leq \rho_{0}\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.204em;vertical-align:-1.352em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.852em;"><span style="top:-4.366em;"><span class="pstrut" style="height:3.354em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.652em;"><span class="pstrut" style="height:3.354em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ρ</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.354em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.352em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.852em;"><span style="top:-4.366em;"><span class="pstrut" style="height:3.354em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.652em;"><span class="pstrut" style="height:3.354em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.352em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>n表示斥力增益，p(q,qgoal)表示当前点到障碍物的距离，p0表示障碍物作用距离阈值。</p><p>优点：<br>1） 规划出的路径一般是比较平滑且安全<br>2） 人工势场法是一种反馈控制策略，具有一定的鲁棒性<br>缺点：<br>1） 容易陷入局部最优的问题<br>2） 距离目标点较远时，引力特别大，斥力相对较小，可能会发生碰撞<br>3） 当目标点附近有障碍物时，斥力非常大，引力较小，很难到达目标点</p><h2 id="二、基于采样路径规划算法">二、基于采样路径规划算法</h2><h2 id="1-PRM算法">1.PRM算法</h2><p>随机路线图（PRM）算法是一种基于图搜索的算法，可以将连续状态空间转换成离散状态空间，在利用A＊等搜索算法在路线图上寻找路径，提高搜索效率。PRM算法是概率完备且不是最优的算法。<br>PRM算法流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.初始化，设G（V，E）为一个无向图，其中顶点集V代表无碰撞的状态点，连线集E代表无碰撞的路径。初始状态为空。</span><br><span class="line">2.状态点采样，在状态空间中采样无碰撞的状态点加入到无碰撞的状态点V中。</span><br><span class="line">3.邻域计算，定义距离p，对于已经存在于无碰撞的状态点V中的点，如果他与无碰撞的点的距离小于p，则将其称作无碰撞状态点的邻域点。</span><br><span class="line">4.边线连接，将无碰撞的状态点与其邻域相连，生成连线。</span><br><span class="line">5.碰撞检测，检测连线是否与障碍物发生碰撞，如果无碰撞，则将其加入到连线集E中。</span><br><span class="line">6.结束条件，当所有采样点均已完成上述步骤后结束，否则重复2~5。</span><br><span class="line">7.最后使用A*算法在路线图上寻找最优路径。</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5rT.6XgE9qMbv7qpZkbprTfwyRg3E3mDhswFma4S2xFbRuuDMmuAt4xOnu3Zy.HAMeB0AXBpZlFq93ew7VAuxYA!/b&amp;bo=*AFnAQAAAAACF6g!&amp;rf=viewer_4" alt="img"></p><p>优点：<br>1） 适用于高维空间和复杂约束的路径规划问题<br>2） 搜索效率高，搜索速度快<br>缺点：<br>1）概率完备但不是最优</p><h3 id="2-RRT算法">2.RRT算法</h3><p>RRT算法是适用于高维空间，通过对状态空间中的采样点进行碰撞检测，避免了对空间的建模，较好的处理带有非完整约束的路径规划问题，有效的解决了高维空间和复杂约束的路径规划问题。该算法是概率完备但不是最优的算法。</p><p>RRT算法以初始点qinit作为根节点，通过随机采样增加叶子节点的方式，生成一个随机扩展树，当目标点位于随机扩展树上时，能够找到一天初始点到目标点的路径。首先，需要从状态空间中随机选择一个采样点qrand，然后从随机树中选择一个距离qrand最近的结点qnearest，从qnearest向qrand扩展一个步长的距离，得到一个新的结点qnew，如果qnew与障碍物发生碰撞，则返回空；否则，将qnew加入到随机树中，重复上述步骤直到qnearest和qgoal距离小于一个阈值。<br><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5uGjm7E2E.Xd6x6VWLqZ6JH5zhpzqlttYZubIi9IOMELsUwqSaYIRpKv1RNsmj5Fd7uE0ib1t8U*hIm.DLL5zUc!/b&amp;bo=wgHCAQAAAAACByM!&amp;rf=viewer_4" alt="img"></p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5pdu5oCPm1yC.xULnWwGncroHqZODzppCOYIpBpHNchglD2XgUH96hGvcloGfIFA*bQFcjFR8l.WzbpnkKxrC.M!/b&amp;bo=wgHCAQAAAAACByM!&amp;rf=viewer_4" alt="img">优点：</p><p>优点：</p><p>1） 搜索效率比较高，搜索速度比较快<br>2） 适用于高维空间，不会产生维度灾难的问题<br>3） 只需对状态空间采样点进行碰撞检测，避免了对空间的建模</p><p>缺点：</p><p>1） 规划出的路径质量一般，可能存在棱角、不够光滑<br>2） RRT算法不太适用于存在狭长空间的环境<br>3） 规划出的路径可能不是最优路径<br>4） 不适用于动态环境的路径规划</p><h2 id="三、智能仿生算法">三、智能仿生算法</h2><h3 id="1-神经网络算法">1.神经网络算法</h3><p>优点：<br>1） 适合于动态复杂环境<br>2） 适用于高维空间，避免维度灾难的问题<br>缺点：<br>1） 对硬件的要求比较高<br>2） 参数调节比较困难</p><h3 id="2-蚁群算法">2.蚁群算法</h3><p>蚁群算法（Ant Colony Optimization，ACO）是Dorigo在1992年提出的一种用来寻找优化路径的概率型算法，是由一群无智能或有轻微智能的个体通过相互写作而表现出智能行为，为求解复杂问题提供了一个新的可能性。该算法的主要思想是蚂蚁在寻找食物过程中发现路径的行为。该算法具有分布计算、信息正反馈和启发式搜索的特征，本质上是进化算法中的一种启发式全局优化算法。<br>蚁群算法的基本原理是利用蚂蚁在觅食过程中会释放信息素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.初始时刻，路径没有任何信息素，蚂蚁会以一定的随机性选择任意方向</span><br><span class="line">2.更新信息素矩阵，当有信息素时，蚂蚁会优先选择信息素浓度高的路径</span><br><span class="line">3.那么在相同时间内，信息素的浓度与路径长度成反比，越短的路径会有更多的信息素，那么后续的蚂蚁会选择信息素浓度高的路径，最优路径上的信息素浓度会越来越高</span><br><span class="line">4.随着时间的推移，信息素会自行挥发</span><br><span class="line">5.最终，能选择出一条最优路径即信息素浓度高的路径</span><br></pre></td></tr></table></figure><p>影响蚁群算法的因素：<br>1） 信息素如何撒播<br>2） 信息素如何挥发<br>3） 以何种方式让蚂蚁选择运动方向，减少盲目性和不必要性<br>4） 给予蚂蚁和环境一定的记忆能力能够帮助减少搜索空间<br>个体分布越均匀，种群多样性就越好，得到全局最优解的概率就越大，但是寻优时间就越长；个体分布越集中，种群多样性就越差，不利于发挥算法的探索能力。正反馈加快了蚁群算法的收敛速度，却使算法较早地集中于部分候选解，因此正反馈降低了种群的多样性，也不利于提高算法的全局寻优能力。<br><img src="http://m.qpic.cn/psc?/V12XQ1QV2XlKPv/ruAMsa53pVQWN7FLK88i5pdu5oCPm1yC.xULnWwGncqpYaAMKuNoQeVXoYsKZPOBpjgJ1fDr3cJKT49AFYogelVv1gPBy.T7b8HZoAZw6jg!/mnull&amp;bo=WwH0AAAAAAADB4w!&amp;rf=photolist&amp;t=5" alt="img"></p><p>优点：<br>1） 蚁群算法的鲁棒性强<br>2） 采用正反馈机制，能够逼近最优解<br>3） 易与其他算法进行结合<br>缺点：<br>1） 盲目的随机搜索，搜索时间较长，搜索速度慢<br>2） 蚁群算法容易陷入局部最优<br>3） 蚁群算法参数的选择依赖于经验或试错</p><h3 id="3-遗传算法">3.遗传算法</h3><p>遗传算法（Genetic Algorithm，GA）是由John Holland于20世纪70年代提出，该算法是根据大自然中生物体进化规律而设计提出的，来模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。其本质是一种高效、并行、全局搜索的方法，能在搜索过程中自动获取和积累有关搜索空间的知识，并自适应地控制搜索过程以求得最佳解。</p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/ruAMsa53pVQWN7FLK88i5hxcI9YFYZf8uDa7rxRl27GqrEcJMDcHY2GuI2qlJdngDf8ZeMeq0APTSwS5WYkEohohtoTj*yg4ETbgh4pHw*c!/b&amp;bo=ywAIAQAAAAABB.I!&amp;rf=viewer_4" alt="img"></p><p>遗传算法的流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.评估每条染色体所对应个体的适应度</span><br><span class="line">While（未找到满意的解）：</span><br><span class="line">2.遵照适应度越高，选择概率越大的原则，从种群中选择两个个体作为父方和母方</span><br><span class="line">3.抽取父母双方的染色体，进行交叉，产生子代</span><br><span class="line">4.对子代的染色体进行变异</span><br></pre></td></tr></table></figure><p>优点：</p><p>1） 遗传算法具有广泛的应用领域<br>2） 遗传算法具有群体搜索的特性<br>3） 遗传算法基于概率规则，搜索更为灵活</p><p>4） 遗传算法直接以目标函数作为搜索信息，不涉及目标函数值求微分的过程</p><p>缺点：</p><p>1） 遗传算法效率比较低</p><p>2） 遗传算法容易过早收敛<br>3） 遗传算法在编码时容易出现不规范不准确的问题</p><h2 id="优秀博客">优秀博客</h2><p><a href="https://blog.csdn.net/qq_45875106/article/details/121314604">https://blog.csdn.net/qq_45875106/article/details/121314604</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 规划算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>层次分析法ahp</title>
      <link href="/2022/09/08/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95ahp/"/>
      <url>/2022/09/08/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95ahp/</url>
      
        <content type="html"><![CDATA[<h1>层次分析法(AHP)</h1><h2 id="定义：">定义：</h2><p>通过构建一套多层次的评价指标体系，完成对定性指标的定量化分析。</p><h2 id="运用范围：">运用范围：</h2><p>运用于多目标、多准则、多要素、多层次的非结构化的复杂决策问题，特别是战略决策问题，可以较好地解决多要素相互关联、相互制约的复杂系统的评价。</p><p>比如： 旅游出行，评定信用，多角度评价产品优劣。</p><p>举个栗子：如TA爱你的程度，可以用联系你的频率、关心你的程度、为你付出时间、为你付出的购买力等因素。先对这几个指标进行权重赋值，随后结合你的TA这些指标相应的得分，进行权重*得分的乘积运算，并将所有要素进行加和，即可得到TA爱你的程度（指数，手动狗头·-·）</p><p>在实际工作中，层次分析法经常和德尔菲法、百分权重法结合，用于确定评价指标的权重。</p><h2 id="历史案例">历史案例</h2><p>1971年AHP首次应用于美国国防部研究“应急计划”，随后又开展了多项研究，奠定了AHP在定性研究领域的基础，1982年AHP在“中美能源、资源、环境”学术会议上被首次介绍到中国。</p><p>喵博士结合相关研究现状，梳理了当前主要涉及领域应用如下：适宜性评价、环境保护措施评价、安全性评价、危化物危害性评价、城市应急灾害能力评价、空间格局安全性评价。同时，亦可用于指导消费者在生活领域决策提供一定指导，如购房影响因素评价、购车影响因素评价、专业选择与就业倾向评价等，均可以发挥其优秀的功效。</p><p><img src="https://pics5.baidu.com/feed/4ec2d5628535e5ddac99dde8547069eacf1b628f.jpeg?token=256692222f730ac8d72ecd9c8bd9af5a&amp;s=1E2870238D2178135A7CB1DB0100C0B2" alt=""></p><p>如在居住区适宜性评价（如上图）时，根据既有研究成效，居住区园林景观适宜性评价可以划分为：绿化种植景观、道路景观、场所景观、硬质景观、水景景观和庇护性景观等六个一级指标（准则层），每个一级指标又可以细分为若干二级指标，以完成定性指标的定量化分析。</p><h2 id="分析方法">分析方法</h2><p>基于层次分析法（AHP）先分解后综合的基本工作思路，先将要分析的要素进行层次化、步骤化，构建形成多层次分析评价模型，最终确定各层级指标的重要程度（权重），或优先次序。</p><p>AHP把一个复杂的问题表示为一个有序的递阶层次结构，并通过主管判断和科学计算给出备选方案的优劣顺序（或权重）。简而言之，层次分析法人如其名，首先要构建合理的层次，其次要分析层次内部各因素的优劣。</p><p>层次分析法的使用流程：</p><ol><li><p>根据需求对目标层进行分解，如适宜性可以分解为6个一级指标；</p></li><li><p>建立层次结构图，及判断矩阵；</p></li><li><p>计算权重系数（主要基于德尔菲法，或曰专家打分，对各指标要素的权重进行赋值）；</p></li><li><p>进行一致性检验（在AHP软件中可自行设定），若一致性指标CR&lt;0.1，则满足研究需要，进入下一环节。不满足时则需要对各指标权重重新赋值（重新进行第三步分析）；</p></li><li><p>层次总排序，选出最优方案。</p></li></ol><p>分三层一般：目标层，准则层，方案层</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d476b972c13221d3e1223b1fd5d6782b.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/30dd8e4cdafed2d56d337794fa610dcb.png" alt="img"></p><p><img src="https://pics1.baidu.com/feed/21a4462309f7905213c9b0422e4519cf7acbd530.jpeg?token=1678b5a7bb443bebefbcd12957df63e3&amp;s=5AA8346319DFC0CA5E5DB1CB0000E0B1" alt=""></p><p>如在评价购房影响要素时，可以细分为房价要素、区位要素、户型要素、口碑要素等一级指标，并分别对各一级要素进行深度开发，构建相应的二级评价指标以完成对一级指标的评价。</p><h2 id="步骤分解">步骤分解</h2><p><strong>1）建立层次结构模型</strong></p><p>将决策的目标（城市空间格局安全）、考虑的决策准则因素（空间结构安全、空间要素安全、空间环境安全）和决策对象按它们之间的相互关系分为最高层、中间层和最低层，绘出层次结构图。</p><p><img src="https://pics5.baidu.com/feed/cdbf6c81800a19d8ecaeddad114c4c8ea71e4620.jpeg?token=e56a2d51003c1713e9d7ea5fa5e99f5e&amp;s=A650E03387274D091E4198DB0300E0B2" alt="img"></p><p><strong>2）构造判断矩阵</strong></p><p>在确定各层次各因素之间的权重时，如果只是定性的结果，则常常不容易被别人接受，因而Saaty等人提出：一致矩阵法，即：不把所有因素放在一起比较，而是两两相互比较。对比时采用相对尺度，以尽可能减少性质不同因素相互比较的困难，以提高准确度。</p><p><img src="https://pics7.baidu.com/feed/eaf81a4c510fd9f91486fbdf079b1a2f2934a42b.jpeg?token=a55567265b678ff9a082d706ba530f30&amp;s=A5B07C329BCD68CA0859D0C30100F0A3" alt="img"></p><p>由专家对同一层次内N个指标的相对重要性（两两因素之间）进行打分。相对重要性的比例标度取1-9之间。同时，对各同级指标的重要性评价时，存在三种标度范畴（如下图），根据研究需要自行选择。</p><p><img src="https://pics0.baidu.com/feed/a71ea8d3fd1f413497fbf4c907a95bcfd3c85ef0.jpeg?token=e7e0432daba73983310646ed2803872b&amp;s=8652E13393DF41C804DD91CE000050B0" alt="img"></p><p>构建判断矩阵A（正交矩阵），用aij表示第i个因素相对于第j个因素的比较结果：</p><p><img src="https://pics6.baidu.com/feed/6a600c338744ebf8d2f4c2c0fb4f192f6259a780.jpeg?token=60fb9c332945a68609b40b4ce61d04fc&amp;s=7AA834629B424D414E5561DE0000A0B1" alt="img"></p><p><strong>3) 计算权重</strong></p><p>将矩阵A的各行向量进行几何平均（方根法），然后进行归一化，即得到各评价指标权重和特征向量W：</p><p><img src="https://pics0.baidu.com/feed/cf1b9d16fdfaaf5139b862e4aee25aebf11f7a4a.jpeg?token=9910950128cca81afb8ba7f598c6a5ce&amp;s=49A635733B404D411850D8C20000E0B1" alt="img"></p><p><strong>4) 一致性检验</strong></p><p>判断矩阵的一致性检验，所谓一致性是指判断思维的逻辑一致性。如当甲比丙是强烈重要，而乙比丙是稍微重要时，显然甲一定比乙重要。这就是判断思维的逻辑一致性，否则判断就会有矛盾。</p><p>计算最大特征根λmax：</p><p><img src="https://pics7.baidu.com/feed/6609c93d70cf3bc75bc7f4d7f3b674a4cc112a05.jpeg?token=5a509a4507cf313d3f89fcd87684b052&amp;s=00367D329DF179805CDD38C60000E0B1" alt="img"></p><p>计算一致性指标CI（Consistency Index）、随机一致性指标RI（Random Index）和一致性比例CR（Consistency Ratio）：</p><p><img src="https://pics0.baidu.com/feed/d53f8794a4c27d1e6b5627c73963636bdcc438f8.jpeg?token=79fe1577a730de6ff735de9db13728db&amp;s=80247D3284B079805C5911CE000070B3" alt="img"></p><p>一般情况下，当CR＜0.1时，即认为矩阵具有满意的一致性，否则需要对判断矩阵进行调整。</p><p><strong>5）层次排序</strong></p><p>层次排序，可分为层次单排序和层次总排序。所谓层次单排序是指，对于上一层某因素而言，本层次各因素的重要性的排序。层次总排序，确定某层所有因素对于总目标相对重要性的排序权值过程，称为层次总排序。这一过程是从最高层到最底层依次进行的。对于最高层而言，其层次单排序的结果也就是总排序的结果。</p><p>计算某一层次所有因素对于最高层（目标层）相对重要性的权值，称为层次总排 序。该过程是从最高层次向最低层次依次进行：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/24ef7c81898f7a9f1f0cc93977d32f16.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c99ce569167aa495ea026d1ae5d2bc87.png" alt="img"></p><p>当𝐶𝑅 &lt; 0.1时，认为层次总排序通过一致性检验，否则就需要重新调整判断矩阵 的元素取值。到此，根据最下层（决策层）的层次总排序做出最后的决策。</p><h2 id="案例分析">案例分析</h2><p><strong>1）构建评价结构</strong></p><p>一位顾客决定要买一套新住宅，经过初步调查研究确定了三套候选的房子A、B、C，问题是如何在这三套房子里选自一套较为满意的房子呢? 下面给出有关的数据和资料：</p><p>将影响购买新房的因素归纳为4个标准：</p><p>· 房子的地理位置及交通；</p><p>· 房子的居住环境；</p><p>· 房子结构、布局与设施；</p><p>· 房子的每平方米建筑面积地单价（模型如下）。</p><p><img src="https://pics7.baidu.com/feed/342ac65c103853433c80192eb1a57e7bcb8088aa.jpeg?token=762ceb4856c91df8daea51334d333018&amp;s=41F43C721F5743CA1EF158440300F0B0" alt="img"></p><p><strong>2）邀请专家（20-30名）打分</strong></p><p>对同一层次内4个指标的相对重要性（两两因素之间）进行打分。经过专家的打分，每个标准相对的权重，即标准的特征向量如下表。</p><p><img src="https://pics1.baidu.com/feed/b2de9c82d158ccbfc05f8d373b6e723bb0354113.jpeg?token=62541c032c0a9526a76e49e4769ec2e7&amp;s=8C30E51297A059030E5590CF000030B1" alt="img"></p><p><strong>3）用规范列平均法求权重</strong></p><p>第一步：先求出两两比较矩阵每一列的总和。</p><p><img src="https://pics6.baidu.com/feed/cefc1e178a82b90115e04281513b67723812ef6b.jpeg?token=4c50d289adc0c9a0d67d9d18730a7770&amp;s=88A67C3215D849C81ED1A0CA0000A0B1" alt="img"></p><p>第二步：把两两比较矩阵的每一元素除以其相应列的总和，所得商所组成的新的矩阵称之为标准两两比较矩阵。</p><p><img src="https://pics7.baidu.com/feed/83025aafa40f4bfb211e832521f9b6f5f6361834.jpeg?token=136179248096828e8afec5ada1015de2&amp;s=8DA6743297D04DCA1CD1A8CF000080B1" alt="img"></p><p>第三步：计算两两比较矩阵的每一行的平均值，这些平均值就是各方案在地理位置及交通方面的权重。</p><p><img src="https://pics3.baidu.com/feed/b812c8fcc3cec3fd03734e76f43e1a3a869427a4.jpeg?token=02393e9ff60a2c6d2dfb298bfc78cc2c&amp;s=08A07C328BD049C80E51F8CE0000A0B1" alt="img"></p><p>我们称最后求得的行平均值为房子选择问题中地理位置及交通方面的特征向量。三个方案在其它三个方面的特征向量。</p><p><img src="https://pics6.baidu.com/feed/54fbb2fb43166d225fd418e26495c7f29152d264.jpeg?token=3d88593a06ef3fa51aa48ad55aa74209&amp;s=84907C328FE04C031C55A4DB000050B0" alt="img"></p><p>每个标准相对的权重，即标准的特征向量。通过两两矩阵比较，可求得标准的特征向量如下：</p><p>地理位置及交通：0.398</p><p>居住环境：0.218</p><p>结构布局设施：0.085</p><p>每平米单价：0.299</p><p><strong>4）两两比较一致性检验</strong></p><p>两两比较矩阵的元素是通过两个因素比较得到的，而在很多这样的比较中，往往可能得到一些不一致性的结论。例如，当因素i、j、k的重要性很接近的时候，在两两比较时，可能得出i比j重要，j比k重要，而k又比i重要等矛盾的结论，这在因素的数目多的时候更容易发生。</p><p>第一步：由被检验的两两比较矩阵乘以其特征向量，所得的向量称之为赋权和向量。</p><p><img src="https://pics1.baidu.com/feed/b2de9c82d158ccbfc05f8d373b6e723bb0354113.jpeg?token=62541c032c0a9526a76e49e4769ec2e7&amp;s=8C30E51297A059030E5590CF000030B1" alt="img"></p><p>第二步:每个赋权和向量的分量分别除以对应的特征向量的分量。</p><p>1.803 / 0.593 =3.040</p><p>1.034 / 0.341 =3.032</p><p>0.197 / 0.066 =2.985</p><p>第三步：计算出第二步结果中的平均值，记为λmax。</p><p>λmax = (3.040+3.032+2.985)/ 3 = 3.019</p><p>第四步：计算一致性指标CI。</p><p>CI = (λmax– n ) / (n - 1)</p><p>CI = (3.019 – 3 ) / (3 – 1 ) = 0.010</p><p>第五步：计算一致性率CR</p><p>CR = CI / RI，在这里，RI是自由度指标（修正值）。</p><p><img src="https://pics5.baidu.com/feed/a044ad345982b2b7d8877bd4131b05ea77099bc5.jpeg?token=ae39fa2783afb9f34dd5546151e1c0b5&amp;s=80306C324D6661200A7565CB000080B3" alt="img"></p><p>本例中可计算得</p><p>CR = 0.01 / 0.58 = 0.017 &lt; 0.1</p><p>我们已经求出了四个标准的特征向量，以及四个在单一标准下的三个购房方案的特征向量，如表：</p><p><img src="https://pics7.baidu.com/feed/faf2b2119313b07ead1d6a482e615f2696dd8c0d.jpeg?token=b99cf8151e69d727d87b836426a09803&amp;s=8692642381B049820A79ECC60000C0B1" alt="img"></p><p><strong>5）最优方案求解</strong></p><p>方案 A：</p><p>0.398<em>0.593+0.218</em>0.123+0.085<em>0.087+0.299</em>0.265=0.349</p><p>方案 B（最优）</p><p>0.398<em>0.341+0.218</em>0.320+0.085<em>0.274+0.299</em>0.655=0.425</p><p>方案 C：</p><p>0.398<em>0.066+0.218</em>0.557+0.085<em>0.639+0.299</em>0.080=0.226</p><h2 id="优缺点">优缺点</h2><h3 id="层次分析法优点：">层次分析法优点：</h3><p><strong>· 系统性的分析方法</strong></p><p>层次分析法把研究对象作为一个系统，按照分解、比较判断、综合的思维方式进行决策，成为继机理分析、统计分析之后发展起来的系统分析的重要工具。系统的思想在于不割断各个因素对结果的影响，而层次分析法中每一层的权重设置最后都会直接或间接影响到结果，而且在每个层次中的每个因素对结果的影响程度都是量化的，非常清晰明确。这种方法尤其可用于对无结构特性的系统评价以及多目标、多准则、多时期等的系统评价。</p><p><strong>· 简洁实用的决策方法</strong></p><p>这种方法既不单纯追求高深数学，又不片面地注重行为、逻辑、推理，而是把定性方法与定量方法有机地结合起来，使复杂的系统分解，能将人们的思维过程数学化、系统化，便于人们接受，且能把多目标、多准则又难以全部量化处理的决策问题化为多层次单目标问题，通过两两比较确定同一层次元素相对上一层次元素的数量关系后，最后进行简单的数学运算。计算简便，并且所得结果简单明确，容易为决策者了解和掌握。</p><p><strong>· 所需定量数据信息较少</strong></p><p>层次分析法主要是从评价者对评价问题的本质、要素的理解出发，比一般的定量方法更讲求定性的分析和判断。由于层次分析法是一种模拟人们决策过程的思维方式的一种方法，层次分析法把判断各要素的相对重要性的步骤留给了大脑，只保留人脑对要素的印象，化为简单的权重进行计算。这种思想能处理许多用传统的最优化技术无法着手的实际问题。</p><h3 id="层次分析法缺点：">层次分析法缺点：</h3><p><strong>· 不能为决策提供新方法</strong></p><p>层次分析法的作用是从备选方案中选择较优者。在应用层次分析法的时候，可能就会有这样一个情况，就是我们自身的创造能力不够，造成了我们尽管在我们想出来的众多方案里选了一个最好的出来，但其效果仍然不够企业所做出来的效果好。而对于大部分决策者来说，如果一种分析工具能替我分析出在我已知的方案里的最优者，然后指出已知方案的不足，又或者甚至再提出改进方案的话，这种分析工具才是比较完美的。但显然，层次分析法还没能做到这点。</p><p><strong>· 定量数据较少，定性成分多，不易令人信服</strong></p><p>在如今对科学的方法的评价中，一般都认为一门科学需要比较严格的数学论证和完善的定量方法。但现实世界的问题和人脑考虑问题的过程很多时候并不是能简单地用数字来说明一切的。层次分析法是一种带有模拟人脑的决策方式的方法，因此必然带有较多的定性色彩。</p><p><strong>· 指标过多时，数据统计量大，且权重难以确定</strong></p><p>当我们希望能解决较普遍的问题时，指标的选取数量很可能也就随之增加。指标的增加就意味着我们要构造层次更深、数量更多、规模更庞大的判断矩阵。那么我们就需要对许多的指标进行两两比较的工作。由于一般情况下我们对层次分析法的两两比较是用1至9来说明其相对重要性，如果有越来越多的指标，我们对每两个指标之间的重要程度的判断可能就出现困难了，甚至会对层次单排序和总排序的一致性产生影响，使一致性检验不能通过。不能通过，就需要调整，在指标数量多的时候比较难调整过来。</p><p><strong>· 特征值和特征向量的精确求法比较复杂</strong></p><p>在求判断矩阵的特征值和特征向量时，所用的方法和我们多元统计所用的方法是一样的。在二阶、三阶的时候，我们还比较容易处理，但随着指标的增加，阶数也随之增加，在计算上也变得越来越困难。不过幸运的是这个缺点比较好解决，我们有三种比较常用的近似计算方法。第一种就是和法，第二种是幂法，还有一种常用方法是根法</p><h2 id="公式整理">公式整理</h2><p><strong>判断矩阵</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><msub><mrow><mo fence="true">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo fence="true">)</mo></mrow><mrow><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">A=\left(a_{i j}\right)_{n \times n}=\left(\begin{array}{cccc}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1 n} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2 n} \\\vdots &amp; \vdots &amp; \cdots &amp; \vdots \\a_{n 1} &amp; a_{n 2} &amp; \cdots &amp; a_{n n}\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1441em;vertical-align:-0.3941em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0725em;"><span style="top:-2.3642em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3941em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:7.4em;"></span><span style="width:0.875em;height:5.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='5.400em' viewBox='0 0 875 5400'><path d='M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,-36,557 l0,1884c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189l0,-1892c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.58em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-1.38em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">nn</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:7.4em;"></span><span style="width:0.875em;height:5.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='5.400em' viewBox='0 0 875 5400'><path d='M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1809c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558l0,-1944c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>计算权重</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">w</mi><mi mathvariant="normal">i</mi></msub><mo>=</mo><msub><mover accent="true"><mi mathvariant="normal">W</mi><mo stretchy="true">‾</mo></mover><mi mathvariant="normal">i</mi></msub><mi mathvariant="normal">/</mi><munderover><mo>∑</mo><mrow><mi mathvariant="normal">i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">n</mi></munderover><msub><mover accent="true"><mi mathvariant="normal">w</mi><mo stretchy="true">‾</mo></mover><mi mathvariant="normal">i</mi></msub><mo separator="true">,</mo><mi mathvariant="normal">W</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi mathvariant="normal">w</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi mathvariant="normal">w</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋅</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>w</mi><mo>˙</mo></mover><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\mathrm{w}_{\mathrm{i}}=\overline{\mathrm{W}}_{\mathrm{i}} / \sum_{\mathrm{i}=1}^{\mathrm{n}} \overline{\mathrm{w}}_{\mathrm{i}}, \mathrm{W}=\left\{\begin{array}{c}\mathrm{w}_{1} \\\mathrm{w}_{2} \\\cdot \\\dot{w}_{n}\end{array}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175em;"><span style="top:-2.55em;margin-left:-0.0139em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9349em;vertical-align:-1.2835em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">W</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8665em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2835em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">w</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0139em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0139em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">⋅</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0556em;"><span class="mord">˙</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>最大特征根</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>λ</mi><mi>max</mi><mo>⁡</mo><mo>=</mo><mfrac><mn>1</mn><mi mathvariant="normal">n</mi></mfrac><munderover><mo>∑</mo><mrow><mi mathvariant="normal">i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">n</mi></munderover><mfrac><mrow><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">A</mi><mi mathvariant="normal">W</mi></mrow><msub><mo stretchy="false">)</mo><mi mathvariant="normal">i</mi></msub></mrow><msub><mi mathvariant="normal">w</mi><mi mathvariant="normal">i</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">\lambda \max =\frac{1}{\mathrm{n}} \sum_{\mathrm{i}=1}^{\mathrm{n}} \frac{(\mathrm{AW})_{\mathrm{i}}}{\mathrm{w}_{\mathrm{i}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9349em;vertical-align:-1.2835em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8665em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2835em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175em;"><span style="top:-2.55em;margin-left:-0.0139em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">AW</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3175em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">C</mi><mi mathvariant="normal">I</mi></mrow><mo>=</mo><mfrac><mrow><mi>λ</mi><mi>max</mi><mo>⁡</mo><mo>−</mo><mi mathvariant="normal">n</mi></mrow><mrow><mi mathvariant="normal">n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathrm{CI}=\frac{\lambda \max -\mathrm{n}}{\mathrm{n}-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">CI</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1408em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathrm">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathrm">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="参考资料">参考资料</h2><p><a href="https://blog.csdn.net/qq_41686130/article/details/122081827">用人话讲明白AHP层次分析法（非常详细原理+简单工具实现）_Halosec_Wei的博客-CSDN博客_ahp层次分析法</a></p><p><a href="https://baijiahao.baidu.com/s?id=1651259201959322004#:~:text=%20%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95%EF%BC%88AHP%EF%BC%89%EF%BC%8C%E4%B8%80%E8%A8%80%E8%94%BD%E4%B9%8B%E5%B0%B1%E6%98%AF%E9%80%9A%E8%BF%87%E6%9E%84%E5%BB%BA%E4%B8%80%E5%A5%97%E5%A4%9A%E5%B1%82%E6%AC%A1%E7%9A%84%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB%EF%BC%8C%E5%AE%8C%E6%88%90%E5%AF%B9%E5%AE%9A%E6%80%A7%E6%8C%87%E6%A0%87%E7%9A%84%E5%AE%9A%E9%87%8F%E5%8C%96%E5%88%86%E6%9E%90%E3%80%82,%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95%EF%BC%88AnalyticHierarchy%20Process%EF%BC%8CAHP%EF%BC%89%E7%94%B1%E7%BE%8E%E5%9B%BD%E8%BF%90%E7%AD%B9%E5%AD%A6%E5%AE%B6%E3%80%81%E5%8C%B9%E5%85%B9%E5%A0%A1%E5%A4%A7%E5%AD%A6%E6%95%99%E6%8E%88SattyT.L.%E4%BA%8E%E4%BA%8C%E5%8D%81%E4%B8%96%E7%BA%AA70%E5%B9%B4%E4%BB%A3%E6%8F%90%E5%87%BA%EF%BC%8C%E6%98%AF%E4%B8%80%E7%A7%8D%E5%B0%86%E4%B8%8E%E5%86%B3%E7%AD%96%E6%9C%89%E5%85%B3%E7%9A%84%E5%85%83%E7%B4%A0%E5%88%86%E8%A7%A3%E6%88%90%E7%9B%AE%E6%A0%87%E3%80%81%E5%87%86%E5%88%99%E3%80%81%E6%96%B9%E6%A1%88%E7%AD%89%E5%B1%82%E6%AC%A1%EF%BC%8C%E5%9C%A8%E6%AD%A4%E5%9F%BA%E7%A1%80%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%AE%9A%E6%80%A7%E5%92%8C%E5%AE%9A%E9%87%8F%E5%88%86%E6%9E%90%E7%9A%84%E5%86%B3%E7%AD%96%E6%96%B9%E6%B3%95%E3%80%82">百度百科-层次分析法</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评价模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>描述性统计</title>
      <link href="/2022/09/08/%E6%8F%8F%E8%BF%B0%E6%80%A7%E7%BB%9F%E8%AE%A1/"/>
      <url>/2022/09/08/%E6%8F%8F%E8%BF%B0%E6%80%A7%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>作者：hal3515</p><p>链接：<a href="https://zhuanlan.zhihu.com/p/424763389">https://zhuanlan.zhihu.com/p/424763389</a></p><p>来源：知乎</p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h1>(1)描述性统计</h1><ul><li>所谓描述性统计，就是对已有的数据的多个特征(最小元素，最大元素，均值，中位数等)进行计算。</li></ul><h2 id="1-使用Matlab进行计算">1.使用Matlab进行计算</h2><ul><li><code>min</code>求最小值</li><li><code>max</code>求最大值</li><li><code>mean</code>求平均值</li><li><code>median</code>求中位数的值</li><li><code>skewness</code>求偏度</li><li><code>kurtosis</code>求峰度</li><li><code>std</code>求标准差</li></ul><h2 id="2-使用Excel计算">2.使用Excel计算</h2><p><img src="https://pic1.zhimg.com/v2-6e9289e6914fe1b66715c3bbb5c39830_b.jpg" alt="img"></p><h2 id="3-使用Spss计算">3.使用Spss计算</h2><p><img src="https://pic3.zhimg.com/v2-98721cb845f292f6f7f9bff041ef9502_b.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/v2-8a3b20b0eb85ab766cf137fc89d76dcd_b.jpg" alt="img"></p><p>(2)正态分布的检验</p><h2 id="0-偏度与峰度">0.偏度与峰度</h2><ul><li>偏度：是统计数据分布偏斜方向和程度的度量，是统计数据分布非对称程度的数字特征。定义上偏度是样本的三阶标准化矩。（注意正态分布的偏度为0）</li></ul><p><img src="https://www.zhihu.com/equation?tex=S%3DE%5B%28%5Cdfrac%7BX-%5Cmu%7D%7B%5Csigma%7D%29%5E3%5D%5C%5C" alt="[公式]"></p><p><img src="https://pic2.zhimg.com/v2-9b12677df0b4169ff4436a19ba2e08bd_b.jpg" alt="img"></p><ul><li>峰度：表征概率密度分布曲线在平均值处峰值高低的特征数。直观看来，峰度反映了峰部的尖度。定义上偏度是样本的四阶标准化矩。（注意正态分布的峰度为3）</li></ul><p><img src="https://www.zhihu.com/equation?tex=K%3DE%5B%28%5Cdfrac%7BX-%5Cmu%7D%7B%5Csigma%7D%29%5E4%5D%5C%5C" alt="[公式]"></p><p><img src="https://pic1.zhimg.com/v2-7f22eec6469c6f0c2e13f98698635558_b.jpg" alt="img"></p><h2 id="1-JB-检验-大样本n-30">1. JB 检验(大样本n&gt;30)</h2><ul><li><strong>step 1</strong>：进行假设检验  <img src="https://www.zhihu.com/equation?tex=%5Csmall+H_0%3A" alt="[公式]"> 该变量服从正态分布， <img src="https://www.zhihu.com/equation?tex=%5Csmall+H_1%3A" alt="[公式]"> 该变量不服从正态分布。</li><li><strong>step 2</strong>：假设对一个随机变量  <img src="https://www.zhihu.com/equation?tex=%5Csmall+X_i" alt="[公式]">  ，其峰度为  <img src="https://www.zhihu.com/equation?tex=%5Csmall+K" alt="[公式]">  ，其偏度为  <img src="https://www.zhihu.com/equation?tex=%5Csmall+S" alt="[公式]"> ，则构造检验统计量</li></ul><p><img src="https://www.zhihu.com/equation?tex=JB%3D%5Cdfrac%7Bn%7D%7B6%7D%5BS%5E2%2B%5Cdfrac%7B%28K-3%29%5E2%7D%7B4%7D%5D%5Csim+%5Cchi%5E2%282%29%5C%5C" alt="[公式]"> 服从自由度为2的卡方分布。</p><ul><li><strong>step 3</strong>： 代入数据计算出  <img src="https://www.zhihu.com/equation?tex=%5Csmall+JB%5E%2A" alt="[公式]"> ，通过 <img src="https://www.zhihu.com/equation?tex=%5Csmall+JB%5E%2A" alt="[公式]"> 计算出对应的  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  值。</li><li><strong>step 4</strong>：通过  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  值检验得出结论。(一般取  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  为 0.05 )。</li><li>matlab中：<code>[h,p]=jbtest(x,alpha)</code>, <img src="https://www.zhihu.com/equation?tex=x" alt="[公式]">  表示要检测的变量，只能取向量，alpha表示显著性水平，h=1表示拒绝原假设，h=0表示接受原假设，p表示返回的p值。</li></ul><h2 id="2-夏皮洛-威尔克检验">2. 夏皮洛-威尔克检验</h2><ul><li><strong>step 1</strong>：进行假设检验  <img src="https://www.zhihu.com/equation?tex=%5Csmall+H_0%3A" alt="[公式]"> 该变量服从正态分布， <img src="https://www.zhihu.com/equation?tex=%5Csmall+H_1%3A" alt="[公式]"> 该变量不服从正态分布。</li><li><strong>step 2</strong>：使用SPSS计算出相应的  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  值。</li><li><strong>step 3</strong>：通过相应的  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  值进行判断。</li></ul><p><img src="https://pic3.zhimg.com/v2-dd99d8e5a8567be1e026b732b57b89d6_b.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/v2-534886d79bdd1a613c17626ad40c466d_b.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/v2-be9f31cac2884b10839220463044e7d1_b.jpg" alt="img"></p><h1>(3)皮尔逊相关系数</h1><h2 id="1-总体皮尔逊Person相关系数">1.总体皮尔逊Person相关系数</h2><p><img src="https://www.zhihu.com/equation?tex=%5Crho_%7BXY%7D%3D%5Cdfrac%7BCov%28X%2CY%29%7D%7B%5Csigma_x%5Csigma_y%7D%5C%5C" alt="[公式]"></p><p>这里 <img src="https://www.zhihu.com/equation?tex=%5Csigma_x%3D%5Csqrt%7B%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28X_i-E%28X%29%29%5E2%7D%7Bn%7D%7D%5C%5C" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=%5Csigma_y%3D%5Csqrt%7B%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28Y_i-E%28Y%29%29%5E2%7D%7Bn%7D%7D%5C%5C" alt="[公式]"> 分别是 <img src="https://www.zhihu.com/equation?tex=%5Csmall+X" alt="[公式]"> 总体与 <img src="https://www.zhihu.com/equation?tex=%5Csmall+Y" alt="[公式]"> 总体的方差。</p><p><img src="https://www.zhihu.com/equation?tex=Cov%28X%2CY%29%3D%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28X_i-E%28X%29%29%28Y_i-E%28Y%29%29%7D%7Bn%7D%5C%5C" alt="[公式]"> 为总体的协方差。</p><h2 id="2-样本皮尔逊Person相关系数">2.样本皮尔逊Person相关系数</h2><p><img src="https://www.zhihu.com/equation?tex=r_%7BXY%7D%3D%5Cdfrac%7BCov%28X%2CY%29%7D%7BS_xS_y%7D%5C%5C" alt="[公式]"></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>X</mi><mi>Y</mi></mrow></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">r_{XY} = </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span></span></span></p><p>这里 <img src="https://www.zhihu.com/equation?tex=S_x%3D%5Csqrt%7B%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28X_i-%5Coverline%7BX%7D%29%5E2%7D%7Bn-1%7D%7D%5C%5C" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=S_y%3D%5Csqrt%7B%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28Y_i-%5Coverline%7BY%7D%29%5E2%7D%7Bn-1%7D%7D%5C%5C" alt="[公式]"> 分别是 <img src="https://www.zhihu.com/equation?tex=%5Csmall+X" alt="[公式]"> 样本与 <img src="https://www.zhihu.com/equation?tex=%5Csmall+Y" alt="[公式]"> 样本的方差。</p><p><img src="https://www.zhihu.com/equation?tex=Cov%28X%2CY%29%3D%5Cdfrac%7B%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28X_i-%5Coverline%7BX%7D%29%28Y_i-%5Coverline%7BY%7D%29%7D%7Bn-1%7D%5C%5C" alt="[公式]"> 为样本的协方差。</p><h2 id="3-使用皮尔逊Person相关系数的注意事项">3.使用皮尔逊Person相关系数的注意事项</h2><ul><li>先要判断变量是否大致满足线性关系，可以采用画散点图的方式。当两个变量本来就大致满足线性的关系时，皮尔逊相关系数的绝对值越大，两个变量的相关性越强，但是如果本来就不满足线性关系，就算皮尔逊系数很大也没有意义。</li></ul><p><img src="https://pic2.zhimg.com/v2-bfcfd3b2712c6ed9fe503ca7eff6fa71_b.jpg" alt="img"></p><p>上面的几个图的皮尔逊相关系数都为0.816，但是明显小样本对最终结果产生巨大的影响。 *</p><ul><li>如果计算出皮尔逊系数为0，不代表两个变量之间不存在关系。比如下面的温度-冰糕之间必然存在相关性，但是不是线性关系。</li></ul><p><img src="https://pic3.zhimg.com/v2-6630f0debb13065f9e69de40016f2066_b.jpg" alt="img"></p><ul><li>可以使用 SPSS 作出散点图先判断是否具有一定的线性关系。</li></ul><p><img src="https://pic4.zhimg.com/v2-10be7772f4c86fe1893778e0dc861a97_b.jpg" alt="img"></p><p><img src="https://pic3.zhimg.com/v2-8c12299f48ea4bead72019e24f619922_b.jpg" alt="img"></p><h2 id="4-使用matlab计算person系数">4.使用matlab计算person系数</h2><p>(1) 使用matlab计算 <code>corrcoef</code>  <code>R=corrcoef(A)</code>：返回 <img src="https://www.zhihu.com/equation?tex=%5Csmall+A" alt="[公式]"> 的相关系数矩阵，其中 <img src="https://www.zhihu.com/equation?tex=%5Csmall+A" alt="[公式]"> 的列表示随机变量(指标，例如身高、体重等),行表示观测值(样本，例如每一个人的身高、体重等)。  <code>R=corrcoef(A,B)</code>：返回两个变量 <img src="https://www.zhihu.com/equation?tex=%5Csmall+A%EF%BC%8CB" alt="[公式]"> 向量之间的相关系数。</p><p>(2) 使用Excel计算与美化相关系数表</p><ul><li>在数据分析中选取相关系数的计算。</li><li>使用色阶图进行美化</li></ul><p><img src="https://pic3.zhimg.com/v2-8af9b63de84465726adb9609e070afa6_b.jpg" alt="img"></p><h1>(3)对皮尔逊相关系数进行假设检验</h1><h2 id="1-可以进行假设检验的前提">1.可以进行假设检验的前提</h2><ul><li>实验数据通常假设是成对的来自于正态分布的总体。(一般情况下很难满足)。</li><li>实验数据之间的差距不能太大，异常值对检验结果影响很大。</li><li>每个样本之间是独立抽样的。</li></ul><h2 id="2-进行正态分布检验">2.进行正态分布检验</h2><h2 id="3-流程">3.流程</h2><p>目的是验证计算得出的皮尔逊相关系数是否与0有显著的差异。</p><ul><li><strong>step 1</strong>  提出原假设与备择假设, <img src="https://www.zhihu.com/equation?tex=H_0%3Ar%3D0%2CH_1%3Ar%5Cnot%3D0" alt="[公式]"> 。</li><li><strong>step 2</strong> 构造检验统计量</li></ul><p><img src="https://www.zhihu.com/equation?tex=r%5Csqrt%7B%5Cdfrac%7Bn-2%7D%7B1-r%5E2%7D%7D%5Csim+t%28n-2%29+%5C%5C" alt="[公式]"> 服从自由度为2的 <img src="https://www.zhihu.com/equation?tex=t" alt="[公式]"> 分布</p><ul><li><strong>step 3</strong> 计算出检验值(代入数据)得到  <img src="https://www.zhihu.com/equation?tex=t%5E%2A" alt="[公式]"> 。</li><li><strong>step 4</strong> 使用  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  检验：计算  <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">  值</li></ul><p><img src="https://www.zhihu.com/equation?tex=+p%3D2%5Ctimes%281-%5Cint_%7B-%5Cinfty%7D%5E%7Bt%5E%2A%7Dt%28x%29dx%29%5C%5C" alt="[公式]"></p><ul><li><strong>step 5</strong> 结果说明</li><li><ul><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+p%3C0.01" alt="[公式]"> ：在99%的置信水平上拒绝原假设。</li><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+0.01%3Cp%3C0.05" alt="[公式]"> ：在 99%的置信水平上无法拒绝原假设，但在95%的水平上可以拒绝原假设。</li><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+0.05%3Cp%3C0.1" alt="[公式]"> ：在95%的置信水平上无法拒绝原假设，但在90%的水平上可以拒绝原假设。</li></ul></li><li>显著性标记:  <img src="https://www.zhihu.com/equation?tex=a%2Ca%5E%2A%2Ca%5E%7B%2A%2A%7D" alt="[公式]"> ,** 表示在0.01级别（双尾）的相关性显著**，*** 表示在0.05级别（双尾）的相关性显著。</li><li>matlab相关:</li><li><ul><li><code>tpdf(x,n)</code>： <img src="https://www.zhihu.com/equation?tex=x" alt="[公式]"> 取一系列连续的值，可以做出自由度为 <img src="https://www.zhihu.com/equation?tex=n" alt="[公式]"> 的 <img src="https://www.zhihu.com/equation?tex=t" alt="[公式]"> 分布图像。</li><li><code>tcdf(t,n)</code>：是自由度为 <img src="https://www.zhihu.com/equation?tex=n" alt="[公式]"> 的 <img src="https://www.zhihu.com/equation?tex=t" alt="[公式]"> 分布的分布函数。 <img src="https://www.zhihu.com/equation?tex=t" alt="[公式]"> 取一个固定的值 <img src="https://www.zhihu.com/equation?tex=t_c" alt="[公式]"> ,可以计算出 <img src="https://www.zhihu.com/equation?tex=%5Csmall+T%5Cle+t_c" alt="[公式]"> 的概率。</li><li><code>tinv(p,n)</code>：自由度为 <img src="https://www.zhihu.com/equation?tex=n" alt="[公式]"> 的 <img src="https://www.zhihu.com/equation?tex=t" alt="[公式]"> 分布下对应概率为 <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]"> 的点的值。</li></ul></li></ul><h1>(4)斯皮尔曼(sperman)相关系数</h1><h2 id="1-斯皮尔曼相关系数的第一种定义">1. 斯皮尔曼相关系数的第一种定义</h2><ul><li><img src="https://www.zhihu.com/equation?tex=%5Csmall+X" alt="[公式]"> , <img src="https://www.zhihu.com/equation?tex=%5Csmall+Y" alt="[公式]">  为两组数据，其斯皮尔曼(等级)相关系数：</li></ul><p><img src="https://www.zhihu.com/equation?tex=r_s%3D1-%5Cdfrac%7B6%5Cdisplaystyle%5Csum_%7Bi%3D1%7D%5E%7Bn%7Dd_i%5E2%7D%7Bn%28n%5E2-1%29%7D%5C%5C" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5Csmall+d_i" alt="[公式]">  为  <img src="https://www.zhihu.com/equation?tex=%5Csmall+X_i" alt="[公式]">  与  <img src="https://www.zhihu.com/equation?tex=%5Csmall+Y_i" alt="[公式]">  之间的等级差。(  <img src="https://www.zhihu.com/equation?tex=%5Csmall+-1+%5Cle+r_s+%5Cle+1" alt="[公式]"> )。</p><ul><li>等级：将所在列的元素排序后，这个数所在的位置。</li><li>有数值相同，将它们所在位置取算术平均。例如对下面一列数90,84,76,71,71,71,69,68,66,64,排出的顺序为 1,2,3,5,5,5,7,8,9,10 计算方式为  <img src="https://www.zhihu.com/equation?tex=%284%2B5%2B6%29%2F3" alt="[公式]"> 。</li></ul><p><img src="https://pic1.zhimg.com/v2-c89e145a8264a71a44dfa8dc09a31330_b.jpg" alt="img"></p><h2 id="2-斯皮尔曼相关系数的第二种定义">2. 斯皮尔曼相关系数的第二种定义</h2><ul><li>定义为<strong>等级之间的皮尔逊相关系数</strong>。</li><li>按这种定义计算得到的斯皮尔曼相关系数一般与第一种定义下计算出的斯皮尔曼相关系数不同。</li></ul><h2 id="3-使用matlab计算斯皮尔曼相关系数">3.使用matlab计算斯皮尔曼相关系数</h2><ul><li><code>corr(X,Y,'type','Spearman')</code>：其中 <img src="https://www.zhihu.com/equation?tex=%5Csmall+X" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=%5Csmall+Y" alt="[公式]"> 必须是列向量。</li><li><code>corr(X,'type','Spearman')</code>：计算矩阵 <img src="https://www.zhihu.com/equation?tex=%5Csmall+X" alt="[公式]"> 各列之间的斯皮尔曼相关系数。</li></ul><h1>(5)斯皮尔曼相关系数的假设检验</h1><p><img src="https://www.zhihu.com/equation?tex=%5Csmall+H_0%3Ar_s%3D0%2CH_1%3Ar_s%5Cnot%3D0" alt="[公式]"> 。</p><h2 id="1-小样本情况下-公式">1.小样本情况下 <img src="https://www.zhihu.com/equation?tex=%28n%5Cle30%29" alt="[公式]"></h2><p>直接在<a href="https://link.zhihu.com/?target=https%3A//wenku.baidu.com/view/d669a332e009581b6ad9eb02.html">临界表</a>中查询即可。</p><p><img src="https://pic1.zhimg.com/v2-967469e93d610ddb57bc5543e8c23edc_b.jpg" alt="img"></p><h2 id="2-大样本情况下-公式">2.大样本情况下 <img src="https://www.zhihu.com/equation?tex=%28n%5Cge30%29" alt="[公式]"></h2><ul><li>统计量  <img src="https://www.zhihu.com/equation?tex=%5Csmall+r_s%5Csqrt%7Bn-1%7D%5Csim+N%280%2C1%29" alt="[公式]"> 。</li><li>计算检验值  <img src="https://www.zhihu.com/equation?tex=%5Csmall+r_s%5Csqrt%7Bn-1%7D" alt="[公式]"> 。</li><li>计算对应的 <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]"> 值,再进行判断。</li></ul><h1>(6)person与spearman对比</h1><ul><li>连续数据，正态分布，线性关系，最好使用 person。</li><li>除此之外都使用 spearman。</li><li>两个定序数据之间也只能用spearman。   定序数据，仅仅反映观测对象的等级顺序关系的数据，优，良，差等。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 描述性统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粒子群优化算法</title>
      <link href="/2022/09/08/%E7%B2%92%E5%AD%90%E7%BE%A4%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/%E7%B2%92%E5%AD%90%E7%BE%A4%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>粒子群优化算法</h1><h2 id="资料来源">资料来源</h2><p><a href="https://baike.baidu.com/item/%E7%B2%92%E5%AD%90%E7%BE%A4%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/2500389?fromtitle=%E7%B2%92%E5%AD%90%E7%BE%A4%E7%AE%97%E6%B3%95&amp;fromid=1733544&amp;fr=aladdin">粒子群优化算法_百度百科 (baidu.com)</a></p><h2 id="简介">简介</h2><h3 id="定义">定义</h3><p>粒子群优化算法(Particle Swarm optimization,PSO)又翻译为<a href="https://baike.baidu.com/item/%E7%B2%92%E5%AD%90%E7%BE%A4%E7%AE%97%E6%B3%95/1733544">粒子群算法</a>、<a href="https://baike.baidu.com/item/%E5%BE%AE%E7%B2%92%E7%BE%A4%E7%AE%97%E6%B3%95/6666141">微粒群算法</a>、或微粒群优化算法。是通过模拟鸟群觅食行为而发展起来的一种基于群体协作的<a href="https://baike.baidu.com/item/%E9%9A%8F%E6%9C%BA%E6%90%9C%E7%B4%A2">随机搜索</a>算法。通常认为它是<a href="https://baike.baidu.com/item/%E7%BE%A4%E9%9B%86%E6%99%BA%E8%83%BD/2623271">群集智能</a> (Swarm intelligence, SI) 的一种。它可以被纳入<a href="https://baike.baidu.com/item/%E5%A4%9A%E4%B8%BB%E4%BD%93%E4%BC%98%E5%8C%96%E7%B3%BB%E7%BB%9F">多主体优化系统</a>(Multiagent Optimization System, MAOS)。</p><p>粒子群优化算法(PSO：Particle swarm optimization) 是一种进化计算技术（evolutionary computation）。源于对鸟群捕食的行为研究。粒子群优化算法的基本思想：是通过<strong>群体中个体之间的协作和信息共享</strong>来寻找最优解．<br>PSO的优势：在于简单容易实现并且没有许多参数的调节。目前已被广泛应用于<strong>函数优化、神经网络训练、模糊系统控制以及其他遗传算法的</strong>应用领域。</p><h3 id="模拟捕食">模拟捕食</h3><p>PSO模拟鸟群的捕食行为。一群鸟在随机搜索食物，在这个区域里只有一块食物。所有的鸟都不知道食物在那里。但是他们知道当前的位置离食物还有多远。那么找到食物的<a href="https://baike.baidu.com/item/%E6%9C%80%E4%BC%98%E7%AD%96%E7%95%A5/19138713">最优策略</a>是什么呢。最简单有效的就是搜寻离食物最近的鸟的周围区域。</p><h3 id="启示">启示</h3><p>PSO从这种模型中得到启示并用于解决优化问题。PSO中，每个优化问题的解都是搜索空间中的一只鸟。我们称之为“粒子”。所有的粒子都有一个由被优化的函数决定的适应值(fitnessvalue)，每个粒子还有一个速度决定他们飞翔的方向和距离。然后粒子们就追随当前的最优粒子在解空间中搜索。</p><h3 id="PSO初始化">PSO初始化</h3><p>PSO<a href="https://baike.baidu.com/item/%E5%88%9D%E5%A7%8B%E5%8C%96">初始化</a>为一群随机粒子(随机解)，然后通过<a href="https://baike.baidu.com/item/%E8%BF%AD%E4%BB%A3/8415523">迭代</a>找到最优解，在每一次迭代中，粒子通过跟踪两个“<a href="https://baike.baidu.com/item/%E6%9E%81%E5%80%BC">极值</a>”来更新自己。第一个就是粒子本身所找到的最优解，这个解叫做个体极值pBest，另一个极值是整个种群找到的最优解，这个极值是全局极值gBest。另外也可以不用整个种群而只是用其中一部分最优粒子的邻居，那么在所有邻居中的极值就是<a href="https://baike.baidu.com/item/%E5%B1%80%E9%83%A8%E6%9E%81%E5%80%BC/19132443">局部极值</a>。</p><h2 id="基本思想">基本思想</h2><p>​粒子群算法通过设计一种无质量的粒子来模拟鸟群中的鸟，粒子仅具有两个属性：速度和位置，速度代表移动的快慢，位置代表移动的方向。每个粒子在搜索空间中单独的搜寻最优解，并将其记为当前个体极值，并将个体极值与整个粒子群里的其他粒子共享，找到最优的那个个体极值作为整个粒子群的当前全局最优解，粒子群中的所有粒子根据自己找到的当前个体极值和整个粒子群共享的当前全局最优解来调整自己的速度和位置。下面的动图很形象地展示了PSO算法的过程：<br><img src="https://img-blog.csdn.net/20180803102329735?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="算法介绍">算法介绍</h2><p>在找到这两个最优值时,粒子根据如下的公式来更新自己的速度和新的位置</p><p><img src="https://bkimg.cdn.bcebos.com/formula/4e6933b5f55d4706bb9cadf405f6851e.svg" alt="img"></p><p>(a)</p><p><img src="https://bkimg.cdn.bcebos.com/formula/94578aced7481c1f46e71f7b5f281615.svg" alt="img"></p><p>(b)</p><p>v[] 是粒子的速度，present[] 是当前粒子的位置。pbest[] 和 gbest[] 如前定义。rand() 是介于(0,1)之间的<a href="https://baike.baidu.com/item/%E9%9A%8F%E6%9C%BA%E6%95%B0">随机数</a>。c1，c2是学习因子。通常c1=c2=2。</p><p>PSO初始化为一群随机粒子(随机解)。然后通过迭代找到最优解。在每一次的迭代中，粒子通过跟踪两个“极值”(pbest，gbest)来更新自己。在找到这两个最优值后，粒子通过下面的公式来更新自己的速度和位置。</p><p>另一种解释：</p><p><img src="https://img-blog.csdn.net/20180803100337670?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p>公式(1)的第一部分称为【记忆项】，表示上次速度大小和方向的影响；公式(1)的第二部分称为【自身认知项】，是从当前点指向粒子自身最好点的一个矢量，表示粒子的动作来源于自己经验的部分；公式(1)的第三部分称为【群体认知项】，是一个从当前点指向种群最好点的矢量，反映了粒子间的协同合作和知识共享。粒子就是通过自己的经验和同伴中最好的经验来决定下一步的运动。以上面两个公式为基础，形成了PSO的标准形式。<br><img src="https://img-blog.csdn.net/20180803100428140?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20180803102011840?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="https://img-blog.csdnimg.cn/827098a496564b159b8a433b35955f2f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYnJpbGxpYW50WkM=,size_16,color_FFFFFF,t_70,g_se,x_16" alt="img"></p><h3 id="伪代码实现">伪代码实现</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">For each particle</span><br><span class="line"></span><br><span class="line">____Initialize particle</span><br><span class="line"></span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">Do</span><br><span class="line"></span><br><span class="line">____For each particle</span><br><span class="line"></span><br><span class="line">________Calculate fitness value</span><br><span class="line"></span><br><span class="line">________If the fitness value is better than the best fitness value (pBest) in history</span><br><span class="line"></span><br><span class="line">____________set current value as the new pBest</span><br><span class="line"></span><br><span class="line">____End</span><br><span class="line"></span><br><span class="line">____Choose the particle with the best fitness value of all the particles as the gBest</span><br><span class="line"></span><br><span class="line">____For each particle</span><br><span class="line"></span><br><span class="line">________Calculate particle velocity according equation (a)</span><br><span class="line"></span><br><span class="line">________Update particle position according equation (b)</span><br><span class="line"></span><br><span class="line">____End</span><br><span class="line">While maximum iterations or minimum error criteria is not attained</span><br><span class="line">在每一维粒子的速度都会被限制在一个最大速度Vmax，如果某一维更新后的速度超过用户设定的Vmax，那么这一维的速度就被限定为Vmax。</span><br></pre></td></tr></table></figure><h2 id="PSO算法案例">PSO算法案例</h2><p><img src="https://img-blog.csdn.net/20180803102108831?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><p><img src="https://img-blog.csdn.net/20180803102146843?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RhYWlrdWFpY2h1YW4=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><h2 id="代码demo">代码demo</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Eigen;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dim = <span class="number">1</span>;<span class="comment">//维数</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> p_num = <span class="number">10</span>;<span class="comment">//粒子数量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> iters = <span class="number">100</span>;<span class="comment">//迭代次数</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">999999</span>;<span class="comment">//极大值</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="number">3.1415</span>;</span><br><span class="line"><span class="comment">//定义粒子的位置和速度的范围</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> v_max = <span class="number">4</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> v_min = <span class="number">-2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pos_max = <span class="number">2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pos_min = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//定义位置向量和速度向量</span></span><br><span class="line">vector&lt;<span class="type">double</span>&gt; pos;</span><br><span class="line">vector&lt;<span class="type">double</span>&gt; spd;</span><br><span class="line"><span class="comment">//定义粒子的历史最优位置和全局最优位置</span></span><br><span class="line">vector&lt;<span class="type">double</span>&gt; p_best;</span><br><span class="line"><span class="type">double</span> g_best;</span><br><span class="line"><span class="comment">//使用eigen库定义函数值矩阵和位置矩阵</span></span><br><span class="line">Matrix&lt;<span class="type">double</span>, iters, p_num&gt; f_test;</span><br><span class="line">Matrix&lt;<span class="type">double</span>, iters, p_num&gt; pos_mat;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义适应度函数</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">fun_test</span><span class="params">(<span class="type">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> res = x * x + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化粒子群的位置和速度</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//矩阵中所有元素初始化为极大值</span></span><br><span class="line">    f_test.<span class="built_in">fill</span>(inf);</span><br><span class="line">    pos_mat.<span class="built_in">fill</span>(inf);</span><br><span class="line">    <span class="comment">//生成范围随机数</span></span><br><span class="line">    <span class="type">static</span> std::mt19937 rng;</span><br><span class="line">    <span class="function"><span class="type">static</span> std::uniform_real_distribution&lt;<span class="type">double</span>&gt; <span class="title">distribution1</span><span class="params">(<span class="number">-1</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">static</span> std::uniform_real_distribution&lt;<span class="type">double</span>&gt; <span class="title">distribution2</span><span class="params">(<span class="number">-2</span>, <span class="number">4</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p_num; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        pos.<span class="built_in">push_back</span>(<span class="built_in">distribution1</span>(rng));</span><br><span class="line">        spd.<span class="built_in">push_back</span>(<span class="built_in">distribution2</span>(rng));</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; vec;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p_num; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> temp = <span class="built_in">fun_test</span>(pos[i]);<span class="comment">//计算函数值</span></span><br><span class="line">        <span class="comment">//初始化函数值矩阵和位置矩阵</span></span><br><span class="line">        <span class="built_in">f_test</span>(<span class="number">0</span>, i) = temp;</span><br><span class="line">        <span class="built_in">pos_mat</span>(<span class="number">0</span>, i) = pos[i];</span><br><span class="line">        p_best.<span class="built_in">push_back</span>(pos[i]);<span class="comment">//初始化粒子的历史最优位置</span></span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="type">ptrdiff_t</span> minRow, minCol;</span><br><span class="line">    f_test.<span class="built_in">row</span>(<span class="number">0</span>).<span class="built_in">minCoeff</span>(&amp;minRow, &amp;minCol);<span class="comment">//返回函数值矩阵第一行中极小值对应的位置</span></span><br><span class="line">    g_best = <span class="built_in">pos_mat</span>(minRow, minCol);<span class="comment">//初始化全局最优位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PSO</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> std::mt19937 rng;</span><br><span class="line">    <span class="function"><span class="type">static</span> std::uniform_real_distribution&lt;<span class="type">double</span>&gt; <span class="title">distribution</span><span class="params">(<span class="number">0</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> step = <span class="number">1</span>; step &lt; iters; ++step)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p_num; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//更新速度向量和位置向量</span></span><br><span class="line">            spd[i] = <span class="number">0.5</span> * spd[i] + <span class="number">2</span> * <span class="built_in">distribution</span>(rng) * (p_best[i] - pos[i]) +</span><br><span class="line">                <span class="number">2</span> * <span class="built_in">distribution</span>(rng) * (g_best - pos[i]);</span><br><span class="line">            pos[i] = pos[i] + spd[i];</span><br><span class="line">            <span class="comment">//如果越界则取边界值</span></span><br><span class="line">            <span class="keyword">if</span> (spd[i] &lt; <span class="number">-2</span> || spd[i] &gt; <span class="number">4</span>)</span><br><span class="line">                spd[i] = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">if</span> (pos[i] &lt; <span class="number">-1</span> || pos[i] &gt; <span class="number">2</span>)</span><br><span class="line">                pos[i] = <span class="number">-1</span>;</span><br><span class="line">            <span class="comment">//更新位置矩阵</span></span><br><span class="line">            <span class="built_in">pos_mat</span>(step, i) = pos[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//更新函数值矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p_num; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> temp = <span class="built_in">fun_test</span>(pos[i]);</span><br><span class="line">            <span class="built_in">f_test</span>(step, i) = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p_num; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            MatrixXd temp_test;</span><br><span class="line">            temp_test = f_test.<span class="built_in">col</span>(i);<span class="comment">//取函数值矩阵的每一列</span></span><br><span class="line">            std::<span class="type">ptrdiff_t</span> minRow, minCol;</span><br><span class="line">            temp_test.<span class="built_in">minCoeff</span>(&amp;minRow, &amp;minCol);<span class="comment">//获取每一列的极小值对应的位置</span></span><br><span class="line">            p_best[i] = <span class="built_in">pos_mat</span>(minRow, i);<span class="comment">//获取每一列的极小值，即每个粒子的历史最优位置</span></span><br><span class="line">        &#125;</span><br><span class="line">        g_best = *<span class="built_in">min_element</span>(p_best.<span class="built_in">begin</span>(), p_best.<span class="built_in">end</span>());<span class="comment">//获取全局最优位置</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">fun_test</span>(g_best);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">PSO</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 粒子群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>差异分析方法汇总</title>
      <link href="/2022/09/08/%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/"/>
      <url>/2022/09/08/%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1>差异分析方法汇总</h1><p><img src="https://pic2.zhimg.com/v2-f5abf19d441b50860899984332d20675_b.png" alt="img"></p><h1>方差分析</h1><h2 id="试验和因素">试验和因素</h2><p>方差分析：通过观察和试验判断哪些因素的产品的产量质量有显著影响。</p><p><code>方差分析</code>（Analysis of variance，简称ANOVA，又称变异系数分析）是一类用于分析多组数据之间均值差异的统计方法模型，还涉及一些相关的步骤（比如两组数据之间的“变异”）。</p><p>在试验中，我们将要考察的指标称为<strong>试验指标</strong>，影响试验指标的条件称为因素，因素可分两类：</p><ul><li>可控因素：</li><li>不可控因素</li></ul><p>可控因素的所处的状态称为因素的<strong>水平</strong></p><p><strong>单因素试验</strong>：只有一个因素改变</p><p><strong>多因素试验</strong>：多个因素改变</p><h2 id="检验统计量">检验统计量</h2><h3 id="偏差平方和">偏差平方和</h3><h4 id="总体偏差平方和">总体偏差平方和</h4><h4 id="组内偏差平方和">组内偏差平方和</h4><h4 id="组间偏差平方和">组间偏差平方和</h4><h2 id="单因子方差分析（1-way-ANOVA）">单因子方差分析（1-way ANOVA）</h2><p>**单因素方差分析,用于分析定类数据与定量数据之间的关系情况。**在使用单因素方差分析时，需要每个选项的样本量大于30，比如男性和女性样本量分别是100和120，如果出现某个选项样本量过少时应该首先进行组别合并处理，比如研究不同年龄组样本对于研究变量的差异性态度时，年龄小于20岁的样本量仅为20个，那么需要将小于20岁的选项与另外一组(比如20~25岁)的组别合并为一组，然后再进行单因素方差分析。</p><p>如果选项无法进行合并处理，比如研究不同专业样本对于变量的态度差异，研究样本的专业共分为市场营销、心理学、教育学和管理学四个专业，这四个专业之间为彼此独立无法进行合并组别，但是市场营销专业样本量仅为20并没有代表意义，因此可以考虑首先筛选出市场营销专业，即仅比较心理学，教育学和管理学这三个专业对某变量的差异性态度，当对比的组别超过三个，并且呈现出显著性差异时，可以考虑使用事后检验进一步对比具体两两组别间的差异情况。</p><h2 id="双因素方差分析（2-way-ANOVA">双因素方差分析（2-way ANOVA)</h2><p>**双因素方差分析,用于分析定类数据(2个)与定量数据之间的关系情况，**例如研究人员性别,学历对于网购满意度的差异性;以及男性或者女性时,不同学历是否有着网购满意度差异性;或者同一学历时,不同性别是否有着网购满意度差异性。</p><h2 id="多因素方差分析（N-way-ANOVA）">多因素方差分析（N-way ANOVA）</h2><p>**多因素方差分析通常用于类实验式问卷研究。**比如研究者测试某新药对于胆固醇水平是否有疗效；研究者共招募72名被试，男女分别为36名，以及男女分别再细分使用新药和普通药物；同时高血压患者对于新药可能有干扰，因而研究者将被试是否患高血压也纳入考虑范畴中。因而最终，X共分为三个，分别是药物(旧药和新药)、性别，是否患高血压；Y为胆固醇水平。因而需要进行三因素方差分析即多因素方差分析。</p><p>在方法选择上，问卷研究通常会使用方差分析，但某些专业，比如心理学、教育学或者师范类专业等涉及到实验研究时，更多会使用T检验进行分析，另外方差分析与T检验还有较多差异，在某些分析中只能使用其中一种。</p><h1><strong>T检验</strong></h1><p>T检验共分为三种方法，分别是独立样本T检验，配对样本T检验和单样本T检验。</p><p><strong>独立样本T检验</strong>和单因素方差分析功能上基本一致，但是独立样本T检验只能比较两组选项的差异，比如男性和女性。相对来讲，独立样本T检验在实验比较时使用频率更高，尤其是生物、医学相关领域。针对问卷研究，如果比较的类别为两组，独立样本T检验和单因素方差分析均可实现，研究者自行选择使用即可。</p><p>独立样本T检验和<strong>配对样本T检验</strong>功能上都是比较差异，而且均是比较两个组别差异。但二者有着实质性区别，如果是比较不同性别，婚姻状况(已婚和未婚)样本对某变量的差异时，应该使用独立样本T检验。如果比较组别之间有配对关系时，只能使用配对样本T检验，配对关系是指类似实验组和对照组的这类关系。另外独立样本T检验两组样本个数可以不相等，而配对样本T检验的两组样本量需要完全相等。</p><p>T检验的第三种分析方法为<strong>单样本T检验</strong>。比如问卷某题项选项表示为1分代表非常不满意，2分代表比较不满意，3分代表一般，4分代表比较满意，5分代表非常满意，当想分析样本对此题项的态度是否有明显的倾向，比如明显高于3分或者明显低于3分时，即可以使用单样本T检验。单样本T检验是比较某个题项的平均得分是否与某数字(例子是与3进行对比)有着明显的差异，如果呈现出显著性差异，即说明明显该题项平均打分明显不等于3分。此分析方法在问卷研究中较少使用，平均得分是否明显不为3分可以很直观的看出，而不需要单独进行检验分析。</p><h1>卡方分析</h1><p>卡方检验用于分析定类数据与定类数据之间的关系情况。例如研究人员想知道两组学生对于手机品牌的偏好差异情况，则应该使用卡方分析。卡方是通过分析不同类别数据的相对选择频数和占比情况，进而进行差异判断，单选题或多选题均可以使用卡方分析进行对比差异分析。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差异分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各个模型概要</title>
      <link href="/2022/09/08/%E5%90%84%E4%B8%AA%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%A6%81/"/>
      <url>/2022/09/08/%E5%90%84%E4%B8%AA%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%A6%81/</url>
      
        <content type="html"><![CDATA[<h2 id="优化模型"><strong>优化模型</strong></h2><p><strong>1.1 数学规划模型</strong></p><p>线性规划、整数线性规划、非线性规划、多目标规划、动态规划。</p><p><strong>1.2 微分方程组模型</strong></p><p>阻滞增长模型、SARS传播模型。</p><p><strong>1.3 图论与网络优化问题</strong><br>最短路径问题、网络最大流问题、最小费用最大流问题、最小生成树问题(MST)、旅行商问题(TSP)、图的着色问题。</p><p><strong>1.4 概率模型</strong><br>决策模型、随机存储模型、随机人口模型、报童问题、Markov链模型。</p><p><strong>1.5 组合优化经典问题 根据实际问题解决</strong></p><p><strong>1.5.1 多维背包问题(MKP)</strong><br>背包问题：个物品，对物品，体积为，背包容量为。如何将尽可能多的物品装入背包。<br>多维背包问题：个物品，对物品，价值为，体积为，背包容量为。如何选取物品装入背包，是背包中物品的总价值最大。<br>多维背包问题在实际中的应用有：资源分配、货物装载和存储分配等问题。该问题属于难问题。</p><p><strong>1.5.2 二维指派问题(QAP)</strong><br>工作指派问题：个工作可以由个工人分别完成。工人完成工作的时间为。如何安排使总工作时间最小。<br>二维指派问题（常以机器布局问题为例）：台机器要布置在个地方，机器与之间的物流量为，位置与之间的距离为，如何布置使费用最小。<br>二维指派问题在实际中的应用有：校园建筑物的布局、医院科室的安排、成组技术中加工中心的组成问题等。</p><p><strong>1.5.3 旅行商问题(TSP)</strong><br>旅行商问题：有个城市，城市与之间的距离为，找一条经过个城市的巡回（每个城市经过且只经过一次，最后回到出发点），使得总路程最小。</p><p><strong>1.5.4 车辆路径问题(VRP)</strong><br>车辆路径问题（也称车辆计划）：已知个客户的位置坐标和货物需求，在可供使用车辆数量及运载能力条件的约束下，每辆车都从起点出发，完成若干客户点的运送任务后再回到起点，要求以最少的车辆数、最小的车辆总行程完成货物的派送任务。<br>TSP问题是VRP问题的特例。</p><p><strong>1.5.5 车间作业调度问题(JSP)</strong><br>车间调度问题：存在个工作和台机器，每个工作由一系列操作组成，操作的执行次序遵循严格的串行顺序，在特定的时间每个操作需要一台特定的机器完成，每台机器在同一时刻不能同时完成不同的工作，同一时刻同一工作的各个操作不能并发执行。如何求得从第一个操作开始到最后一个操作结束的最小时间间隔。</p><h2 id="分类模型"><strong>分类模型</strong></h2><p><strong>2.1 判别分析</strong><br><strong>2.1.1 距离判别法</strong><br>基本思想：首先根据已知分类的数据，分别计算各类的重心即分组(类)的均值，判别准则是对任给的一次观测，若它与第类的重心距离最近，就认为它来自第类。<br>至于距离的测定，可以根据实际需要采用欧氏距离、马氏距离、明科夫距离等。</p><p><strong>2.1.2 Fisher判别法</strong><br>基本思想：从两个总体中抽取具有个指标的样品观测数据，借助方差分析的思想构造一个判别函数或称判别式。其中系数确定的原则是使两组间的区别最大，而使每个组内部的离差最小。<br>对于一个新的样品，将它的p个指标值代人判别式中求出 y 值，然后与判别临界值(或称分界点(后面给出)进行比较，就可以判别它应属于哪一个总体。在两个总体先验概率相等的假设下，判别临界值一般取：最后，用统计量来检验判别效果，若则认为判别有效，否则判别无效。<br>以上描述的是两总体判别，至于多总体判别方法则需要加以扩展。<br>Fisher判别法随着总体数的增加，建立的判别式也增加，因而计算比较复杂。</p><p><strong>2.1.3 Bayes判别法</strong><br>基本思想：假定对所研究的对象有一定的认识，即假设个总体中，第个总体的先验概率为，概率密度函数为。利用bayes公式计算观测样品来自第个总体的后验概率，当时，将样本判为总体。</p><p><strong>2.1.4 逐步判别法</strong><br>基本思想与逐步回归法类似，采用“有进有出”的算法，逐步引入变量，每次引入一个变量进入判别式，则同时考虑在较早引入判别式的某些作用不显著的变量剔除出去。</p><p><strong>2.2 聚类分析</strong><br>聚类分析是一种无监督的分类方法，即不预先指定类别。<br>根据分类对象不同，聚类分析可以分为样本聚类（Q型）和变量聚类（R型）。样本聚类是针对观测样本进行分类，而变量聚类则是试图找出彼此独立且有代表性的自变量，而又不丢失大部分信息。变量聚类是一种降维的方法。</p><p><strong>2.2.1 系统聚类法（分层聚类法）</strong><br>基本思想：开始将每个样本自成一类；然后求两两之间的距离，将距离最近的两类合成一类；如此重复，直到所有样本都合为一类为止。<br>适用范围：既适用于样本聚类，也适用于变量聚类。并且距离分类准则和距离计算方法都有多种，可以依据具体情形选择。</p><p><strong>2.2.2 快速聚类法（K-均值聚类法）</strong><br>基本思想：按照指定分类数目，选择个初始聚类中心；计算每个观测量（样本）到各个聚类中心的距离，按照就近原则将其分别分到放入各类中；重新计算聚类中心，继续以上步骤；满足停止条件时（如最大迭代次数等）则停止。<br>使用范围：要求用户给定分类数目，只适用于样本聚类（Q型），不适用于变量聚类（R型）。</p><p><strong>2.2.3 两步聚类法（智能聚类方法）</strong><br>基本思想：先进行预聚类，然后再进行正式聚类。<br>适用范围：属于智能聚类方法，用于解决海量数据或者具有复杂类别结构的聚类分析问题。可以同时处理离散和连续变量，自动选择聚类数，可以处理超大样本量的数据。</p><p><strong>2.2.4 模糊聚类分析</strong><br><strong>2.2.5 与遗传算法、神经网络或灰色理论联合的聚类方法</strong><br><strong>2.3 神经网络分类方法</strong></p><h2 id="评价模型"><strong>评价模型</strong></h2><p><strong>3.1 层次分析法(AHP)</strong></p><p>基本思想：是定性与定量相结合的多准则决策、评价方法。将决策的有关元素分解成目标层、准则层和方案层，并通过人们的判断对决策方案的优劣进行排序，在此基础上进行定性和定量分析。它把人的思维过程层次化、数量化，并用数学为分析、决策、评价、预报和控制提供定量的依据。<br>基本步骤：构建层次结构模型；构建成对比较矩阵；层次单排序及一致性检验（即判断主观构建的成对比较矩阵在整体上是否有较好的一致性）；层次总排序及一致性检验（检验层次之间的一致性）。<br>优点：它完全依靠主观评价做出方案的优劣排序，所需数据量少，决策花费的时间很短。从整体上看，AHP在复杂决策过程中引入定量分析，并充分利用决策者在两两比较中给出的偏好信息进行分析与决策支持，既有效地吸收了定性分析的结果，又发挥了定量分析的优势，从而使决策过程具有很强的条理性和科学性，特别适合在社会经济系统的决策分析中使用。<br>缺点：用AHP进行决策主观成分很大。当决策者的判断过多地受其主观偏好影响，而产生某种对客观规律的歪曲时，AHP的结果显然就靠不住了。<br>适用范围：尤其适合于人的定性判断起重要作用的、对决策结果难于直接准确计量的场合。要使AHP的决策结论尽可能符合客观规律，决策者必须对所面临的问题有比较深入和全面的认识。另外，当遇到因素众多，规模较大的评价问题时，该模型容易出现问题，它要求评价者对问题的本质、包含的要素及其相互之间的逻辑关系能掌握得十分透彻，否则评价结果就不可靠和准确。<br>改进方法：<br>(1) 成对比较矩阵可以采用德尔菲法获得。<br>(2) 如果评价指标个数过多（一般超过9个），利用层次分析法所得到的权重就有一定的偏差，继而组合评价模型的结果就不再可靠。可以根据评价对象的实际情况和特点，利用一定的方法，将各原始指标分层和归类，使得每层各类中的指标数少于9个。<br><strong>3.2 灰色综合评价法（灰色关联度分析）</strong><br>基本思想：灰色关联分析的实质就是，可利用各方案与最优方案之间关联度大小对评价对象进行比较、排序。关联度越大，说明比较序列与参考序列变化的态势越一致，反之，变化态势则相悖。由此可得出评价结果。<br>基本步骤：建立原始指标矩阵；确定最优指标序列；进行指标标准化或无量纲化处理；求差序列、最大差和最小差；计算关联系数；计算关联度。 优点：是一种评价具有大量未知信息的系统的有效模型，是定性分析和定量分析相结合的综合评价模型，该模型可以较好地解决评价指标难以准确量化和统计的问题，可以排除人为因素带来的影响，使评价结果更加客观准确。整个计算过程简单，通俗易懂，易于为人们所掌握;数据不必进行归一化处理，可用原始数据进行直接计算，可靠性强；评价指标体系可以根据具体情况增减；无需大量样本，只要有代表性的少量样本即可。 缺点：要求样本数据且具有时间序列特性；只是对评判对象的优劣做出鉴别，并不反映绝对水平，故基于灰色关联分析综合评价具有“相对评价”的全部缺点。<br>适用范围：对样本量没有严格要求，不要求服从任何分布，适合只有少量观测数据的问题；应用该种方法进行评价时，指标体系及权重分配是一个关键的问题，选择的恰当与否直接影响最终评价结果。 改进方法： (1) 采用组合赋权法：根据客观赋权法和主观赋权法综合而得权系数。 (2) 结合TOPSIS法：不仅关注序列与正理想序列的关联度，而且关注序列与负理想序列的关联度，依据公式计算最后的关联度。</p><p><strong>3.3 模糊综合评价法</strong><br>基本思想：是以模糊数学为基础，应用模糊关系合成的原理，将一些边界不清、不易定量的因素定量化，从多个因素对被评价事物隶属等级（或称为评语集）状况进行综合性评价的一种方法。综合评判对评判对象的全体，根据所给的条件，给每个对象赋予一个非负实数评判指标，再据此排序择优。 基本步骤：确定因素集、评语集；构造模糊关系矩阵；确定指标权重；进行模糊合成和做出评价。 优点：:数学模型简单，容易掌握，对多因素、多层次的复杂问题评判效果较好。模糊评判模型不仅可对评价对象按综合分值的大小进行评价和排序，而且还可根据模糊评价集上的值按最大隶属度原则去评定对象所属的等级，结果包含的信息量丰富。评判逐对进行，对被评对象有唯一的评价值，不受被评价对象所处对象集合的影响。接近于东方人的思维习惯和描述方法，因此它更适用于对社会经济系统问题进行评价。 缺点：并不能解决评价指标间相关造成的评价信息重复问题，隶属函数的确定还没有系统的方法，而且合成的算法也有待进一步探讨。其评价过程大量运用了人的主观判断，由于各因素权重的确定带有一定的主观性，因此，总的来说，模糊综合评判是一种基于主观信息的综合评价方法。 应用范围：广泛地应用于经济管理等领域。综合评价结果的可靠性和准确性依赖于合理选取因素、因素的权重分配和综合评价的合成算子等。 改进方法： (1) 采用组合赋权法：根据客观赋权法和主观赋权法综合而得权系数。<br><strong>3.4 BP神经网络综合评价法</strong><br>基本思想：是一种交互式的评价方法，它可以根据用户期望的输出不断修改指标的权值，直到用户满意为止。因此，一般来说，人工神经网络评价方法得到的结果会更符合实际情况。 优点：神经网络具有自适应能力，能对多指标综合评价问题给出一个客观评价，这对于弱化权重确定中的人为因素是十分有益的。在以前的评价方法中，传统的权重设计带有很大的模糊性，同时权重确定中人为因素影响也很大。随着时间、空间的推移，各指标对其对应问题的影响程度也可能发生变化，确定的初始权重不一定符合实际情况。再者，考虑到整个分析评价是一个复杂的非线性大系统，必须建立权重的学习机制，这些方面正是人工神经网络的优势所在。针对综合评价建模过程中变量选取方法的局限性，采用神经网络原理可对变量进行贡献分析，进而剔除影响不显著和不重要的因素，以建立简化模型，可以避免主观因素对变量选取的干扰。 缺点：ANN在应用中遇到的最大问题是不能提供解析表达式，权值不能解释为一种回归系数，也不能用来分析因果关系，目前还不能从理论上或从实际出发来解释ANN的权值的意义。需要大量的训练样本，精度不高，应用范围是有限的。最大的应用障碍是评价算法的复杂性，人们只能借助计算机进行处理，而这方面的商品化软件还不够成熟。 适用范围：神经网络评价模型具有自适应能力、可容错性，能够处理非线性、非局域性的大型复杂系统。在对学习样本训练中，无需考虑输入因子之间的权系数，ANN通过输入值与期望值之间的误差比较，沿原连接权自动地进行调节和适应，因此该方法体现了因子之间的相互作用。 改进方法： (1) 采用组合评价法：对用其它评价方法得出的结果，选取一部分作为训练样本，一部分作为待测样本进行检验，如此对神经网络进行训练，知道满足要求为止，可得到更好的效果。<strong>3.5 数据包络法(DEA)</strong><br><strong>3.6 组合评价法</strong></p><h2 id="预测模型"><strong>预测模型</strong></h2><p><strong>4.1 回归分析法</strong><br>基本思想：根据历史数据的变化规律，寻找自变量与因变量之间的回归方程式，确定模型参数，据此预测。回归问题分为一元和多元回归、线性和非线性回归。<br>特点：技术比较成熟，预测过程简单；将预测对象的影响因素分解，考察各因素的变化情况，从而估计预测对象未来的数量状态；回归模型误差较大，外推特性差。<br>适用范围：回归分析法一般适用于中期预测。回归分析法要求样本量大且要求样本有较好的分布规律，当预测的长度大于占有的原始数据长度时，采用该方法进行预测在理论上不能保证预测结果的精度。另外，可能出现量化结果与定性分析结果不符的现象，有时难以找到合适的回归方程类型。</p><p><strong>4.2 时间序列分析法</strong><br>基本思想：把预测对象的历史数据按一定的时间间隔进行排列，构成一个随时间变化的统计序列，建立相应的数据随时间变化的变化模型，并将该模型外推到未来进行预测。 适用范围：此方法有效的前提是过去的发展模式会延续到未来，因而这种方法对短期预测效果比较好，而不适合作中长期预测。一般来说，若影响预测对象变化各因素不发生突变，利用时间序列分析方法能得到较好的预测结果；若这些因素发生突变，时间序列法的预测结果将受到一定的影响。</p><p><strong>4.3 灰色预测法</strong><br>基本思想：将一切随机变量看作是在一定范围内变化的灰色变量，不是从统计规律角度出发进行大样本分析研究，而是利用数据处理方法(数据生成与还原)，将杂乱无章的原始数据整理成规律性较强的生成数据来加以研究，即灰色系统理论建立的不是原始数据模型，而是生成数据模型。 适用范围：预测模型是一个指数函数，如果待测量是以某一指数规律发展的，则可望得到较高精度的预测结果。影响模型预测精度及其适应性的关键因素，是模型中背景值的构造及预测公式中初值的选取。</p><p><strong>4.4 BP神经网络法</strong><br>人工神经网络的理论有表示任意非线性关系和学习等的能力，给解决很多具有复杂的不确定性和时变性的实际问题提供了新思想和新方法。 利用人工神经网络的学习功能，用大量样本对神经元网络进行训练，调整其连接权值和闭值，然后可以利用已确定的模型进行预测。神经网络能从数据样本中自动地学习以前的经验而无需繁复的查询和表述过程，并自动地逼近那些最佳刻画了样本数据规律的函数，而不论这些函数具有怎样的形式，且所考虑的系统表现的函数形式越复杂，神经网络这种特性的作用就越明显。 误差反向传播算法(BP算法)的基本思想是通过网络误差的反向传播，调整和修改网络的连接权值和闭值，使误差达到最小，其学习过程包括前向计算和误差反向传播。它利用一个简单的三层人工神经网络模型，就能实现从输入到输出之间任何复杂的非线性映射关系。目前，神经网络模型已成功地应用于许多领域，诸如经济预测、财政分析、贷款抵押评估和破产预测等许多经济领域。 优点：可以在不同程度和层次上模仿人脑神经系统的结构及信息处理和检索等功能，对大量非结构性、非精确性规律具有极强的自适应功能，具有信息记忆、自主学习、知识推理和优化计算等特点，其自学习和自适应功能是常规算法和专家系统技术所不具备的，同时在一定程度上克服了由于随机性和非定量因素而难以用数学公式严密表达的困难。 缺点：网络结构确定困难，同时要求有足够多的历史数据，样本选择困难，算法复杂，容易陷入局部极小点。</p><p><strong>4.5 支持向量机法</strong><br>支持向量机是基于统计学习的机器学习方法，通过寻求结构风险化最小，实现经验风险和置信范围的最小，从而达到在统计样本较少的情况下，亦能获得良好统计规律的目的。 其中支持向量机是统计学习理论的核心和重点。支持向量机是结构风险最小化原理的近似，它能够提高学习机的泛化能力，既能够由有限的训练样本得到小的误差，又能够保证对独立的测试集仍保持小的误差，而且支持向量机算法是一个凸优化问题，因此局部最优解一定是全局最优解，支持向量机就克服了神经网络收敛速度慢和局部极小点等缺陷。 核函数的选取在SVM方法中是一个较为困难的问题，至今没有一定的理论方面的指导。</p><p><strong>4.6 组合预测法</strong><br>在实际预测工作中，从信息利用的角度来说，就是任何一种单一预测方法都只利用了部分有用信息，同时也抛弃了其它有用的信息。为了充分发挥各预测模型的优势，对于同一预测问题，往往可以采用多种预测方法进行预测。不同的预测方法往往能提供不同的有用信息，组合预测将不同预测模型按一定方式进行综合。根据组合定理，各种预测方法通过组合可以尽可能利用全部的信息，尽可能地提高预测精度，达到改善预测性能的目的。 优化组合预测有两类概念，一是指将几种预测方法所得的预测结果，选取适当的权重进行加权平均的一种预测方法，其关键是确定各个单项预测方法的加权系数；二是指在几种预测方法中进行比较，选择拟合度最佳或标准离差最小的预测模型作为最优模型进行预测。组合预测是在单个预测模型不能完全正确地描述预测量的变化规律时发挥其作用的。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模型概要 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博弈论</title>
      <link href="/2022/09/08/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
      <url>/2022/09/08/%E5%8D%9A%E5%BC%88%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1>博弈论</h1><h1>博弈模型/博弈论/对策论</h1><h2 id="百科定义">百科定义</h2><p><strong>博弈论</strong>（英语：Game Theory），又译为<strong>对策论</strong>或<strong>赛局理论</strong>，是<a href="https://zh.wikipedia.org/wiki/%E7%BB%8F%E6%B5%8E%E5%AD%A6">经济学</a>的一个分支，1944年<a href="https://zh.wikipedia.org/wiki/%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC">冯·诺伊曼</a>与<a href="https://zh.wikipedia.org/wiki/%E5%A5%A5%E6%96%AF%E5%8D%A1%C2%B7%E6%91%A9%E6%A0%B9%E6%96%AF%E7%89%B9%E6%81%A9">奥斯卡·摩根斯特恩</a>合著《博弈论与经济行为》，标志着现代系统博弈理论的的初步形成，因此他们被称为“博弈论之父”。博弈论被认为是20世纪经济学最伟大的成果之一。目前可以应用在<a href="https://zh.wikipedia.org/wiki/%E7%94%9F%E7%89%A9%E5%AD%A6">生物学</a>、<a href="https://zh.wikipedia.org/wiki/%E7%BB%8F%E6%B5%8E%E5%AD%A6">经济学</a>、<a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E5%85%B3%E7%B3%BB">国际关系</a>、<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6">计算机科学</a>、<a href="https://zh.wikipedia.org/wiki/%E6%94%BF%E6%B2%BB%E5%AD%A6">政治学</a>、<a href="https://zh.wikipedia.org/wiki/%E5%86%9B%E4%BA%8B%E6%88%98%E7%95%A5">军事战略</a>，研究<strong>游戏</strong>或者<strong>博弈</strong>内的相互作用，是研究具有斗争或竞争性质现象的数学理论和方法。也是<a href="https://zh.wikipedia.org/wiki/%E9%81%8B%E7%B1%8C%E5%AD%B8">运筹学</a>的一个重要学科。 现代的博弈论的源头是<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC">约翰·冯·诺伊曼</a>对于双人<a href="https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%92%8C%E8%B5%9B%E5%B1%80">零和博弈</a>的混合策略均衡点的发想和证明。</p><h2 id="模型背景">模型背景</h2><ul><li>多个决策者</li><li>每个决策都有自己的决策变量和目标函数</li><li>一个决策者的决策变量以某种形式出现在另一个决策者的目标函数中</li><li>决策者之间的决策行为相互影响</li></ul><h2 id="具体分类">具体分类</h2><ul><li>合作博弈：是否达成有约束性的协议<ul><li>静态动态博弈</li><li>完全信息不完全信息博弈</li></ul></li><li>非合作博弈</li></ul><h2 id="模型三要素">模型三要素</h2><ul><li>参与人：决策者</li><li>策略空间：决策变量的取值范围</li><li>效用函数：决策者的目标函数</li></ul><h2 id="学术词汇">学术词汇</h2><ul><li>零和博弈：双方，一方所得即一方所失。</li><li>策略式博弈（静态博弈）<ul><li>所有玩家同时做策略选择</li><li>知道对手可选的策略</li><li>不知道对手具体会选哪一个策略</li><li>非合作</li></ul></li><li>完全信息：所有玩家都知道在一组策略选择下的每个人的收益。</li></ul><h1>建议看《数学模型》例子很多很详细。</h1><h1>博弈论导论</h1><h3 id="一、什么是博弈论？"><strong>一、什么是博弈论？</strong></h3><p><strong>博弈论(Game Theory)<strong>是</strong>相互依存</strong>情况中的<strong>理性行为</strong>的数学建模。博弈由这几个要素构成：</p><ul><li>玩家(Players)：博弈的参与者</li><li>策略(Strategy)：博弈玩家各自的操作</li><li>收益(Payoff)：博弈玩家的收益，一般用矩阵来表示，在连续的时候也会写成函数。</li><li>信息(Information)：博弈玩家知道的信息</li><li>理性(Rationality)：博弈玩家是理性的，在竞争的情况下使自己的收益最大化</li></ul><p><strong>博弈论方法的本质——相互依存性</strong>：每一方的收益不仅依赖于自己的策略，同时也依赖其他参与方的策略。</p><p><strong>博弈论研究的目标——均衡</strong>：因为博弈的参与方的策略改变会造成收益的变化，所以，各玩家会调整策略使自己的收益最大。在这样的情况下，一个“稳定”的策略选择是值得研究的。各个玩家选择了各自的策略之后，没有动机去改变当前的策略，就形成了稳定的状态。</p><p>定义是抽象的，还是用一些例子来找找感觉吧。</p><h3 id="二、例子：囚徒困境"><strong>二、例子：囚徒困境</strong></h3><p>这个例子应该是众所周知。简要介绍一下：</p><blockquote><p>两个共谋犯罪的人被关入监狱，不能互相沟通情况。①如果两个人都不揭发对方，则由于证据不确定，每个人都坐牢一年；②若一人揭发，而另一人沉默，则揭发者因为立功而立即获释，沉默者因不合作而入狱十二年；③若互相揭发，则因证据确凿，二者都判刑六年。</p></blockquote><p>考察博弈的几个要素：</p><ol><li>玩家：这两个犯罪的人，记为A、B</li><li>策略：二者的策略都是{揭发、沉默}</li><li>收益：用收益矩阵来表示</li></ol><p><img src="https://pic3.zhimg.com/80/v2-978177f121f1046139045e3e7fe4dd3a_720w.jpg" alt="img">囚徒困境收益矩阵</p><p>\4. 信息：这种情况是完全信息的，即，每一参与者都拥有所有其他参与者的收益函数的准确信息。</p><p>剧透一下，囚徒困境的”均衡“，是二人都选择<strong>揭发</strong>的策略。</p><h3 id="三、分类"><strong>三、分类</strong></h3><ul><li>根据玩家数量分为：1人，2人，多人博弈</li><li>根据“同时做决策”还是“轮流做决策”分为：策略式博弈(静态博弈)和扩展式博弈(动态博弈)、</li><li>根据信息的了解情况分为：完全信息博弈和非完全信息博弈</li><li>根据收益分为：零和博弈、非零和博弈</li><li>合作、非合作博弈</li><li>根据策略的数量分为：有限博弈和无限博弈</li></ul><p>当然，上面的分类很杂，我们的课程主要讲了这几种：</p><ol><li>完全信息策略式博弈</li><li>非完全信息策略式博弈</li><li>完全信息扩展式博弈</li><li>非完全信息扩展式博弈</li><li>重复博弈</li></ol><h3 id="四、小结"><strong>四、小结</strong></h3><p>博弈论很有趣的，你会发现很多意想不到的结果。不过，由于博弈论假设每个玩家都是“理性”的，而现实生活却不一定是这样，因此，很多情况下博弈论给出的结论只是一个理论上的参考。</p><p>有一些有意思的小例子，算是智力小测试了，感兴趣可以看看：</p><ol><li>Nim博弈：有一堆硬币，总个数是N；有2个玩家，轮流取硬币。每次可以选择取1枚或2枚。取到最后一枚硬币的人获胜。请问先手有必胜策略还是后手？(和N有关)</li><li>海盗博弈：这个更有意思一些</li></ol><ul><li>有五个理性的海盗，P1、 P2、 P3 、P4 和P5，找到了100个金币，需要想办法分配金币。海盗们有严格的等级制度：P1 &lt; P2 &lt; P3 &lt; P4 &lt; P5。</li><li>海盗世界的分配原则是：等级最高的海盗提出一种分配方案。所有的海盗投票决定是否接受分配，包括提议人。并且在票数相同的情况下，提议人有决定权。如果提议通过，那么海盗们按照提议分配金币。如果没有通过，那么提议人将被扔出船外，然后由下一个最高职位的海盗提出新的分配方案。</li><li>请问，最终每个人分别会获得多少金币呢？</li></ul><h1>博弈论笔记一：策略式博弈及其纳什均衡</h1><p><a href="https://zhuanlan.zhihu.com/p/148303919">序言</a>中介绍了博弈的要素和博弈的分类，那么，怎么“论”呢？当下最重要的，是将博弈用数学语言来描述出来，也就是<strong>形式化</strong>。</p><p>博弈不同的分类：{策略式，扩展式}，{完全信息，非完全信息}等等，都有不同的形式化表示，这一节介绍最简单的一种：<strong>完全信息策略式博弈</strong>。</p><p>与之对应的例子有：囚徒困境(Prisoners’ Dilemma)、古诺竞争(Cournot Competition)。</p><p>对了，顺便提一下，博弈不是“<strong>搏</strong>”而是“<strong>博</strong>”，哈哈，一开始学的时候写错了。</p><h3 id="一、一些概念的定义">一、一些概念的定义</h3><h3 id="1-策略式博弈">1. 策略式博弈</h3><p>策略式博弈也叫静态博弈，它是<strong>一次</strong>博弈：</p><ul><li>所有玩家同时做策略选择</li><li>知道对手可选的策略</li><li>不知道对手具体会选哪一个策略</li><li>非合作</li></ul><p>典型的例子是：石头剪刀布。</p><p>与策略式博弈相对应的是扩展式博弈(动态博弈)。</p><h3 id="2-完全信息">2. 完全信息</h3><p>所有玩家都知道在一组策略选择下的每个人的收益。</p><p><strong>下面把完全信息策略式博弈简写为：策略式博弈</strong></p><h3 id="二、策略式博弈形式化">二、策略式博弈形式化</h3><p>形式化主要是将博弈的要素用数学语言表示出来。对于一个策略式博弈，用{玩家、策略、收益}就可以完全表示。</p><h3 id="1-基础概念的定义">1. 基础概念的定义</h3><p>一个策略式博弈包括：</p><ul><li><strong>玩家集</strong>N：玩家的有限集合</li><li>每个玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">都有<strong>策略集</strong><img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">，表示他可以选择的策略的集合</li><li>每个玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">都有<strong>收益函数</strong><img src="https://www.zhihu.com/equation?tex=u_i" alt="[公式]">：<img src="https://www.zhihu.com/equation?tex=A_1+%5Ctimes+A_2+%5Ctimes+%5Cdots+A_N+%5Crightarrow+R" alt="[公式]">，表示在一组策略下它的收益</li></ul><p>此外，有如下定义：</p><ul><li><strong>博弈结果</strong>：<img src="https://www.zhihu.com/equation?tex=a+%3D+%28a_1%2Ca_2%2C%5Cdots%2Ca_N%29" alt="[公式]">，是一组策略构成的元组</li><li><strong>博弈结果空间</strong>：<img src="https://www.zhihu.com/equation?tex=A+%3D+A_1+%5Ctimes+A_2+%5Ctimes+%5Cdots+A_N" alt="[公式]">，则<img src="https://www.zhihu.com/equation?tex=a+%5Cin+A" alt="[公式]"></li><li><strong>对手策略</strong>：<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D+%3D+%28a_1%2C%5Cdots%2Ca_%7Bi-1%7D%2C+a_%7Bi%2B1%7D%2C%5Cdots%2Ca_N%29" alt="[公式]">，则<img src="https://www.zhihu.com/equation?tex=a+%3D+%28a_i%2Ca_%7B-i%7D%29" alt="[公式]"></li></ul><blockquote><p>在策略式博弈中，收益的具体数值并不重要，重要的是收益之间的大小关系，称作偏好关系。任何满足全序关系的集合，都可以用来表示收益。我们通常用实数来表示收益。</p></blockquote><h3 id="2-形式化">2. 形式化</h3><p>集合 <img src="https://www.zhihu.com/equation?tex=+G+%3D+%5C%7BN%2C+%5C%7B+A_i+%5C%7D_%7Bi%3D1%7D%5EN%2C+%5C%7B+u_i+%5C%7D_%7Bi%3D1%7D%5EN+%5C%7D+%5C%5C" alt="[公式]"> 称作<strong>策略式博弈G</strong></p><p>其中<img src="https://www.zhihu.com/equation?tex=N%2CA_i%2Cu_i" alt="[公式]">就是前面定义的那样。</p><h3 id="3-例子：囚徒困境形式化">3. 例子：囚徒困境形式化</h3><p><img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C+%5C%7B+A_1%2CA_2+%5C%7D%2C+%5C%7B+u_1%2Cu_2+%5C%7D+%5C%7D" alt="[公式]"></p><ul><li>玩家集：<img src="https://www.zhihu.com/equation?tex=N+%3D+%5C%7B1%2C2%5C%7D" alt="[公式]">，表示1、2两个囚徒</li><li>策略集：<img src="https://www.zhihu.com/equation?tex=A_1+%3D+A_2+%3D+%5C%7B%E5%9D%A6%E7%99%BD%EF%BC%8C%E6%B2%89%E9%BB%98%5C%7D" alt="[公式]">，为了书写简便，用c表示坦白，用d表示沉默</li><li>收益函数：</li><li><img src="https://www.zhihu.com/equation?tex=u_%7B1%7D%28c%2C+c%29%3D-6%2C+u_%7B1%7D%28c%2C+d%29%3D0%2C+u_%7B1%7D%28d%2C+d%29%3D-1%2C+u_%7B1%7D%28d%2C+c%29%3D-12" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=u_%7B2%7D%28c%2C+c%29%3D-6%2C+u_%7B2%7D%28c%2C+d%29%3D-12%2C+u_%7B2%7D%28d%2C+d%29%3D-1%2C+u_%7B2%7D%28d%2C+c%29%3D0" alt="[公式]"></li><li>用收益矩阵表示如下：</li></ul><p><img src="https://pic3.zhimg.com/80/v2-978177f121f1046139045e3e7fe4dd3a_720w.jpg" alt="img">囚徒困境收益矩阵</p><h3 id="三、纳什均衡">三、纳什均衡</h3><p>我们自然地会去想，在这种条件下，两个囚犯会选择怎样的策略呢？先从A的视角想一下，</p><ul><li>如果B坦白：A选择坦白，收益是(-6)；A选择沉默，收益是(-12)，因此A会坦白。</li><li>如果B沉默：A选择坦白，收益是(0)；A选择沉默，收益是(-1)，因此A会坦白。</li></ul><p>同理，B也是这么想的，因此，两人都会选择坦白。</p><h3 id="1-纳什均衡的想法">1. 纳什均衡的想法</h3><p>从上面的思考中，可以看出这种思想：当对手策略选定的时候，我会调整自己的策略，使得自己收益在几种策略选择中是最大的，这时的策略称为“<strong>最优反应</strong>”。这个时候，<strong>如果对手不改变策略的话，我是没有动机去改变自己的策略的。</strong></p><p>如果每个人的策略都是“最优反应”，那么就会形成一种稳定的局面，这时的<strong>博弈结果</strong>就是<strong>纳什均衡</strong></p><h3 id="2-纳什均衡形式化定义">2. 纳什均衡形式化定义</h3><p><strong>纳什均衡(Nash equilibrium)<strong>是</strong>博弈结果</strong><img src="https://www.zhihu.com/equation?tex=a%5E%7B%2A%7D%3D%5Cleft%28a_%7B1%7D%5E%7B%2A%7D%2C+a_%7B2%7D%5E%7B%2A%7D%2C+%5Cldots%2C+a_%7BN%7D%5E%7B%2A%7D%5Cright%29" alt="[公式]">，使得对于每个玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">都有： <img src="https://www.zhihu.com/equation?tex=+u_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%2A%7D%2C+a_%7B-i%7D%5E%7B%2A%7D%5Cright%29+%5Cgeq+u_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5E%7B%2A%7D%5Cright%29+%5C%5C" alt="[公式]"> (对手策略选定的时候，自己最优)</p><p>纳什均衡<strong>简写为</strong>：<strong>NE</strong></p><h3 id="3-纳什均衡求解：寻找最优反应">3. 纳什均衡求解：寻找最优反应</h3><p>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">关于对手策略<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D" alt="[公式]">的<strong>最优反应</strong>：<img src="https://www.zhihu.com/equation?tex=B_%7Bi%7D%5Cleft%28a_%7B-i%7D%5Cright%29%3D%5Cleft%5C%7Ba_%7Bi%7D+%5Cin+A_%7Bi%7D%3A+u_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+%5Cgeq+u_%7Bi%7D%5Cleft%28b_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+%5Ctext+%7B+for+all+%7D+b_%7Bi%7D+%5Cin+A_%7Bi%7D%5Cright%5C%7D" alt="[公式]"></p><p>同时满足所有人的最优反应的博弈结果，就是纳什均衡。也就是对于 <img src="https://www.zhihu.com/equation?tex=%5Cforall+i" alt="[公式]"> ，满足<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D%5E%7B%2A%7D+%5Cin+B_%7Bi%7D%5Cleft%28a_%7B-i%7D%5E%7B%2A%7D%5Cright%29" alt="[公式]">的博弈结果。</p><h3 id="4-例1：依旧是囚徒困境">4. 例1：依旧是囚徒困境</h3><p><img src="https://pic3.zhimg.com/80/v2-6a22d2cd25ca6b7effb745962834a40a_720w.jpg" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bll%7D+B_%7B1%7D%28c%29%3D%5C%7Bc%5C%7D+%26+B_%7B1%7D%28d%29%3D%5C%7Bc%5C%7D+%5C%5C+B_%7B2%7D%28c%29%3D%5C%7Bc%5C%7D+%26+B_%7B2%7D%28d%29%3D%5C%7Bc%5C%7D+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"> 在收益矩阵上标出这些最优反应：</p><p><img src="https://pic2.zhimg.com/80/v2-1b5d1051d86e9e846d4205899902ceb5_720w.jpg" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=B_1%28c%29%3D%5C%7Bc%5C%7D" alt="[公式]">表示在囚徒2选择c的时候，囚徒1会选择c，因为囚徒1的收益(-6 &gt; -12)。对应矩阵中左边红色的”√“。</p><p>详细分析如下：</p><p><img src="https://pic4.zhimg.com/80/v2-631c45fba73f7fbf0fa71686394261c7_720w.jpg" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=B_1%28d%29%3D%5C%7Bc%5C%7D" alt="[公式]">表示在囚徒2选择d的时候，囚徒1会选择c，因为囚徒1的收益(0 &gt; -1)。对应矩阵中右边红色的”√“。</p><p><img src="https://www.zhihu.com/equation?tex=B_2%28c%29%3D%5C%7Bc%5C%7D" alt="[公式]">表示在囚徒1选择c的时候，囚徒2会选择c，因为囚徒2的收益(-6 &gt; -12)。对应矩阵中上边绿色的”√“。</p><p><img src="https://www.zhihu.com/equation?tex=B_2%28d%29%3D%5C%7Bc%5C%7D" alt="[公式]">表示在囚徒1选择d的时候，囚徒2会选择c，因为囚徒2的收益(0 &gt; -1)。对应矩阵中下边绿色的”√“。</p><p>因此，最终得到满足所有人最优反应的结果：(c,c)，也就是两人都坦白。</p><h3 id="5-例2：古诺竞争">5. 例2：古诺竞争</h3><p>这个例子收益是连续的，不能用矩阵来表示。问题如下：</p><blockquote><p>两个厂商{1, 2}生产和销售同一种商品，厂商<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">生产的数量记为<img src="https://www.zhihu.com/equation?tex=q_i" alt="[公式]">。 每件商品生产成本都是c，售价是：<img src="https://www.zhihu.com/equation?tex=max%280%2Ca-b%28q_1%2Bq_2%29%29" alt="[公式]"> 求纳什均衡</p></blockquote><h3 id="1-形式化">1) 形式化</h3><p><img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C+%5C%7B+q_1%2Cq_2+%5C%7D%2C+%5C%7B+u_1%2Cu_2+%5C%7D+%5C%7D" alt="[公式]"></p><p>其中，收益<img src="https://www.zhihu.com/equation?tex=u_i%28q_1%2Cq_2%29+%3D+%28max%280%2Ca-b%28q_1%2Bq_2%29%29-c%29q_i" alt="[公式]">。(售价-成本)x生产数量</p><h3 id="2-求最优反应函数">2) 求最优反应函数</h3><p>对于厂商1：</p><ul><li>如果<img src="https://www.zhihu.com/equation?tex=q_%7B2%7D+%5Cgeq%28a-c%29+%2F+b" alt="[公式]">，那么对于任意的<img src="https://www.zhihu.com/equation?tex=q_1+%5Cge+0" alt="[公式]">，都有<img src="https://www.zhihu.com/equation?tex=u_%7B1%7D%5Cleft%28q_%7B1%7D%2C+q_%7B2%7D%5Cright%29+%5Cleq+0" alt="[公式]">，即没有正收益</li><li>如果<img src="https://www.zhihu.com/equation?tex=q_%7B2%7D+%3C+%28a-c%29+%2F+b" alt="[公式]">，那么<img src="https://www.zhihu.com/equation?tex=u_1%28q_1%2Cq_2%29+%3D+%28a-b%28q_1%2Bq_2%29%29-c%29q_1" alt="[公式]">。</li><li>固定<img src="https://www.zhihu.com/equation?tex=q_2" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=q_1" alt="[公式]">何时取最大呢？求导！</li><li>求解：<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+u_%7B1%7D%5Cleft%28q_%7B1%7D%2C+q_%7B2%7D%5Cright%29%7D%7B%5Cpartial+q_%7B1%7D%7D%3Da-c-b+q_%7B2%7D-2+b+q_%7B1%7D%3D0+" alt="[公式]">，求得<img src="https://www.zhihu.com/equation?tex=q_%7B1%7D%3D%5Cleft%28a-c-b+q_%7B2%7D%5Cright%29+%2F+2+b" alt="[公式]">，<strong>这就是厂商1的最优反应函数</strong></li></ul><p>同理，对于厂商2，最优反应函数是：<img src="https://www.zhihu.com/equation?tex=q_%7B2%7D%3D%5Cleft%28a-c-b+q_%7B1%7D%5Cright%29+%2F+2b" alt="[公式]"></p><h3 id="3-纳什均衡">3) 纳什均衡</h3><p>对于满足纳什均衡的博弈结果<img src="https://www.zhihu.com/equation?tex=%5Cleft%28q_%7B1%7D%5E%7B%2A%7D%2C+q_%7B2%7D%5E%7B%2A%7D%5Cright%29" alt="[公式]">，有： <img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bl%7D+q_%7B1%7D%5E%7B%2A%7D%3DB_%7B1%7D%5Cleft%28q_%7B2%7D%5E%7B%2A%7D%5Cright%29%3D%5Cleft%28a-c-b+q_%7B2%7D%5E%7B%2A%7D%5Cright%29+%2F+2+b+%5C%5C+q_%7B2%7D%5E%7B%2A%7D%3DB_%7B2%7D%5Cleft%28q_%7B1%7D%5E%7B%2A%7D%5Cright%29%3D%5Cleft%28a-c-b+q_%7B1%7D%5E%7B%2A%7D%5Cright%29+%2F+2+b+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"> 联立方程，解得<img src="https://www.zhihu.com/equation?tex=q_%7B1%7D%5E%7B%2A%7D%3D+q_%7B2%7D%5E%7B%2A%7D%3D%5Cfrac%7Ba-c%7D%7B3b%7D" alt="[公式]"></p><p><img src="https://pic1.zhimg.com/80/v2-2c3439f67583f2459569da619abf4048_720w.jpg" alt="img">最优反应相交之处</p><h3 id="四、小结-2">四、小结</h3><p>这节学习了：</p><ul><li><strong>策略式博弈</strong>形式化</li><li><strong>纳什均衡</strong>的定义及求解</li></ul><p>重要的是理解纳什均衡所表示的意义。纳什均衡并不一定是最优的结果，它是一种稳定的局面，在这种情况下，所有人都没有动机去改变自己的选择。</p><h1>博弈论笔记二：混合策略博弈</h1><h2 id="一、引言">一、引言</h2><p>前面，我们学习了策略式博弈的纳什均衡。每个玩家可选的策略也叫<strong>纯策略</strong>。在前面讲的纳什均衡中，每个玩家都要选定一个纯策略。但有的时候并不能找到一个纯策略的纳什均衡，举例如下：</p><p><img src="https://pic2.zhimg.com/80/v2-c884bd014117579593780431274ee575_720w.jpg" alt="img">没有纯策略纳什均衡</p><p>还有一个常见的例子：石头剪刀布，就没有纯策略的纳什均衡。</p><p>这个时候，需要引入新的概念——混合策略。</p><h3 id="二、混合策略博弈">二、混合策略博弈</h3><p>以石头剪刀布为例，无论双方采用哪种策略组合，输的一方总可以改变策略使自己反败为胜，因此没有纯策略的纳什均衡。通过引入“随机性”来解决这个问题。</p><p>通俗地解释，混合策略就是在纯策略上加上概率，在一次博弈中，玩家随机地选择一种纯策略。</p><h3 id="1-混合策略">1. 混合策略</h3><h3 id="1-纯策略">1)纯策略</h3><p>在前面的一节学习了<strong>纯策略</strong>的表示：玩家i的策略集<img src="https://www.zhihu.com/equation?tex=A_%7Bi%7D%3D%5Cleft%5C%7Ba_%7Bi+1%7D%2C+a_%7Bi+2%7D%2C+%5Cldots%2C+a_%7Bi+n_%7Bi%7D%7D%5Cright%5C%7D" alt="[公式]">，纯策略<img src="https://www.zhihu.com/equation?tex=a_i+%5Cin+A_i" alt="[公式]">。</p><h3 id="2-混合策略">2)混合策略</h3><p><strong>混合策略是给每个纯策略分配一个概率</strong>，一个玩家的策略集就是一个“样本空间”。</p><p>用<img src="https://www.zhihu.com/equation?tex=%5CDelta%28A_i%29" alt="[公式]">表示<img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">上的概率分布，即： <img src="https://www.zhihu.com/equation?tex=+%5Cmathbf%7B%5CDelta%7D%5Cleft%28%5Cboldsymbol%7BA%7D_%7B%5Cboldsymbol%7Bi%7D%7D%5Cright%29%3D%5Cleft%5C%7Bp_%7Bi%7D%3D%5Cleft%5C%7Bp_%7Bi+1%7D%2C+p_%7Bi+2%7D%2C+%5Cldots%2C+p_%7Bi+n_%7Bi%7D%7D%5Cright%5C%7D%2C+p_%7Bi+j%7D+%5Cgeq+0%2C+%5Csum_%7Bj%7D+p_%7Bi+j%7D%3D1%5Cright%5C%7D+%5C%5C" alt="[公式]"> 那么，<strong>混合策略</strong><img src="https://www.zhihu.com/equation?tex=p_%7Bi%7D%3D%5Cleft%28p_%7Bi+1%7D%2C+p_%7Bi+2%7D%2C+%5Cldots%2C+p_%7Bi+n_%7Bi%7D%7D%5Cright%29+%5Cin+%5Cmathbf%7B%5CDelta%7D%5Cleft%28A_%7Bi%7D%5Cright%29" alt="[公式]"></p><h3 id="3-混合策略博弈结果">3)混合策略博弈结果</h3><p>混合策略博弈的<strong>博弈结果</strong><img src="https://www.zhihu.com/equation?tex=%5Cboldsymbol%7Bp%7D%3D%5Cleft%28%5Cboldsymbol%7Bp%7D_%7B1%7D%2C+%5Cboldsymbol%7Bp%7D_%7B2%7D%2C+%5Cldots%2C+%5Cboldsymbol%7Bp%7D_%7BN%7D%5Cright%29%2C+p_%7Bi%7D+%5Cin+%5CDelta%5Cleft%28A_%7Bi%7D%5Cright%29" alt="[公式]"></p><p>定义<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D%3D%5Cleft%28p_%7B1%7D%2C+%5Cldots%2C+p_%7Bi-1%7D%2C+p_%7Bi%2B1%7D%2C+%5Cldots%2C+p_%7BN%7D%5Cright%29" alt="[公式]">，则<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7Bi%7D%2C+p_%7B-i%7D%5Cright%29" alt="[公式]"></p><h3 id="2-期望收益">2. 期望收益</h3><p>在这样一个“随机”的博弈中，收益如何计算呢？这就需要计算期望的收益了。期望的收益就是纯策略的博弈结果的收益乘上这个结果出现的概率，对每个博弈结果进行求和。</p><p>给定一个策略式博弈<img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C%5Cleft%5C%7BA_%7Bi%7D%5Cright%5C%7D%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]">和一个混合策略博弈结果<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7B1%7D%2C+p_%7B2%7D%2C+%5Cdots%2C+p_%7BN%7D%5Cright%29" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的<strong>期望收益</strong>是 <img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bl%7D+U_%7Bi%7D%28p%29%3D%5Csum_%7Ba+%5Cin+A%7D+p%28a%29+u_%7Bi%7D%28a%29+%5C%5C+%3D%5Csum_%7Ba%3D%5Cleft%28a_%7B1%7D%2C+%5Cldots%2C+a_%7BN%7D%5Cright%29+%5Cin+A%7D+p_%7B1%7D%5Cleft%28a_%7B1%7D%5Cright%29+%5Ctimes+%5Ccdots+%5Ctimes+p_%7BN%7D%5Cleft%28a_%7BN%7D%5Cright%29+u_%7Bi%7D%28a%29+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"></p><p>(假设每个玩家的决策是独立的，因此是每个玩家的相应策略的概率乘积)</p><h3 id="3-形式化——混合策略博弈">3. 形式化——混合策略博弈</h3><p><img src="https://www.zhihu.com/equation?tex=+G%3D%5Cleft%5C%7BN%2C%5Cleft%5C%7B%5CDelta%5Cleft%28A_%7B1%7D%5Cright%29%2C+%5CDelta%5Cleft%28A_%7B2%7D%5Cright%29%2C+%5Cldots%2C+%5CDelta%5Cleft%28A_%7BN%7D%5Cright%29%5Cright%5C%7D%2C%5Cleft%5C%7BU_%7B1%7D%2C+U_%7B2%7D%2C+%5Cldots%2C+U_%7BN%7D%5Cright%5C%7D%5Cright%5C%7D+%5C%5C" alt="[公式]"></p><h3 id="4-例子">4. 例子</h3><p>在下面的博弈中，假设<img src="https://www.zhihu.com/equation?tex=%5Cpi_1%3D0.4%2C%5Cpi_2%3D0.5" alt="[公式]">是策略U和策略L的概率，那么：</p><p><img src="https://pic4.zhimg.com/80/v2-9a71b2ab77adfc25c438bf601d23a327_720w.jpg" alt="img"></p><h3 id="三、混合策略纳什均衡">三、混合策略纳什均衡</h3><h3 id="1-定义：混合策略纳什均衡-MNE">1. 定义：混合策略纳什均衡(MNE)</h3><p>一个混合策略博弈结果<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7B1%7D%2C+p_%7B2%7D%2C+%5Cdots%2C+p_%7BN%7D%5Cright%29" alt="[公式]">是一个混合策略纳什均衡(mixed strategy Nash equilibrium)，当对于每个玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">，都有： <img src="https://www.zhihu.com/equation?tex=+U_%7Bi%7D%5Cleft%28p_%7Bi%7D%2C+p_%7B-i%7D%5Cright%29+%5Cgeq+U_%7Bi%7D%5Cleft%28p_%7Bi%7D%5E%7B%5Cprime%7D%2C+p_%7B-i%7D%5Cright%29+%5Ctext+%7B+for+%7D+p_%7Bi%7D%5E%7B%5Cprime%7D+%5Cin+%5CDelta%5Cleft%28A_%7Bi%7D%5Cright%29+%5C%5C" alt="[公式]"> 通俗地解释就是：<strong>每个玩家都选择在对手不改变的情况下的最好的分布</strong></p><p>简写为：MNE</p><h3 id="2-最优反应"><strong>2. 最优反应</strong></h3><p>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的最优反应<img src="https://www.zhihu.com/equation?tex=B_%7Bi%7D%5Cleft%28p_%7B-i%7D%5Cright%29%3D%5Cleft%5C%7Bp_%7Bi%7D%3A+U_i%5Cleft%28p_%7Bi%7D%2C+p_%7B-i%7D%5Cright%29+%5Cgeq+U_i%5Cleft%28p_%7Bi%7D%5E%7B%5Cprime%7D%2C+p_%7B-i%7D%5Cright%29+%5Ctext+%7B+for+all+%7D+p_%7Bi%7D%5E%7B%5Cprime%7D+%5Cin+%5CDelta%5Cleft%28A_%7Bi%7D%5Cright%29%5Cright%5C%7D" alt="[公式]"></p><p>定理：<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7B1%7D%2C+p_%7B2%7D%2C+%5Cdots%2C+p_%7BN%7D%5Cright%29" alt="[公式]">是MNE当且仅当对于所有的<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=p_%7Bi%7D+%5Cin+B_%7Bi%7D%5Cleft%28p_%7B-i%7D%5Cright%29" alt="[公式]"></p><h3 id="3-存在性：纳什定理">3. 存在性：纳什定理</h3><p>定理：<strong>有限的</strong>策略式博弈一定存在<strong>混合策略</strong>纳什均衡</p><p>有限指：有限的玩家，每个玩家都有有限种纯策略。</p><h3 id="4、求解混合策略纳什均衡">4、求解混合策略纳什均衡</h3><p>定理：<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7B1%7D%2C+p_%7B2%7D%2C+%5Cdots%2C+p_%7BN%7D%5Cright%29" alt="[公式]">是MNE当且仅当玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的每个具有正概率的纯策略都是<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D" alt="[公式]">的最优反应。(证明略)</p><p>也就是说，<strong>玩家</strong><img src="https://www.zhihu.com/equation?tex=i" alt="[公式]"><strong>选任意一种纯策略的期望收益是相同的</strong>。</p><p>用这个定理来求解MNE</p><h3 id="例子">例子</h3><p><img src="https://pic2.zhimg.com/80/v2-d8e93e71507dc22b259a320fe39e7601_720w.jpg" alt="img"></p><p>设玩家1选择U的概率是<img src="https://www.zhihu.com/equation?tex=%5Cpi_1" alt="[公式]">，玩家2选择L的概率是<img src="https://www.zhihu.com/equation?tex=%5Cpi_2" alt="[公式]"></p><p>由玩家2选L的期望收益等于玩家2选R的期望收益，得式子： <img src="https://www.zhihu.com/equation?tex=+2+%5Cpi_%7B1%7D%2B5%5Cleft%281-%5Cpi_%7B1%7D%5Cright%29%3D4+%5Cpi_%7B1%7D%2B2%5Cleft%281-%5Cpi_%7B1%7D%5Cright%29+%5C%5C" alt="[公式]"> 由玩家1选U的期望收益等于玩家1选D的期望收益，得式子： <img src="https://www.zhihu.com/equation?tex=+%5Cpi_%7B2%7D%3D3%5Cleft%281-%5Cpi_%7B2%7D%5Cright%29+%5C%5C" alt="[公式]"> 解得：<img src="https://www.zhihu.com/equation?tex=%5Cpi_1%3D0.6%2C%5Cpi_2%3D0.75" alt="[公式]"></p><p>因此求得纳什均衡<img src="https://www.zhihu.com/equation?tex=p+%3D+%5C%7B%5C%7B0.6%2C0.4%5C%7D%2C%5C%7B0.75%2C0.25%5C%7D%5C%7D" alt="[公式]"></p><h3 id="解释">解释</h3><p><strong>”玩家</strong><img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">**选任意一种纯策略的期望收益是相同的“**也可以这么想：如果玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的纯策略的期望收益不同的话，那么他会一直选期望收益高的那个，也就是选择一个纯策略，而不是混合策略。这样就回到了纯策略博弈的时代，开篇的例子又说明了有些博弈是找不到纯策略的均衡的。</p><p>因此，如果想保持一种”稳定“的局面，每个玩家都没有动机改变当前的策略(或分布)，就要保证它选择每个策略的期望收益都相同。</p><h3 id="四、小结-3">四、小结</h3><p>本篇内容有：</p><ul><li>混合策略博弈的定义</li><li>混合策略纳什均衡的定义及求解</li></ul><h1>博弈论笔记三：占优策略均衡和理性化</h1><h3 id="一、占优策略-Dominant-Strategy">一、占优策略(Dominant Strategy)</h3><h3 id="1-例子">1. 例子</h3><p>在囚徒困境中，收益矩阵是这样的：</p><p><img src="https://pic3.zhimg.com/80/v2-7efcc3f20c9ca67759f1f22d4440279e_720w.jpg" alt="img"></p><ul><li>当玩家2选择confess的时候，玩家1选confess是最优的；</li><li>当玩家2选择don’t confess的时候，玩家1选confess是最优的；</li></ul><p>可以发现，不管玩家2如何选择，玩家1选择(confess)都是最优的。那么，对于玩家1来说，confess这个策略就是占优策略。</p><h3 id="2-形式化定义">2. 形式化定义</h3><p>沿用<a href="https://zhuanlan.zhihu.com/p/148407108">策略式博弈</a>的记号，定义：</p><ol><li><strong>严格占优于</strong>：<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">是一个玩家的两种纯策略，若对于所有<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D+%5Cin+A_%7B-i%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29%3Eu_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+a_%7B-i%7D%5Cright%29" alt="[公式]">，则称策略 <img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]"><strong>严格占优于</strong><img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]"></li><li><strong>弱占优于</strong>：<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">是一个玩家的两种纯策略，若对于所有<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D+%5Cin+A_%7B-i%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+%5Cge+u_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+a_%7B-i%7D%5Cright%29" alt="[公式]">，且对于某些<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D+%5Cin+A_%7B-i%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+%3E+u_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+a_%7B-i%7D%5Cright%29" alt="[公式]">，则称策略 <img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]"><strong>弱占优于</strong><img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]"></li><li><strong>严格占优策略</strong>：如果<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">严格占优于玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">其他所有策略，则称<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">是严格占优策略。</li><li><strong>弱占优策略</strong>：如果<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">弱占优于玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">其他所有策略，则称<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">是弱占优策略。</li></ol><p>严格占优就是收益<strong>高于</strong>其他策略；弱占优就是收益<strong>不低于</strong>其他策略，且有时高于其他策略。</p><h3 id="二、占优策略均衡">二、占优策略均衡</h3><p>定义：<strong>每个玩家的占优策略</strong>（严格占优策略或弱占优策略）构成的博弈结果，称为占优策略均衡。</p><p>从定义可以看出，占优策略均衡属于纳什均衡。</p><p>性质：易求解，但可能不存在。</p><h3 id="三、例：第二价格拍卖-维克里拍卖">三、例：第二价格拍卖(维克里拍卖)</h3><p>N个买家通过密封投标的方式竞价，出价最高的投标者获得被拍卖的商品，并支付<strong>第二高</strong>的出价。竞品对玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的价值是<img src="https://www.zhihu.com/equation?tex=v_i" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的出价是<img src="https://www.zhihu.com/equation?tex=b_i" alt="[公式]">。</p><p>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的收益：<img src="https://www.zhihu.com/equation?tex=v_i-b_i" alt="[公式]"></p><p>定理：在第二价格拍卖中，对于任意玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">，策略<img src="https://www.zhihu.com/equation?tex=b_i%3Dv_i" alt="[公式]">是一个弱占优策略，即，<img src="https://www.zhihu.com/equation?tex=%28v_1%2Cv_2%2C%5Cdots%2Cv_N%29" alt="[公式]">是一个占优策略均衡。</p><p>证明：即需证明对于任意<img src="https://www.zhihu.com/equation?tex=b_i%2Cb_%7B-i%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%5Cleft%28v_%7Bi%7D%2C+b_%7B-i%7D%5Cright%29+%5Cgeq+u_%7Bi%7D%5Cleft%28b_%7Bi%7D%2C+b_%7B-i%7D%5Cright%29" alt="[公式]">，分情况讨论如下：</p><ul><li>如果某人的竞价<img src="https://www.zhihu.com/equation?tex=b_k+%5Cge+v_i" alt="[公式]"></li><li><ul><li>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">若想竞拍成功，则<img src="https://www.zhihu.com/equation?tex=b_i+%3E+b_k+%5Cge+v_i" alt="[公式]">的收益小于0，不如选<img src="https://www.zhihu.com/equation?tex=b_i+%3D+v_i" alt="[公式]">的策略(收益为0)。</li><li>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">若竞拍不成功，收益为0，和<img src="https://www.zhihu.com/equation?tex=b_i+%3D+v_i" alt="[公式]">的策略相同。</li></ul></li><li>如果所有人的竞价<img src="https://www.zhihu.com/equation?tex=b_k+%3C+v_i" alt="[公式]"></li><li><ul><li>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">若竞拍成功，则收益大于0，收益取决于<img src="https://www.zhihu.com/equation?tex=b_k" alt="[公式]">的最大值(第二价格)，因此，没有比<img src="https://www.zhihu.com/equation?tex=b_i%3Dv_i" alt="[公式]">更好的选择了</li><li>竞拍不成功，收益为0，不如<img src="https://www.zhihu.com/equation?tex=b_i%3Dv_i" alt="[公式]">的策略</li></ul></li></ul><h3 id="四、被占优策略-Dominated-Strategies">四、被占优策略(Dominated Strategies)</h3><ul><li><img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">严格占优于<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">，称<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">被<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">严格占优。</li><li><img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">弱占优于<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">，称<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">被<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">弱占优。</li></ul><h3 id="1-消除被占优策略可以用来求解占优策略均衡-迭代">1. 消除被占优策略可以用来求解占优策略均衡(迭代)</h3><p>例：</p><p><img src="https://pic4.zhimg.com/80/v2-9900f7b53810c844a29ced3465315347_720w.jpg" alt="img"></p><ul><li>对于玩家1：‘u’策略被‘d’策略弱占优。</li><li>对于玩家2：‘l’策略被‘r’策略弱占优。</li></ul><p>消除被占优策略‘u’和‘l’，得：</p><p><img src="https://pic1.zhimg.com/80/v2-de7e516d69ac77cc6adfd50bc32d942c_720w.jpg" alt="img"></p><ul><li>对于玩家1：‘m’策略被‘d’策略弱占优。</li><li>消去玩家1的‘m’策略后，对于玩家2：‘m’策略被‘r’策略严格占优。</li></ul><p>最后，得到(d,r)是占优策略均衡(弱占优策略均衡)</p><h3 id="2-消除被占优策略可以用来简化混合策略纳什均衡-MNE-求解">2. 消除被占优策略可以用来简化混合策略纳什均衡(MNE)求解</h3><p><strong>一个策略可以被一个“混合策略”占优</strong>，如：</p><p><img src="https://pic2.zhimg.com/80/v2-994a0357d27e5164c4aa951a979638f9_720w.jpg" alt="img"></p><p>对于玩家1，没有纯策略能够占优于策略‘u’，但是不难看出混合策略<img src="https://www.zhihu.com/equation?tex=p_1+%3D+%280%2C+0.5%2C0.5%29" alt="[公式]">严格占优于纯策略‘u’，更一般地，设玩家2的混合策略是<img src="https://www.zhihu.com/equation?tex=p_2%3D%28p%2C1-p%29" alt="[公式]">，也就是以概率p选择l策略。</p><p>则玩家1在三种纯策略上的收益为： <img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bl%7D+U_%7B1%7D%5Cleft%28%5Cmathrm%7Bu%7D%2C+p_%7B2%7D%5Cright%29%3D1+%5C%5C+U_%7B1%7D%5Cleft%28%5Cmathrm%7Bm%7D%2C+p_%7B2%7D%5Cright%29%3D3+p+%5C%5C+U_%7B1%7D%5Cleft%28%5Cmathrm%7Bd%7D%2C+p_%7B2%7D%5Cright%29%3D4%281-p%29+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"> 画图如下：</p><p><img src="https://pic4.zhimg.com/80/v2-f209039b80be6d0d514ff02564fc5c0b_720w.jpg" alt="img"></p><p>可见，‘u’这个策略始终都不是最好的策略。</p><h3 id="定理：被严格占优的策略在MNE中概率为0">定理：被严格占优的策略在MNE中概率为0</h3><p>证明：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/148772400">笔记(二)</a>MNE那一节讲过，每个具有正概率的纯策略都是<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D" alt="[公式]">的最优反应，也就是玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">选任意一种纯策略的期望收益是相同的。</li><li>但是，因为<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">被<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">严格占优，因此<img src="https://www.zhihu.com/equation?tex=%5Cmathrm%7BU%7D_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+p_%7B-i%7D%5Cright%29%3C%5Cmathrm%7BU%7D_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+p_%7B-i%7D%5Cright%29" alt="[公式]">，因此，MNE中，<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">的概率为0</li></ul><p>利用这一定理，可以<strong>消去被严格占优的策略</strong>，简化MNE的求解。</p><h3 id="五、信念和理性化">五、信念和理性化</h3><h3 id="1-信念-belief">1. 信念(belief)</h3><p>定义：“信念”的意思，就是认为对手会采用什么样的策略。对于混合策略博弈，博弈结果<img src="https://www.zhihu.com/equation?tex=p%3D%5Cleft%28p_%7B1%7D%2C+p_%7B2%7D%2C+%5Cldots+p_%7BN%7D%5Cright%29+%3D+%28p_i%2Cp_%7B-i%7D%29" alt="[公式]">，其中，<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D" alt="[公式]">称为<strong>信念</strong>(belief)</p><h3 id="2-理性">2. 理性</h3><p>纯策略<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">是<strong>理性</strong>的，当：存在信念<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D" alt="[公式]">使得<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D" alt="[公式]">是<img src="https://www.zhihu.com/equation?tex=p_%7B-i%7D" alt="[公式]">的最优反应。</p><p>定理：在MNE中，每一个具有正概率的纯策略都是理性的。</p><p>定理：<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">是理性的<strong>当且仅当</strong><img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">不被严格占优。</p><h3 id="3-理性化">3. 理性化</h3><p>理性化：<strong>迭代</strong>消除被严格占优的策略直到没有被严格占优的策略。</p><h3 id="六、例：选美比赛博弈-Beauty-Contest-game">六、例：选美比赛博弈(Beauty Contest game)</h3><ul><li>n个玩家</li><li>每个人选[0,50]之间的一个数</li><li>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的收益是：<img src="https://www.zhihu.com/equation?tex=50-%5Cleft%28a_%7Bi%7D-%5Cfrac%7B2%7D%7B3%7D+%5Cfrac%7B%5Csum_%7Bi%7D+a_%7Bi%7D%7D%7Bn%7D%5Cright%29%5E%7B2%7D" alt="[公式]">，即与平均数的 <img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B2%7D%7B3%7D" alt="[公式]"> 越接近，收益越高。</li></ul><p>分析：</p><p>给定对手的策略<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的最优反应： <img src="https://www.zhihu.com/equation?tex=+a_%7Bi%7D%5E%7B%2A%7D%3D%5Cfrac%7B2%7D%7B3%7D+%5Cfrac%7B%5Csum_%7Bj%2C+j+%5Cneq+i%7D+a_%7Bj%7D%7D%7Bn-2+%2F+3%7D+%5C%5C" alt="[公式]"> 可以发现： <img src="https://www.zhihu.com/equation?tex=+a_%7Bi%7D%5E%7B%2A%7D+%5Cin%5Cleft%5B0%2C+%5Cfrac%7B2%7D%7B3%7D+%5Cfrac%7Bn-1%7D%7Bn-2+%2F+3%7D+50%5Cright%5D+%5C%5C" alt="[公式]"> 这时，在<img src="https://www.zhihu.com/equation?tex=%28%5Cfrac%7B2%7D%7B3%7D+%5Cfrac%7Bn-1%7D%7Bn-2+%2F+3%7D+50%2C50%5D" alt="[公式]">之间的策略都被严格占优，消去。</p><p>迭代理性化，第k次会得到区间：<img src="https://www.zhihu.com/equation?tex=%5Cleft%5B0%2C%5Cleft%28%5Cfrac%7B2%7D%7B3%7D+%5Cfrac%7Bn-1%7D%7Bn-2+%2F+3%7D%5Cright%29%5E%7Bk%7D+50%5Cright%5D" alt="[公式]"></p><p>一直迭代下去，最终得到结果：0</p><p>因此，纳什均衡是每个人的策略都是选0</p><h1>博弈论笔记四：连续博弈</h1><blockquote><p>前面讲过了：策略式博弈以及它的纳什均衡。其中，纳什均衡的<strong>存在性</strong>是由<strong>纳什定理</strong>保证的(在笔记二讲过)：<strong>有限的</strong>策略式博弈一定存在<strong>混合策略</strong>纳什均衡。<br>纳什定理的限制条件是“有限的”策略式博弈。有限是指每个玩家都有有限种纯策略。<br>现在在策略式博弈中，加入其他的约束条件，<strong>纳什均衡的存在性</strong>也会得到保证。连续博弈就是加入了这些约束条件的策略式博弈。具体来说，这些约束条件是对<strong>策略集</strong>和<strong>收益函数</strong>的约束。</p></blockquote><h3 id="一、连续博弈定义">一、连续博弈定义</h3><p>连续博弈是一种满足某些约束的<strong>策略式博弈</strong>，约束为：</p><ul><li>策略集<img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">是非空的紧集</li><li>收益函数<img src="https://www.zhihu.com/equation?tex=u_i%3AA+%5Crightarrow+R" alt="[公式]">是连续的</li></ul><h3 id="二、定理">二、定理</h3><h3 id="1-纳什定理-回顾">1. 纳什定理(回顾)</h3><p><strong>有限的</strong>策略式博弈一定存在<strong>混合策略</strong>纳什均衡</p><h3 id="2-无限博弈纯策略纳什均衡存在定理">2. 无限博弈纯策略纳什均衡存在定理</h3><p>若策略式博弈<img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C%5Cleft%5C%7BA_%7Bi%7D%5Cright%5C%7D%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]">对于每个<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">都满足：</p><ul><li><img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">是紧集，凸集</li><li><img src="https://www.zhihu.com/equation?tex=u_i%28a_i%2Ca_%7B-i%7D%29" alt="[公式]">在<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D" alt="[公式]">上连续</li><li><img src="https://www.zhihu.com/equation?tex=u_i%28a_i%2Ca_%7B-i%7D%29" alt="[公式]">在<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D" alt="[公式]">上是连续的、紧致(concave)的</li></ul><p>那么存在<strong>纯策略</strong>纳什均衡。</p><h3 id="3-无限博弈混合策略纳什均衡存在定理">3. 无限博弈混合策略纳什均衡存在定理</h3><p>若策略式博弈<img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C%5Cleft%5C%7BA_%7Bi%7D%5Cright%5C%7D%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]">对于每个<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">都满足：</p><ul><li><img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">是紧集，凸集</li><li><img src="https://www.zhihu.com/equation?tex=u_i%28a%29" alt="[公式]">在<img src="https://www.zhihu.com/equation?tex=a" alt="[公式]">上连续</li></ul><p>那么存在<strong>混合策略</strong>纳什均衡。</p><blockquote><p>上面两个定理需要满足的条件我不懂，数学基础比较薄弱……</p></blockquote><h3 id="三、求解纳什均衡">三、求解纳什均衡</h3><p>求解纳什均衡，就是这两个步骤：</p><ul><li>找到最优反应函数</li><li>找到同时满足所有玩家最优反应函数的解</li></ul><h3 id="四、总结">四、总结</h3><p>这节课没有什么新的内容，主要是例题，比如古诺模型(Cournot)，伯特兰德模型(Bertrand)，还有一些其他的。现在比较懒不想写……</p><h1>博弈论笔记五：相关均衡</h1><blockquote><p>纳什均衡中，每个玩家独立地进行策略选择。然而，这种方式有时并不会达到很好的收益，很多坏的策略也会被选到。其实，玩家可以“约定”一下，不去选择坏的结果，这样会提高收益。<br>相关策略中，玩家的策略选择不是独立的。和混合策略在<strong>每个玩家的策略集</strong>上加上概率分布不同，相关策略是在<strong>所有玩家的策略组合</strong>上加上概率分布。</p></blockquote><h3 id="一、引入相关均衡">一、引入相关均衡</h3><h3 id="1-性别战">1. 性别战</h3><p>收益矩阵如下：策略Ballet和Football分别用B、F代替</p><p><img src="https://pic4.zhimg.com/80/v2-40947af9d7393c801aac5cfb6847abdf_720w.jpg" alt="img"></p><p>根据之前的学习，不难求出纯策略纳什均衡和混合策略纳什均衡。</p><p>纯策略纳什均衡：{(B, B), (F, F)}，收益分别为(1, 4)和(4, 1)</p><p>混合策略纳什均衡：Boy以1/5的概率选择B，以4/5的概率选择F；Boy以4/5的概率选择B，以1/5的概率选择F；期望收益为：(4/5, 4/5)。这个收益比纯策略纳什均衡最坏情况还要低。</p><p>现在考虑一个约定：掷一枚均匀的硬币，根据掷硬币的结果来告诉玩家应该选择那种策略。例如，若硬币是正面，那Boy就被告知应该选择B，Girl被告知应该选择B；若硬币是反面，那Boy就被告知应该选择F，Girl被告知应该选择F。也就是(B, B), (F, F)这两种博弈结果都以1/2的概率出现。</p><p>如果这个约定能被两人遵守的话，那么收益将会是(5/2, 5/2)，比混合策略纳什均衡好很多。</p><p>关键点就在于：<strong>没有人有违背约定的动机</strong>。在上面的例子里，假设Boy单方面违背约定，在硬币正面的时候，选择了F策略，那么，博弈结果将会是(F, B)，Boy的收益是0。如果遵守约定，收益将会是1。因此，<strong>当违背约定的期望收益不如遵守约定时，所有玩家就都会遵守约定了，这就是相关均衡</strong>。</p><h3 id="2-十字路口博弈">2. 十字路口博弈</h3><p>这是一个更复杂一点的例子。在一个十字路口有A、B两车，如下右图所示。A有上(U)、下(D)两种策略，B有左(L)、右®两种策略。如果A选择U，B选择R，就“撞车”了，收益为(0, 0)，其余收益就不多解释了，如下左图所示。</p><p><img src="https://pic4.zhimg.com/80/v2-5a1f6429565968fbf34afeadc3da7acf_720w.jpg" alt="img"></p><p>纯策略纳什均衡是(U, L)和(D, R)</p><p>混合策略那是均衡是A以1/2的概率选择U，B以1/2的概率选择L。收益为(5/2, 5/2)</p><h3 id="第一种约定">第一种约定</h3><p>现在假设有一个“信号灯”，以均等概率产生“红“、“绿”两种颜色。约定：如果是绿色，A选择U、B选择L；如果是红色，A选择D，B选择R。也就是(U, L)和(D, R)这两种博弈结果都以1/2的概率出现。</p><p>如果遵守约定，两人的期望收益为：(3, 3)，高于混合策略博弈。</p><p><strong>没有玩家会违背约定</strong>：如果A看见信号等是绿色，也就是他被告知选择U，B被告知选择L。如果A遵守约定，收益是5；如果A违背约定，博弈结果变为(D, L)，收益将会是4。其他情况与此类似。</p><h3 id="第二种约定">第二种约定</h3><p>还可以有另一种约定：”信号灯“以相同的概率(1/3)产生(U, L)、(D, L)和(D, R)这三种结果中的一种，并告知两个玩家应该选择的策略。</p><p>期望收益为：(10/3, 10/3)</p><p>下面来说明为什么不会违背约定：</p><ul><li>如果A被告知应该选择U，那么信号灯产生的就是(U, L)这种结果，B被告知选择L。如果A遵守约定，那么A的收益为5；如果A单方面违背约定，那么A的期望收益为4。(博弈结果变为(D, L))。</li><li>如果A被告知应该选择D，那么信号灯产生的就是(D, L)或者(D, R)的博弈结果，且出现概率均等。即B有1/2的概率被告知选择L，1/2的概率被告知选择R。如果A遵守约定，那么A的收益为5/2；如果A单方面违背约定，那么A的期望收益也为5/2。</li></ul><p>A违背约定收益并不会变高，因此没有动机违背约定。</p><h3 id="二、相关策略">二、相关策略</h3><p>相关策略就是在<strong>博弈结果</strong>上加上分布。</p><p><img src="https://www.zhihu.com/equation?tex=%5CDelta%28A%29" alt="[公式]">表示在策略集<img src="https://www.zhihu.com/equation?tex=A+%3D+A_1+%5Ctimes+A_2+%5Ctimes+%5Cdots%5Ctimes+A_N" alt="[公式]">上的概率分布。<img src="https://www.zhihu.com/equation?tex=%5Cpi+%5Cin+%5CDelta%28A%29" alt="[公式]">就是一个相关策略。</p><p>用<img src="https://www.zhihu.com/equation?tex=R" alt="[公式]">表示在A上的这个随机变量。</p><p>要清楚纯策略、混合策略、相关策略的区别。</p><h3 id="例子-2">例子</h3><p><img src="https://pic4.zhimg.com/80/v2-40947af9d7393c801aac5cfb6847abdf_720w.jpg" alt="img"></p><p>对于混合策略，在四种可能的博弈结果上都有一个概率。混合策略：<img src="https://www.zhihu.com/equation?tex=%5Cpi%3D%28p_1%2Cp_2%2Cp_3%2Cp_4%29" alt="[公式]"></p><p><img src="https://pic2.zhimg.com/80/v2-aecdf56fdac1c2336b0fa449a6448979_720w.jpg" alt="img"></p><ul><li>纯策略(B, F)用混合策略表示就是：<img src="https://www.zhihu.com/equation?tex=%5Cpi+%3D+%281%2C0%2C0%2C0%29" alt="[公式]"></li><li>混合策略<img src="https://www.zhihu.com/equation?tex=%5C%7B%28p%2C1-p%29%2C%28q%2C1-q%29%5C%7D" alt="[公式]">用混合策略表示就是<img src="https://www.zhihu.com/equation?tex=%5Cpi+%3D+%28p+q%2C%281-p%29+q%2C+p%281-q%29%2C%281-p%29+q%2C%281-p%29%281-q%29%29" alt="[公式]"></li></ul><p>混合策略一定可以用相关策略表示，但相关策略不一定能用混合策略表示出来。</p><h3 id="三、相关均衡">三、相关均衡</h3><h3 id="1-原理解释">1. 原理解释</h3><p>相关均衡的概率分布不是随便的，在一定的分布下才会造成相关均衡。什么时候会保持相关均衡呢？那就是<strong>每个人都没有动机偏离约定的选择</strong>的时候。也就是，当玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">被告知选择策略<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">的时候，他选择<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">的期望收益高于选择任何策略<img src="https://www.zhihu.com/equation?tex=a_i%27+%5Cneq+a_i" alt="[公式]">的期望收益。</p><ul><li>如果玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">不偏离约定策略<img src="https://www.zhihu.com/equation?tex=a_i" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的期望收益为：<img src="https://www.zhihu.com/equation?tex=%5CSigma_%7Ba_%7B-i%7D%7D+p%28a_i%2C+a_%7B-i%7D%29u%28a_i%2C+a_%7B-i%7D%29" alt="[公式]"></li><li>如果玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">骗了了约定策略，选择了<img src="https://www.zhihu.com/equation?tex=a_i%27" alt="[公式]">策略，那么博弈结果会变为<img src="https://www.zhihu.com/equation?tex=%28a_i%27%2C+a_%7B-i%7D%29" alt="[公式]">，这个博弈结果出现的<strong>概率</strong>为<img src="https://www.zhihu.com/equation?tex=p%28a_i%2Ca_%7B-i%7D%29" alt="[公式]">，也就是<img src="https://www.zhihu.com/equation?tex=%28a_i%2Ca_%7B-i%7D%29" alt="[公式]">的概率，因为只是玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">改变了应该选择的策略。因此期望收益为：<img src="https://www.zhihu.com/equation?tex=%5CSigma_%7Ba_%7B-i%7D%7D+p%28a_i%2C+a_%7B-i%7D%29u%28a_i%27%2C+a_%7B-i%7D%29" alt="[公式]"></li></ul><p>当不偏离约定的期望收益大于等于偏离约定的期望收益时，就构成了相关均衡。</p><h3 id="2-形式化-2">2. 形式化</h3><p>策略式博弈<img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C%5Cleft%5C%7BA_%7Bi%7D%5Cright%5C%7D%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]">的相关均衡是一个联合概率分布<img src="https://www.zhihu.com/equation?tex=%5Cpi+%5Cin+%5CDelta%28A%29" alt="[公式]">，使得对于任何<img src="https://www.zhihu.com/equation?tex=a_i%2Ca_i%27" alt="[公式]">，都有： <img src="https://www.zhihu.com/equation?tex=+%5Csum_%7Ba_%7B-i%7D%7D+p%28a_i%2Ca_%7B-i%7D%29%5Cleft%5Bu_%7Bi%7D%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29-u_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+a_%7B-i%7D%5Cright%29%5Cright%5D+%5Cgeq+0+%5C%5C" alt="[公式]"> 也可以写成： <img src="https://www.zhihu.com/equation?tex=+%5Csum_%7Ba_%7B-i%7D+%5Cin+A_%7B-i%7D%7D+p%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+u%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+%5Cgeq+%5Csum_%7Ba_%7B-i%7D+%5Cin+A_%7B-i%7D%7D+p%5Cleft%28a_%7Bi%7D%2C+a_%7B-i%7D%5Cright%29+u%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%2C+a_%7B-i%7D%5Cright%29+%5C%5C" alt="[公式]"></p><h3 id="3-例子：计算相关均衡">3. 例子：计算相关均衡</h3><p><img src="https://pic4.zhimg.com/80/v2-94fe34f2139d73b19c971090d3f0ba3f_720w.jpg" alt="img"></p><p>根据上面的公式，可以列出下面几个式子：</p><p><img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Baligned%7D+2+%5Ctimes+p_%7B1%7D%2B0+%5Ctimes+p_%7B2%7D+%26+%5Cgeq+0+%5Ctimes+p_%7B1%7D%2B5+%5Ctimes+p_%7B2%7D+%5Crightarrow+p_%7B1%7D+%5Cgeq+5+p_%7B2%7D+%2F+2+%5C%5C+0+%5Ctimes+p_%7B3%7D%2B5+%5Ctimes+p_%7B4%7D+%26+%5Cgeq+2+%5Ctimes+p_%7B3%7D%2B0+%5Ctimes+p_%7B4%7D+%5Crightarrow+p_%7B4%7D+%5Cgeq+2+p_%7B3%7D+%2F+5+%5C%5C+5+%5Ctimes+p_%7B1%7D%2B0+%5Ctimes+p_%7B3%7D+%26+%5Cgeq+0+%5Ctimes+p_%7B1%7D%2B2+%5Ctimes+p_%7B3%7D+%5Crightarrow+p_%7B1%7D+%5Cgeq+2+p_%7B3%7D+%2F+5+%5C%5C+0+%5Ctimes+p_%7B2%7D%2B2+%5Ctimes+p_%7B4%7D+%26+%5Cgeq+5+%5Ctimes+p_%7B2%7D%2B0+%5Ctimes+p_%7B4%7D+%5Crightarrow+p_%7B4%7D+%5Cgeq+5+p_%7B2%7D+%2F+2+%5C%5C+p_%7B1%7D+%26%2Bp_%7B2%7D%2Bp_%7B3%7D%2Bp_%7B4%7D%3D1+%5C%5C+p_%7B1%7D+%26%2Cp_%7B2%7D%2Cp_%7B3%7D%2Cp_%7B4%7D%3E%3D0+%5Cend%7Baligned%7D+%5C%5C" alt="[公式]"></p><p>计算是线性时间的，比混合策略纳什均衡好很多。</p><h3 id="4-一些结论">4. 一些结论</h3><ol><li>每个<strong>混合策略纳什均衡</strong>都是一个<strong>相关均衡</strong></li><li>相关均衡的集合是一个凸集。</li></ol><p><img src="https://pic2.zhimg.com/80/v2-6f07bbcd508e1138d84e41e5050e0915_720w.jpg" alt="img"></p><ul><li>CE：相关均衡</li><li>MNE：混合策略纳什均衡</li><li>PNE：纯策略纳什均衡</li></ul><h3 id="四、总结-2">四、总结</h3><p>这节讲相关均衡，最难的点就在于理解这个均衡。理解了为什么不会偏离“约定”，计算相关均衡就很简单了。</p><h1>博弈论笔记(六)：非完全信息策略式博弈</h1><blockquote><p>前面的五节笔记讲的都是<strong>完全信息的策略式博弈</strong>，而这一章才开始一个新的类别——非完全信息策略式博弈。</p></blockquote><h3 id="一、引言：非完全信息">一、引言：非完全信息</h3><p>在一场博弈中，玩家可能并不知道其他玩家的收益、偏好等等。这些情况下的博弈，称为<strong>非完全信息的博弈(Incomplete Information)</strong>。在非完全信息策略式博弈中，我们考虑一种情况：<strong>玩家有一个隐藏的“状态”，在不同的状态下，收益矩阵不同</strong>。其他的非完全信息策略式博弈都可以转化为这种模型。</p><h3 id="二、例：-非完全信息">二、例：(非完全信息)</h3><p>男生和女生决定去看足球(F)还是去看芭蕾(B)，如果两个人都知道对方喜欢自己，那么这是一个完全信息博弈，收益矩阵是这样的：</p><p><img src="https://pic1.zhimg.com/80/v2-09b3ac3268ae9514eae71e94498603ec_720w.jpg" alt="img"></p><p>现在假设这样的情况：女生知道男生喜欢她，但是男生却不知道女生的意愿(女生自己是知道的)。不过，男生也并不是一点信息都没有，他知道女生喜欢他的概率为p。这样，收益矩阵就变成了：</p><p><img src="https://pic4.zhimg.com/80/v2-9e7cdf63811fd03b2963cbdaff8caa1f_720w.jpg" alt="img"></p><p>这样的话，如何计算纳什均衡呢？</p><p>如果Boy选择F，Girl在喜欢的状态下，F是最优反应，在不喜欢的状态下，B是最优反应。这个时候，如果F是Boy的最优反应，那么(F,(F,B))就构成纳什均衡了。</p><p>那么，F是不是Boy的最优反应？什么时候才是Boy的最优反应呢？这就要计算Boy选择F时候的期望收益。Boy如果选择F，有p的概率收益是2，有1-p的概率收益是0。因此，期望收益为： <img src="https://www.zhihu.com/equation?tex=+U_1%28F%2C%28F%2CB%29%29%3D2%2Ap%2B0%2A%281-p%29%3D2p+%5C%5C" alt="[公式]"> 在其他玩家策略不变的情况下，玩家收益最大的策略是最优反应。上面已经计算了Boy选择F的期望收益，现在要计算在女生策略不变的情况下，Boy选择策略B的收益： <img src="https://www.zhihu.com/equation?tex=+U_1%28B%2C%28F%2CB%29%29%3D0%2Ap%2B1%2A%281-p%29%3D1-p+%5C%5C" alt="[公式]"> 因此，当<img src="https://www.zhihu.com/equation?tex=2p%5Cge+1-p" alt="[公式]">也就是<img src="https://www.zhihu.com/equation?tex=p+%5Cge+1%2F3" alt="[公式]">时，<img src="https://www.zhihu.com/equation?tex=%28F%2C%28F%2CB%29%29" alt="[公式]">是纳什均衡。</p><p>同理，讨论Boy选B的情况，先计算女生的最优反应，再计算男生的最优反应，计算出p的范围是多少的时候，会有纳什均衡。结果是<img src="https://www.zhihu.com/equation?tex=p+%5Cge+2%2F3" alt="[公式]">时，<img src="https://www.zhihu.com/equation?tex=%28B%2C%28B%2CF%29%29" alt="[公式]">是纳什均衡。</p><h3 id="三、形式化：贝叶斯博弈-Bayesian-Games">三、形式化：贝叶斯博弈(Bayesian Games)</h3><p>策略式博弈<img src="https://www.zhihu.com/equation?tex=%5Cboldsymbol%7BG%7D%3D%5Cleft%5C%7B%5Cboldsymbol%7BN%7D%2C%5Cleft%5C%7B%5Cboldsymbol%7BA%7D_%7B%5Cboldsymbol%7Bi%7D%7D%5Cright%5C%7D%2C%5Cleft%5C%7B%5Cboldsymbol%7B%5CTheta%7D_%7B%5Cboldsymbol%7Bi%7D%7D%5Cright%5C%7D%2C%5Cleft%5C%7B%5Cboldsymbol%7Bu%7D_%7B%5Cboldsymbol%7Bi%7D%7D%5Cright%5C%7D%2C+%5Cboldsymbol%7Bp%7D%5Cright%5C%7D" alt="[公式]">是贝叶斯博弈，其中：</p><ul><li><img src="https://www.zhihu.com/equation?tex=N" alt="[公式]">是<strong>玩家集</strong></li><li><img src="https://www.zhihu.com/equation?tex=A_i" alt="[公式]">是<strong>策略集</strong></li><li><img src="https://www.zhihu.com/equation?tex=%5CTheta_i" alt="[公式]">是<strong>状态集</strong>，表示每个人的私有的信息。给定状态，收益是确定的。</li><li><img src="https://www.zhihu.com/equation?tex=p%3Dp%28%5Ctheta_1%2C%5Cdots%2C%5Ctheta_N%29" alt="[公式]">表示在<img src="https://www.zhihu.com/equation?tex=%5Ctimes_%7Bi%3D1..n%7D%5CTheta_i" alt="[公式]">上的联合分布。</li><li>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的<strong>纯策略</strong><img src="https://www.zhihu.com/equation?tex=a_i%3A%5CTheta_i+%5Crightarrow+A_i" alt="[公式]">，表示在玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的<strong>所有状态下的策略选择</strong>。<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D%3D%5Cleft%28a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5E%7B1%7D%5Cright%29%2C+a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5E%7B2%7D%5Cright%29%2C+%5Cldots%2C+a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5E%7Bn_%7Bi%7D%7D%5Cright%29%5Cright%29" alt="[公式]">，(假设有<img src="https://www.zhihu.com/equation?tex=n_i" alt="[公式]">种状态)</li><li><strong>收益函数</strong><img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%3A+%28%5Ctimes_%7Bi%3D1+.+.+N%7D+A_%7Bi%7D%29+%5Ctimes+%28%5Ctimes_%7Bi%3D1+.+.+n%7D+%5CTheta_%7Bi%7D%29+%5Crightarrow+R" alt="[公式]">。<img src="https://www.zhihu.com/equation?tex=u_%7Bi%7D%5Cleft%28a_%7B1%7D%2C+%5Cldots%2C+a_%7BN%7D%2C+%5Ctheta_%7B1%7D%2C+%5Cldots%2C+%5Ctheta_%7BN%7D%5Cright%29" alt="[公式]">表示在这些博弈结果和这些状态下的收益。</li></ul><p>这里面，需要仔细说说<img src="https://www.zhihu.com/equation?tex=%5CTheta_i" alt="[公式]">，它表示每个人的<strong>隐藏的状态</strong>信息，<strong>每个玩家知道自己的状态，但是不知道其他人的状态</strong>。如果所有人都只有一个状态，那么就是完全信息的。一般来说，我们研究<strong>状态独立</strong>的情形，每个人的状态都是独立的，也就是<img src="https://www.zhihu.com/equation?tex=p%5Cleft%28%5Ctheta_%7B1%7D%2C+%5Cldots%2C+%5Ctheta_%7BN%7D%5Cright%29%3Dp%5Cleft%28%5Ctheta_%7B1%7D%5Cright%29+p%5Cleft%28%5Ctheta_%7B2%7D%5Cright%29+%5Cldots+p%5Cleft%28%5Ctheta_%7BN%7D%5Cright%29" alt="[公式]">。</p><p>根据贝叶斯规则，有 <img src="https://www.zhihu.com/equation?tex=+p%5Cleft%28%5Ctheta_%7B-i%7D+%5Cmid+%5Ctheta_%7Bi%7D%5Cright%29%3D+%5Cfrac%7Bp%5Cleft%28%5Ctheta_%7Bi%7D%2C+%5Ctheta_%7B-i%7D%5Cright%29%7D%7B+p%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%7D+%5C%5C" alt="[公式]"> 其中<img src="https://www.zhihu.com/equation?tex=%5Ctheta_%7B-i%7D%3D%5Cleft%28%5Ctheta_%7B1%7D%2C+%5Cldots%2C+%5Ctheta_%7Bi-1%7D%2C+%5Ctheta_%7Bi%2B1%7D+%5Cldots%2C+%5Ctheta_%7BN%7D%5Cright%29" alt="[公式]"></p><p><strong>博弈结果</strong><img src="https://www.zhihu.com/equation?tex=%28a_1%2Ca_2%2C%5Cdots+%2Ca_N%29+%3D+%5Cleft%28%5Cleft%28a_%7B1%7D%5Cleft%28%5Ctheta_%7B1%7D%5E%7B1%7D%5Cright%29%2C+%5Cldots%2C+a_%7B1%7D%5Cleft%28%5Ctheta_%7B1%7D%5E%7Bn_%7B1%7D%7D%5Cright%29%5Cright%29%2C+%5Cldots%2C%5Cleft%28a_%7BN%7D%5Cleft%28%5Ctheta_%7BN%7D%5E%7B1%7D%5Cright%29%2C+%5Cldots%2C+a_%7BN%7D%5Cleft%28%5Ctheta_%7BN%7D%5E%7Bn_%7BN%7D%7D%5Cright%29%5Cright%29%5Cright%29" alt="[公式]"></p><p>给定<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的期望收益： <img src="https://www.zhihu.com/equation?tex=+U_%7Bi%7D%5Cleft%28a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%2C+a_%7B-i%7D%5Cright%29%3D%5Csum_%7B%5Ctheta_%7B-i%7D%7D+p%5Cleft%28%5Ctheta_%7B-i%7D+%5Cmid+%5Ctheta_%7Bi%7D%5Cright%29+u_%7Bi%7D%5Cleft%28a_%7B-i%7D%5Cleft%28%5Ctheta_%7B-i%7D%5Cright%29%2C+a_%7Bi%7D%2C+%5Ctheta_%7B-i%7D%2C+%5Ctheta_%7Bi%7D%5Cright%29+%5C%5C" alt="[公式]"> 意思：在当前的状态<img src="https://www.zhihu.com/equation?tex=%5Ctheta_i" alt="[公式]">下，对手的某种状态的概率，乘以这种状态下他们的策略选择的收益，求和。</p><h3 id="四、贝叶斯纳什均衡">四、贝叶斯纳什均衡</h3><p>若<strong>博弈结果</strong><img src="https://www.zhihu.com/equation?tex=%28a_1%2Ca_2%2C%5Cdots+%2Ca_N%29" alt="[公式]">对于所有的<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=a_i%27%28%5Ctheta_i%29+%5Cin+A_i" alt="[公式]">，满足： <img src="https://www.zhihu.com/equation?tex=+U_%7Bi%7D%5Cleft%28a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%2C+a_%7B-i%7D%5Cright%29+%5Cgeq+U_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%2C+a_%7B-i%7D%5Cright%29+%5C%5C" alt="[公式]"> 则称这个博弈结果是<strong>纳什均衡</strong>。</p><h3 id="最优反应函数">最优反应函数</h3><p>玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的在给定<img src="https://www.zhihu.com/equation?tex=a_%7B-i%7D" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=%5Ctheta_i" alt="[公式]">的最优反应为： <img src="https://www.zhihu.com/equation?tex=+B_%7Bi%7D%5Cleft%28a_%7B-i%7D%2C+%5Ctheta_%7Bi%7D%5Cright%29%3D%5Cleft%5C%7Ba_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%3A+U_%7Bi%7D%5Cleft%28a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%2C+a_%7B-i%7D%5Cright%29%5Cright.+%5Cgeq+U_%7Bi%7D%5Cleft%28a_%7Bi%7D%5E%7B%5Cprime%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%2C+a_%7B-i%7D%5Cright%29+%5Ctext+%7B+for+all+%7D+%5Cleft.a_%7Bi%7D%5E%7B%5Cprime%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29%5Cright%5C%7D+%5C%5C" alt="[公式]"></p><h3 id="定理">定理</h3><p>博弈结果<img src="https://www.zhihu.com/equation?tex=%28a_1%2Ca_2%2C%5Cdots+%2Ca_N%29" alt="[公式]">是纳什均衡当且仅当对于每个<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=%5Ctheta_i" alt="[公式]">，都有<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D%5Cleft%28%5Ctheta_%7Bi%7D%5Cright%29+%5Cin+B_%7Bi%7D%5Cleft%28a_%7B-i%7D%2C+%5Ctheta_%7Bi%7D%5Cright%29" alt="[公式]"></p><h3 id="五、例子：古诺模型-非完全信息">五、例子：古诺模型(非完全信息)</h3><p>上面性别战是离散的例子，这里举一个古诺模型。</p><p>有两家公司生产同一种商品，这种商品的成本可能有两种：高价<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">和低价<img src="https://www.zhihu.com/equation?tex=c_L" alt="[公式]">，公司1的成本是<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">，这是众所周知的。然而公司1不知道公司2的成本是<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">还是<img src="https://www.zhihu.com/equation?tex=c_L" alt="[公式]">，它相信公司2成本是<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">的概率是<img src="https://www.zhihu.com/equation?tex=p" alt="[公式]">。市场上可以卖出的商品单价是(<img src="https://www.zhihu.com/equation?tex=a-" alt="[公式]">商品总产量)，现在两家公司需要决定各自的产量。</p><p>建模：</p><ul><li><img src="https://www.zhihu.com/equation?tex=N+%3D+%5C%7B1%2C2%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=%5Ctheta_1+%3D+%5C%7Bc_H%5C%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=%5Ctheta_2+%3D+%5C%7Bc_H%EF%BC%8Cc_L%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=A_1%3D%5C%7Bq_1%3Aq_1+%5Cge+0%5C%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=A_2%3D%5C%7Bq_%7B2%2CH%7D%2Cq_%7B2%2CL%7D%3Aq_%7B2%2CH%7D+%5Cge+0%2C+q_%7B2%2CL%7D+%5Cge+0%5C%7D" alt="[公式]"></li><li>单价：<img src="https://www.zhihu.com/equation?tex=a-q_%7B1%7D-q_%7B2%2C+L%7D+" alt="[公式]">或<img src="https://www.zhihu.com/equation?tex=a-q_%7B1%7D-q_%7B2%2C+H%7D" alt="[公式]"></li></ul><p>求解纳什均衡：</p><p>对于公司1，求它的期望收益(公司1以p的概率相信公司2是<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">)： <img src="https://www.zhihu.com/equation?tex=+U_%7B1%7D%5Cleft%28q_%7B1%7D%2C+q_%7B2%2C+L%7D%2C+q_%7B2%2C+H%7D%2C+c_%7BL%7D%2C+c_%7BH%7D%5Cright%29%3Dp+q_%7B1%7D%5Cleft%28a-q_%7B1%7D-q_%7B2%2C+H%7D%5Cright%29%2B%281-p%29+q_%7B1%7D%5Cleft%28a-q_%7B1%7D-q_%7B2%2C+L%7D%5Cright%29-c_%7BH%7D+q_%7B1%7D+%5C%5C" alt="[公式]"> 对于公司2，如果它成本是<img src="https://www.zhihu.com/equation?tex=c_H" alt="[公式]">，则期望收益为： <img src="https://www.zhihu.com/equation?tex=+U_%7B2%7D%5Cleft%28q_%7B1%7D%2C+q_%7B2%2C+H%7D%2C+c_%7BH%7D%5Cright%29%3D%5Cleft%28a-q_%7B1%7D-q_%7B2%2C+H%7D%5Cright%29+q_%7B2%2C+H%7D-c_%7BH%7D+q_%7B2%2C+H%7D+%5C%5C" alt="[公式]"> 对于公司2，如果它成本是<img src="https://www.zhihu.com/equation?tex=c_L" alt="[公式]">，则期望收益为： <img src="https://www.zhihu.com/equation?tex=+U_%7B2%7D%5Cleft%28q_%7B1%7D%2C+q_%7B2%2C+L%7D%2C+c_%7BL%7D%5Cright%29%3D%5Cleft%28a-q_%7B1%7D-q_%7B2%2C+L%7D%5Cright%29+q_%7B2%2C+L%7D-c_%7BL%7D+q_%7B2%2C+L%7D+%5C%5C" alt="[公式]"> 用期望收益对产量求导等于零，得出收益的极大值点，也就是最优反应函数： <img src="https://www.zhihu.com/equation?tex=+B_%7B1%7D%5Cleft%28q_%7B2%2C+L%7D%2C+q_%7B2%2C+H%7D%5Cright%29%3D%5Cleft%5C%7B%5Cfrac%7Ba-p+q_%7B2%2C+H%7D-%281-p%29+q_%7B2%2C+L%7D-c_%7BH%7D%7D%7B2%7D%5Cright%5C%7D+%5C%5C" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=+B_%7B2%7D%5Cleft%28q_%7B1%7D%2C+c_%7BH%7D%5Cright%29%3D%5Cleft%5C%7B%5Cfrac%7Ba-q_%7B1%7D-c_%7BH%7D%7D%7B2%7D%5Cright%5C%7D+%5C%5C" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=+B_%7B2%7D%5Cleft%28q_%7B1%7D%2C+c_%7BL%7D%5Cright%29%3D%5Cleft%5C%7B%5Cfrac%7Ba-q_%7B1%7D-c_%7BL%7D%7D%7B2%7D%5Cright%5C%7D+%5C%5C" alt="[公式]"></p><p>求得纳什均衡<img src="https://www.zhihu.com/equation?tex=%28q_1%2C%28q_%7B2%2CL%7D%2Cq_%7B2%2CH%7D%29%29" alt="[公式]">： <img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bc%7D+q_%7B1%7D%3D%5Cfrac%7Ba-c_%7BH%7D-%281-p%29%5Cleft%28c_%7BH%7D-c_%7BL%7D%5Cright%29%7D%7B3%7D+%5C%5C+q_%7B2%2C+%5Cmathrm%7BH%7D%7D%3D%5Cfrac%7Ba%7D%7B3%7D-%5Cfrac%7Bc_%7BH%7D%2Bc_%7BL%7D%7D%7B6%7D-p+%5Cfrac%7Bc_%7BH%7D-c_%7BL%7D%7D%7B6%7D+%5C%5C+q_%7B2%2C+L%7D%3D%5Cfrac%7Ba%7D%7B3%7D-%5Cfrac%7Bc_%7BL%7D%7D%7B3%7D-p+%5Cfrac%7Bc_%7BH%7D-c_%7BL%7D%7D%7B6%7D+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"></p><h3 id="六、总结">六、总结</h3><p>这一节讲了非完全信息策略式博弈，主要是多了&quot;私有状态&quot;这一个概念。状态多的时候，纳什均衡很难求。</p><h1>博弈论笔记(七)：扩展式博弈(Extensive Game)</h1><blockquote><p>前面讲过了完全信息策略式博弈、非完全信息策略式博弈。<br>在策略式博弈中，所有玩家在同一时间做出决策。<br>扩展式博弈(Extensive Game)，也叫动态博弈。和策略式博弈最大的不同，就是玩家是轮流做决策的。</p></blockquote><p>例子：①尼姆游戏：有n枚硬币，两个玩家轮流取硬币，每次可以取1枚或两枚硬币，取到最后一枚硬币的人获胜。②下棋。</p><p>特点是：每一步没有收益，只有最后一步，才有收益(获胜)。扩展式博弈相较于策略式博弈，多了玩家的序列信息，以及每个点上的策略集</p><p>分类：完全信息扩展式博弈、非完全信息扩展式博弈。</p><h3 id="一、一个例子">一、一个例子</h3><p>谷歌想进入中国市场，百度可以选择“对立(F)”和“合作©”</p><p>这样可以画出一颗“博弈树”：</p><p><img src="https://pic3.zhimg.com/80/v2-d8f5f84fe6f44acf7007ea75cdd4814e_720w.jpg" alt="img"></p><h3 id="二、表示形式：博弈树">二、表示形式：博弈树</h3><p>博弈树由<strong>结点</strong>(node)和<strong>边</strong>(edge)组成，对应博弈玩家、策略和收益。</p><ol><li>结点：</li><li>非叶子结点：代表<strong>博弈玩家</strong>，表示这个时候哪个博弈玩家做出决策。每个非叶子结点有且仅有一个博弈玩家。</li><li>叶子结点：代表每个玩家在此时的<strong>收益</strong>。收益只存在于叶子结点。</li><li>边：表示<strong>策略</strong></li></ol><h3 id="三、扩展式博弈形式化定义">三、扩展式博弈形式化定义</h3><ol><li>玩家集N</li><li>策略集A：表示所有可能的策略。不过在一些结点上可能只有一部分可以选择的策略。</li><li>历史集H：“策略的序列”构成的集合，可以是有限集或者无限集。H中的元素称为<strong>历史</strong>(history)。性质：</li><li><ol><li><img src="https://www.zhihu.com/equation?tex=%5Cemptyset+%5Cin+H" alt="[公式]">，表示博弈树的根结点。</li><li>如果策略序列<img src="https://www.zhihu.com/equation?tex=a%5E1a%5E2%5Cdots+a%5Ek+%5Cin+H" alt="[公式]">且<img src="https://www.zhihu.com/equation?tex=s+%3C+k" alt="[公式]">，那么<img src="https://www.zhihu.com/equation?tex=a%5E1a%5E2%5Cdots+a%5Es+%5Cin+H" alt="[公式]"></li><li>如果无穷策略序列<img src="https://www.zhihu.com/equation?tex=%28a%5Ek%29_%7Bk%3D1%7D%5E%5Cinfty" alt="[公式]">满足对于任意的<img src="https://www.zhihu.com/equation?tex=k" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=a%5E1a%5E2%5Cdots+a%5Ek+%5Cin+H" alt="[公式]">，那么<img src="https://www.zhihu.com/equation?tex=%28a%5Ek%29_%7Bk%3D1%7D%5E%5Cinfty+%5Cin+H" alt="[公式]"></li><li><strong>每一条历史序列都对应博弈树的一个结点</strong>，对应历史序列末端到达的结点。</li><li>在完全信息扩展式博弈中，历史集大小=结点个数。</li><li>最终历史(Terminal history)：如果<img src="https://www.zhihu.com/equation?tex=a%5E1a%5E2%5Cdots+a%5Ek+%5Cin+H" alt="[公式]">且(<img src="https://www.zhihu.com/equation?tex=k+%3D+%2B%5Cinfty" alt="[公式]">或<img src="https://www.zhihu.com/equation?tex=a%5E1a%5E2%5Cdots+a%5E%7Bk%2B1%7D+%5Cnotin+H+%5C+for+%5C+any%5C+%5C+a%5E%7Bk%2B1%7D+%5Cin+A" alt="[公式]"></li><li>最终历史集(Terminal history set)：<strong>Z</strong> = {All Terminal history}，在这些结点上是<strong>收益</strong>。</li></ol></li><li>博弈玩家函数(Player Function)P：</li><li><ol><li><img src="https://www.zhihu.com/equation?tex=P+%3AH+%5Cbackslash+Z+%5Crightarrow+N" alt="[公式]">，给每一个非终结历史分配玩家集N中的一个元素。</li><li><img src="https://www.zhihu.com/equation?tex=P%28h%29" alt="[公式]">表示在历史h后，轮到哪个玩家做决策。</li></ol></li><li>收益函数(Payoff Function)<img src="https://www.zhihu.com/equation?tex=u_i%3AZ+%5Crightarrow+R" alt="[公式]">，表示第i个玩家的收益</li></ol><p>形式化：扩展式博弈G <img src="https://www.zhihu.com/equation?tex=+G%3D%5Cleft%5C%7BN%2C+H%2C+P%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D+%5C%5C" alt="[公式]"> (不需要策略集A，用上面四个就可以完全刻画一个扩展式博弈，因为策略都包含在历史里了)</p><h3 id="1-例子：最后通牒博弈">1. 例子：最后通牒博弈</h3><p><img src="https://pic3.zhimg.com/80/v2-43d14af4f7ffc305daac5d9fc4289be6_720w.jpg" alt="img"></p><p>由博弈树转化为扩展式博弈：</p><ul><li><img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C+H%2C+P%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=N+%3D+%5C%7BA%2CB%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=H+%3D+%5C%7B%5Cemptyset%2C%282.0%29%2C%281%2C1%29%2C%280%2C2%29%2C%28%282%2C0%2Cy%29%29%2C%28%282%2C0%29%2C+%5Cmathrm%7Bn%7D%29%2C%28%281%2C1%29%2C+%5Cmathrm%7By%7D%29%2C%28%281%2C1%29%2C+%5Cmathrm%7Bn%7D%29%2C+%28%280%2C2%29%2C+y%29%2C%28%280%2C2%29%2C+n%29+%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=P%3A+P%28%5Cemptyset%29%3DA+%3B+P%28%282%2C0%29%29%3DB+%3B+P%28%281%2C1%29%29%3DB+%3B+P%28%280%2C2%29%29%3DB" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=%5Cbegin%7Barray%7D%7Bl%7D+++u_%7B1%7D%28%282%2C0%29%2C+y%29%3D2%2C+u_%7B1%7D%28%282%2C0%29%2C+n%29%3D0%2C%5C%5C+u_%7B1%7D%28%281%2C1%29%2C+y%29%3D1%2C+u_%7B1%7D%28%281%2C1%29%2C+n%29%3D0%2C%5C%5C+u_%7B1%7D%28%280%2C2%29%2C+y%29%3D0%2C+u_%7B1%7D%28%280%2C2%29%2C+n%29%3D0%2C+%5C%5C+++u_%7B2%7D%28%282%2C0%29%2C+y%29%3D0%2C+u_%7B2%7D%28%282%2C0%29%2C+n%29%3D0%2C+%5C%5Cu_%7B2%7D%28%281%2C1%29%2C+y%29%3D1%2C+u_%7B2%7D%28%281%2C1%29%2C+n%29%3D0%2C+%5C%5C+u_%7B2%7D%28%280%2C2%29%2C+y%29%3D2%2C+u_%7B2%7D%28%280%2C2%29%2C+n%29%3D0+++%5Cend%7Barray%7D" alt="[公式]"></li></ul><h3 id="2-例子：由扩展式博弈定义画出博弈树">2. 例子：由扩展式博弈定义画出博弈树</h3><p><img src="https://www.zhihu.com/equation?tex=%5Cbegin%7Barray%7D%7Bl%7D+G%3D%5Cleft%5C%7BN%2C+H%2C+P%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D+%5C%5C+N%3D%5C%7B1%2C2%5C%7D+%5C%5C+H%3D%5C%7B%5Cemptyset%2C+A%2C+B%2C+A+L%2C+A+R%5C%7D+%5C%5C+P%3A+P%28%5Cemptyset%29%3D1+%3B+P%28A%29%3D2+%5C%5C+u_%7B1%7D%28B%29%3D1%2C+u_%7B1%7D%28A+L%29%3D0%2C+u_%7B1%7D%28A+R%29%3D2+%5C%5C+u_%7B2%7D%28B%29%3D2%2C+u_%7B2%7D%28A+L%29%3D0%2C+u_%7B2%7D%28A+R%29%3D1+%5Cend%7Barray%7D" alt="[公式]"></p><p>画出博弈树：</p><p><img src="https://pic4.zhimg.com/80/v2-90564e20fdc05225e347743022b3c163_720w.jpg" alt="img"></p><h3 id="四、扩展式博弈的纯策略-Pure-strategies">四、扩展式博弈的纯策略(Pure strategies)</h3><p>给定<img src="https://www.zhihu.com/equation?tex=G%3D%5Cleft%5C%7BN%2C+H%2C+P%2C%5Cleft%5C%7Bu_%7Bi%7D%5Cright%5C%7D%5Cright%5C%7D" alt="[公式]">，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的<strong>纯策略的集合</strong>是： <img src="https://www.zhihu.com/equation?tex=+%5Ctimes_%7Bh+%5Cin+H%7D%5Cleft%5C%7Ba%5E%7Bs%7D%3A%5Cleft%28h%2C+a%5E%7Bs%7D%5Cright%29+%5Cin+H%2C+p%28h%29%3Di%5Cright%5C%7D+%5C%5C" alt="[公式]"> 通俗地说，就是玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的结点上的策略集的笛卡尔积。</p><h3 id="例子：最后通牒博弈">例子：最后通牒博弈</h3><p><img src="https://pic2.zhimg.com/80/v2-95b8fc94733214175416d770a7034905_720w.jpg" alt="img"></p><ul><li>玩家A的纯策略：<img src="https://www.zhihu.com/equation?tex=%5C%7B%282%2C0%29%2C%281%2C1%29%2C%280%2C2%29%5C%7D" alt="[公式]"></li><li>玩家B的纯策略：<img src="https://www.zhihu.com/equation?tex=%5C%7B+yyy%2C+yyn%2C+yny+%2C+ynn%2C+nyy%2C+nyn+%2C+nny+%2C+nnn+%5C%7D" alt="[公式]"></li></ul><h3 id="例子：">例子：</h3><p><img src="https://pic3.zhimg.com/80/v2-382c0aa5a1e653bf535ed68c0cd5688e_720w.jpg" alt="img"></p><ul><li>玩家1：<img src="https://www.zhihu.com/equation?tex=%5C%7BA%2CB%5C%7D+%5Ctimes+%5C%7BG%2C+H%5C%7D" alt="[公式]"></li><li>玩家2：<img src="https://www.zhihu.com/equation?tex=%5C%7BC%2CD%5C%7D+%5Ctimes+%5C%7BE%2C+F%5C%7D" alt="[公式]"></li></ul><p>虽然AG这种纯策略是“不可能”的，因为它们不可能出现在一个历史中，但是这是纯策略的定义。</p><h3 id="五、纳什均衡">五、纳什均衡</h3><p>有了纯策略，就可以定义：混合策略、最优反应、纳什均衡。</p><p>和策略式博弈纳什均衡的定义是一样的。</p><p>如何求解纳什均衡：<strong>诱导策略式博弈</strong></p><p>扩展式博弈可以转化为策略式博弈，根据每个玩家纯策略的组合，会出现相应的收益，写出<strong>诱导收益矩阵</strong>。</p><p><img src="https://pic4.zhimg.com/80/v2-3b020520301bec811236330c4b9366c7_720w.jpg" alt="img"></p><p>可以转化为：</p><p><img src="https://pic2.zhimg.com/80/v2-e1a0d8d6e7abed0f1491cd4b942e7b11_720w.jpg" alt="img"></p><p>转化不可逆。</p><p>根据诱导收益矩阵，就可以找到纳什均衡：(BH, CE)，(AG, CF)，(AH, CF)</p><p>但是，<strong>纳什均衡有些策略是不可信的</strong>，比如：(AH, CF)是纳什均衡，但A怎么会选择H策略呢？正常一定选G呀。所以，为了避免这些不可信的纳什均衡，需要找出另一种均衡，试所有均衡都是可信的，这就是子博弈完美均衡。</p><h3 id="Kuhn-Theorem">Kuhn Theorem</h3><p>每一个具有完全信息的有限扩展式博弈至少有一个<strong>纯策略纳什均衡</strong>(PSNE)</p><h3 id="六、子博弈">六、子博弈</h3><p>博弈树的子树，从一个结点开始的所有子结点。</p><h3 id="七、子博弈完美纳什均衡-Subgame-Perfect-Equilibrium">七、子博弈完美纳什均衡(Subgame Perfect Equilibrium)</h3><p>如果<img src="https://www.zhihu.com/equation?tex=a%3D%5Cleft%28a_%7B1%7D%5E%7B%2A%7D%2C+a_%7B2%7D%5E%7B%2A%7D%2C+%5Cldots%2C+a_%7BN%7D%5E%7B%2A%7D%5Cright%29" alt="[公式]">在每个子博弈都是纳什均衡，那么它就是子博弈完美均衡</p><h3 id="定理-2">定理</h3><p>每一个完全信息扩展式博弈都有子博弈完美均衡。</p><p>如何求解子博弈完美均衡？是用后向归纳的方式，从树的叶子端开始，不断剪枝，最终到根节点。具体过程请看<strong>下节笔记</strong>。</p><h3 id="八、小结">八、小结</h3><p>这节主要介绍了扩展式博弈的概念、形式化以及纳什均衡。这些都是扩展式博弈的基础的部分。</p><h1>博弈论笔记(八)：求解子博弈完美均衡——单步偏移，后向归纳</h1><h3 id="一、目标">一、目标</h3><p>本节课探究两个目标：</p><ol><li>子博弈完美均衡(SPE)是否存在？</li><li>如何找到SPE？</li></ol><p>先给出结论：</p><ol><li>有限的完全信息扩展式博弈，存在SPE</li><li>计算：后向归纳</li></ol><h3 id="二、寻找SPE-–-后向归纳">二、寻找SPE – 后向归纳</h3><h3 id="1-步骤">1. 步骤</h3><ol><li>从最末端的非叶子结点开始(从最后的子博弈开始)，计算NE(此时对于这个非叶子结点的玩家，相当于寻找他的最优收益)。用这个收益，替代这个子博弈根结点。</li><li>重复第1步，直到根节点</li></ol><p>通过逆向归纳构造的策略博弈集等价于SPE的集合</p><h3 id="2-例子-唯一的SPE">2. 例子(唯一的SPE)</h3><blockquote><p>叶子结点上的收益表示：(1的收益，2的收益)</p></blockquote><p>红色的勾表示选择这个分支。从下往上推，每个人选择自己收益较高的分支。</p><p><img src="https://pic2.zhimg.com/80/v2-7bf2f470277febf5bb3d73f3ce319ad9_720w.jpg" alt="img"></p><p>得到SPE：(AG, CF)</p><h3 id="3-例子-不唯一的SPE">3. 例子(不唯一的SPE)</h3><p><img src="https://pic2.zhimg.com/80/v2-e3d68095705ce4c646695b309c6fc225_720w.jpg" alt="img"></p><p><em>在最高收益相等的时候，根据纳什均衡的定义，这些收益最高的都是纳什均衡。</em></p><p>玩家2会选择的纯策略可能有4种：FHK、FIK、GHK、GIK。当玩家2选择<code>FHK</code>的时候，玩家1在三个分支上的收益分别是：3, 1, 1。因此，玩家1会选择C，得到一个SPE：(C, FHK)。</p><p>同理得到所有的SPE：(C, FHK)、(C, FIK)、(C, GHK)、(D, GHK)、(E, GHK)、(D, GIK)</p><h3 id="4-例子-蜈蚣博弈">4. 例子(蜈蚣博弈)</h3><p><img src="https://pic3.zhimg.com/80/v2-561e473bbcd03f1250415688fdced016_720w.jpg" alt="img"></p><p>SPE：(DDD, DD)。收益：(1. 0)，收益并不理想。</p><h3 id="三、形式化之路">三、形式化之路</h3><blockquote><p>如果只是想知道如何求解，形式化似乎不重要。但是如果想严谨地建模，那就必须形式化了。</p></blockquote><h3 id="1-一些符号记法">1. 一些符号记法</h3><ul><li>初始历史：<img src="https://www.zhihu.com/equation?tex=A%28h%29+%3D+%5C%7Ba+%3A+%28h%2Ca%29%5Cin+H+%5C%7D" alt="[公式]">，表示在结点 <img src="https://www.zhihu.com/equation?tex=h" alt="[公式]"> 的策略集。(不要忘了历史<img src="https://www.zhihu.com/equation?tex=h" alt="[公式]">和结点一一对应)</li><li>博弈G的长度：<img src="https://www.zhihu.com/equation?tex=%5Cell%28G%29%3D%5Cmax+_%7Bh+%5Cin+H%7D%5C%7B%7Ch%7C%5C%7D" alt="[公式]">，和树高相同。</li><li><img src="https://www.zhihu.com/equation?tex=s_i" alt="[公式]">：玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的某个纯策略</li><li><img src="https://www.zhihu.com/equation?tex=s_i%28h%29+%3D+a" alt="[公式]">：<img src="https://www.zhihu.com/equation?tex=a+%5Cin+A%28h%29" alt="[公式]"> and <img src="https://www.zhihu.com/equation?tex=a+%5Cin+s_i" alt="[公式]">。(表示在结点<img src="https://www.zhihu.com/equation?tex=h" alt="[公式]">上，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的选择是<img src="https://www.zhihu.com/equation?tex=a" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=s_i%28h%29+%3D++A%28h%29+%5Ccap++s_i" alt="[公式]">。)</li></ul><h3 id="举例">举例</h3><p><img src="https://pic4.zhimg.com/80/v2-b7a0d13f1473f2a1ae91b6ed0a819493_720w.jpg" alt="img"></p><ul><li><img src="https://www.zhihu.com/equation?tex=%5Cell%28G%29+%3D+3" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=A%28BF%29+%3D+%5C%7BG%2CH%5C%7D" alt="[公式]"></li><li>设纯策略<img src="https://www.zhihu.com/equation?tex=s_1%3D%28AG%29" alt="[公式]">，那么<img src="https://www.zhihu.com/equation?tex=s_1%28BF%29%3DG" alt="[公式]">，(在结点BF上，玩家1的选择是G)</li></ul><h3 id="2-定义：有限博弈">2. 定义：有限博弈</h3><p>博弈G的长度<img src="https://www.zhihu.com/equation?tex=%5Cell%28G%29" alt="[公式]">有限。</p><h3 id="3-定义：子博弈">3. 定义：子博弈</h3><p>给定<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7BN%2CH%2CP%2C%5C%7Bu_i%5C%7D%5C%7D" alt="[公式]">，结点h的子博弈定义为：<img src="https://www.zhihu.com/equation?tex=G%28h%29%3D%5C%7BN%2C%5Cleft.H%5Cright%7C_%7Bh%7D%2C%5Cleft.P%5Cright%7C_%7Bh%7D%2C%5C%7B%5Cleft.u_%7Bi%7D%5Cright%7C_%7Bh%7D%5C%7D%5C%7D" alt="[公式]">，其中：</p><ul><li><img src="https://www.zhihu.com/equation?tex=H%7C_%7Bh%7D" alt="[公式]">：<img src="https://www.zhihu.com/equation?tex=%5C%7Bh%5E%7B%5Cprime%7D%3A+s.t.+%5Cleft%28h%2C+h%5E%7B%5Cprime%7D%5Cright%29+%5Cin+H%5C%7D" alt="[公式]">，子博弈的历史集</li><li><img src="https://www.zhihu.com/equation?tex=P%7C_%7Bh%7D%28h%27%29+%3D+P%28h%2Ch%27%29" alt="[公式]">：子博弈中，结点<img src="https://www.zhihu.com/equation?tex=h%27" alt="[公式]">上的玩家</li><li><img src="https://www.zhihu.com/equation?tex=%5Cleft.u_%7Bi%7D%5Cright%7C_%7Bh%7D%5Cleft%28h%5E%7B%5Cprime%7D%5Cright%29%3Du_%7Bi%7D%5Cleft%28h%2C+h%5E%7B%5Cprime%7D%5Cright%29" alt="[公式]">，子博弈玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">在历史<img src="https://www.zhihu.com/equation?tex=h%27" alt="[公式]">的的收益</li></ul><p>其他记号：</p><ul><li><img src="https://www.zhihu.com/equation?tex=s_i%7C_h" alt="[公式]">子博弈中玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的纯策略</li><li><img src="https://www.zhihu.com/equation?tex=%5Cleft.s_%7Bi%7D%5Cright%7C_%7Bh%7D%5Cleft%28h%5E%7B%5Cprime%7D%5Cright%29%3Ds_%7Bi%7D%5Cleft%28h%2C+h%5E%7B%5Cprime%7D%5Cright%29" alt="[公式]">，子博弈中，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">在结点<img src="https://www.zhihu.com/equation?tex=h%27" alt="[公式]">的策略选择。</li></ul><h3 id="4-定义：子博弈完美均衡-Subgame-Perfect-Equilibrium">4. 定义：子博弈完美均衡(Subgame Perfect Equilibrium)</h3><p>对于有限博弈<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7BN%2CH%2CP%2C%5C%7Bu_i%5C%7D%5C%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=s%5E%2A+%3D+%5Cleft%28s_%7B1%7D%5E%7B%2A%7D%2C+s_%7B2%7D%5E%7B%2A%7D%2C+%5Cldots%2C+s_%7BN%7D%5E%7B%2A%7D%5Cright%29" alt="[公式]">是子博弈完美均衡(subgame perfect equilibrium)，当且仅当： <img src="https://www.zhihu.com/equation?tex=+%5Cbegin%7Barray%7D%7Bl%7D+%5Cforall+i+%5Cin+N%2C+%5Cforall+h+%5Cin+H+%5Cbackslash+%5Cmathrm%7BZ%7D+%5Ctext+%7B+s.t.+%7D+%5Cmathrm%7BP%7D%28h%29%3Di+%5C%5C+%5Cleft.u_%7Bi%7D%5Cright%7C_%7Bh%7D%5Cleft%28%5Cleft.s_%7Bi%7D%5E%7B%2A%7D%5Cright%7C_%7Bh%7D%2C%5Cleft.s_%7B-i%7D%5E%7B%2A%7D%5Cright%7C_%7Bh%7D%5Cright%29+%5Cgeq%5Cleft.+u_%7Bi%7D%5Cright%7C_%7Bh%7D%5Cleft%28s_%7Bi%7D%2C%5Cleft.s_%7B-i%7D%5E%7B%2A%7D%5Cright%7C_%7Bh%7D%5Cright%29+%5C%5Cfor%5C+every%5C+s_i%5C+in%5C+G%28h%29+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"> 解释：对于所有子博弈(设根结点是<img src="https://www.zhihu.com/equation?tex=h" alt="[公式]">，根结点上的玩家是<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">)，在子博弈中，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的这种纯策略选择得到的收益，<strong>高于其他的纯策略</strong>。</p><h3 id="5-单步偏离原则">5. 单步偏离原则</h3><p>对于所有子博弈(设子博弈根结点是<img src="https://www.zhihu.com/equation?tex=h" alt="[公式]">，根结点上的玩家是<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">)，在子博弈中，玩家<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">的这种纯策略(记为<img src="https://www.zhihu.com/equation?tex=s_i%5E%2A" alt="[公式]">)选择得到的收益，<strong>不低于那些仅和<img src="https://www.zhihu.com/equation?tex=s_i%5E%2A" alt="[公式]">在<img src="https://www.zhihu.com/equation?tex=A%28h%29" alt="[公式]">上不同的纯策略</strong>。(也就是只考虑子博弈根节点的策略选择不同)</p><h3 id="举例-2">举例</h3><p><img src="https://pic4.zhimg.com/80/v2-a7c2edcc9fccfcbed76f1f1d04f9b007_720w.jpg" alt="img"></p><p>在检验(AHI, CE)是不是SPE的时候，检验根节点的时候，只需比较(AHI, CE)和(BHI, CE)的收益，不需要改变HI, CE。</p><h3 id="6-注意">6. 注意</h3><p>单步偏离原则不适用于<strong>无限博弈</strong></p><p><img src="https://pic1.zhimg.com/80/v2-bcb62b19f9c86fd8eddf59e9d4ba8bb8_720w.jpg" alt="img"></p><p>策略DDD……满足单步偏离原则，因为偏离一步之后，收益并没有增加，但是AAA……才是SPE。</p><h3 id="7-库恩定理">7. 库恩定理</h3><p>每一个具有完全信息的<strong>有限</strong>扩展式博弈都有子博弈完美均衡。</p><h3 id="四、应用">四、应用</h3><p>这两道算习题吧。</p><h3 id="1-古诺竞争–主从博弈">1. 古诺竞争–主从博弈</h3><p>古诺竞争已经出现过很多次了，这里再写一下题目：</p><blockquote><p>两个厂商{1, 2}生产和销售同一种商品，厂商<img src="https://www.zhihu.com/equation?tex=i" alt="[公式]">生产的数量记为<img src="https://www.zhihu.com/equation?tex=q_i" alt="[公式]">。每件商品生产成本都是c，售价是：<img src="https://www.zhihu.com/equation?tex=max%280%2Ca-b%28q_1%2Bq_2%29%29" alt="[公式]"></p></blockquote><p>和之前不同的是，这次<strong>厂商1先决定产量，然后厂商2再决定产量</strong>。这就变成了扩展式博弈。求子博弈完美均衡。</p><p>求解方法：先求厂商2的最优反应，用<img src="https://www.zhihu.com/equation?tex=q_1" alt="[公式]">表示，然后在求<img src="https://www.zhihu.com/equation?tex=q_1" alt="[公式]">的最优反应的时候，把<img src="https://www.zhihu.com/equation?tex=q_2" alt="[公式]">代入，最优反应函数中就只有<img src="https://www.zhihu.com/equation?tex=q_1" alt="[公式]">这个变量了，然后求极值点，就求出了子博弈完美均衡时的<img src="https://www.zhihu.com/equation?tex=q_1" alt="[公式]">，再代回求出<img src="https://www.zhihu.com/equation?tex=q_2" alt="[公式]">。</p><h3 id="2-最后通牒博弈">2. 最后通牒博弈</h3><p>两人分资产，第一个人选择分给自己的比例<img src="https://www.zhihu.com/equation?tex=x+%5Cin+%5B0%2C1%5D" alt="[公式]">。第二个人决定是否同意这种分法。如果同意，二人的收益为<img src="https://www.zhihu.com/equation?tex=%28x%2C1-x%29" alt="[公式]">，如果不同意，二人的收益为<img src="https://www.zhihu.com/equation?tex=%280%2C0%29" alt="[公式]">，求子博弈完美均衡。</p><h1>博弈论笔记(九)：二人零和博弈</h1><h2 id="一、形式化定义">一、形式化定义</h2><p>二人零和博弈是一个策略式博弈<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C%5C%7BA_1%2CA_2%5C%7D%2C%5C%7Bu_1%2Cu_2%5C%7D%5C%7D" alt="[公式]">使得对于任意<img src="https://www.zhihu.com/equation?tex=a_1%5Cin+A_1" alt="[公式]">和<img src="https://www.zhihu.com/equation?tex=a_2%5Cin+A_2" alt="[公式]">，都有<img src="https://www.zhihu.com/equation?tex=u_1%28a_1%2Ca_2%29%2Bu_2%28a_1%2Ca_2%29%3D0" alt="[公式]"></p><p>用语言描述就是：在任何的博弈结果上，两个玩家的收益和都是0。</p><p>例子：石头剪刀布，赢的+1分，输的-1分，平局得0分。</p><p>可以发现，当一个玩家在一种结果的收益是<img src="https://www.zhihu.com/equation?tex=x" alt="[公式]">的时候，另一个玩家的收益一定是<img src="https://www.zhihu.com/equation?tex=-x" alt="[公式]">，因此，无需记录两个玩家的收益，只需要记录一个玩家的收益即可。<strong>我们按惯例在收益矩阵中保留玩家一的收益。</strong> 这个收益矩阵记为<strong>u</strong></p><p><strong>u</strong> 举例如下：</p><p><img src="https://pic4.zhimg.com/80/v2-14049b24606fdf3af670e320935e354f_720w.jpg" alt="img">用玩家一的收益表示</p><p>用之前所学的，寻找最优反应，可以求解二人零和博弈，但是这节讲一种更简单，复杂度更低的求解方法。</p><h2 id="二、最大化最小原则-Maxmin"><strong>二、最大化最小原则(Maxmin)</strong></h2><blockquote><p>二人零和博弈也是策略式博弈，当然可以用以前的方法来求解纳什均衡。不过，有了零和的约束，换一种方法去思考会使得求解更为简便。</p></blockquote><p>可以先用策略式博弈的想法开始考虑：</p><p>当玩家1固定一个策略<img src="https://www.zhihu.com/equation?tex=a_1" alt="[公式]">时，玩家2会选择对它收益最高的那个策略<img src="https://www.zhihu.com/equation?tex=a_2" alt="[公式]">，也就是：</p><p>对于玩家1，应该采用这样的方法：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax_%7Ba_1+%5Cin+A_1%7D+%5Cmax_%7Ba_2+%5Cin+A_2%7D+u_2%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><p>把收益矩阵都转化为<img src="https://www.zhihu.com/equation?tex=u" alt="[公式]">的形式：<img src="https://www.zhihu.com/equation?tex=u_1%3Du%2C+u_2+%3D+-u" alt="[公式]"></p><p>对于玩家一，对每个策略计算最少收益，然后在这些最小值中取最大的。</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax_%7Ba_1+%5Cin+A_1%7D+%5Cmin_%7Ba_2+%5Cin+A_2%7D+u%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><p>玩家二收益：</p><p><img src="https://www.zhihu.com/equation?tex=-%5Cmin_%7Ba_2+%5Cin+A_2%7D+%5Cmax_%7Ba_1+%5Cin+A_1%7D+u%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><p>前面的负号不影响策略的取值</p><h2 id="三、例子"><strong>三、例子</strong></h2><p><img src="https://pic2.zhimg.com/80/v2-5198803be67f8a5c9c7c9f71e2359259_720w.jpg" alt="img"></p><h2 id="四、二人零和博弈纳什均衡"><strong>四、二人零和博弈纳什均衡</strong></h2><p>定理：对于有限二人零和博弈<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C+%5C%7BA_1%2C+A_2%5C%7D%2C+u%5C%7D" alt="[公式]">，玩家1选择策略：</p><p><img src="https://www.zhihu.com/equation?tex=a_1%5E%2A+%5Cin+%5Cmathop%7B%5Carg%5Cmax%7D_%7Ba_1+%5Cin+A_1%7D+%5Cmin_%7Ba_2+%5Cin+A_2%7D+u%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><p>玩家2选择策略：</p><p><img src="https://www.zhihu.com/equation?tex=a_2%5E%2A+%5Cin+%5Cmathop%7B%5Carg%5Cmin%7D_%7Ba_2+%5Cin+A_2%7D+%5Cmax_%7Ba_1+%5Cin+A_1%7D+u%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%28a_1%5E%2A%2C+a_2%5E%2A%29" alt="[公式]">构成一个纳什均衡 当且仅当</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax_%7Ba_1+%5Cin+A_1%7D+%5Cmin_%7Ba_2+%5Cin+A_2%7D+u%28a_1%2C+a_2%29+%3D+%5Cmin_%7Ba_2+%5Cin+A_2%7D+%5Cmax_%7Ba_1+%5Cin+A_1%7D+u%28a_1%2C+a_2%29+%5C%5C" alt="[公式]"></p><h2 id="五、混合策略博弈"><strong>五、混合策略博弈</strong></h2><h3 id="1-形式化定义"><strong>1. 形式化定义</strong></h3><p><img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C%5C%7BA_1%2CA_2%5C%7D%2CM%5C%7D" alt="[公式]">，其中：</p><ul><li><img src="https://www.zhihu.com/equation?tex=A_1+%3D+%5C%7Ba_1%2Ca_2%2C...%2Ca_m%5C%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=A_2+%3D+%5C%7Bb_1%2Cb_2%2C...%2Cb_n%5C%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=u_%7Bij%7D+%3D+u_1%28a_i%2Cb_j%29+%3D+u%28a_i%2Cb_j%29" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=M+%3D+%28u_%7Bij%7D%29_%7Bm%5Ctimes+n%7D" alt="[公式]"></li><li><img src="https://www.zhihu.com/equation?tex=p+%3D+%28p_1%2Cp_2%2C...%2Cp_m%29+%5Cin+%5CDelta_1" alt="[公式]">是在<img src="https://www.zhihu.com/equation?tex=A_1" alt="[公式]">上的混合策略(<img src="https://www.zhihu.com/equation?tex=%5CDelta" alt="[公式]">表示纯策略上的概率分布)</li><li><img src="https://www.zhihu.com/equation?tex=q+%3D+%28q_1%2Cq_2%2C...%2Cq_n%29+%5Cin+%5CDelta_2" alt="[公式]">是在<img src="https://www.zhihu.com/equation?tex=A_2" alt="[公式]">上的混合策略(<img src="https://www.zhihu.com/equation?tex=%5CDelta" alt="[公式]">表示纯策略上的概率分布)</li><li><strong>博弈结果</strong>：<img src="https://www.zhihu.com/equation?tex=%28p%2Cq%29" alt="[公式]"></li><li>玩家1的<strong>期望</strong>收益：<img src="https://www.zhihu.com/equation?tex=U%28p%2C+q%29%3D%5Csum_%7Bi%2C+j%7D+p_%7Bi%7D+q_%7Bj%7D+u%5Cleft%28a_%7Bi%7D%2C+b_%7Bj%7D%5Cright%29%3D%5Csum_%7Bi%2C+j%7D+p_%7Bi%7D+q_%7Bj%7D+u_%7Bi+j%7D%3Dp+M+q%5E%7B%5Ctop%7D" alt="[公式]">，(p,q是行向量)</li></ul><h3 id="2-MinMax-and-MaxMin"><strong>2. MinMax and MaxMin</strong></h3><p>类比纯策略，得到</p><p>玩家1的选择：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+U%28p%2C+q%29%3D%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D+%5C%5C" alt="[公式]"></p><p>玩家2的选择：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+U%28p%2C+q%29%3D%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+p+M+q%5E%7B%5Ctop%7D+%5C%5C" alt="[公式]"></p><h3 id="引理：max-min-公式-min-max"><strong>引理：max min</strong> <img src="https://www.zhihu.com/equation?tex=%5Cle" alt="[公式]"> <strong>min max</strong></h3><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+U%28p%2C+q%29+%5Cle+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+U%28p%2C+q%29+%5C%5C" alt="[公式]"></p><h3 id="二人零和博弈混合策略纳什均衡"><strong>二人零和博弈混合策略纳什均衡</strong></h3><p>定理：对于有限二人零和博弈<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C+%5C%7BA_1%2C+A_2%5C%7D%2C+u%5C%7D" alt="[公式]">，玩家1选择策略：</p><p><img src="https://www.zhihu.com/equation?tex=p%5E%2A+%5Cin+%5Cmathop%7B%5Carg%5Cmax%7D_%7Bp+%5Cin+%5CDelta_1%7D+%5Cmin_%7Bq+%5Cin+%5CDelta_2%7D+U%28p%2C+q%29+%5C%5C" alt="[公式]"></p><p>玩家2选择策略：</p><p><img src="https://www.zhihu.com/equation?tex=q%5E%2A+%5Cin+%5Cmathop%7B%5Carg%5Cmin%7D_%7Bq+%5Cin+%5CDelta_2%7D+%5Cmax_%7Bp+%5Cin+%5CDelta_1%7D+U%28p%2C+q%29+%5C%5C" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%28p%5E%2A%2C+q%5E%2A%29" alt="[公式]">构成一个混合策略纳什均衡 <strong>当且仅当</strong></p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+U%28p%2C+q%29%3D%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+U%28p%2C+q%29+%5C%5C" alt="[公式]"></p><h3 id="冯诺依曼最大化最小定理-John-von-Neumann’s-Minimax-Theorem"><strong>冯诺依曼最大化最小定理(John von Neumann’s Minimax Theorem)</strong></h3><p>上面讲了混合策略那是均衡的充要条件，那么混合均衡是否一定存在呢？怎样找到呢？<strong>冯诺依曼最大化最小定理</strong>给就要给出这两个问题的答案。</p><h3 id="定理："><strong>定理：</strong></h3><p>对于有限二人零和博弈<img src="https://www.zhihu.com/equation?tex=G+%3D+%5C%7B%5C%7B1%2C2%5C%7D%2C+%5C%7BA_1%2C+A_2%5C%7D%2C+M%5C%7D" alt="[公式]">，一定有：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D%3D%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+p+M+q%5E%7B%5Ctop%7D+%5C%5C" alt="[公式]"></p><p>即：<strong>混合策略纳什均衡一定存在</strong></p><p>推论：二人有限零和博弈至少存在一种混合策略纳什均衡：任何一对最优策略都是纳什均衡。</p><p>证明：略</p><blockquote><p>根据之前几节学习的，策略式博弈的混合策略纳什均衡一定是存在的，不过那是后来Nash提出来的，运用了更高级的数学工具(不动点定理等)，而最大化最小定理是在之前几十年提出的，没有相应的数学工具，所以只能是对二人零和博弈的证明。<br>在求解上，之前的混合策略纳什均衡求解是NP-Hard问题，而最大化最小定理的求解是一个多项式时间可以求出的。</p></blockquote><h3 id="求解MNE"><strong>求解MNE</strong></h3><p>既然一定存在MNE，那么直接求解最优化问题<img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D" alt="[公式]">或者<img src="https://www.zhihu.com/equation?tex=%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+p+M+q%5E%7B%5Ctop%7D" alt="[公式]">就可以求出MNE的解。</p><p>求解：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D+%5C%5C" alt="[公式]"></p><p>令 <img src="https://www.zhihu.com/equation?tex=v+%3D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D" alt="[公式]">，求解 <img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7Dv" alt="[公式]">。 <img src="https://www.zhihu.com/equation?tex=pM" alt="[公式]"> 是一个固定的<strong>行向量</strong>， <img src="https://www.zhihu.com/equation?tex=q" alt="[公式]"> 是一个<strong>概率分布</strong>，因此，<img src="https://www.zhihu.com/equation?tex=p+M+q%5E%7B%5Ctop%7D" alt="[公式]">的最小值就是<img src="https://www.zhihu.com/equation?tex=pM" alt="[公式]">向量中最小的那个数。因此：</p><p>求解<img src="https://www.zhihu.com/equation?tex=%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+p+M+q%5E%7B%5Ctop%7D" alt="[公式]">等价于求解<strong>线性规划问题</strong>：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmax+v+%5C%5C+%5C%5C" alt="[公式]"></p><p>s.t.</p><p><img src="https://www.zhihu.com/equation?tex=%5Cbegin%7Barray%7D%7Bc%7D+p+M+%5Cgeq+v+%5Cmathbf%7B1%7D+%5C%5C+p%3D%5Cleft%28p_%7B1%7D%2C+%5Cldots%2C+p_%7Bm%7D%5Cright%29+%5Cin+%5CDelta_%7B1%7D+%5C%5C+%5Cmathbf%7B1%7D%3D%281%2C+%5Cldots%2C+1%29%5E%7B%5Ctop%7D+%5Cend%7Barray%7D+%5C%5C" alt="[公式]"></p><p>求解<img src="https://www.zhihu.com/equation?tex=%5Cmin+_%7Bq+%5Cin+%5CDelta_%7B2%7D%7D+%5Cmax+_%7Bp+%5Cin+%5CDelta_%7B1%7D%7D+p+M+q%5E%7B%5Ctop%7D" alt="[公式]">等价于求解线性规划问题：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmin+v+%5C%5C" alt="[公式]"></p><p>s.t</p><p><img src="https://www.zhihu.com/equation?tex=M+q%5E%7B%5Ctop%7D+%5Cgeq+v+%5Cmathbf%7B1%7D+%5C%5C+q%3D%5Cleft%28q_%7B1%7D%2C+%5Cldots%2C+q_%7Bn%7D%5Cright%29+%5Cin+%5CDelta_%7B2%7D+%5C%5C+%5Cmathbf%7B1%7D%3D%281%2C+%5Cldots%2C+1%29%5E%7B%5Ctop%7D+%5C%5C+%5C%5C" alt="[公式]"></p><h2 id="六、总结-2">六、总结</h2><p>二人零和博弈是策略式博弈的一种特殊情况，普通的混合策略博弈求解难度随着博弈策略呈指数级增加，而二人零和博弈有高效的求解方法，是一个线性规划问题。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>决策树</title>
      <link href="/2022/09/08/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
      <url>/2022/09/08/%E5%86%B3%E7%AD%96%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1>Decision Tree（决策树）</h1><p>决策树是一种简单但广泛使用的分类器，它通过训练数据构建决策树，对未知的数据进行分类。决策树的每个内部节点表示在一个属性上的测试，每个分枝代表该测试的一个输出，而每个树叶结点存放着一个类标号。<br>在决策树算法中。</p><ul><li>ID3基于信息增益作为属性选择的度量，</li><li>C4.5基于信息增益比作为属性选择的度量，</li><li>CART基于基尼指数作为属性选择的度量。</li></ul><h2 id="决策树的优缺点">决策树的优缺点</h2><ul><li>优点<br>1、不需要任何领域知识或参数假设<br>2、适合高维数据。<br>3、简单易于理解。<br>4、短时间内处理大量数据，得到可行且效果较好的结果。<br>5、使用可视化模型。</li><li>缺点<br>1、对于各类别样本数量不一致数据，信息增益偏向于那些具有更多数值的特征。<br>2、易于过拟合。<br>3、忽略属性之间的相关性。<br>4、不支持在线学习<br>5、它们是不稳定的，这意味着数据的微小变化可能导致最优决策树结构的巨大变化。<br>6、计算可能变得非常复杂，特别是如果许多值不确定和/或许多结果是相关的。</li></ul><h2 id="决策树公式">决策树公式</h2><p><img src="http://r.photo.store.qq.com/psc?/V12XQ1QV2XlKPv/45NBuzDIW489QBoVep5mcfXH.U3WdPHorVpDWM0gJb2D3QOvpUVckAXxJL8hLjwjgrMoxu865v2q05HHVCszL8eFItNHO5KoZMacpgm73PY!/r" alt=""></p><h3 id="树模型">树模型</h3><hr><ul><li><strong>决策树</strong>：从根节点开始一步步走到叶子节点（决策）。</li><li>所有的数据最终都会落到叶子节点，即可以应用于分类也可以做回归。</li></ul><h3 id="树的组成">树的组成</h3><hr><ul><li><strong>根节点</strong>：第一个选择点</li><li><strong>非叶子节点于分支</strong>：中间过程</li><li><strong>叶子节点</strong>：最终的决策结果</li></ul><h3 id="决策树的训练与测试">决策树的训练与测试</h3><hr><ul><li>训练阶段从给定的训练集构造出一颗树，从根节点开始选择最有价值的特征开始切分节点。</li><li>测试阶段：根据构造出来的树模型从上到下走一遍。</li><li>一旦构造好了决策树，那么分类或者预测任务就很简单了，只需要走一遍就可以了，那么难点在于如何构造出一个树。</li></ul><h3 id="特征切分">特征切分</h3><hr><p>存在的问题：根节点的选择该用那个特征呢？接下来我们要如何划分？<br>思考：我们的目标应该使根节点就像老大，根节点下面的节点就像老二，老大应该比老二能更好的切分数据。<br>目标：选择一种衡量标准，来计算通过不同特征进行分支选择后的分类情况，找出来最好的就作为我们的根节点，以此类推确定所有的节点的划分标准。</p><h3 id="衡量标准——熵">衡量标准——熵</h3><hr><ul><li>熵：表示随机变量不确定性的度量（就是一个整体中内部元素的混乱程度，元素种类越多混乱程度越高）</li><li>公式：<br><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5nLOon6PRkUqIHD.R9KXA9*ah7Twa7esj1yYWHP3aBHi6FcamtGv76qo7NMc5i6FYKNZdRsfTN49rUOFVPZiggU!/mnull&amp;bo=cwF3AHMBdwADCSw!&amp;rf=photolist&amp;t=5" alt=""></li></ul><p>公式中pi表示第i种情况的概率</p><ul><li>熵值熵值与不确定性一般成正比<br>下图为熵值与概率的关系图：</li></ul><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5uNfuzFf.Njq94kymHaCq*47ucoUDxdMLlZpuwuB2u05oSkYToZakg9rNZncHZATj3PaboL15JCzUG6vtVqZXAU!/mnull&amp;bo=QAKLAUACiwEDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><h3 id="决策树算法">决策树算法</h3><hr><ul><li>ID3：信息增益（存在的问题：每个数据都有一个ID特征（1，2，3，…，14），根据该特征分类之后的熵值恒为 0 ，但是实际上根据这个特征分类毫无意义）</li><li>C4.5：信息增益率（是ID3的升级，考虑自身熵值）</li><li><strong>CART：使用GINI系数来作为衡量标准</strong></li><li>GINI系数（基尼系数）：<br><img src="http://a1.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5iDp*u5ka5r6sbhAldywtygTKn.L7BO4KhYzhfvcXJheamxdUgPSWT9aeo6vFYum4*JijXdBhQPtYrSyVTfLI6c!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OgJ.ADoCfgADGTw!&amp;tl=1&amp;vuin=1005741898&amp;tm=1618920000&amp;sce=60-2-2&amp;rf=0-0" alt=""></li></ul><h3 id="减枝策略">减枝策略</h3><hr><p><strong>离散化，</strong><br>把无限空间中有限的个体映射到有限的空间中去，以此提高算法的时空效率。<br>通俗的说，离散化是在不改变数据相对大小的条件下，对数据进行相应的缩小。例如:<br>原数据:1,999,100000,15;处理后:1,3,4,2;<br>原数据:{100,200}，{20,50000}，{1,400};<br>处理后:{3,4}，{2,6}，{1,5};</p><ul><li>针对连续值我们可以采用“离散化”的方式减少决策树计算量过大，叶子节点过多的问题。例如一组特征值为60，70，80，90，95，100，120，125，220。直接采用二分将会出现9个节点。如果我们人为分成A（60-80）、B（90-100）、C（120-220），我们只需要分成3类即可。当然要根据特征含义和特定分析条件下选择是否分割数据。</li><li>决策树剪枝：为了防止过拟合情况。（决策树过拟合分析很大，理论上可以完全分开数据，使得每个叶子节点只存在一个数据）</li><li>剪枝策略：<br>1、预剪枝（实用）：边建立决策树边进行剪枝操作。方法：限制树的深度，叶子节点的个数，叶子节点包含的样本树，信息增益量等。<br>2、后剪枝：当建立完决策树后来进行剪枝操作。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 决策树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟退火算法</title>
      <link href="/2022/09/08/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/266874840">知乎原博客</a></p><p><a href="http://t.csdn.cn/aEReJ">CSDN优秀博客</a></p><h1>模拟退火算法</h1><h2 id="优点：">优点：</h2><p>模拟退火算法的优点在于：<strong>不管函数形式多复杂，模拟退火算法更有可能找到全局最优解。</strong></p><p>迭代原则简单，理论支撑强，实际效果也很好</p><h2 id="1-金属退火的原理"><strong>1.金属退火的原理</strong></h2><p>金属退火是将金属加热到一定温度，保持足够时间，然后以适宜速度冷却(通常是缓慢冷却，有时是控制冷却)的一种金属热处理工艺。模拟退火算法来源于固体退火原理，将固体加温至充分高，再让其徐徐冷却，加温时，固体内部粒子随温升变为无序状，内能增大，而徐徐冷却时粒子渐趋有序，在每个温度都达到平衡态，最后在常温时达到<a href="https://www.zhihu.com/search?q=%E5%9F%BA%E6%80%81&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%22266874840%22%7D">基态</a>，内能减为最小。</p><p><img src="https://pic3.zhimg.com/v2-cce87c2c7bde7807d14365d6fbd846ce_b.jpg" alt="img"></p><p>如上图，处在低温状态时，固体中分子具有的内能很低，在原本的位置上做小范围的振动。若是将固体加热到一定温度，分子内能将会增加，<a href="https://www.zhihu.com/search?q=%E7%83%AD%E8%BF%90%E5%8A%A8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A%22266874840%22%7D">热运动</a>加剧，分子排列的无序度增加。此时再将温度缓缓降低，在每个温度都达到平衡态（即准静态过程），分子具有的能量逐渐降低，最终回归到有序排列的状态，分子内能也跟着降到最低。</p><h2 id="2-模拟退火算法机制"><strong>2.模拟退火算法机制</strong></h2><p>模拟退火算法<code>(Simulated Annealing,SA)</code>最早的思想是由<code>N. Metropolis</code>等人于<code>1953</code>年提出。<code>1983</code>年,<code>S. Kirkpatrick</code>等成功地将退火思想引入到组合优化领域。它是基于<code>Monte-Carlo</code> 迭代求解策略的一种随机寻优算法，其出发点是基于物理中固体物质的退火过程与一般组合优化问题之间的相似性。</p><p>介绍模拟退火前，还是有必要先介绍爬山算法。</p><h3 id="爬山算法"><strong>爬山算法</strong></h3><p>爬山算法是一种简单的贪心搜索算法，该算法每次从当前解的临近解空间中选择一个最优解作为当前解，直到达到一个局部最优解。</p><p><img src="https://pic3.zhimg.com/80/v2-dc9922369b5cf664398149e6d983a5b6_720w.jpg" alt="img"></p><p>爬山算法实现很简单，其主要缺点是会陷入局部最优解，而不一定能搜索到全局最优解。如上图所示：假设<code>C</code>点为当前解，爬山算法搜索到<code>A</code>点这个局部最优解就会停止搜索，因为在<code>A</code>点无论向那个方向小幅度移动都不能得到更优的解。</p><h3 id="模拟退火核心思想"><strong>模拟退火核心思想</strong></h3><p>模拟退火算法从某一较高初温出发，伴随温度参数的不断下降,结合一定的概率突跳特性在解空间中随机寻找目标函数的全局最优解，即在局部最优解能概率性地跳出并最终趋于全局最优。如下图：</p><p>这里的“一定的概率”的计算参考了金属冶炼的退火过程，这也是模拟退火算法名称的由来。将温度T当作控制参数，目标函数值<code>f</code>视为内能<code>E</code>，而固体在某温度<code>T</code>时的一个状态对应一个解<img src="https://www.zhihu.com/equation?tex=x_%7Bi%7D" alt="[公式]">，然后算法试图随着控制参数T的降低，使目标函数<code>f</code>(内能<code>E</code>)也逐渐降低，直至趋于全局最小值（退火中低温时的最低能量状态），就像金属退火过程一样。</p><p>关于爬山算法与模拟退火，有一个有趣的比喻：</p><ul><li>爬山算法：兔子朝着比现在高的地方跳去。它找到了不远处的最高山峰。但是这座山不一定是珠穆朗玛峰。这就是爬山算法，它不能保证局部最优值就是全局最优值。</li><li>模拟退火：兔子喝醉了。它随机地跳了很长时间。这期间，它可能走向高处，也可能踏入平地。但是，它渐渐清醒了并朝最高方向跳去。这就是模拟退火。</li></ul><h3 id="模拟退火数学原理"><strong>模拟退火数学原理</strong></h3><p>从上面我们知道，会结合概率突跳特性在解空间中随机寻找目标函数的全局最优解，那么具体的更新解的机制是什么呢？如果新解比当前解更优，则接受新解，否则基于<code>Metropolis</code>准则判断是否接受新解。接受概率为：</p><p><img src="https://www.zhihu.com/equation?tex=%09P+%3D++%09%5Cbegin%7Bcases%7D+%091%2C~~~~~~~~~~~~~~~~~+E_%7Bt%2B1%7D+%5Clt+E_%7Bt%7D+%5C%5C+%09e%5E%7B%5Cfrac%7B-%28E_%7Bt%2B1%7D+-+E_%7Bt%7D%29%7D%7BkT%7D%7D%2C~~~~+E_%7Bt%2B1%7D+%5Cge+E_%7Bt%7D+%09%5Cend%7Bcases%7D+%5C%5C" alt="[公式]"></p><p>如上公式，假设当前时刻搜索的解为<img src="https://www.zhihu.com/equation?tex=x_%7Bt%7D" alt="[公式]">，对应的系统能量(目标函数)为<img src="https://www.zhihu.com/equation?tex=E_%7Bt%7D" alt="[公式]">，对搜索点施加随机扰动，产生新解<img src="https://www.zhihu.com/equation?tex=x_%7Bt%2B1%7D" alt="[公式]">，相应地，系统能量为<img src="https://www.zhihu.com/equation?tex=E_%7Bt%2B1%7D" alt="[公式]">，那么系统对搜索点从<img src="https://www.zhihu.com/equation?tex=x_%7Bt%7D" alt="[公式]">到<img src="https://www.zhihu.com/equation?tex=x_%7Bt%2B1%7D" alt="[公式]">转变的接受概率就为上公式。具体以下图为例：</p><p><img src="https://pic3.zhimg.com/80/v2-66faae9e6cb2e1dde6023e8f9fe3a07e_720w.jpg" alt="img"></p><p>假设开始状态在<code>A</code>，随着迭代次数更新到<code>B</code>局部最优解，这时发现更新到<code>B</code>时，能量比<code>A</code>要低，则说明接近最优解了，因此百分百转移，状态到达<code>B</code>后，发现下一步能量上升了，如果是梯度下降则是不允许继续向前的，而这里会以一定的概率跳出这个坑，这个概率和当前的状态、能量等都有关系，如果<code>B</code>最终跳出来了到达<code>C</code>，又会继续以一定的概率跳出来，直到到达<code>D</code>后，就会稳定下来。</p><h2 id="3-模拟退火的流程"><strong>3.模拟退火的流程</strong></h2><p>算法实质分两层循环，在任一温度水平下，随机扰动产生新解，并计算目标函数值的变化，决定是否被接受。由于算法初始温度比较高，这样，使<code>E</code>增大的新解在初始时也可能被接受，因而能跳出局部极小值，然后通过缓慢地降低温度，算法就最终可能收敛到全局最优解，具体流程为：</p><ol><li>令<img src="https://www.zhihu.com/equation?tex=T+%3D+T_%7B0%7D" alt="[公式]">,表示开始退火的初始温度，随机产生一个初始解<img src="https://www.zhihu.com/equation?tex=x_%7B0%7D" alt="[公式]">,并计算对应的目标函数值<img src="https://www.zhihu.com/equation?tex=E%28x_%7B0%7D%29" alt="[公式]">;</li><li>令<img src="https://www.zhihu.com/equation?tex=T+%3D+kT" alt="[公式]">,其中<code>k</code>取值<code>0</code>到<code>1</code>之间，为温度下降速率；</li><li>对当前解<img src="https://www.zhihu.com/equation?tex=x_%7Bt%7D" alt="[公式]">施加随机扰动，在其邻域内产生一个新解<img src="https://www.zhihu.com/equation?tex=x_%7Bt%2B1%7D" alt="[公式]">，并计算对应的目标函数值<img src="https://www.zhihu.com/equation?tex=E%28x_%7Bt%2B1%7D%29" alt="[公式]">,计算</li></ol><p><img src="https://www.zhihu.com/equation?tex=%09%5CDelta+E+%3D+E%28x_%7Bt%2B1%7D%29+-+E%28x_%7Bt%7D%29+%5C%5C" alt="[公式]"></p><ol><li>若<img src="https://www.zhihu.com/equation?tex=%5CDelta+E+%5Clt+0" alt="[公式]">,接受新解作为当前解，否则按照概率<img src="https://www.zhihu.com/equation?tex=e%5E%7B-+%5CDelta+E%2FkT%7D" alt="[公式]">判断是否接受新解；</li><li>在温度<code>T</code>下，重复<code>L</code>次扰动和接受过程，即执行步骤<code>3</code>和<code>4</code>；</li><li>判断温度是否达到终止温度水平，若是则终止算法，否则返回步骤<code>2</code>.</li></ol><h3 id="Metropolis准则判断">Metropolis准则判断</h3><p>刚才说了，对当前解加随机扰动，得到一个新的解，那要不要接受这个解呢？模拟退火算法则使用的蒙特卡洛判断准则，这也是模拟退火算法的灵魂。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>E</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&lt;</mo><msub><mi>E</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mrow><mo fence="true">{</mo><msub><mi>E</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>E</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow></mrow><mrow><mi>k</mi><mi>T</mi></mrow></mfrac></msup><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>E</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>≥</mo><msub><mi>E</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">P=\left\{\begin{array}{ll}1, &amp; E_{t+1}&lt;E_{t} \\e^{\frac{-\left\{E_{t+1}-E_{t}\right)}{k T}}, &amp; E_{t+1} \geq E_{t}\end{array}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6747em;"><span style="top:-4.1242em;"><span class="pstrut" style="height:3.2894em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.4747em;"><span class="pstrut" style="height:3.2894em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2894em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3235em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.6245em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="minner mtight"><span class="mopen sizing reset-size1 size3 mtight delimcenter" style="top:0.0714em;"><span class="mtight">{</span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.0576em;margin-right:0.1em;"><span class="pstrut" style="height:2.6444em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.0576em;margin-right:0.1em;"><span class="pstrut" style="height:2.6151em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2703em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size1 size3 mtight delimcenter" style="top:0.0714em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1747em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6747em;"><span style="top:-4.1242em;"><span class="pstrut" style="height:3.2894em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4747em;"><span class="pstrut" style="height:3.2894em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1747em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>在上式中，P为接受新解的概率。比如，当前解是x_t，对应的系统能量（目标函数）为E_t，局部搜索后，产生新解x_t+1，那要不要接受这个新解呢？判断准则就是上边的这个公式。</p><p>根据上边这个公式，我们可以看出（注意此处是寻找最小值）：</p><p>当新解对应的目标函数小于当前解的目标函数值的时候，一定会接受新解（接受新解的概率为1）；</p><p>当新解对应的目标函数大于当前解的目标函数值的时候，则以一定的概率接受新解，你再看细点，当其他变量一定的情况下，新解对应的目标函数值超过当前解目标函数值越多，则接受这个新解的概率越小（想一想，这是不是正好符合我们的直观感觉）；此外，接受新解的概率还受到降温系数k和初始温度T的影响。</p><h3 id="流程解释2">流程解释2</h3><p>既然叫模拟退火算法，那就模拟的退火的过程，那算法的流程应该和退火的过程相一致。<br>回顾一下退火过程，在降温过程中实际上是分为两个层次的：<br>层次一：每降到一个温度时，会涉及到一个等温过程，见第一部分；</p><p>层次二：温度不断下降，直至达到我们指定的温度</p><p>那么对应的算法如下：</p><ol><li>一开始要给定一个相对较高的初始温度T，产生一个初始解x0（可以采用随机产生），计算对应的目标函数值E（x0）；</li><li>令T=kT，其中k是0-1的值，为温度下降系数。</li><li>对当前解Xt，随机扰动，在其领域内产生一个新解X(t+1)，计算出其对应的函数值，根据上述蒙特卡洛判断准则进行判断是否接受新解；</li><li>在温度T下，迭代L次扰动和接受过程。（其实这里的L次被叫做马尔科夫链的长度）</li><li>判断是否到达终止温度，若到达，则终止，否则返回步骤2；</li></ol><h3 id="控制参数">控制参数</h3><p>该算法涉及到的各项控制参数和各个需要自行给定的变量如下表所示。</p><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">意义</th></tr></thead><tbody><tr><td style="text-align:center">T</td><td style="text-align:center">初始温度</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">马尔科夫链的长度，即等温过程的迭代次数</td></tr><tr><td style="text-align:center">k</td><td style="text-align:center">温度下降速率，为0-1之间的数</td></tr><tr><td style="text-align:center">T(终)</td><td style="text-align:center">算法停止温度</td></tr><tr><td style="text-align:center">X（0）</td><td style="text-align:center">初始解</td></tr></tbody></table><h3 id="算法特点">算法特点</h3><ol><li>初始温度和马尔科夫链长度的设置问题。理论上来说，初始温度越高，且马尔科夫链越长，算法搜索越充分，得到全局最优解的可能性越大，但这也以为这需要耗费更多的计算时间。这个可以在算法里使用控制变量法进行测试。</li><li>退火问题。温度下降速率k越小，温度下降就越快，对应的迭代次数就越少，这样就可能导致得不到全局最优解；此外，到后期温度衰减很慢，对于这一点，我们可以将温度下降系数k设置为动态的，即随着温度的下降，温度下降系数也不断降低，比如k = 0.99k，以加快后期温度下降，加快算法收敛。</li><li>扰动算子。扰动不宜过大，这样可能会错过全局最优解。<br>置为动态的，即随着温度的下降，温度下降系数也不断降低，比如k = 0.99k，以加快后期温度下降，加快算法收敛。</li></ol><p>具体流程图如下：</p><p><img src="https://pic4.zhimg.com/80/v2-e1529b1b1577eecd16fb8a5418d51533_720w.jpg" alt="img"></p><p>其中有几个需要注意的点：</p><ul><li>初始点的选取对算法结果有一定的影响，最好是多次运行对结果进行综合判断。</li><li>在算法运行初期，温度下降快，避免接受过多的差结果。当运行时间增加，温度下降减缓，以便于更快稳定结果。</li><li>当迭代次数增加到一定次数时，结果可能已经达到稳定，但是距离算法结束还有一段时间。在设计程序时应该加入适当的输出条件，满足输出条件即可结束程序。</li></ul><h2 id="4-模拟退火的应用"><strong>4.模拟退火的应用</strong></h2><p>模拟退火算法作为一种通用的随机搜索算法，现已广泛用于<code>VLSI</code>设计、图像识别和神经网计算机的研究。模拟退火算法的应用如下：</p><ul><li>模拟退火算法在<code>VLSI</code>设计中的应用<br>利用模拟退火算法进行<code>VLSI</code>(<code>Very Large Scale Integration</code>,超大规模集成电路)的最优设计，是目前模拟退火算法最成功的应用实例之一。用模拟退火算法几乎可以很好地完成所有优化的<code>VLSI</code>设计工作。如全局布线、布板、布局和逻辑最小化等等。</li></ul><p><img src="https://pic1.zhimg.com/80/v2-b74a10d5aea56bf8dc6280bb9e186544_720w.jpg" alt="img"></p><ul><li>模拟退火算法在图像处理中的应用<br>模拟退火算法可用来进行图像恢复等工作，即把一幅被污染的图像重新恢复成清晰的原图，滤掉其中被畸变的部分。因此它在图像处理方面的应用前景是广阔的。</li><li>模拟退火算法在神经网计算机中的应用<br>模拟退火算法具有跳出局部最优陷阱的能力。在<code>Boltzmann</code>机中，即使系统落入了局部最优的陷阱，经过一段时间后，它还能再跳出来，系统最终将往全局最优值的方向收敛。</li></ul><p><img src="https://pic3.zhimg.com/80/v2-03bb8b2fb03d3dd294d3b9189b9840da_720w.jpg" alt="img"></p><ul><li>模拟退火算法的其他应用<br>除了上述应用外，模拟退火算法还用于其它各种组合优化问题，如<code>TSP</code>和<code>Knapsack</code>问题等。大量的模拟实验表明，模拟退火算法在求解这些问题时能产生令人满意的近似最优解，而且所用的时间也不很长。</li></ul><h2 id="5-小结"><strong>5.小结</strong></h2><p>总之，模拟退火算法是通过赋予搜索过程一种时变且最终趋于零的概率突跳性，从而可有效避免陷入局部极小并最终趋于全局最优的串行结构的优化算法。算法从某一较高初温出发，伴随温度参数的不断下降,结合一定的概率突跳特性在解空间中随机寻找目标函数的全局最优解，即在局部最优解能概率性地跳出并最终趋于全局最优。</p><p>至此，本文从金属退火的原理，爬山算法，模拟退火算法思想以及原理，到模拟退火的流程和应用方面对模拟退火算法进行了简单的阐述，希望对大家有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟退火 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YOLO学习笔记</title>
      <link href="/2022/09/08/YOLO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/09/08/YOLO%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1>推荐博客</h1><p><a href="https://blog.csdn.net/wjinjie/article/details/107509243?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163249930316780271530764%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163249930316780271530764&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-107509243.pc_search_result_cache&amp;utm_term=yolo&amp;spm=1018.2226.3001.4187">从yolov1至yolov4的进阶之路</a></p><p><a href="https://zhuanlan.zhihu.com/p/183261974">你一定从未看过如此通俗易懂的YOLO系列(从v1到v5)模型解读 (上)</a></p><p><a href="https://zhuanlan.zhihu.com/p/183781646">你一定从未看过如此通俗易懂的YOLO系列(从v1到v5)模型解读 (中)</a></p><p><a href="https://zhuanlan.zhihu.com/p/186014243">你一定从未看过如此通俗易懂的YOLO系列(从v1到v5)模型解读 (下)</a></p><p><a href="https://zhuanlan.zhihu.com/p/94986199">写给小白的Yolo介绍</a></p><p>比较流行的算法可以分为两类，一类是基于Region Proposal的R-CNN系算法（R-CNN，Fast R-CNN, Faster R-CNN），它们是two-stage的，需要先使用启发式方法（selective search）或者CNN网络（RPN）产生Region Proposal，然后再在Region Proposal上做分类与回归。</p><h1>YOLO（You Only Look Once）</h1><img src="https://pjreddie.com/media/image/yologo_2.png" alt="img" style="zoom: 25%;" /><p><strong>YOLO v1：直接回归出位置。</strong></p><p><strong>YOLO v2：全流程多尺度方法。</strong></p><p><strong>YOLO v3：多尺度检测头，resblock darknet53</strong></p><p><strong>YOLO v4：cspdarknet53，spp，panet，tricks</strong></p><h2 id="0-前言">0 前言</h2><p>本文目的是用尽量浅显易懂的语言让零基础小白能够理解什么是YOLO系列模型，以及他们的设计思想和改进思路分别是什么。我不会把YOLO的论文给你用软件翻译一遍，这样做毫无意义；也不会使用太专业晦涩的名词和表达，对于每一个新的概念都会解释得尽量通俗一些，目的是使得你能像看故事一样学习YOLO模型，我觉得这样的学习方式才是知乎博客的意义所在。</p><p>为了使本文<strong>尽量生动有趣</strong>，我用葫芦娃作为例子展示YOLO的过程(真的是尽力了。。。)。</p><p><img src="https://pic2.zhimg.com/80/v2-6f33f7b365e952d0cb1436c540135a0d_720w.jpg" alt="img"></p><p>葫芦娃</p><p>同时，会对<strong>YOLO v1和YOLOv5</strong>的代码进行解读，其他的版本就只介绍改进了。</p><hr><h2 id="1-先从一款强大的app说起">1 先从一款强大的app说起</h2><p><img src="https://pic1.zhimg.com/80/v2-6821e6ed09cedb367cde596fbfcb4328_720w.jpg" alt="img">i detection APP</p><p><strong>YOLO v5</strong>其实一开始是以一款<strong>app</strong>进入人们的视野的，就是上图的这个，叫：<strong>i detection</strong>(图上标的是YOLO v4，但其实算法是YOLO v5)，使用<strong>iOS</strong>系列的小伙伴呢，就可以立刻<strong>点赞后</strong>关掉我这篇文章，去下载这个app玩一玩。在任何场景下(工业场景，生活场景等等)都可以试试这个app和这个算法，这个app中间还有一个<strong>button</strong>，来调节app使用的模型的大小，更大的模型实时性差但精度高，更小的模型实时性好但精度差。</p><p>值得一提的是，这款app就是<strong>YOLO v5的作者</strong>亲自完成的。而且，我写这篇文章的时候YOLO v5的论文还没有出来，还在实验中，等论文出来应该是2020年底或者2021年初了。</p><p><strong>读到这里，你觉得YOLO v5的最大特点是什么？</strong></p><p><strong>答案就是：一个字：快</strong>，应用于移动端，模型小，速度快。</p><p>首先我个人觉得任何一个模型都有下面3部分组成：</p><ul><li><strong>前向传播部分：90%</strong></li><li><strong>损失函数部分</strong></li><li><strong>反向传播部分</strong></li></ul><p>其中前向传播部分占用的时间应该在90%左右，即搞清楚前向传播部分也就搞清楚了这模型的实现流程和细节。本着这一原则，我们开始YOLO系列模型的解读：</p><hr><h2 id="2-不得不谈的分类模型">2 不得不谈的分类模型</h2><p>在进入目标检测任务之前首先得学会图像分类任务，这个任务的特点是输入一张图片，输出是它的类别。</p><p>对于<strong>输入图片</strong>，我们一般用一个矩阵表示。</p><p>对于<strong>输出结果</strong>，我们一般用一个one-hot vector表示： <img src="https://www.zhihu.com/equation?tex=%5B0%2C0%2C1%2C0%2C0%2C0%5D" alt="[公式]"> ，哪一维是1，就代表图片属于哪一类。</p><p>所以，在设计神经网络时，结构大致应该长这样：</p><p>img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp16<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp32<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp64<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp128<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc256-fc[10]</p><p>这里的cbrp指的是conv，bn，relu，pooling的串联。</p><p>由于输入要是one-hot形式，所以最后我们设计了2个fc层(fully connencted layer)，我们称之为**“分类头”<strong>或者</strong>“决策层”**。</p><hr><h2 id="3-YOLO系列思想的雏形：YOLO-v0">3 YOLO系列思想的雏形：YOLO v0</h2><p>有了上面的分类器，我们能不能用它来做检测呢？</p><p>要回答这个问题，首先得看看检测器和分类器的输入输出有什么不一样。首先他们的输入都是image，但是分类器的输出是一个one-hot vector，而检测器的输出是一个框(Bounding Box)。</p><p><strong>框</strong>，该怎么表示？</p><p>在一个图片里面表示一个框，有很多种方法，比如：</p><p><img src="https://pic3.zhimg.com/80/v2-5d8895c050a05b9ce813b5289ec2a4da_720w.jpg" alt="img">x,y,w,h表示一个框</p><ul><li><strong>x,y,w,h</strong>(如上图)</li><li><strong>p1,p2,p3,p4</strong>(4个点坐标)</li><li><strong>cx,cy,w,h</strong>(cx,cy为中心点坐标)</li><li><strong>x,y,w,h</strong>,<strong>angle</strong>(还有的目标是有角度的，这时叫做Rotated Bounding Box)</li><li>…</li></ul><p>所以表示的方法不是一成不变的，但你会发现：不管你用什么形式去表达这个Bounding Box，你模型输出的结果一定是一个vector，那这个vector和分类模型输出的vector本质上有什么区别吗？</p><p><strong>答案是：没有</strong>，都是向量而已，只是分类模型输出是one-hot向量，检测模型输出是我们标注的结果。</p><p>所以你应该会发现，检测的方法呼之欲出了。<strong>那分类模型可以用来做检测吗？</strong></p><p><strong>当然可以，<strong>这时，你可以把检测的任务当做是</strong>遍历性的分类任务。</strong></p><p><strong>如何遍历？</strong></p><p><strong>我们的目标是一个个框，那就用这个框去遍历所有的位置，所有的大小。</strong></p><p>比如下面这张图片，我需要你检测葫芦娃的脸，如图1所示：</p><p><img src="https://pic4.zhimg.com/80/v2-a1843eda0e8f2c6ea8cddb5180da1da3_720w.jpg" alt="img">图1：检测葫芦娃的脸</p><p>我们可以对边框的区域进行二分类：属于头或者不属于头。</p><p>你先预设一个框的大小，然后在图片上遍历这个框，比如第一行全都不是头。第4个框只有一部分目标在，也不算。第5号框算是一个头，我们记住它的位置。这样不断地滑动，就是遍历性地分类。</p><p>接下来要遍历框的大小：因为你刚才是预设一个框的大小，但葫芦娃的头有大有小，你还得遍历框的大小，如下图2所示：</p><p><img src="https://pic4.zhimg.com/80/v2-9c3d5b1c85adf80791780697b9ad8ecb_720w.jpg" alt="img">图2：遍历框的大小</p><p>还没有结束，刚才滑窗时是挨个滑，但其实没有遍历所有的位置，更精确的遍历方法应该如下图3所示：</p><p><img src="https://pic2.zhimg.com/80/v2-eda9abf77cb3597a41cc460c6f4f6d0d_720w.jpg" alt="img"></p><p>图3：更精确地遍历框的位置</p><p>这种方法其实就是RCNN全家桶的初衷，专业术语叫做：<strong>滑动窗口分类方法</strong>。</p><p>现在需要你思考一个问题：<strong>这种方法的精确和什么因素有关？</strong></p><p><strong>答案是：遍历得彻不彻底</strong>。遍历得越精确，检测器的精度就越高。所以这也就带来一个问题就是：<strong>检测的耗时非常大</strong>。</p><p>举个例子：比如输入图片大小是(800,1000)也就意味着有800000个位置。窗口大小最小 <img src="https://www.zhihu.com/equation?tex=%281%5Ctimes1%29" alt="[公式]"> ,最大 <img src="https://www.zhihu.com/equation?tex=%28800%5Ctimes1000%29" alt="[公式]"> ，所以这个遍历的次数是<strong>无限次</strong>。我们看下伪代码：</p><p><img src="https://pic4.zhimg.com/80/v2-72224eb25b6bcfce14d31a5a571422f3_720w.jpg" alt="img"></p><p>滑动窗口分类方法伪代码</p><p>那这种方法如何训练呢？</p><p>本质上还是训练一个二分类器。这个二分类器的<strong>输入是一个框的内容，输出是(前景/背景)</strong>。</p><p><strong>第1个问题：</strong></p><p>框有不同的大小，对于不同大小的框，输入到相同的二分类器中吗？</p><p>是的。要先把不同大小的input归一化到统一的大小。</p><p><strong>第2个问题：</strong></p><p>背景图片很多，前景图片很少：二分类样本不均衡。</p><p>确实是这样，你看看一张图片有多少框对应的是背景，有多少框才是葫芦娃的头。</p><p>以上就是传统检测方法的主要思路：</p><ul><li>耗时。</li><li>操作复杂，需要手动生成大量的样本。</li></ul><p><strong>到现在为止，我们用分类的算法设计了一个检测器，它存在着各种各样的问题，现在是优化的时候了(接下来正式进入YOLO系列方法了)：</strong></p><p>YOLO的作者当时是这么想的：你分类器输出一个one-hot vector，那我把它换成**(x,y,w,h,c)**，c表示confidence置信度，把问题转化成一个回归问题，直接回归出Bounding Box的位置不就好了吗？</p><p>刚才的分类器是：img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp16<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp32<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp64<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp128<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc256-fc[10]</p><p>现在我变成：img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp16<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp32<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp64<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp128<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc256-fc[5]，这个输出是**(x,y,w,h,c)**，不就变成了一个检测器吗？</p><p><strong>本质上都是矩阵映射到矩阵，只是代表的意义不一样而已。</strong></p><blockquote><p>传统的方法为什么没有这么做呢？我想肯定是效果不好，终其原因是算力不行，conv操作还没有推广。</p></blockquote><p>好，现在模型是：</p><p>img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp16<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp32<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp64<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp128<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc256-fc[5] <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> c,x,y,w,h</p><p><img src="https://pic2.zhimg.com/80/v2-833df61bdd1b13d0647acf5fbe139339_720w.jpg" alt="img"></p><p>那如何组织训练呢？找1000张图片，把label设置为 <img src="https://www.zhihu.com/equation?tex=%281%2Cx%5E%7B%2A%7D%2Cy%5E%7B%2A%7D%2Cw%5E%7B%2A%7D%2Ch%5E%7B%2A%7D%29" alt="[公式]"> 。这里 <img src="https://www.zhihu.com/equation?tex=x%5E%7B%2A%7D" alt="[公式]"> 代表真值。有了数据和标签，就完成了设计。</p><p>我们会发现，这种方法比刚才的<strong>滑动窗口分类方法</strong>简单太多了。这一版的思路我把它叫做<strong>YOLO v0</strong>，因为它是<strong>You Only Look Once</strong>最简单的版本。</p><hr><h2 id="4-YOLO-v1终于诞生">4 YOLO v1终于诞生</h2><ul><li><strong>需求1：YOLO v0只能输出一个目标，那比如下图4的多个目标怎么办呢？</strong></li></ul><p><img src="https://pic1.zhimg.com/80/v2-bdf872e1bc2ac749425d3e45b123b3ec_720w.jpg" alt="img"></p><p>图4：多个目标情况</p><p>你可能会回答：我输出N个向量不就行了吗？但具体输出多少个合适呢？图4有7个目标，那有的图片有几百个目标，你这个N又该如何调整呢？</p><p><strong>答：为了保证所有目标都被检测到，我们应该输出尽量多的目标。</strong></p><p><img src="https://pic1.zhimg.com/80/v2-de3aec28683d4e58fca1218ddfaff670_720w.jpg" alt="img">输出尽量多的目标</p><p>但这种方法也不是最优的，最优的应该是下图这样：</p><p><img src="https://pic3.zhimg.com/80/v2-0c9a23e1c1740d62ccf50cdc97b0bcb2_720w.jpg" alt="img"></p><p>图5：用一个(c,x,y,w,h)去负责image某个区域的目标</p><p>如图5所示：用一个(c,x,y,w,h)去负责image某个区域的目标。</p><p>比如说图片设置为16个区域，每个区域用1个(c,x,y,w,h)去负责：</p><p><img src="https://pic2.zhimg.com/80/v2-a6230457e694322c04998b7d0536a889_720w.jpg" alt="img">图6：图片设置为16个区域</p><p>就可以一次输出16个框，每个框是1个(c,x,y,w,h)，如图6所示。</p><p>为什么这样子更优？因为conv操作是位置强相关的，就是原来的目标在哪里，你conv之后的feature map上还在哪里，所以图片划分为16个区域，结果也应该分布在16个区域上，所以我们的<strong>结果(Tensor)的维度size是：(5,4,4)</strong>。</p><p>那现在你可能会问：<strong>c的真值该怎么设置呢？</strong></p><p>**答：**看葫芦娃的大娃，他的脸跨了4个区域(grid)，但只能某一个grid的c=1，其他的c=0。那么该让哪一个grid的c=1呢？就看他的脸的中心落在了哪个grid里面。根据这一原则，c的真值为下图7所示：</p><p><img src="https://pic4.zhimg.com/80/v2-02a45bc027de8ff65693bcf1ae21c2e3_720w.jpg" alt="img">图7：c的label值</p><p>但是你发现7个葫芦娃只有6个1，原因是某一个grid里面有2个目标，确实如此，第三行第三列的grid既有<strong>水娃</strong>又有<strong>隐身娃</strong>。这种一个区域有多个目标的情况我们<strong>目前没法解决，因为我们的模型现在能力就这么大，只能在一个区域中检测出一个目标，如何改进我们马上就讨论，你可以现在先自己想一想。</strong></p><p>总之现在我们设计出了模型的输出结果，那距离完成模型的设计还差一个损失函数，那Loss咋设计呢？看下面的伪代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loss = 0</span><br><span class="line">for img in img_all:</span><br><span class="line">   for i in range(4):</span><br><span class="line">      for j in range(4):</span><br><span class="line">         loss_ij = lamda_1*(c_pred-c_label)**2 + c_label*(x_pred-x_label)**2 +\</span><br><span class="line">                     c_label*(y_pred-y_label)**2 + c_label*(w_pred-w_label)**2 + \</span><br><span class="line">                     c_label*(h_pred-h_label)**2</span><br><span class="line">         loss += loss_ij</span><br><span class="line">loss.backward()</span><br></pre></td></tr></table></figure><blockquote><p>遍历所有图片，遍历所有位置，计算loss。</p></blockquote><ul><li>好现在模型设计完了，回到刚才的问题：模型现在能力就这么大，只能在一个区域中检测出一个目标，如何改进？</li></ul><p>**答：**刚才区域是 <img src="https://www.zhihu.com/equation?tex=4%5Ctimes4" alt="[公式]"> ，现在变成 <img src="https://www.zhihu.com/equation?tex=40%5Ctimes40" alt="[公式]"> ，或者更大，使区域更密集，就可以缓解多个目标的问题，但无法从根本上去解决。</p><ul><li>另一个问题，按上面的设计你检测得到了16个框，可是图片上只有7个葫芦娃的脸，怎么从16个结果中筛选出7个我们要的呢？</li></ul><p><strong>答：</strong></p><p>**法1：聚类。**聚成7类，在这7个类中，选择confidence最大的框。听起来挺好。</p><p>**法1的bug：**2个目标本身比较近聚成了1个类怎么办？如果不知道到底有几个目标呢？为何聚成7类？不是3类？</p><p>**法2：NMS(非极大值抑制)。**2个框重合度很高，大概率是一个目标，那就只取一个框。</p><p>重合度的计算方法：交并比IoU=两个框的交集面积/两个框的并集面积。</p><p>具体算法：</p><p><img src="https://pic2.zhimg.com/80/v2-f2cf821fc64f14d2b60ae2f61409e3f5_720w.jpg" alt="img"></p><p>面试必考的NMS</p><p>**法1的bug：**2个目标本身比较近怎么办？依然没有解决。</p><p>如果不知道到底有几个目标呢？NMS自动解决了这个问题。</p><p>**面试的时候会问这样一个问题：**NMS的适用情况是什么？</p><p>**答：**1图多目标检测时用NMS。</p><p>到现在为止我们终于解决了第4节开始提出的多个目标的问题，现在又有了新的需求：</p><ul><li><strong>需求2：多类的目标怎么办呢？</strong></li></ul><p>比如说我现在既要你检测<strong>葫芦娃的脸</strong>，又要你检测<strong>葫芦娃的葫芦</strong>，怎么设计？</p><p>img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp16<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp32<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp64<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp128<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc256-fc[5+2]*N <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> [c,x,y,w,h,one-hot]*N</p><p>2个类，one-hot就是[0,1],[1,0]这样子，如下图8所示：</p><p><img src="https://pic2.zhimg.com/80/v2-38ce7b4f57bc0833a66a6baf5559da99_720w.jpg" alt="img"></p><p>图8：多类的目标的label</p><p>伪代码依然是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">loss = 0</span><br><span class="line">for img in img_all:</span><br><span class="line">   for i in range(3):</span><br><span class="line">      for j in range(4):</span><br><span class="line">         c_loss = lamda_1*(c_pred-c_label)**2</span><br><span class="line">         geo_loss = c_label*(x_pred-x_label)**2 +\</span><br><span class="line">                     c_label*(y_pred-y_label)**2 + c_label*(w_pred-w_label)**2 + \</span><br><span class="line">                     c_label*(h_pred-h_label)**2</span><br><span class="line">         class_loss = 1/m * mse_loss(p_pred, p_label)</span><br><span class="line">         loss_ij =c_loss  + geo_loss + class_loss</span><br><span class="line">         loss += loss_ij</span><br><span class="line">loss.backward()</span><br></pre></td></tr></table></figure><p>至此，多个类的问题也解决了，现在又有了新的需求：</p><ul><li><strong>需求3：小目标检测怎么办呢？</strong></li></ul><p>小目标总是检测不佳，所以我们专门设计神经元去拟合小目标。</p><p><img src="https://pic2.zhimg.com/80/v2-efb58a2c9d3e881df099789f640471ad_720w.jpg" alt="img"></p><p>图9：多类的小目标的label，分别预测大目标和小目标</p><p>对于每个区域，我们用2个五元组(c,x,y,w,h)，一个负责回归大目标，一个负责回归小目标，同样添加one-hot vector，one-hot就是[0,1],[1,0]这样子，来表示属于哪一类(葫芦娃的头or葫芦娃的葫芦)。</p><p>伪代码变为了：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">loss = 0</span><br><span class="line">for img in img_all:</span><br><span class="line">   for i in range(3):</span><br><span class="line">      for j in range(4):</span><br><span class="line">         c_loss = lamda_1*(c_pred-c_label)**2</span><br><span class="line">         geo_loss = c_label_big*(x_big_pred-x_big_label)**2 +\</span><br><span class="line">                     c_label_big*(y_big_pred-y_big_label)**2 + c_label_big*(w_big_pred-w_big_label)**2 + \</span><br><span class="line">                     c_label_big*(h_big_pred-h_big_label)**2 +\</span><br><span class="line">                     c_label_small*(x_small_pred-x_small_label)**2 +\</span><br><span class="line">                     c_label_small*(y_small_pred-y_small_label)**2 + c_label_small*(w_small_pred-w_small_label)**2 + \</span><br><span class="line">                     c_label_small*(h_small_pred-h_small_label)**2</span><br><span class="line">         class_loss = 1/m * mse_loss(p_pred, p_label)</span><br><span class="line">         loss_ij =c_loss  + geo_loss + class_loss</span><br><span class="line">         loss += loss_ij</span><br><span class="line">loss.backward()</span><br></pre></td></tr></table></figure><p>至此，小目标的问题也有了解决方案。</p><p>到这里，我们设计的检测器其实就是YOLO v1，只是有的参数跟它不一样，我们看论文里的图：</p><p><img src="https://pic3.zhimg.com/80/v2-ce26d13cfd3b7145f4594524435a9b92_720w.jpg" alt="img"></p><p>YOLO v1</p><p><img src="https://pic4.zhimg.com/80/v2-3af308f7096bda4c621c077302b90533_720w.jpg" alt="img"></p><p>YOLO v1</p><p>YOLO v1其实就是把我们划分的16个区域变成了 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 个区域，我们预测16个目标，YOLO v1预测49个目标。我们是2类(葫芦娃的头or葫芦娃的葫芦)，YOLO v1是20类。</p><p><img src="https://www.zhihu.com/equation?tex=30%3D5%2A2%28c_%7Bbig%7D%2Cx_%7Bbig%7D%2Cy_%7Bbig%7D%2Cw_%7Bbig%7D%2Ch_%7Bbig%7D%2C+c_%7Bsmall%7D%2Cx_%7Bsmall%7D%2Cy_%7Bsmall%7D%2Cw_%7Bsmall%7D%2Ch_%7Bsmall%7D%29%2B20+classes" alt="[公式]"></p><p>backbone也是一堆卷积+检测头(FC层)，所以说设计到现在，我们其实是把YOLO v1给设计出来了。</p><p>再看看作者的解释：</p><p><img src="https://pic2.zhimg.com/80/v2-6b90a56a5c57d2ed05ec620f4230ca45_720w.png" alt="img"></p><p>发现train的时候用的小图片，检测的时候用的是大图片(肯定是经过了无数次试验证明了效果好)。</p><p>结构学完了，再看loss函数，并比较下和我们设计的loss函数有什么区别。</p><p><img src="https://pic4.zhimg.com/80/v2-f81c565d41b681263689626331325ac3_720w.jpg" alt="img"></p><p>YOLO v1 loss函数</p><p><strong>解读一下这个损失函数：</strong></p><p>我们之前说的损失函数是设计了3个for循环，而作者为了方便写成了求和的形式：</p><ul><li>前2行计算前景的geo_loss。</li><li>第3行计算前景的confidence_loss。</li><li>第4行计算背景的confidence_loss。</li><li>第5行计算分类损失class_loss。</li></ul><p>伪代码上面已经有了，现在我们总体看一下这个模型：</p><p>img <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp192<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp256<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp512<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> cbrp1024<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> …<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> fc4096-fc[5+2]*N <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7%5Ctimes30" alt="[公式]"></p><p>检测层的设计：回归坐标值+one-hot分类</p><p><img src="https://pic2.zhimg.com/80/v2-bf46a1073c877181e06cba19b8c20995_720w.jpg" alt="img"></p><p>检测层的设计</p><ul><li><strong>样本不均衡的问题解决了吗？</strong></li></ul><p>没有计算背景的geo_loss，只计算了前景的geo_loss，这个问题YOLO v1回避了，依然存在。</p><p><strong>最后我们解读下YOLO v1的代码：</strong></p><p><strong>1.模型定义：</strong></p><p>定义特征提取层：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">class VGG(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">       super(VGG,self).__init__()</span><br><span class="line">       # the vgg&#x27;s layers</span><br><span class="line">       #self.features = features</span><br><span class="line">       cfg = [64,64,&#x27;M&#x27;,128,128,&#x27;M&#x27;,256,256,256,&#x27;M&#x27;,512,512,512,&#x27;M&#x27;,512,512,512,&#x27;M&#x27;]</span><br><span class="line">       layers= []</span><br><span class="line">       batch_norm = False</span><br><span class="line">       in_channels = 3</span><br><span class="line">       for v in cfg:</span><br><span class="line">           if v == &#x27;M&#x27;:</span><br><span class="line">               layers += [nn.MaxPool2d(kernel_size=2,stride = 2)]</span><br><span class="line">           else:</span><br><span class="line">               conv2d = nn.Conv2d(in_channels,v,kernel_size=3,padding = 1)</span><br><span class="line">               if batch_norm:</span><br><span class="line">                   layers += [conv2d,nn.Batchnorm2d(v),nn.ReLU(inplace=True)]</span><br><span class="line">               else:</span><br><span class="line">                   layers += [conv2d,nn.ReLU(inplace=True)]</span><br><span class="line">               in_channels = v</span><br><span class="line">       # use the vgg layers to get the feature</span><br><span class="line">       self.features = nn.Sequential(*layers)</span><br><span class="line">       # 全局池化</span><br><span class="line">       self.avgpool = nn.AdaptiveAvgPool2d((7,7))</span><br><span class="line">       # 决策层：分类层</span><br><span class="line">       self.classifier = nn.Sequential(</span><br><span class="line">           nn.Linear(512*7*7,4096),</span><br><span class="line">           nn.ReLU(True),</span><br><span class="line">           nn.Dropout(),</span><br><span class="line">           nn.Linear(4096,4096),</span><br><span class="line">           nn.ReLU(True),</span><br><span class="line">           nn.Dropout(),</span><br><span class="line">           nn.Linear(4096,1000),</span><br><span class="line">       )</span><br><span class="line"></span><br><span class="line">       for m in self.modules():</span><br><span class="line">           if isinstance(m,nn.Conv2d):</span><br><span class="line">               nn.init.kaiming_normal_(m.weight,mode=&#x27;fan_out&#x27;,nonlinearity=&#x27;relu&#x27;)</span><br><span class="line">               if m.bias is not None: </span><br><span class="line">                   nn.init.constant_(m.bias,0)</span><br><span class="line">           elif isinstance(m,nn.BatchNorm2d):</span><br><span class="line">               nn.init.constant_(m.weight,1)</span><br><span class="line">               nn.init.constant_(m.bias,1)</span><br><span class="line">           elif isinstance(m,nn.Linear):</span><br><span class="line">               nn.init.normal_(m.weight,0,0.01)</span><br><span class="line">               nn.init.constant_(m.bias,0)</span><br><span class="line"></span><br><span class="line">    def forward(self,x):</span><br><span class="line">         x = self.features(x)</span><br><span class="line">         x_fea = x</span><br><span class="line">         x = self.avgpool(x)</span><br><span class="line">         x_avg = x</span><br><span class="line">         x = x.view(x.size(0),-1)</span><br><span class="line">         x = self.classifier(x)</span><br><span class="line">         return x,x_fea,x_avg</span><br><span class="line">    def extractor(self,x):</span><br><span class="line">         x = self.features(x)</span><br><span class="line">         return x</span><br></pre></td></tr></table></figure><p>定义检测头：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">self.detector = nn.Sequential(</span><br><span class="line">   nn.Linear(512*7*7,4096),</span><br><span class="line">   nn.ReLU(True),</span><br><span class="line">   nn.Dropout(),</span><br><span class="line">   nn.Linear(4096,1470),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>整体模型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">class YOLOV1(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">       super(YOLOV1,self).__init__()</span><br><span class="line">       vgg = VGG()</span><br><span class="line">       self.extractor = vgg.extractor</span><br><span class="line">       self.avgpool = nn.AdaptiveAvgPool2d((7,7))</span><br><span class="line">       # 决策层：检测层</span><br><span class="line">       self.detector = nn.Sequential(</span><br><span class="line">          nn.Linear(512*7*7,4096),</span><br><span class="line">          nn.ReLU(True),</span><br><span class="line">          nn.Dropout(),</span><br><span class="line">          #nn.Linear(4096,1470),</span><br><span class="line">          nn.Linear(4096,245),</span><br><span class="line">          #nn.Linear(4096,5),</span><br><span class="line">       )</span><br><span class="line">       for m in self.modules():</span><br><span class="line">           if isinstance(m,nn.Conv2d):</span><br><span class="line">               nn.init.kaiming_normal_(m.weight,mode=&#x27;fan_out&#x27;,nonlinearity=&#x27;relu&#x27;)</span><br><span class="line">               if m.bias is not None: </span><br><span class="line">                   nn.init.constant_(m.bias,0)</span><br><span class="line">           elif isinstance(m,nn.BatchNorm2d):</span><br><span class="line">               nn.init.constant_(m.weight,1)</span><br><span class="line">               nn.init.constant_(m.bias,1)</span><br><span class="line">           elif isinstance(m,nn.Linear):</span><br><span class="line">               nn.init.normal_(m.weight,0,0.01)</span><br><span class="line">               nn.init.constant_(m.bias,0)</span><br><span class="line">    def forward(self,x):</span><br><span class="line">        x = self.extractor(x)</span><br><span class="line">        #import pdb</span><br><span class="line">        #pdb.set_trace()</span><br><span class="line">        x = self.avgpool(x)</span><br><span class="line">        x = x.view(x.size(0),-1)</span><br><span class="line">        x = self.detector(x)</span><br><span class="line">        b,_ = x.shape</span><br><span class="line">        #x = x.view(b,7,7,30)</span><br><span class="line">        x = x.view(b,7,7,5)</span><br><span class="line">        </span><br><span class="line">        #x = x.view(b,1,1,5)</span><br><span class="line">        return x</span><br></pre></td></tr></table></figure><p>主函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    vgg = VGG()</span><br><span class="line">    x  = torch.randn(1,3,512,512)</span><br><span class="line">    feature,x_fea,x_avg = vgg(x)</span><br><span class="line">    print(feature.shape)</span><br><span class="line">    print(x_fea.shape)</span><br><span class="line">    print(x_avg.shape)</span><br><span class="line"> </span><br><span class="line">    yolov1 = YOLOV1()</span><br><span class="line">    feature = yolov1(x)</span><br><span class="line">    # feature_size b*7*7*30</span><br><span class="line">    print(feature.shape)</span><br></pre></td></tr></table></figure><p><strong>2.模型训练：</strong></p><p>主函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    train()</span><br></pre></td></tr></table></figure><p>下面看train()函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">def train():</span><br><span class="line">    for epoch in range(epochs):</span><br><span class="line">        ts = time.time()</span><br><span class="line">        for iter, batch in enumerate(train_loader):</span><br><span class="line">            optimizer.zero_grad()</span><br><span class="line">            # 取图片</span><br><span class="line">            inputs = input_process(batch)</span><br><span class="line">            # 取标注</span><br><span class="line">            labels = target_process(batch)</span><br><span class="line">            </span><br><span class="line">            # 获取得到输出</span><br><span class="line">            outputs = yolov1_model(inputs)</span><br><span class="line">            #import pdb</span><br><span class="line">            #pdb.set_trace()</span><br><span class="line">            #loss = criterion(outputs, labels)</span><br><span class="line">            loss,lm,glm,clm = lossfunc_details(outputs,labels)</span><br><span class="line">            loss.backward()</span><br><span class="line">            optimizer.step()</span><br><span class="line">            #print(torch.cat([outputs.detach().view(1,5),labels.view(1,5)],0).view(2,5))</span><br><span class="line">            if iter % 10 == 0:</span><br><span class="line">            #    print(torch.cat([outputs.detach().view(1,5),labels.view(1,5)],0).view(2,5))</span><br><span class="line">                print(&quot;epoch&#123;&#125;, iter&#123;&#125;, loss: &#123;&#125;, lr: &#123;&#125;&quot;.format(epoch, iter, loss.data.item(),optimizer.state_dict()[&#x27;param_groups&#x27;][0][&#x27;lr&#x27;]))</span><br><span class="line">        </span><br><span class="line">        #print(&quot;Finish epoch &#123;&#125;, time elapsed &#123;&#125;&quot;.format(epoch, time.time() - ts))</span><br><span class="line">        #print(&quot;*&quot;*30)</span><br><span class="line">        #val(epoch)</span><br><span class="line">        scheduler.step()</span><br></pre></td></tr></table></figure><p>训练过程比较常规，先取1个batch的训练数据，分别得到inputs和labels，依次计算loss，反传，step等。</p><p>下面说下2个训练集的数据处理函数：</p><p>input_process：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def input_process(batch):</span><br><span class="line">    #import pdb</span><br><span class="line">    #pdb.set_trace()</span><br><span class="line">    batch_size=len(batch[0])</span><br><span class="line">    input_batch= torch.zeros(batch_size,3,448,448)</span><br><span class="line">    for i in range(batch_size):</span><br><span class="line">        inputs_tmp = Variable(batch[0][i])</span><br><span class="line">        inputs_tmp1=cv2.resize(inputs_tmp.permute([1,2,0]).numpy(),(448,448))</span><br><span class="line">        inputs_tmp2=torch.tensor(inputs_tmp1).permute([2,0,1])</span><br><span class="line">        input_batch[i:i+1,:,:,:]= torch.unsqueeze(inputs_tmp2,0)</span><br><span class="line">    return input_batch </span><br></pre></td></tr></table></figure><blockquote><p>batch[0]为image，batch[1]为label，batch_size为1个batch的图片数量。<br>batch[0][i]为这个batch的第i张图片，inputs_tmp2为尺寸变成了3,448,448之后的图片，再经过unsqueeze操作拓展1维，size=[1,3,448,448]，存储在input_batch中。</p></blockquote><p>最后，返回的是size=[batch_size,3,448,448]的输入数据。</p><p>target_process：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">def target_process(batch,grid_number=7):</span><br><span class="line">    # batch[1]表示label</span><br><span class="line">    # batch[0]表示image</span><br><span class="line">    batch_size=len(batch[0])</span><br><span class="line">    target_batch= torch.zeros(batch_size,grid_number,grid_number,30)</span><br><span class="line">    #import pdb</span><br><span class="line">    #pdb.set_trace()</span><br><span class="line">    for i in range(batch_size):</span><br><span class="line">        labels = batch[1]</span><br><span class="line">        batch_labels = labels[i]</span><br><span class="line">        #import pdb</span><br><span class="line">        #pdb.set_trace()</span><br><span class="line">        number_box = len(batch_labels[&#x27;boxes&#x27;])</span><br><span class="line">        for wi in range(grid_number):</span><br><span class="line">            for hi in range(grid_number):</span><br><span class="line">                # 遍历每个标注的框</span><br><span class="line">                for bi in range(number_box):</span><br><span class="line">                    bbox=batch_labels[&#x27;boxes&#x27;][bi]</span><br><span class="line">                    _,himg,wimg = batch[0][i].numpy().shape</span><br><span class="line">                    bbox = bbox/ torch.tensor([wimg,himg,wimg,himg])</span><br><span class="line">                    #import pdb</span><br><span class="line">                    #pdb.set_trace()</span><br><span class="line">                    center_x= (bbox[0]+bbox[2])*0.5</span><br><span class="line">                    center_y= (bbox[1]+bbox[3])*0.5</span><br><span class="line">                    #print(&quot;[%s,%s,%s],[%s,%s,%s]&quot;%(wi/grid_number,center_x,(wi+1)/grid_number,hi/grid_number,center_y,(hi+1)/grid_number))</span><br><span class="line">                    if center_x&lt;=(wi+1)/grid_number and center_x&gt;=wi/grid_number and center_y&lt;=(hi+1)/grid_number and center_y&gt;= hi/grid_number:</span><br><span class="line">                        #pdb.set_trace()</span><br><span class="line">                        cbbox =  torch.cat([torch.ones(1),bbox])</span><br><span class="line">                        # 中心点落在grid内，</span><br><span class="line">                        target_batch[i:i+1,wi:wi+1,hi:hi+1,:] = torch.unsqueeze(cbbox,0)</span><br><span class="line">                    #else:</span><br><span class="line">                        #cbbox =  torch.cat([torch.zeros(1),bbox])</span><br><span class="line">                #import pdb</span><br><span class="line">                #pdb.set_trace()</span><br><span class="line">                #rint(target_batch[i:i+1,wi:wi+1,hi:hi+1,:])</span><br><span class="line">                #target_batch[i:i+1,wi:wi+1,hi:hi+1,:] = torch.unsqueeze(cbbox,0)</span><br><span class="line">    return target_batch</span><br></pre></td></tr></table></figure><blockquote><p>要从batch里面获得label，首先要想清楚label(就是bounding box)应该是什么size，输出的结果应该是 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7%5Ctimes30" alt="[公式]"> 的，所以label的size应该是：[batch_size,7,7,30]。在这个程序里我们实现的是输出 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7%5Ctimes5" alt="[公式]"> 。这个 <img src="https://www.zhihu.com/equation?tex=5" alt="[公式]"> 就是x,y,w,h，所以label的size应该是：[batch_size,7,7,5]<br>batch_labels表示这个batch的第i个图片的label，number_box表示这个图有几个真值框。<br>接下来3重循环遍历每个grid的每个框，bbox表示正在遍历的这个框。<br>bbox = bbox/ torch.tensor([wimg,himg,wimg,himg])表示对x,y,w,h进行归一化。<br>接下来if语句得到confidence的真值，存储在target_batch中返回。</p></blockquote><p>最后是loss函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">def lossfunc_details(outputs,labels):</span><br><span class="line">    # 判断维度</span><br><span class="line">    assert ( outputs.shape == labels.shape),&quot;outputs shape[%s] not equal labels shape[%s]&quot;%(outputs.shape,labels.shape)</span><br><span class="line">    #import pdb</span><br><span class="line">    #pdb.set_trace()</span><br><span class="line">    b,w,h,c = outputs.shape</span><br><span class="line">    loss = 0</span><br><span class="line">    #import pdb</span><br><span class="line">    #pdb.set_trace()</span><br><span class="line">    conf_loss_matrix = torch.zeros(b,w,h)</span><br><span class="line">    geo_loss_matrix = torch.zeros(b,w,h)</span><br><span class="line">    loss_matrix = torch.zeros(b,w,h)</span><br><span class="line">    </span><br><span class="line">    for bi in range(b):</span><br><span class="line">        for wi in range(w):</span><br><span class="line">            for hi in range(h):</span><br><span class="line">                #import pdb</span><br><span class="line">                #pdb.set_trace()</span><br><span class="line">                # detect_vector=[confidence,x,y,w,h]</span><br><span class="line">                detect_vector = outputs[bi,wi,hi]</span><br><span class="line">                gt_dv = labels[bi,wi,hi]</span><br><span class="line">                conf_pred = detect_vector[0]</span><br><span class="line">                conf_gt = gt_dv[0]</span><br><span class="line">                x_pred = detect_vector[1]</span><br><span class="line">                x_gt = gt_dv[1]</span><br><span class="line">                y_pred = detect_vector[2]</span><br><span class="line">                y_gt = gt_dv[2]</span><br><span class="line">                w_pred = detect_vector[3]</span><br><span class="line">                w_gt = gt_dv[3]</span><br><span class="line">                h_pred = detect_vector[4]</span><br><span class="line">                h_gt = gt_dv[4]</span><br><span class="line">                loss_confidence = (conf_pred-conf_gt)**2 </span><br><span class="line">                #loss_geo = (x_pred-x_gt)**2 + (y_pred-y_gt)**2 + (w_pred**0.5-w_gt**0.5)**2 + (h_pred**0.5-h_gt**0.5)**2</span><br><span class="line">            </span><br><span class="line">                loss_geo = (x_pred-x_gt)**2 + (y_pred-y_gt)**2 + (w_pred-w_gt)**2 + (h_pred-h_gt)**2</span><br><span class="line">                loss_geo = conf_gt*loss_geo</span><br><span class="line">                loss_tmp = loss_confidence + 0.3*loss_geo</span><br><span class="line">                #print(&quot;loss[%s,%s] = %s,%s&quot;%(wi,hi,loss_confidence.item(),loss_geo.item()))</span><br><span class="line">                loss += loss_tmp</span><br><span class="line">                conf_loss_matrix[bi,wi,hi]=loss_confidence</span><br><span class="line">                geo_loss_matrix[bi,wi,hi]=loss_geo</span><br><span class="line">                loss_matrix[bi,wi,hi]=loss_tmp</span><br><span class="line">    #打印出batch中每张片的位置loss,和置信度输出</span><br><span class="line">    print(geo_loss_matrix)</span><br><span class="line">    print(outputs[0,:,:,0]&gt;0.5)</span><br><span class="line">    return loss,loss_matrix,geo_loss_matrix,conf_loss_matrix</span><br></pre></td></tr></table></figure><blockquote><p>首先需要注意：label和output的size应该是：[batch_size,7,7,5]。<br>outputs[bi,wi,hi]就是一个5位向量： <img src="https://www.zhihu.com/equation?tex=%28c%5E%7Bpred%7D%2Cx%5E%7Bpred%7D%2Cy%5E%7Bpred%7D%2Cw%5E%7Bpred%7D%2Ch%5E%7Bpred%7D%29" alt="[公式]"> 。<br>我们分别计算了loss_confidence和loss_geo，因为我们实现的这个模型只检测1个类，所以没有class_loss。</p></blockquote><p>为了使本文<strong>尽量生动有趣</strong>，我仍然用葫芦娃作为例子展示YOLO的过程(真的是尽力了。。。)。</p><p><img src="https://pic2.zhimg.com/80/v2-6f33f7b365e952d0cb1436c540135a0d_720w.jpg" alt="img">葫芦娃</p><p>下面进入正题，首先回顾下YOLO v1的模型结构，忘记了的同学请看上面的文章<strong>并点赞</strong>，如下面2图所示：</p><p><img src="https://pic1.zhimg.com/80/v2-adc371c1de58af018e9b097f73105b4c_720w.jpg" alt="img">YOLO</p><p><img src="https://pic2.zhimg.com/80/v2-3c018cd25d7e0f696bdf78e64da76655_720w.jpg" alt="img">YOLO</p><p>我们认为，<strong>检测模型=特征提取器+检测头</strong></p><p>在YOLO v1的模型中检测头就是最后的2个全连接层(Linear in PyTorch)，它们是参数量最大的2个层，也是最值得改进的2个层。后面的YOLO模型都对这里进行改进：</p><p>YOLO v1一共预测49个目标，一共98个框。</p><h2 id="5-YOLO-v2">5 YOLO v2</h2><ul><li><strong>检测头的改进：</strong></li></ul><p>YOLO v1虽然快，但是预测的框不准确，很多目标找不到：</p><ul><li><strong>预测的框不准确：准确度不足。</strong></li><li><strong>很多目标找不到：recall不足。</strong></li></ul><p>我们一个问题一个问题解决，首先第1个：</p><ul><li><strong>问题1：预测的框不准确：</strong></li></ul><p><strong>当时别人是怎么做的？</strong></p><p>同时代的检测器有R-CNN，人家预测的是偏移量。</p><p>什么是偏移量？</p><p><img src="https://pic4.zhimg.com/80/v2-4883b178ed0e2bb95f1d504dc6bed6a7_720w.jpg" alt="img">YOLO v2</p><p>之前YOLO v1直接预测x,y,w,h，范围比较大，现在我们想预测一个稍微小一点的值，来增加准确度。</p><p>不得不先介绍2个新概念：<strong>基于grid的偏移量和基于anchor的偏移量</strong>。什么意思呢？</p><p><strong>基于anchor的偏移量</strong>的意思是，anchor的位置是固定的，<strong>偏移量=目标位置-anchor的位置</strong>。</p><p><strong>基于grid的偏移量</strong>的意思是，grid的位置是固定的，<strong>偏移量=目标位置-grid的位置</strong>。</p><p><strong>Anchor是什么玩意？</strong></p><p>Anchor是R-CNN系列的一个概念，你可以把它理解为一个预先定义好的框，它的位置，宽高都是已知的，是一个参照物，供我们预测时参考。</p><p>上面的图就是YOLO v2给出的改进，你可能现在看得一脸懵逼，我先解释下各个字母的含义：</p><p><img src="https://www.zhihu.com/equation?tex=b_%7Bx%7D%2Cb_%7By%7D%2Cb_%7Bw%7D%2Cb_%7Bh%7D" alt="[公式]"> ：模型最终得到的的检测结果。</p><p><img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D" alt="[公式]"> ：模型要预测的值。</p><p><img src="https://www.zhihu.com/equation?tex=c_%7Bx%7D%2Cc_%7By%7D" alt="[公式]"> ：grid的左上角坐标，如下图所示。</p><p><img src="https://www.zhihu.com/equation?tex=p_%7Bw%7D%2Cp_%7Bh%7D" alt="[公式]"> ：Anchor的宽和高，这里的anchor是人为定好的一个框，宽和高是固定的。</p><p><img src="https://pic1.zhimg.com/80/v2-cc3885ebc9f24892cf30c58c564044c0_720w.jpg" alt="img"></p><p>通过这样的定义我们从<strong>直接预测位置</strong>改为<strong>预测一个偏移量</strong>，基于<strong>Anchor框的宽和高</strong>和<strong>grid的先验位置</strong>的<strong>偏移量</strong>，得到最终目标的位置，这种方法也叫作<strong>location prediction</strong>。</p><p><strong>这里还涉及到一个尺寸问题：</strong></p><p>刚才说到 <img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D" alt="[公式]"> 是模型要预测的值，这里 <img src="https://www.zhihu.com/equation?tex=c_%7Bx%7D%2Cc_%7By%7D" alt="[公式]"> 为grid的坐标，画个图就明白了：</p><p><img src="https://pic3.zhimg.com/80/v2-e31634384bb34bbbb1de0e8ddfc5ddc2_720w.jpg" alt="img">图1：原始值</p><p>如图1所示，假设此图分为9个grid，GT如红色的框所示，Anchor如紫色的框所示。图中的数字为image的真实信息。</p><p>我们首先会对这些值<strong>归一化</strong>，结果如下图2所示：</p><p><img src="https://pic3.zhimg.com/80/v2-63ca4ed417c5db83b18c95a42a7f60f2_720w.jpg" alt="img">图2：要预测的值</p><p>归一化之后你会发现，要预测的值就变为了：</p><p><img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D%3D0.172%2C-0.148%2C-0.340%2C-0.326" alt="[公式]"></p><p>这是一个偏移量，且值很小，有利于神经网络的学习。</p><p>**你可能会有疑问：**为什么YOLO v2改预测偏移量而不是直接去预测 <img src="https://www.zhihu.com/equation?tex=%28x%2Cy%2Cw%2Ch%29" alt="[公式]"> ？</p><p>上面我说了作者看到了同时代的R-CNN，人家预测的是偏移量。另一个重要的原因是：直接预测位置会导致神经网络在一开始训练时不稳定，使用偏移量会使得训练过程更加稳定，性能指标提升了5%左右。</p><p>位置上不使用Anchor框，宽高上使用Anchor框。以上就是YOLO v2的一个改进。用了YOLO v2的改进之后确实是更准确了，但别激动，上面还有一个问题呢~</p><ul><li><strong>问题2：很多目标找不到：</strong></li></ul><p>你还记得上一篇讲得<strong>YOLO v1一次能检测多少个目标吗</strong>？答案是<strong>49个目标</strong>，98个框，并且2个框对应一个类别。可以是大目标也可以是小目标。因为输出的尺寸是：[N, 7, 7, 30]。式中N为图片数量，7,7为49个区域(grid)。</p><p><img src="https://www.zhihu.com/equation?tex=30%3D2%5Ctimes5%28c%2Cx%2Cy%2Cw%2Ch%29%2B1%5Ctimes20+classes" alt="[公式]"></p><p>YOLO v2首先把 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 个区域改为 <img src="https://www.zhihu.com/equation?tex=13%5Ctimes13" alt="[公式]"> 个区域，每个区域有5个anchor，且每个anchor对应着1个类别，那么，输出的尺寸就应该为：[N,13,13,125]。</p><p><img src="https://www.zhihu.com/equation?tex=125%3D5%5Ctimes5%28c%2Cx%2Cy%2Cw%2Ch%29%2B5%5Ctimes20+classes" alt="[公式]"></p><p>这里面有个bug，就是YOLO v2先对每个区域得到了5个anchor作为参考，那你就会问2个问题：</p><p><strong>1.为什么要用Anchor呢？</strong></p><p><strong>答：一开始YOLO v1的初始训练过程很不稳定</strong>，在YOLO v2中，作者观察了很多图片的所有Ground Truth，发现：比如车，GT都是矮胖的长方形，再比如行人，GT都是瘦高的长方形，且宽高比具有相似性。那**能不能根据这一点，从数据集中预先准备几个几率比较大的bounding box，再以它们为基准进行预测呢？**这就是Anchor的初衷。</p><p><strong>2.每个区域的5个anchor是如何得到的？</strong></p><p>下图可以回答你的问题：</p><p><img src="https://pic1.zhimg.com/80/v2-7e157d61f41ca02634f06b0b78c71684_720w.jpg" alt="img">methods to get the 5 anchor</p><p>方法：对于任意一个数据集，就比如说COCO吧(紫色的anchor)，先对训练集的GT bounding box进行聚类，聚成几类呢？作者进行了实验之后发现<strong>5</strong>类的<strong>recall vs. complexity</strong>比较好，现在聚成了<strong>5</strong>类，当然9类的mAP最好，预测的最全面，但是在复杂度上升很多的同时对模型的准确度提升不大，所以采用了一个比较折中的办法选取了5个聚类簇，即使用5个先验框。</p><p>所以到现在为止，有了anchor再结合刚才的 <img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D" alt="[公式]"> ，就可以求出目标位置。</p><p><strong>anchor是从数据集中统计得到的(Faster-RCNN中的Anchor的宽高和大小是手动挑选的)。</strong></p><ul><li><strong>损失函数为：</strong></li></ul><p><img src="https://pic1.zhimg.com/80/v2-faed5df5818795d5fc047815f0338768_720w.jpg" alt="img">YOLO v2损失函数</p><blockquote><p>这里的W=13,H=13,A=5。<br>每个 <img src="https://www.zhihu.com/equation?tex=%5Clambda" alt="[公式]"> 都是一个权重值。c表示类别，r表示rectangle，即(x,y,w,h)。<br>第1,4行是confidence_loss，注意这里的真值变成了0和IoU(GT, anchor)的值，你看看这些细节。。。<br>第5行是class_loss。<br>第2,3行：t是迭代次数，即前12800步我们计算这个损失，后面不计算了。这部分意义何在？<br>意思是：前12800步我们会优化<strong>预测的(x,y,w,h)与anchor的(x,y,w,h)的距离+预测的(x,y,w,h)与GT的(x,y,w,h)的距离</strong>，12800步之后就只优化<strong>预测的(x,y,w,h)与GT的(x,y,w,h)的距离，为啥？因为这时的预测结果已经较为准确了，anchor已经满足我了我们了，而在一开始预测不准的时候，用上anchor可以加速训练。</strong><br><strong>你看看这操作多么的细节。。。</strong><br><img src="https://www.zhihu.com/equation?tex=1_%7Bk%7D%5E%7Btruth%7D" alt="[公式]"> 是什么？第k个anchor与所有GT的IoU的maximum，如果大于一个阈值，就 <img src="https://www.zhihu.com/equation?tex=1_%7Bk%7D%5E%7Btruth%7D%3D1" alt="[公式]"> ，否则的话： <img src="https://www.zhihu.com/equation?tex=1_%7Bk%7D%5E%7Btruth%7D%3D0" alt="[公式]"> 。</p></blockquote><p>好，到现在为止，YOLO v2做了这么多改进，整体性能大幅度提高，但是小目标检测仍然是YOLO v2的痛。直到kaiming大神的ResNet出现，backbone可以更深了，所以darknet53诞生。</p><p>最后我们做个比较：</p><p><img src="https://pic1.zhimg.com/80/v2-e4dce0794b6d4aa5a67133633baed6b4_720w.jpg" alt="img">YOLO v1和v2的比较</p><hr><h2 id="6-YOLO-v3">6 YOLO v3</h2><ul><li><strong>检测头的改进：</strong></li></ul><p>之前在说小目标检测仍然是YOLO v2的痛，YOLO v3是如何改进的呢？如下图所示。</p><p><img src="https://pic1.zhimg.com/80/v2-4cf1b6f6afec393122305ca2bb2725a4_720w.jpg" alt="img">YOLO v3</p><p>我们知道，YOLO v2的检测头已经由YOLO v1的 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 变为 <img src="https://www.zhihu.com/equation?tex=13%5Ctimes13" alt="[公式]">了，我们看YOLO v3检测头分叉了，分成了3部分：</p><ul><li>13<em>13</em>3*(4+1+80)</li><li>26<em>26</em>3*(4+1+80)</li><li>52<em>52</em>3*(4+1+80)</li></ul><p>预测的框更多更全面了，并且分级了。</p><p>我们发现3个分支分别为<strong>32倍下采样，16倍下采样，8倍下采样</strong>，分别取预测<strong>大，中，小目标</strong>。为什么这样子安排呢？</p><p>因为<strong>32倍下采样</strong>每个点感受野更大，所以去预测<strong>大目标，8倍下采样</strong>每个点感受野最小，所以去预测<strong>小目标。专人专事。</strong></p><p><strong>发现预测地更准确了，性能又提升了。</strong></p><p>又有人会问，你现在是3个分支，我改成5个，6个分支会不会更好？</p><p>理论上会，但还是那句话，作者遵循recall vs. complexity的trade off。</p><p>图中的123456789是什么意思？</p><p><strong>答：框</strong>。每个grid设置9个先验框，3个大的，3个中的，3个小的。</p><p>每个分支预测3个框，每个框预测5元组+80个one-hot vector类别，所以一共size是：</p><p><strong>3*(4+1+80)</strong></p><p><strong>每个分支的输出size为：</strong></p><ul><li><strong>[13,13,3*(4+1+80)]</strong></li><li><strong>[26,26,3*(4+1+80)]</strong></li><li><strong>[52,52,3*(4+1+80)]</strong></li></ul><p><strong>当然你也可以用5个先验框，这时每个分支的输出size为：</strong></p><ul><li><strong>[13,13,5*(4+1+80)]</strong></li><li><strong>[26,26,5*(4+1+80)]</strong></li><li><strong>[52,52,5*(4+1+80)]</strong></li></ul><p><strong>读到这里，请你数一下YOLO v3可以预测多少个bounding box？</strong></p><p><img src="https://www.zhihu.com/equation?tex=%2813%5Ctimes13%2B26%5Ctimes26%2B52%5Ctimes52%29%5Ctimes3%3D10467%28YOLO+v3%29%3E%3E845%28YOLO+v2%29%3D13%5Ctimes13%5Ctimes5" alt="[公式]"></p><p>多了这么多可以预测的bounding box，模型的能力增强了。</p><p><strong>为确定priors</strong>，YOLO v3 应用<strong>k均值聚类</strong>。然后它<strong>预先选择9个聚类簇</strong>。</p><p>对于<strong>COCO数据集</strong>，锚定框的宽度和高为**(10 ×13)，(16 ×30)，(33 ×23)，(30 ×61)，(62 ×45)，(59 ×119)，(116 × 90)，( 156 ×198)，(373373×326326)**。这应该是按照输入图像的尺寸416×416 计算得到的。这 9个priors根据它们的尺度分为3个不同的组。在检测目标时，给一特定的特征图分配一个组。</p><p>就对应了下面这个图：</p><p><img src="https://pic4.zhimg.com/80/v2-24ff3cd5062021493490e28e7d73d6bf_720w.jpg" alt="img">YOLO v3</p><p>检测头是<strong>DBL</strong>，定义在图上，没有了FC。</p><p>还有一种画法，更加直观一点：</p><p><img src="https://pic3.zhimg.com/80/v2-085b6d95dc53894e5de4fe95d2249b06_720w.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-151886b99cf8a93f116cd845a4524c89_720w.jpg" alt="img">YOLO v3 head</p><p><strong>anchor和YOLO v2一样，依然是从数据集中统计得到的。</strong></p><ul><li><strong>损失函数为：</strong></li></ul><p><img src="https://pic4.zhimg.com/80/v2-1714579e2a7f9ca88335bdaeae9e1c4f_720w.jpg" alt="img">YOLO v3损失函数</p><blockquote><p>第4行说明：loss分3部分组成：<br>第1行代表geo_loss，S代表13,26,52，就是grid是几乘几的。B=5。<br>第2行代表confidence_loss，和YOLO v2一模一样。<br>第3行代表class_loss，和YOLO v2的区别是改成了交叉熵。</p></blockquote><ul><li><strong>边界框预测和代价函数的计算：</strong></li></ul><p>YOLO v3使用多标签分类，用多个独立的logistic分类器代替softmax函数，以计算输入属于特定标签的可能性。在计算分类损失进行训练时，YOLO v3对每个标签使用二元交叉熵损失。</p><p><strong>正负样本的确定：</strong></p><blockquote><p>如果<strong>边界框先验（锚定框）与 GT 目标比其他目标重叠多</strong>，则相应的<strong>目标性得分应为 1</strong>。<br>对于<strong>重叠大于等于0.5的其他先验框(anchor)</strong>，忽略，<strong>不算损失</strong>。<br>每个 GT 目标<strong>仅与一个先验边界框相关联</strong>。 如果没有分配先验边界框，则不会导致<strong>分类和定位损失，只会有目标性的置信度损失。</strong><br>使用**tx和ty(<strong>而不是 bx 和by</strong>)**来计算损失。</p></blockquote><p><img src="https://pic2.zhimg.com/80/v2-1e31f33f86d3f2bb9c7d516efd974765_720w.jpg" alt="img">使用tx和ty(而不是 bx 和by)来计算损失</p><p><img src="https://pic1.zhimg.com/80/v2-5b4352b9a3138190717febf40e5f0384_720w.png" alt="img">交叉熵损失</p><p><strong>总结起来就是下面4句话：</strong></p><ul><li>正样本：与GT的IOU最大的框。</li><li>负样本：与GT的IOU&lt;0.5 的框。</li><li>忽略的样本：与GT的IOU&gt;0.5 但不是最大的框。</li><li>使用 tx 和ty （而不是 bx 和by ）来计算损失。</li></ul><p>最后我们做个比较：</p><p><img src="https://pic4.zhimg.com/80/v2-e35154c0fe812a210295ca8c3cd92df3_720w.jpg" alt="img">YOLO v1 v2和v3的比较</p><hr><h2 id="7-疫情都挡不住的YOLO-v4">7 疫情都挡不住的YOLO v4</h2><p>第一次看到YOLO v4公众号发文是在疫情期间，那时候还来不了学校。不得不说疫情也挡不住作者科研的动力。</p><ul><li><strong>检测头的改进：</strong></li></ul><p>YOLO v4的作者换成了Alexey Bochkovskiy大神，检测头总的来说还是多尺度的，3个尺度，分别负责大中小目标。只不过多了一些细节的改进：</p><p><strong>1.Using multi-anchors for single ground truth</strong></p><p>之前的YOLO v3是1个anchor负责一个GT，YOLO v4中用多个anchor去负责一个GT。方法是：对于 <img src="https://www.zhihu.com/equation?tex=GT_%7Bj%7D" alt="[公式]"> 来说，只要 <img src="https://www.zhihu.com/equation?tex=IoU%28anchor_%7Bi%7D%2CGT_%7Bj%7D%29%3Ethreshold" alt="[公式]"> ，就让 <img src="https://www.zhihu.com/equation?tex=anchor_%7Bi%7D" alt="[公式]"> 去负责 <img src="https://www.zhihu.com/equation?tex=GT_%7Bj%7D" alt="[公式]"> 。</p><p>这就相当于你anchor框的数量没变，但是选择的<strong>正样本</strong>的比例增加了，就<strong>缓解了正负样本不均衡的问题</strong>。</p><p><strong>2.Eliminate_grid sensitivity</strong></p><p>还记得之前的YOLO v2的这幅图吗？YOLO v2，YOLO v3都是预测4个这样的偏移量</p><p><img src="https://pic3.zhimg.com/80/v2-63ca4ed417c5db83b18c95a42a7f60f2_720w.jpg" alt="img">图3：YOLO v2，YOLO v3要预测的值</p><p>这里其实还隐藏着一个问题：</p><p>模型预测的结果是： <img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D" alt="[公式]"> ，那么最终的结果是： <img src="https://www.zhihu.com/equation?tex=b_%7Bx%7D%2Cb_%7By%7D%2Cb_%7Bw%7D%2Cb_%7Bh%7D" alt="[公式]"> 。这个 <img src="https://www.zhihu.com/equation?tex=b" alt="[公式]"> 按理说应该能取到一个grid里面的任意位置。但是实际上边界的位置是取不到的，因为sigmoid函数的值域是： <img src="https://www.zhihu.com/equation?tex=%280%2C1%29" alt="[公式]"> ，它不是 <img src="https://www.zhihu.com/equation?tex=%5B0%2C1%5D" alt="[公式]"> 。所以作者提出的Eliminate_grid sensitivity的意思是：将 <img src="https://www.zhihu.com/equation?tex=b_%7Bx%7D%2Cb_%7By%7D" alt="[公式]"> 的计算公式改为：</p><p><img src="https://www.zhihu.com/equation?tex=b_%7Bx%7D%3D1.1%5Ccdot%5Csigma%28t_%7Bx%7D%29%2Bc_%7Bx%7D" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=b_%7By%7D%3D1.1%5Ccdot%5Csigma%28t_%7By%7D%29%2Bc_%7By%7D" alt="[公式]"></p><p>这里的1.1就是一个示例，你也可以是1.05,1.2等等，反正要乘上一个略大于1的数，作者发现经过这样的改动以后效果会再次提升。</p><p><strong>3.CIoU-loss</strong></p><p>之前的YOLO v2，YOLO v3在计算geo_loss时都是用的MSE Loss，之后人们开始使用IoU Loss。</p><p><img src="https://www.zhihu.com/equation?tex=L_%7BIoU%7D%3D1-%5Cfrac%7B%7CB%5Ccap+B_%7Bgt%7D%7C%7D%7B%7CB%5Ccup+B_%7Bgt%7D%7C%7D" alt="[公式]"> 它可以反映预测检测框与真实检测框的检测效果。</p><p>但是问题也很多：不能反映两者的距离大小（重合度）。同时因为loss=0，**当GT和bounding box不挨着时，没有梯度回传，无法进行学习训练。**如下图4所示，三种情况IoU都相等，但看得出来他们的重合度是不一样的，左边的图回归的效果最好，右边的最差：</p><p><img src="https://pic2.zhimg.com/80/v2-a52e8fc7166b29c08b80de1ead22ec79_720w.jpg" alt="img">图4：IoU Loss不能反映两者的距离大小</p><ul><li><strong>所以接下来的改进是：</strong></li></ul><p><img src="https://www.zhihu.com/equation?tex=L_%7BGIoU%7D%3D1-IoU%2B%5Cfrac%7B%7CC-B%5Ccup+B_%7Bgt%7D%7C%7D%7B%7CC%7C%7D" alt="[公式]"> , <img src="https://www.zhihu.com/equation?tex=C" alt="[公式]"> 为同时包含了预测框和真实框的最小框的面积。</p><p><img src="https://pic1.zhimg.com/80/v2-4ccbf64fa4eefb0e321809a803f90c74_720w.jpg" alt="img">图4：GIoU Loss</p><p>GIoU Loss可以解决上面IoU Loss对距离不敏感的问题。但是GIoU Loss存在训练过程中发散等问题。</p><ul><li><strong>接下来的改进是：</strong></li></ul><p><img src="https://www.zhihu.com/equation?tex=L_%7BDIoU%7D+%3D+1-IoU+%2B+%5Cfrac%7B%5Crho%5E%7B2%7D%28b%2Cb%5E%7Bgt%7D%29%7D%7Bc%5E%7B2%7D%7D" alt="[公式]"></p><p>其中， <img src="https://www.zhihu.com/equation?tex=b" alt="[公式]"> ， <img src="https://www.zhihu.com/equation?tex=b%5E%7Bgt%7D" alt="[公式]"> 分别代表了预测框和真实框的中心点，且<img src="https://www.zhihu.com/equation?tex=%5Crho" alt="[公式]">代表的是计算两个中心点间的欧式距离。<img src="https://www.zhihu.com/equation?tex=c" alt="[公式]">代表的是能够同时包含预测框和真实框的<strong>最小闭包区域</strong>的对角线距离。</p><p><img src="https://pic1.zhimg.com/80/v2-2345aacc478cc5523d439ffcd84958ac_720w.jpg" alt="img">图5：DIoU Loss</p><p><strong>DIoU loss</strong>可以直接最小化两个目标框的距离，因此比GIoU loss收敛快得多。</p><p><strong>DIoU loss除了这一点之外，还有一个好处是：</strong></p><p><img src="https://pic3.zhimg.com/80/v2-3db202166e0c206001ca03e191489532_720w.jpg" alt="img">IoU Loss和GIoU loss都一样时</p><p>如上图所示，此3种情况IoU Loss和GIoU loss都一样，但是DIoU Loss右图最小，中间图次之，左图最大。</p><p>这里就是一道面试题：<strong>请总结DIoU loss的好处是？</strong></p><p><strong>答：</strong></p><ul><li>收敛快(需要的epochs少)。</li><li>缓解了Bounding box全包含GT问题。</li></ul><p><strong>但是</strong>DIoU loss只是<strong>缓解了Bounding box全包含GT问题</strong>，<strong>依然没有彻底解决包含的问题</strong>，即：</p><p><img src="https://pic4.zhimg.com/80/v2-96838980b7fd4443661cf0019802ea7b_720w.jpg" alt="img"></p><p>这2种情况<img src="https://www.zhihu.com/equation?tex=b" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=b%5E%7Bgt%7D" alt="[公式]">是重合的，DIoU loss的第3项没有区别，所以在这个意义上DIoU loss依然存在问题。</p><ul><li><strong>接下来的改进是：</strong></li></ul><p>惩罚项如下面公式：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmathcal%7BR%7D_%7BC+I+o+U%7D%3D%5Cfrac%7B%5Crho%5E%7B2%7D%5Cleft%28%5Cmathbf%7Bb%7D%2C+%5Cmathbf%7Bb%7D%5E%7Bg+t%7D%5Cright%29%7D%7Bc%5E%7B2%7D%7D%2B%5Calpha+v" alt="[公式]"> 其中 <img src="https://www.zhihu.com/equation?tex=%5Calpha" alt="[公式]"> 是权重函数，</p><p>而 <img src="https://www.zhihu.com/equation?tex=%5Cnu" alt="[公式]"> 用来度量长宽比的相似性，定义为<img src="https://www.zhihu.com/equation?tex=v%3D%5Cfrac%7B4%7D%7B%5Cpi%5E%7B2%7D%7D%5Cleft%28%5Carctan+%5Cfrac%7Bw%5E%7Bg+t%7D%7D%7Bh%5E%7Bg+t%7D%7D-%5Carctan+%5Cfrac%7Bw%7D%7Bh%7D%5Cright%29%5E%7B2%7D" alt="[公式]"></p><p>完整的 CIoU 损失函数定义：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmathcal%7BL%7D_%7BC+I+o+U%7D%3D1-I+o+U%2B%5Cfrac%7B%5Crho%5E%7B2%7D%5Cleft%28%5Cmathbf%7Bb%7D%2C+%5Cmathbf%7Bb%7D%5E%7Bg+t%7D%5Cright%29%7D%7Bc%5E%7B2%7D%7D%2B%5Calpha+v" alt="[公式]"></p><p>最后，CIoU loss的梯度类似于DIoU loss，但还要考虑 <img src="https://www.zhihu.com/equation?tex=%5Cnu" alt="[公式]"> 的梯度。在长宽在 <img src="https://www.zhihu.com/equation?tex=%5B0%2C1%5D" alt="[公式]"> 的情况下， <img src="https://www.zhihu.com/equation?tex=w%5E%7B2%7D%2Bh%5E%7B2%7D" alt="[公式]"> 的值通常很小，会导致梯度爆炸，因此在 <img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B1%7D%7Bw%5E%7B2%7D%2Bh%5E%7B2%7D%7D" alt="[公式]"> 实现时将替换成1。</p><p>CIoU loss实现代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">def bbox_overlaps_ciou(bboxes1, bboxes2):</span><br><span class="line">    rows = bboxes1.shape[0]</span><br><span class="line">    cols = bboxes2.shape[0]</span><br><span class="line">    cious = torch.zeros((rows, cols))</span><br><span class="line">    if rows * cols == 0:</span><br><span class="line">        return cious</span><br><span class="line">    exchange = False</span><br><span class="line">    if bboxes1.shape[0] &gt; bboxes2.shape[0]:</span><br><span class="line">        bboxes1, bboxes2 = bboxes2, bboxes1</span><br><span class="line">        cious = torch.zeros((cols, rows))</span><br><span class="line">        exchange = True</span><br><span class="line"></span><br><span class="line">    w1 = bboxes1[:, 2] - bboxes1[:, 0]</span><br><span class="line">    h1 = bboxes1[:, 3] - bboxes1[:, 1]</span><br><span class="line">    w2 = bboxes2[:, 2] - bboxes2[:, 0]</span><br><span class="line">    h2 = bboxes2[:, 3] - bboxes2[:, 1]</span><br><span class="line"></span><br><span class="line">    area1 = w1 * h1</span><br><span class="line">    area2 = w2 * h2</span><br><span class="line"></span><br><span class="line">    center_x1 = (bboxes1[:, 2] + bboxes1[:, 0]) / 2</span><br><span class="line">    center_y1 = (bboxes1[:, 3] + bboxes1[:, 1]) / 2</span><br><span class="line">    center_x2 = (bboxes2[:, 2] + bboxes2[:, 0]) / 2</span><br><span class="line">    center_y2 = (bboxes2[:, 3] + bboxes2[:, 1]) / 2</span><br><span class="line"></span><br><span class="line">    inter_max_xy = torch.min(bboxes1[:, 2:],bboxes2[:, 2:])</span><br><span class="line">    inter_min_xy = torch.max(bboxes1[:, :2],bboxes2[:, :2])</span><br><span class="line">    out_max_xy = torch.max(bboxes1[:, 2:],bboxes2[:, 2:])</span><br><span class="line">    out_min_xy = torch.min(bboxes1[:, :2],bboxes2[:, :2])</span><br><span class="line"></span><br><span class="line">    inter = torch.clamp((inter_max_xy - inter_min_xy), min=0)</span><br><span class="line">    inter_area = inter[:, 0] * inter[:, 1]</span><br><span class="line">    inter_diag = (center_x2 - center_x1)**2 + (center_y2 - center_y1)**2</span><br><span class="line">    outer = torch.clamp((out_max_xy - out_min_xy), min=0)</span><br><span class="line">    outer_diag = (outer[:, 0] ** 2) + (outer[:, 1] ** 2)</span><br><span class="line">    union = area1+area2-inter_area</span><br><span class="line">    u = (inter_diag) / outer_diag</span><br><span class="line">    iou = inter_area / union</span><br><span class="line">    with torch.no_grad():</span><br><span class="line">        arctan = torch.atan(w2 / h2) - torch.atan(w1 / h1)</span><br><span class="line">        v = (4 / (math.pi ** 2)) * torch.pow((torch.atan(w2 / h2) - torch.atan(w1 / h1)), 2)</span><br><span class="line">        S = 1 - iou</span><br><span class="line">        alpha = v / (S + v)</span><br><span class="line">        w_temp = 2 * w1</span><br><span class="line">    ar = (8 / (math.pi ** 2)) * arctan * ((w1 - w_temp) * h1)</span><br><span class="line">    cious = iou - (u + alpha * ar)</span><br><span class="line">    cious = torch.clamp(cious,min=-1.0,max = 1.0)</span><br><span class="line">    if exchange:</span><br><span class="line">        cious = cious.T</span><br><span class="line">    return cious</span><br></pre></td></tr></table></figure><p>所以最终的演化过程是：</p><p><strong>MSE Loss <img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> IoU Loss<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> GIoU Loss<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> DIoU Loss<img src="https://www.zhihu.com/equation?tex=%5Crightarrow" alt="[公式]"> CIoU Loss</strong></p><ul><li><strong>YOLO v4损失函数：</strong></li></ul><p>所以基于上面的改进，YOLO v4的损失函数为：</p><p><img src="https://pic3.zhimg.com/80/v2-310600feb7204188d9738fbd062567ca_720w.jpg" alt="img">YOLO v4的损失函数</p><hr><h2 id="8-代码比论文都早的YOLO-v5">8 代码比论文都早的YOLO v5</h2><ul><li><strong>检测头的改进：</strong></li></ul><p><strong>head部分没有任何改动</strong>，和yolov3和yolov4完全相同，也是三个输出头，stride分别是8,16,32，大输出特征图检测小物体，小输出特征图检测大物体。</p><p>但采用了<strong>自适应anchor，而且这个功能还可以手动打开/关掉，具体是什么意思呢？</strong></p><p>加上了自适应anchor的功能，个人感觉YOLO v5其实变成了2阶段方法。</p><p><strong>先回顾下之前的检测器得到anchor的方法：</strong></p><p><strong>Yolo v2 v3 v4：聚类得到anchor</strong>，不是完全基于anchor的，w,h是基于anchor的，而x,y是基于grid的坐标，所以人家叫<strong>location prediction</strong>。</p><p><strong>R-CNN系列：手动指定</strong>anchor的位置。</p><p><strong>基于anchor的方法是怎么用的：</strong></p><p><img src="https://pic4.zhimg.com/80/v2-5dc0cdfb531add5071abf2abc7399467_720w.jpg" alt="img">anchor是怎么用的</p><p>有了anchor的 <img src="https://www.zhihu.com/equation?tex=%28x_%7BA%7D%2Cy_%7BA%7D%2Cw_%7BA%7D%2Ch_%7BA%7D%29" alt="[公式]"> ,和我们预测的偏移量 <img src="https://www.zhihu.com/equation?tex=t_%7Bx%7D%2Ct_%7By%7D%2Ct_%7Bw%7D%2Ct_%7Bh%7D" alt="[公式]"> ，就可以计算出最终的output： <img src="https://www.zhihu.com/equation?tex=b_%7Bx%7D%2Cb_%7By%7D%2Cb_%7Bw%7D%2Cb_%7Bh%7D" alt="[公式]"> 。</p><p>之前anchor是固定的，自适应anchor利用网络的学习功能，让 <img src="https://www.zhihu.com/equation?tex=%28x_%7BA%7D%2Cy_%7BA%7D%2Cw_%7BA%7D%2Ch_%7BA%7D%29" alt="[公式]"> 也是可以学习的。我个人觉得自适应anchor策略，影响应该不是很大，除非是<strong>刚开始设置的anchor是随意设置的</strong>，一般我们都会基于实际项目数据重新运用<strong>kmean算法聚类得到anchor</strong>，这一步本身就不能少。</p><p>最后总结一下：</p><p><img src="https://pic2.zhimg.com/80/v2-34554f1fe4165e6b85d4905b925faa79_720w.jpg" alt="img">YOLO series的比较</p><p>本文只介绍了<strong>YOLO v2 v3 v4 v5</strong>对于<strong>检测头head</strong>和<strong>损失函数loss</strong>的优化，剩下的<strong>backbone</strong>方面和<strong>输入端的优化</strong>实在是写不动了，放到下一篇吧。</p><p>下面进入正题，目标检测器模型的结构如下图1所示，之前看过了YOLO v2 v3 v4 v5对于检测头和loss函数的改进，如下图2所示，下面着重介绍backbone的改进：</p><p><img src="https://pic1.zhimg.com/80/v2-8c5bac2266cf9b9b857529805511221c_720w.jpg" alt="img">图1：检测器的结构</p><p><img src="https://pic2.zhimg.com/80/v2-b641aebaf5d009504d30a1d17a5f7019_720w.jpg" alt="img">图2：YOLO系列比较</p><p>我们发现YOLO v1只是把最后的特征分成了 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 个grid，到了YOLO v2就变成了 <img src="https://www.zhihu.com/equation?tex=13%5Ctimes13" alt="[公式]"> 个grid，再到YOLO v3 v4 v5就变成了多尺度的**(strides=8,16,32)<strong>，更加复杂了。那</strong>为什么一代比一代检测头更加复杂呢？答案是：因为它们的提特征网络更加强大了，能够支撑起检测头做更加复杂的操作。**换句话说，如果没有backbone方面的优化，你即使用这么复杂的检测头，可能性能还会更弱。所以引出了今天的话题：</p><ul><li><strong>backbone的改进：</strong></li></ul><h2 id="YOLO-v1"><strong>YOLO v1</strong></h2><p>我们先看看YOLO v1的backbone长什么样子：</p><p><img src="https://pic2.zhimg.com/80/v2-70005c21ddd8470ae5587b231987cb7d_720w.jpg" alt="img">YOLO v1 backbone</p><p>最后2层是全连接层，其他使用了大量的卷积层，网络逐渐变宽，是非常标准化的操作。注意这里面试官可能会问你一个问题：为什么都是卷积，图上要分开画出来，不写在一起？答案是：按照feature map的分辨率画出来。分辨率A变化到分辨率B的所有卷积画在了一起。因为写代码时经常会这么做，所以问这个问题的意图是看看你是否经常写代码。</p><p>然后我们看下检测类网络的结构，如下图3所示，这个图是YOLO v4中总结的：</p><p><img src="https://pic1.zhimg.com/80/v2-d2fb92212cbfb1d29bc395000602231c_720w.jpg" alt="img">图3：检测类网络的结构</p><p>YOLO v1没有Neck，Backbone是GoogLeNet，属于Dense Prediction。<strong>1阶段的检测器属于Dense Prediction，而2阶段的检测器既有Dense Prediction，又有Sparse Prediction</strong>。</p><hr><h2 id="YOLO-v2"><strong>YOLO v2</strong></h2><p>为了进一步提升性能，YOLO v2重新训练了一个darknet-19，如下图4所示：</p><p><img src="https://pic1.zhimg.com/80/v2-3ea70cd81cb6103ad41e9bb01b3114e4_720w.jpg" alt="img">图4：darknet-19</p><p>仔细观察上面的backbone的结构(双横线上方)，提出3个问题：</p><ul><li>为什么没有 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 卷积了？只剩下了 <img src="https://www.zhihu.com/equation?tex=3%5Ctimes3" alt="[公式]"> 卷积和 <img src="https://www.zhihu.com/equation?tex=1%5Ctimes1" alt="[公式]"> 卷积了？</li></ul><p>**答：**vgg net论文得到一个结论，<img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 卷积可以用更小的卷积代替，且<img src="https://www.zhihu.com/equation?tex=3%5Ctimes3" alt="[公式]"> 卷积更加节约参数，使模型更小。</p><p>网络可以做得更深，更好地提取到特征。为什么？因为每做一次卷积，后面都会接一个非线性的激活函数，更深意味着非线性的能力更强了。所以，你可能以后再也见不到 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> 卷积了。</p><p>另外还用了bottleneck结构(红色框)：</p><p><img src="https://www.zhihu.com/equation?tex=3%5Ctimes3" alt="[公式]"> 卷积负责扩大感受野， <img src="https://www.zhihu.com/equation?tex=1%5Ctimes1" alt="[公式]"> 卷积负责减少参数量。</p><ul><li>为什么没有FC层了？</li></ul><p>**答：**使用了GAP(Global Average Pooling)层，把 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes7%5Ctimes7" alt="[公式]"> 映射为 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes1" alt="[公式]"> ，满足了输入不同尺度的image的需求。你不管输入图片是 <img src="https://www.zhihu.com/equation?tex=224%5Ctimes224" alt="[公式]"> 还是 <img src="https://www.zhihu.com/equation?tex=256%5Ctimes256" alt="[公式]"> ，最后都给你映射为 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes1" alt="[公式]">。</p><p>这对提高检测器的性能有什么作用呢？</p><p>对于小目标的检测，之前输入图片是固定的大小的，小目标很难被检测准确；现在允许多尺度输入图片了，只要把图片放大，小目标就变成了大目标，提高检测的精度。</p><ul><li>为什么最后一层是softmax？</li></ul><p>**答：**因为backbone网络darknet-19是单独train的，是按照分类网络去train的，用的数据集是imagenet，是1000个classes，所以最后加了一个softmax层，使用cross entropy loss。</p><p><strong>接下来总结下YOLO v2的网络结构：</strong></p><ul><li>图4中的双横线的上半部分(第0-22层)为backbone，train的方法如上文。</li><li>后面的结构如下图5所示：</li></ul><p><img src="https://pic3.zhimg.com/80/v2-1498b3c3c5ebebbb31b871329bc97b2e_720w.jpg" alt="img">图5：YOLO v2网络结构</p><ul><li>从第23层开始为检测头，其实是3个 3 * 3 * 1024 的卷积层。</li><li>同时增加了一个 passthrough 层(27层)，最后使用 1 * 1 卷积层输出预测结果，输出结果的size为 <img src="https://www.zhihu.com/equation?tex=13%5Ctimes13%5Ctimes125" alt="[公式]"> 。</li><li>route层的作用是进行层的合并(concat)，后面的数字指的是合并谁和谁。</li><li>passthrough 层可以把 <img src="https://www.zhihu.com/equation?tex=26%5Ctimes26%5Ctimes64%5Crightarrow13%5Ctimes13%5Ctimes256" alt="[公式]"> 。</li></ul><p><strong>YOLO2 的训练主要包括三个阶段：</strong></p><ol><li>先在 <strong>ImageNet 分类数据集</strong>上<strong>预训练 Darknet-19</strong>，此时模型输入为 <strong>224 * 224</strong> ，共训练 160 个 epochs。(为什么可以这样训练？因为有GAP)</li><li>将网络的输入调整为 <strong>448 * 448</strong>（注意在测试的时候使用 <strong>416 * 416</strong> 大小） ，继续在 ImageNet 数据集上 <strong>finetune 分类模型</strong>，训练 10 个 epochs。注意为什么测试的时候使用大小？<strong>答案是：<strong>将输入图像大小从</strong>448 ×448</strong> 更改为 <strong>416 ×416</strong> 。这将创建<strong>奇数空间维度(<strong>7×7 v.s 8 ×8 <strong>grid cell)</strong>。 图片的中心通常被大目标占据。 对于奇数网格单元，可以更容易确定目标所属的位置。对于一些大目标，它们中心点往落入图片中心位置，此时使用特征图中心的</strong>1个cell</strong>去预测这些目标的bounding box相对容易些，否则就要用中间<strong>4个Cells</strong>来进行预测。</li><li>修改 Darknet-19 分类模型为检测模型为图5形态，即：移除最后一个卷积层、global avgpooling 层以及 softmax 层，并且新增了3个 3 * 3 * 1024 卷积层，同时增加了一个 passthrough 层，最后使用 1 * 1 卷积层输出预测结果，并在<strong>检测数据集</strong>上继续<strong>finetune</strong> 网络。</li><li>YOLO v1的训练：先使用<strong>224 * 224</strong>的分辨率训练分类网络，再切换到<strong>448 * 448</strong>的分辨率训练检测网络。而YOLO v2在使用<strong>224 * 224</strong>的分辨率训练分类网络<strong>160 epochs</strong>之后，先使用<strong>448 * 448</strong>的分辨率finetune分类网络<strong>10 epochs</strong>，再使用<strong>448 * 448</strong>的分辨率训练检测网络。可提升4%mAP。**为什么可以改变输入维度了？**因为YOLO v2中使用了GAP(Global Average Pooling)不论输入图片多大最后都给你从 <img src="https://www.zhihu.com/equation?tex=1000%5Ctimes7%5Ctimes7%5Crightarrow1000%5Ctimes1" alt="[公式]"> ，进行分类训练。</li></ol><blockquote><p>注意这里图5有个地方得解释一下：第25层把第16层进行reorg，即passthrough操作，得到的结果为27层，再与第24层进行route，即concat操作，得到第28层。</p></blockquote><p><strong>可视化的图为：</strong></p><p><img src="https://pic3.zhimg.com/80/v2-33a0c926dc46085ac913b5262edb3a0a_720w.jpg" alt="img">图5：YOLO v2可视化结构</p><h2 id="YOLO-v3">YOLO v3</h2><p>先看下YOLO v3的backbone，如下图6所示：</p><p><img src="https://pic2.zhimg.com/80/v2-2bc3e653ec7744e36e45960d0cc060c9_720w.jpg" alt="img">图6：YOLO v3 backbone</p><p>先声明下darknet 53指的是convolution层有52层+1个conv层把1024个channel调整为1000个，你会发现YOLO v2中使用的GAP层在YOLO v3中还在用，他还是在ImageNet上先train的backbone，</p><p>观察发现依然是有bottleneck的结构和<strong>残差网络</strong>。</p><p><strong>为什么</strong>YOLO v3敢用3个检测头**？因为**他的backbone更强大了。</p><p><strong>为什么</strong>更强大了**？因为**当时已经出现了ResNet结构。</p><p>所以YOLO v3的提高，有一部分功劳应该给ResNet。</p><p>再观察发现YOLO v3没有Pooling layer了，用的是conv(stride = 2)进行下采样，<strong>为什么？</strong></p><p><strong>因为</strong>Pooling layer，不管是MaxPooling还是Average Pooling，本质上都是下采样减少计算量，本质上就是不更新参数的conv，但是他们会损失信息，所以用的是conv(stride = 2)进行下采样。</p><p>下图7是YOLO v3的网络结构：</p><p><img src="https://pic2.zhimg.com/80/v2-997f8c0bc3bde01329a52ba6afa49cfd_720w.jpg" alt="img">图7：YOLO v3 Structure</p><p><img src="https://pic4.zhimg.com/80/v2-3946e19705fcabb730daf30f9cd1408f_720w.jpg" alt="img">图8：YOLO v3 Structure</p><p>特征融合的方式更加直接，没有YOLO v2的passthrough操作，直接上采样之后concat在一起。</p><hr><h2 id="YOLO-v4">YOLO v4</h2><p>图9,10展示了YOLO v4的结构：</p><p><img src="https://pic2.zhimg.com/80/v2-0ea4884cd89aaf5b87ba1464d02f358d_720w.jpg" alt="img">图9：YOLO v4 Structure</p><p><img src="https://pic3.zhimg.com/80/v2-05a713ffc8cee40dbaa3b808aa63dcea_720w.jpg" alt="img">图10：YOLO v4 Structure</p><p><img src="https://pic1.zhimg.com/80/v2-c70a13fe3c658d20e9d11a1880619e70_720w.jpg" alt="img">图11：YOLO v4 Structure</p><p>Yolov4的结构图和Yolov3相比，因为多了<strong>CSP结构，PAN结构</strong>，如果单纯看可视化流程图，会觉得很绕，不过在绘制出上面的图形后，会觉得豁然开朗，其实整体架构和Yolov3是相同的，不过使用各种新的算法思想对各个子结构都进行了改进。</p><p><strong>YOLOv4使用了CSPDarknet53作为backbone，加上SPP模块，PANET作为neck，以及YOLO v3的head。</strong></p><p><strong>Yolov4的五个基本组件</strong>：</p><ol><li>**CBM：**Yolov4网络结构中的最小组件，由Conv+Bn+Mish激活函数三者组成。</li><li>**CBL：**由Conv+Bn+Leaky_relu激活函数三者组成。</li><li>**Res unit：**借鉴Resnet网络中的残差结构，让网络可以构建的更深。</li><li>**CSPX：**借鉴CSPNet网络结构，由三个卷积层和X个Res unint模块Concate组成。</li><li>**SPP：**采用1×1，5×5，9×9，13×13的最大池化的方式，进行多尺度融合。</li></ol><p><strong>其他基础操作：</strong></p><ol><li>**Concat：**张量拼接，维度会扩充，和Yolov3中的解释一样，对应于cfg文件中的route操作。</li><li>**add：**张量相加，不会扩充维度，对应于cfg文件中的shortcut操作。</li></ol><p><strong>Backbone中卷积层的数量：</strong></p><p>和Yolov3一样，再来数一下Backbone里面的卷积层数量。</p><p>每个CSPX中包含3+2<em>X个卷积层，因此整个主干网络Backbone中一共包含2+（3+2</em>1）+2+（3+2<em>2）+2+（3+2</em>8）+2+（3+2<em>8）+2+（3+2</em>4）+1=72。</p><ul><li><strong>输入端的改进：</strong></li></ul><p>YOLO v4对输入端进行了改进，主要包括<strong>数据增强Mosaic、cmBN、SAT自对抗训练</strong>，使得在卡不是很多时也能取得不错的结果。</p><p>这里介绍下数据增强Mosaic：</p><p><img src="https://pic1.zhimg.com/80/v2-9ddb5f309a28e99f6c1901ec908923e4_720w.jpg" alt="img">Mosaic数据增强</p><p><strong>CutMix</strong>只使用了两张图片进行拼接，而<strong>Mosaic数据增强</strong>则采用了4张图片，<strong>随机缩放、随机裁剪、随机排布</strong>的方式进行拼接。</p><p>Yolov4的作者采用了<strong>Mosaic数据增强</strong>的方式。</p><p>主要有几个优点：</p><ol><li><strong>丰富数据集：<strong>随机使用</strong>4张图片</strong>，随机缩放，再随机分布进行拼接，大大丰富了检测数据集，特别是随机缩放增加了很多小目标，让网络的鲁棒性更好。</li><li>**减少GPU：**可能会有人说，随机缩放，普通的数据增强也可以做，但作者考虑到很多人可能只有一个GPU，因此Mosaic增强训练时，可以直接计算4张图片的数据，使得Mini-batch大小并不需要很大，一个GPU就可以达到比较好的效果。</li></ol><p>cmBN的方法如下图：</p><p><img src="https://pic2.zhimg.com/80/v2-bc8cfe6198d8c2a0d8a3a646a27a6e0d_720w.jpg" alt="img">cmBN的方法</p><hr><h2 id="YOLO-v5">YOLO v5</h2><p>图12,13展示了YOLO v5的结构：</p><p><img src="https://pic2.zhimg.com/80/v2-2ca7dfc26a64e7ca0e5e8b21c87ed13d_720w.jpg" alt="img">图12：YOLO v5 Structure</p><p><img src="https://pic2.zhimg.com/80/v2-31ca3528d3bb53273f74a23b5b59ab51_720w.jpg" alt="img">图13：YOLO v5 Structure</p><p>检测头的结构基本上是一样的，融合方法也是一样。</p><p><strong>Yolov5的基本组件</strong>：</p><ol><li>**Focus：**基本上就是YOLO v2的passthrough。</li><li>**CBL：**由Conv+Bn+Leaky_relu激活函数三者组成。</li><li>**CSP1_X：**借鉴CSPNet网络结构，由三个卷积层和X个Res unint模块Concate组成。</li><li>**CSP2_X：**不再用Res unint模块，而是改为CBL。</li><li>**SPP：**采用1×1，5×5，9×9，13×13的最大池化的方式，进行多尺度融合，如图13所示。</li></ol><p>提特征的网络变短了，速度更快。YOLO v5的结构没有定下来，作者的代码还在持续更新。</p><h2 id="YOLO-v5的四种结构的深度："><strong>YOLO v5的四种结构的深度：</strong></h2><p>下图展示了YOLO v5的四种结构：</p><p><img src="https://pic3.zhimg.com/80/v2-6c383a7d5fdafda4a18799b1a1e7585e_720w.jpg" alt="img">图14：YOLO四种结构深度</p><p>Yolov5代码中，每个网络结构的两个参数：</p><p><strong>（1）Yolov5s.yaml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">depth_multiple: 0.33  # model depth multiple</span><br><span class="line">width_multiple: 0.50  # layer channel multiple</span><br></pre></td></tr></table></figure><p><strong>（2）Yolov5m.yaml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">depth_multiple: 0.67  # model depth multiple</span><br><span class="line">width_multiple: 0.75  # layer channel multiple</span><br></pre></td></tr></table></figure><p><strong>（3）Yolov5l.yaml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">depth_multiple: 1.0  # model depth multiple</span><br><span class="line">width_multiple: 1.0  # layer channel multiple</span><br></pre></td></tr></table></figure><p><strong>（4）Yolov5x.yaml</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">depth_multiple: 1.33  # model depth multiple</span><br><span class="line">width_multiple: 1.25  # layer channel multiple</span><br></pre></td></tr></table></figure><p>四种结构就是通过上面的两个参数，来进行控制网络的<strong>深度</strong>和<strong>宽度</strong>。其中<strong>depth_multiple</strong>控制网络的<strong>深度</strong>，<strong>width_multiple</strong>控制网络的<strong>宽度</strong>。</p><h3 id="Yolov5网络结构">Yolov5网络结构</h3><p>四种结构的yaml文件中，下方的网络架构代码都是一样的。</p><p>将Backbone部分提取出来，讲解如何控制网络的宽度和深度，yaml文件中的Head部分也是同样的原理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># YOLOv5 backbone</span><br><span class="line">backbone:</span><br><span class="line">  # [from, number, module, args]</span><br><span class="line">  [[-1, 1, Focus, [64, 3]],  # 0-P1/2</span><br><span class="line">   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4</span><br><span class="line">   [-1, 3, BottleneckCSP, [128]],</span><br><span class="line">   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8</span><br><span class="line">   [-1, 9, BottleneckCSP, [256]],</span><br><span class="line">   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16</span><br><span class="line">   [-1, 9, BottleneckCSP, [512]],</span><br><span class="line">   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32</span><br><span class="line">   [-1, 1, SPP, [1024, [5, 9, 13]]],</span><br><span class="line">   [-1, 3, BottleneckCSP, [1024, False]],  # 9</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p>在对网络结构进行解析时，yolo.py中下方的这一行代码将四种结构的<strong>depth_multiple</strong>，<strong>width_multiple</strong>提取出，赋值给<strong>gd，gw</strong>。后面主要对这<strong>gd，gw</strong>这两个参数进行讲解。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anchors, nc, gd, gw = d[&#x27;anchors&#x27;], d[&#x27;nc&#x27;], d[&#x27;depth_multiple&#x27;], d[&#x27;width_multiple&#x27;]</span><br></pre></td></tr></table></figure><p>下面再细致的剖析下，看是如何控制每种结构，深度和宽度的。</p><p><strong>1) 不同网络的深度</strong></p><p>在上图中有2种结构：CSP1和CSP2，其中CSP1结构主要应用于<strong>Backbone</strong>中，CSP2结构主要应用于<strong>Neck</strong>中。</p><p><strong>需要注意的是，四种网络结构中每个CSP结构的深度都是不同的。</strong></p><p>a.以yolov5s为例，第一个CSP1中，使用了<strong>1个残差组件</strong>，因此是<strong>CSP1_1</strong>。而在Yolov5m中，则增加了网络的深度，在第一个CSP1中，使用了<strong>2个残差组件</strong>，因此是<strong>CSP1_2</strong>。</p><p>而Yolov5l中，同样的位置，则使用了<strong>3个残差组件</strong>，Yolov5x中，使用了<strong>4个残差组件</strong>。</p><p>其余的第二个CSP1和第三个CSP1也是同样的原理。</p><p>b.在第二种CSP2结构中也是同样的方式，以第一个CSP2结构为例，Yolov5s组件中使用了<strong>1组</strong>卷积，因此是<strong>CSP2_1</strong>。</p><p>而Yolov5m中使用了<strong>2组</strong>，Yolov5l中使用了<strong>3组</strong>，Yolov5x中使用了<strong>4组。</strong></p><p>其他的四个CSP2结构，也是同理。</p><p>Yolov5中，网络的不断加深，也在不断<strong>增加网络特征提取</strong>和<strong>特征融合</strong>的能力。</p><p><strong>2) 控制深度的代码</strong></p><p>控制四种网络结构的核心代码是<strong><a href="http://yolo.py">yolo.py</a></strong>中下面的代码，存在两个变量，<strong>n和gd</strong>。</p><p>我们再将<strong>n和gd</strong>带入计算，看每种网络的变化结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = max(round(n * gd), 1) if n &gt; 1 else n  # depth gain</span><br></pre></td></tr></table></figure><p><strong>3) 验证控制深度的有效性</strong></p><p>我们选择<strong>最小的yolov5s.yaml</strong>和中间的<strong>yolov5l.yaml</strong>两个网络结构，将**gd(height_multiple)**系数带入，看是否正确。</p><p><img src="https://pic1.zhimg.com/80/v2-2bc10e474354757a4d7947e219f56cc0_720w.jpg" alt="img"></p><p><strong>a. yolov5x.yaml</strong></p><p>其中<strong>height_multiple=0.33</strong>，即<strong>gd=0.33</strong>，而n则由上面红色框中的信息获得。</p><p>以上面网络框图中的第一个CSP1为例，即上面的第一个红色框。n等于第二个数值3。</p><p>而<strong>gd=0.33</strong>，带入（2）中的计算代码，结果n=1。因此第一个CSP1结构内只有1个残差组件，即CSP1_1。</p><p>第二个CSP1结构中，n等于第二个数值9，而<strong>gd=0.33</strong>，带入（2）中计算，结果<strong>n=3</strong>，因此第二个CSP1结构中有3个残差组件，即CSP1_3。</p><p>第三个CSP1结构也是同理，这里不多说。</p><p><strong>b. yolov5l.xml</strong></p><p>其中<strong>height_multiple=1</strong>，即<strong>gd=1</strong></p><p>和上面的计算方式相同，第一个CSP1结构中，n=1，带入代码中，结果n=3，因此为CSP1_3。</p><p>下面第二个CSP1和第三个CSP1结构都是同样的原理。</p><h2 id="YOLO-v5的四种结构的宽度：">YOLO v5的四种结构的宽度：</h2><p><img src="https://pic3.zhimg.com/80/v2-76ec41e464f5ce3ce103136837937112_720w.jpg" alt="img">图15：YOLO四种结构宽度</p><p><strong>1) 不同网络的宽度:</strong></p><p>如上图表格中所示，四种yolov5结构在不同阶段的卷积核的数量都是不一样的，因此也直接影响卷积后特征图的第三维度，即<strong>宽度</strong>。</p><p>a.以Yolo v5s结构为例，第一个Focus结构中，最后卷积操作时，卷积核的数量是32个，因此经过<strong>Focus结构</strong>，特征图的大小变成<strong>304*304*32</strong>。</p><p>而Yolo v5m的<strong>Focus结构</strong>中的卷积操作使用了48个卷积核，因此<strong>Focus结构</strong>后的特征图变成3<strong>04*304*48</strong>。yolov5l，yolov5x也是同样的原理。</p><p>b. 第二个卷积操作时，Yolo v5s使用了64个卷积核，因此得到的特征图是<strong>152*152*64</strong>。而yolov5m使用96个特征图，因此得到的特征图是<strong>152*152*96</strong>。Yolo v5l，Yolo v5x也是同理。</p><p>c. 后面三个卷积下采样操作也是同样的原理。</p><p>四种不同结构的卷积核的数量不同，这也直接影响网络中，比如<strong>CSP1，CSP2等结构</strong>，以及各个普通卷积，卷积操作时的卷积核数量也同步在调整，影响整体网络的计算量。</p><p>当然卷积核的数量越多，特征图的厚度，即<strong>宽度越宽</strong>，网络提取特征的<strong>学习能力也越强</strong>。</p><ol start="2"><li><strong>控制宽度的代码</strong></li></ol><p>在Yolo v5的代码中，控制宽度的核心代码是<strong><a href="http://yolo.py">yolo.py</a></strong>文件里面的这一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c2 = make_divisible(c2 * gw, 8) if c2 != no else c2</span><br></pre></td></tr></table></figure><p>它所调用的子函数<strong>make_divisible</strong>是一个很出名的函数，在各大任务中均会使用，作用是：</p><p>**make_divisible(A,B)：**找到比A大的，能整除B的最小整数。</p><blockquote><p>make_divisible(54,8) = 56</p></blockquote><p><strong>3) 验证控制宽度的有效性</strong></p><p>我们还是选择<strong>最小的Yolo v5s</strong>和<strong>中间的Yolo v5l</strong>两个网络结构，将<strong>width_multiple</strong>系数带入，看是否正确。</p><p><img src="https://pic2.zhimg.com/80/v2-7544dc64d6cfce2fb0dbe69bec73e3e1_720w.jpg" alt="img">图16：backbone</p><p><strong>a. Yolo v5x.yaml</strong></p><p>其中<strong>width_multiple=0.5</strong>，即<strong>gw=0.5</strong>。</p><p>以第一个卷积下采样为例，即Focus结构中下面的卷积操作。</p><p>按照上面Backbone的信息，我们知道Focus中，标准的c2=64，而<strong>gw=0.5</strong>，代入（2）中的计算公式，最后的结果=32。即Yolo v5s的Focus结构中，卷积下采样操作的卷积核数量为<strong>32个。</strong></p><p>再计算后面的第二个卷积下采样操作，标准c2的值=128，<strong>gw=0.5</strong>，代入（2）中公式，最后的结果=64，也是正确的。</p><p><strong>b. Yolo v5l.yaml</strong></p><p>其中<strong>width_multiple=1</strong>，即<strong>gw=1</strong>，而标准的<strong>c2=64</strong>，代入上面（2）的计算公式中，可以得到Yolo v5l的Focus结构中，卷积下采样操作的卷积核的数量为64个，而第二个卷积下采样的卷积核数量是128个。</p><p>另外的三个卷积下采样操作，以及<strong>Yolo v5m，Yolo v5x结构</strong>也是同样的计算方式。</p><p>比如：YOLO V5s默认depth_multiple=0.33， width_multiple=0.50。即BottleneckCSP中Bottleneck的数量为<strong>默认的1/3</strong>，而所有卷积操作的卷积核个数均为<strong>默认的1/2。</strong></p><p><img src="https://pic4.zhimg.com/80/v2-c1422e55da6ba5030371f0111d8d4e8f_720w.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-4c47b276ff2f51fb59a056e961666f67_720w.jpg" alt="img">图17：SPP结构</p><p><strong>Focus操作如下图所示：</strong></p><p><img src="https://pic1.zhimg.com/80/v2-560db4a00dd21975f64e7addff498ecc_720w.jpg" alt="img">图18：Focus操作</p><p><strong>Focus</strong>的<strong>slice</strong>操作如下图所示：</p><p><img src="https://pic3.zhimg.com/80/v2-eeec8b5b35b9ab4f096dfbfb229ea1fa_720w.jpg" alt="img">图19：slice操作</p><p>这个其实就是<strong>Yolo v2</strong>里面的<strong>ReOrg+Conv</strong>操作，也是亚像素卷积的反向操作版本，简单来说就是把数据切分为4份，每份数据都是相当于2倍下采样得到的，然后在channel维度进行拼接，最后进行卷积操作。其最大好处是可以<strong>最大程度的减少信息损失而进行下采样操作</strong>。</p><p><strong>YOLO v5s</strong>默认<strong>3x640x640</strong>的输入，复制四份，然后通过切片操作将这个四个图片切成了四个<strong>3x320x320</strong>的切片，接下来使用concat从深度上连接这四个切片，输出为<strong>12x320x320</strong>，之后再通过卷积核数为32的卷积层，生成<strong>32x320x320</strong>的输出，最后经过batch_borm 和leaky_relu将结果输入到下一个卷积层。</p><p><strong>Focus的代码如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">class Focus(nn.Module):</span><br><span class="line">    # Focus wh information into c-space</span><br><span class="line">    def __init__(self, c1, c2, k=1, s=1, p=None, g=1, act=True):  # ch_in, ch_out, kernel, stride, padding, groups</span><br><span class="line">        super(Focus, self).__init__()</span><br><span class="line">        self.conv = Conv(c1 * 4, c2, k, s, p, g, act)</span><br><span class="line"></span><br><span class="line">    def forward(self, x):  # x(b,c,w,h) -&gt; y(b,4c,w/2,h/2)</span><br><span class="line">        return self.conv(torch.cat([x[..., ::2, ::2], x[..., 1::2, ::2], x[..., ::2, 1::2], x[..., 1::2, 1::2]], 1))</span><br></pre></td></tr></table></figure><p>这里解释以下<strong>PANET</strong>结构是什么意思，PAN结构来自论文Path Aggregation Network，可视化结果如图19所示：</p><p><img src="https://pic3.zhimg.com/80/v2-93d93db2c7f60ebf3fa5d894d1b446f2_720w.jpg" alt="img">图20：PAN结构</p><p>可以看到包含了自底向上和自顶向下的连接，值得注意的是这里的红色虚线和绿色虚线：</p><p>FPN的结构把浅层特征传递给顶层要经历<strong>几十甚至上百层</strong>，显然经过这么多层的传递，浅层信息(小目标)丢失比较厉害。这里的<strong>红色虚线</strong>就象征着ResNet的几十甚至上百层。</p><p><strong>自下而上的路径</strong>由<strong>不到10层</strong>组成，<strong>浅层特征</strong>经过FPN的<strong>laterial connection</strong>连接到 <img src="https://www.zhihu.com/equation?tex=P_%7B2%7D" alt="[公式]"> ，再经过<strong>bottom-up path augmentation</strong>连接到顶层，经过的层数不到10层，能较好地保留浅层的信息。这里的<strong>绿色虚线</strong>就象征着自下而上的路径的不到10层。</p><p>YOLO V5借鉴了YOLO V4的<strong>修改版PANET</strong>结构。</p><p><strong>PANET</strong>通常使用自适应特征池将相邻层<strong>加</strong>在一起，以进行掩模预测。但是，当在YOLO v4中使用PANET时，此方法略麻烦，因此，YOLO v4的作者没有使用自适应特征池添加相邻层，而是对其进行<strong>Concat</strong>操作，从而提高了预测的准确性。</p><p><img src="https://pic4.zhimg.com/80/v2-98fce9f04482ad10b4fb0c04281362df_720w.jpg" alt="img">图21：Modified PAN</p><ul><li><strong>输入端的改进：</strong></li></ul><p><strong>1.Mosaic数据增强，和YOLO v4一样。</strong></p><p><strong>2.自适应锚框计算：</strong></p><p>在Yolo算法中，针对不同的数据集，都会有<strong>初始设定长宽的锚框</strong>。</p><p>在网络训练中，网络在初始锚框的基础上输出预测框，进而和<strong>真实框groundtruth</strong>进行比对，计算两者差距，再反向更新，<strong>迭代网络参数</strong>。</p><p>因此初始锚框也是比较重要的一部分，比如Yolov5在Coco数据集上初始设定的锚框：</p><p><img src="https://pic1.zhimg.com/80/v2-f8a55d48eb2003b47629f4e92d7ab5a8_720w.jpg" alt="img">Yolov5在Coco数据集上初始设定的锚框</p><p>在Yolov3、Yolov4中，训练不同的数据集时，计算初始锚框的值是通过单独的程序运行的。</p><p>但Yolov5中将此功能嵌入到代码中，每次训练时，自适应的计算不同训练集中的最佳锚框值。</p><p>当然，如果觉得计算的锚框效果不是很好，也可以在代码中将自动计算锚框功能<strong>关闭</strong>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parser.add_argument(&#x27;--noautoanchor&#x27;, action=&#x27;store_true&#x27;, help=&#x27;disable autoanchor check&#x27;)</span><br></pre></td></tr></table></figure><p>设置成<strong>False</strong>，每次训练时，不会自动计算。</p><p><strong>3.自适应图片缩放</strong></p><p>在常用的目标检测算法中，不同的图片长宽都不相同，因此常用的方式是将原始图片统一缩放到一个标准尺寸，再送入检测网络中。</p><p>比如Yolo算法中常用<strong>416*416，608*608</strong>等尺寸，比如对下面<strong>800*600</strong>的图像进行缩放:，如图15所示：</p><p><img src="https://pic3.zhimg.com/80/v2-21213f06cfd4b9025ac0aec29e2e8a82_720w.jpg" alt="img">图22：Yolo算法的缩放填充</p><p>但<strong>Yolov5代码</strong>中对此进行了改进，也是<strong>Yolov5推理速度</strong>能够很快的一个不错的trick。</p><p>作者认为，在项目实际使用时，很多图片的长宽比不同，因此缩放填充后，两端的黑边大小都不同，而如果<strong>填充的比较多</strong>，则存在<strong>信息冗余</strong>，影响<strong>推理速度</strong>。</p><p>因此在Yolov5的代码中datasets.py的letterbox函数中进行了修改，对原始图像<strong>自适应的添加最少的黑边</strong>，如图16所示：</p><p><img src="https://pic4.zhimg.com/80/v2-d9d3685aae6ba2f99e1c7c27a4f1ae53_720w.jpg" alt="img">图22：YOLO v5的自适应填充</p><p>图像高度上两端的黑边变少了，在推理时，计算量也会减少，即目标检测速度会得到提升。</p><p>通过这种简单的改进，推理速度得到了37%的提升，可以说效果很明显。</p><p>Yolov5中填充的是灰色，即（114,114,114），都是一样的效果，且训练时没有采用缩减黑边的方式，还是采用传统填充的方式，即缩放到416*416大小。只是在测试，使用模型推理时，才采用缩减黑边的方式，提高目标检测，推理的速度。</p><p><strong>关于样本：</strong></p><p>yolov5的很大区别就是在于正样本区域的定义。<strong>在yolov3中，每一个</strong> <img src="https://www.zhihu.com/equation?tex=GT" alt="[公式]"> **只有1个对应的anchor，**设定的规则是取 <img src="https://www.zhihu.com/equation?tex=IoU%28anchor%2CGT%29" alt="[公式]"> 最大的anchor。而且某个 <img src="https://www.zhihu.com/equation?tex=GT" alt="[公式]"> 一定不可能在三个预测层的某几层上同时进行匹配。这样就会导致一个问题：正样本的anchor太少了，导致整体收敛比较慢。后面的FCOS等工作研究表明：<strong>增加高质量正样本anchor可以显著加速收敛</strong>。</p><p>YOLO v5和前YOLO系列相比，特点应该是：</p><ul><li><strong>(1) 增加了正样本：方法是邻域的正样本anchor匹配策略。</strong></li><li><strong>(2) 通过灵活的配置参数，可以得到不同复杂度的模型</strong></li><li><strong>(3) 通过一些内置的超参优化策略，提升整体性能</strong></li><li><strong>(4) 和yolov4一样，都用了mosaic增强，提升小物体检测性能</strong></li></ul><hr><p>最后我们对YOLO series总的做个比较，结束这个系列的解读，喜欢的同学点赞关注评论3连：</p><p><img src="https://pic1.zhimg.com/80/v2-ba712736fadbf364cc2fec97dd374f98_720w.jpg" alt="img"></p><p>YOLO v5 series的比较</p><h1>写给小白的Yolo介绍</h1><h2 id="YOLO是什么？">YOLO是什么？</h2><p>YOLO是目标检测模型。</p><p>目标检测是计算机视觉中比较简单的任务，用来在一张图篇中找到<strong>某些特定的物体</strong>，目标检测不仅要求我们识别这些物体的<strong>种类</strong>，同时要求我们标出这些物体的<strong>位置</strong>。</p><p>显然，类别是离散数据，位置是连续数据。</p><p><img src="https://pic1.zhimg.com/80/v2-88ca6ec106e7647a0390ad3d93625444_720w.jpg" alt="img"></p><p>上面的图片中，分别是计算机视觉的三类任务：分类，目标检测，实例分割。</p><p>很显然，整体上这三类任务从易到难，我们要讨论的目标检测位于中间。前面的分类任务是我们做<strong>目标检测的基础</strong>，至于<strong>像素级别</strong>的实例分割，太难了别想了。</p><p>YOLO在2016年被提出，发表在计算机视觉顶会<strong>CVPR</strong>(Computer Vision and Pattern Recognition)上，论文的国内镜像在这里：<a href="https://link.zhihu.com/?target=http%3A//xxx.itp.ac.cn/pdf/1506.02640v5">1</a></p><p>YOLO的全称是you only look once，指<strong>只需要</strong>浏览一次就可以识别出图中的物体的类别和位置。</p><p>因为只需要看一次，YOLO被称为Region-free方法，相比于Region-based方法，YOLO不需要提前找到<strong>可能存在目标的Region</strong>。</p><p>也就是说，一个典型的Region-base方法的流程是这样的：先通过计算机图形学（或者深度学习）的方法，对图片进行分析，找出若干个可能存在物体的区域，将这些区域裁剪下来，放入一个图片分类器中，由分类器分类。</p><p>因为YOLO这样的Region-free方法只需要一次扫描，也被称为<strong>单阶段</strong>（1-stage）模型。Region-based方法方法也被称为<strong>两阶段</strong>（2-stage）方法。</p><hr><h2 id="YOLO之前的世界">YOLO之前的世界</h2><p>YOLO之前的世界，额，其实是R-CNN什么的，也就是我们前面说的Region-based方法，但是感觉还是太高端了。我们从用脚都能想到的目标检测方法开始讲起。</p><p>如果我们现在有一个<strong>分类器：</strong></p><p><img src="https://pic3.zhimg.com/80/v2-21d1a2b0e0381fa30e69eeaa7f24384e_720w.jpg" alt="img"></p><p>这只猫咪好可爱，想撸。</p><p>现在我们的追求升级了，我们不仅仅想处理这种<strong>一张图片中只有一个物体</strong>的图片，我们现在想处理有多个物体的图片。</p><p>我们该什么做呢？</p><p>首先有几点我们要实现想到：<strong>首先</strong>物体的位置是不确定的，你没办法保证物体一定在最中间；<strong>其次</strong>，物体的大小是不确定的，有的物体比较大，也有的物体比较小，注意，这里不是说大象一定更大，猫咪一定更小，毕竟还有近大远小嘛；<strong>然后</strong>，我们还没办法保证物体的种类，假设我们有一个可以识别100中物体的分类器，那么起码图片中出现了这100种物体我们都要识别出来。</p><p>比如说这样：</p><p><img src="https://pic1.zhimg.com/80/v2-e56c54e419838b8e45ad211df5e38058_720w.jpg" alt="img"></p><p>挺难的，是吧？</p><p>最naive的方法是<strong>滑窗法</strong>，就是用滑动窗口去识别一个个物体。</p><p>比如这样：</p><p><img src="https://pic1.zhimg.com/80/v2-b99bfd4ae6466b6a5c9274b40c544d10_720w.jpg" alt="img"></p><p>上图的红色框框就是所谓的滑窗。如果一个物体<strong>正好</strong>出现在一个滑窗中，那么我们就可以把它检测出来了，这个滑窗的位置也就是我们认为<strong>这个物体所在的位置</strong>。</p><p>等下，如果物体没有正好出现在一个滑窗中呢？</p><p>我们管滑窗每次滑动的距离叫做<strong>步长</strong>，如果我们把步长设置的特别小，如果步长仅仅为一个像素点，那<strong>一定可以</strong>保证物体可以<strong>正好</strong>出现在某个窗口中了。</p><p>那如果某个物体特别大，或者特别小呢？</p><p>例如在上图中，每个窗口和汽车差不多大小，但是如果我们要识别一辆卡车，一个窗口可能就不够大了。</p><p>显然，我们可以设计不同大小的窗口，我们可以设计几十中不同大小的窗口，让他们按照最小的步长滑动，把窗口里的所有图片都放入分类器中。</p><p>但是这样太太太浪费时间了。</p><p>到这里R-CNN同学出现了，他说，你这样用滑窗法可能最后得到了几十万个窗口，而我可以提前扫描一下图片，得到2000个左右的Region（其实就是前面的窗口），这样不就节省了很多时间？</p><p><a href="https://link.zhihu.com/?target=http%3A//xxx.itp.ac.cn/pdf/1311.2524">Rich feature hierarchies for accurate object detection and semantic segmentationxxx.itp.ac.cn/pdf/1311.2524</a></p><p>R-CNN同学管这个叫做Region Proposal，并且提出了一个叫做Selective Search的算法。（吐槽一下这个名字起得太大众了）</p><p>但是R-CNN被YOLO打脸了，YOLO说，我更快。</p><hr><h2 id="YOLO原理">YOLO原理</h2><p>在这之前，我们再重申一下我们的任务。我们的目的是在一张图片中找出物体，并给出它的类别和位置。目标检测是基于监督学习的，每张图片的监督信息是它所包含的N个物体，每个物体的信息有<strong>五个</strong>，分别是物体的<strong>中心位置(x,y)<strong>和它的</strong>高(h)<strong>和</strong>宽(w)</strong>，最后是它的类别。</p><p>YOLO 的预测是基于整个图片的，并且它会一次性输出所有检测到的目标信息，包括类别和位置。</p><p>就好像捕鱼一样，R-CNN是先选好哪里可能出现鱼，而YOLO是直接一个大网下去，把所有的鱼都捞出来。</p><p>先假设我们处理的图片是一个<strong>正方形</strong>。</p><p>YOLO的第一步是<strong>分割图片</strong>，它将图片分割为 <img src="https://www.zhihu.com/equation?tex=s%5E2" alt="[公式]"> 个grid，每个grid的大小都是相等的，像这样：</p><p><img src="https://pic1.zhimg.com/80/v2-01c11f4d423a698271159fcc98524894_720w.jpg" alt="img"></p><p>如果我们让每个框只能识别出一个物体，且要求这个物体必须在这个框之内，那YOLO就变成了很蠢的滑窗法了。</p><p>YOLO的聪明之处在于，它只要求这个物体的<strong>中心</strong>落在这个框框之中。</p><p>这意味着，我们不用设计非常非常<strong>大</strong>的框，因为我们只需要让物体的中心在这个框中就可以了，而不是必须要让整个物体都在这个框中。</p><p>具体怎么实现呢？</p><p>我们要让这个 <img src="https://www.zhihu.com/equation?tex=S%5E2" alt="[公式]"> 个框每个都预测出<strong>B个bounding boxs</strong>，这个bounding boxs有5个量，分别是物体的<strong>中心位置(x,y)<strong>和它的</strong>高(h)<strong>和</strong>宽(w)</strong>，以及这次预测的<strong>置信度</strong>。</p><p>每个框框不仅只预测B个bounding boxs，它还要负责预测这个框框中的物体<strong>是什么类别</strong>的，这里的类别用one-hot编码表示。</p><p>注意，虽然一个框框有多个bounding boxes，但是只能识别出一个物体，因此每个框框需要预测物体的类别，<strong>而bounding box不需要</strong>。</p><p>也就是说，如果我们有 <img src="https://www.zhihu.com/equation?tex=S%5E2" alt="[公式]"> 个框框，每个框框的bounding boxes个数为B，分类器可以识别出C种不同的物体，那么所有整个ground truth的长度为：</p><p><img src="https://www.zhihu.com/equation?tex=S+%5Ctimes+S++%5Ctimes+%28B++%5Ctimes+5++%2BC%29" alt="[公式]"></p><p>先看这些bounding boxs显示出来是什么样的：</p><p><img src="https://pic3.zhimg.com/80/v2-019dcd8dae979fa96f48fc23e70e25a2_720w.jpg" alt="img"></p><p>在上面的例子中，图片被分成了49个框，每个框预测2个bounding boxs，因此上面的图中有98个bounding boxs。</p><p>可以看到大致上每个框里确实有两个bounding boxs。</p><p>可以看到这些BOX中有的边框比较粗，有的比较细，这是<strong>置信度</strong>不同的表现，置信度高的比较粗，置信度低的比较细。</p><hr><p>在详细的介绍confidence之前，我们先来说一说关于bounding boxs的细节。</p><p>bounding boxs可以锁定物体的位置，这要求它输出四个关于位置的值，分别是x,y,h和w。我们在处理输入的图片的时候想让图片的大小<strong>任意</strong>，这一点对于卷积神经网络来说不算太难，但是，如果输出的位置坐标是一个<strong>任意的正实数</strong>，模型很可能在<strong>大小不同</strong>的物体上<strong>泛化能力</strong>有很大的差异。</p><p>这时候当然有一个常见的套路，就是对数据进行归一化，让连续数据的值位于0和1之间。</p><p>对于x和y而言，这相对比较容易，毕竟x和y是物体的中心位置，既然物体的中心位置在这个grid之中，那么只要让真实的<strong>x除以grid的宽度</strong>，让真实的<strong>y除以grid的高度</strong>就可以了。</p><p>但是h和w就不能这么做了，因为一个物体很可能远大于grid的大小，预测物体的高和宽很可能大于bounding boxs的高和宽，这样w除以bounding boxs的宽度，h除以bounding boxs的高度依旧<strong>不在0和1之间</strong>。</p><p>解决方法是让<strong>w除以整张图片的宽度</strong>，<strong>h除以整张图片的高度</strong>。</p><p>下面的例子是一个448<em>448的图片，有3</em>3的grid，展示了计算x,y,w,h的真实值（ground truth）的过程：</p><p><img src="https://pic1.zhimg.com/80/v2-8fbe9f9fbcdfeac54f36e4174f579e8c_720w.jpg" alt="img"></p><p>接下来，我们好好说道说道这个confidence。</p><p>confidence的计算公式是：</p><p><img src="https://www.zhihu.com/equation?tex=C%3DP+r%28o+b+j%29+%2A+I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"></p><p>这个IOU的全称是intersection over union，也就是交并比，它反应了两个框框的相似度。</p><p><img src="https://pic2.zhimg.com/80/v2-95ed394b96949c248c7668377d4b3889_720w.jpg" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"> 的意思是预测的bounding box和真实的物体位置的交并比。</p><p><img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 是一个grid有物体的概率，在有物体的时候ground truth为1，没有物体的时候ground truth为0.</p><p>这个<img src="https://www.zhihu.com/equation?tex=I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"> 非常有意思，因为它的groun truth不是确定的，这导致虽然 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 的ground truth是确定的，但是bounding box的confidence的ground truth是不确定的。</p><p>一个不确定的ground truth有什么用呢？</p><p>想象这样的问题：老师问小明1+1等于几。小明说等于2，老师又问你有多大的把握你的回答是对的，小明说有80%</p><p>这里的80%就是confidence。</p><p>confidence主要有两个作用，在后面我会一一介绍。</p><p>现在，我们根据上面大雁的图片计算一下样本的groun truth：</p><p><img src="https://pic1.zhimg.com/80/v2-8fbe9f9fbcdfeac54f36e4174f579e8c_720w.jpg" alt="img"></p><p>首先，这里有9个grid，每个grid有两个bounding box，每个bounding box有5个预测值，假设分类器可以识别出3中物体，那么ground truth的总长度为 <img src="https://www.zhihu.com/equation?tex=S+%5Ctimes+S++%5Ctimes+%28B++%5Ctimes+5++%2BC%29+%3D+3+%5Ctimes+3++%5Ctimes+%282++%5Ctimes+5++%2B3%29+%3D+117" alt="[公式]"></p><p>我们假定大雁的类别的one-hot为100，另外两个是火鸡和特朗普，分别是010和001.</p><p>我们规定每个grid的ground truth的顺序是confidence, x, y, w, h, c1, c2, c3</p><p>那么第一个（左上角）grid的ground truth应该是：0, ?, ?, ?, ?, ?, ?, ?</p><p>实际上除了最中间的grid以外，其他的grid的ground truth都是这样的。</p><p>这里的&quot;?&quot;的意思是，随便是多少都行，我不在乎。在下面我们会看到，我们<strong>不会</strong>对这些值计算损失函数。</p><p>中间的ground truth应该是：</p><p>iou, 0.48, 0.28, 0.50, 0.32, 1, 0, 0</p><p>iou要根据x, y, w, h的预测值现场计算。</p><hr><p>这样看似可以让每个grid找到负责的物体，并把它识别出来了。但是还存在一个不得不考虑的问题，如果物体很大，而框框又很小，一个物体被多个框框识别了怎么办？</p><p>这里，我们要用到一个叫做<strong>非极大值抑制</strong>Non-maximal suppression(NMS)的技术。</p><p>这个NMS还是基于交并比实现的。</p><p><img src="https://pic2.zhimg.com/80/v2-afecf4b1039563a528da44282c14703d_720w.jpg" alt="img"></p><p>例如在上面狗狗的图里，B1,B2,B3,B4这四个框框可能都说狗狗在我的框里，但是最后的输出应该只有一个框，那怎么把其他框删除呢？</p><p>这里就用到了我们之前讲的confidence了，confidence预测<strong>有多大的把握这个物体在我的框里</strong>，我们在同样是检测狗狗的框里，也就是B1,B2,B3,B4中，选择confidence最大的，把其余的都删掉。</p><p>也就是只保留B1.</p><p>但是这里还有一个引人深思的问题，为什么confidence的定义是 <img src="https://www.zhihu.com/equation?tex=C%3DP+r%28o+b+j%29+%2A+I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"> ，直接用 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 不行吗，直接用 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 的话就可以把ground truth确定下来，训练的时候就方便多了。</p><p>这里有一个非常非常鸡贼的技巧！</p><p>理论上只用 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 也可以选出应该负责识别物体的grid，但是可能会<strong>不太精确</strong>。这里我们训练的目标是预测 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+%2A+I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"> ，我们的想法是让本来不应该预测物体的grid的confidence尽可能的小，既然 <img src="https://www.zhihu.com/equation?tex=P+r%28o+b+j%29+" alt="[公式]"> 的效果不太理想，那我就让 <img src="https://www.zhihu.com/equation?tex=I+O+U_%7Bt+r+u+t+h%7D%5E%7Bp+r+e+d%7D" alt="[公式]"> <strong>尽可能小</strong>。</p><p>为什么<strong>真正的最中间的grid</strong>的confidence往往会比较大呢？</p><p>因为我们的bounding boxes是用<strong>中点坐标+宽高</strong>表示的，每个grid预测的bounding box都要求其中心在这个grid内，那么如果不是最中间的grid，其他的grid的<strong>IOU自然而言就会比较低</strong>了，因此相应的confidence就降下来了。</p><p>现在，我们知道了哪个是应该保留的bounding boxes了，但是还有一个问题，我们是怎么判断出这几个bounding boxes<strong>识别的是同一个物体</strong>的呢？</p><p>这里用到NMS的技巧，我们首先判断这几个grid的类别是不是相同的，假设上面的B1，B2，B3和B4识别的都是狗狗，那么进入下一步，我们保留B1，然后判断B2，B3和B4要不要删除。</p><p>我们把B1成为<strong>极大bounding box</strong>，计算极大bounding box和其他几个bounding box的IOU，如果超过一个阈值，例如0.5，就认为这<strong>两个bounding box实际上预测的是同一个物体</strong>，就把其中<strong>confidence比较小</strong>的删除。</p><p>最后，我们结合极大bounding box和grid识别的种类，判断图片中有什么物体，它们分别是什么，它们分别在哪。</p><p><img src="https://pic1.zhimg.com/80/v2-9e17c9c77db99a335deae64157bd80b8_720w.jpg" alt="img"></p><p>我们刚才说confidence有两个功能，一个是用来极大值抑制，另一个就是在最后输出结果的时候，将某个bounding box的confidencd和这个bounding box所属的grid的类别概率相乘，然后输出。</p><p>举个例子，比如某个grid中的某个bounding box预测到了一个物体，将这个bounding box送入神经网络（其实是整张图片一起送进去的，我们这样说是为了方便），然后神经网络<strong>对bounding box</strong>说，你这里有一个物体的概率是0.8.然后神经网络又<strong>对grid</strong>说，你这个grid里物体最可能是狗，概率是0.7。</p><p>那最后这里是狗的概率就是 <img src="https://www.zhihu.com/equation?tex=0.8+%5Ctimes+0.7+%3D+0.56" alt="[公式]"> 。</p><p>我们在这里就不细讲yolo的网络结构了，相比之下我认为yolo的<strong>损失函数</strong>的设计更有创见。</p><p>yolo的损失函数是这样的：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cbegin%7Baligned%7D+loss++%26%3D++%5Clambda_%7B%5Ctext+%7Bcoord+%7D%7D+%5Csum_%7Bi%3D0%7D%5E%7BS%5E%7B2%7D%7D+%5Csum_%7Bj%3D0%7D%5E%7BB%7D+%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D%5Cleft%5B%5Cleft%28x_%7Bi%7D-%5Chat%7Bx%7D_%7Bi%7D%5Cright%29%5E%7B2%7D%2B%5Cleft%28y_%7Bi%7D-%5Chat%7By%7D_%7Bi%7D%5Cright%29%5E%7B2%7D%5Cright%5D+%5C%5C++%26%2B%5Clambda_%7B%5Ctext+%7Bcoord+%7D%7D+%5Csum_%7Bi%3D0%7D%5E%7BS%5E%7B2%7D%7D+%5Csum_%7Bj%3D0%7D%5E%7BB%7D+%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D%5Cleft%5B%28%5Csqrt%7Bw_%7Bi%7D%7D-%5Csqrt%7B%5Chat%7Bw%7D_%7Bi%7D%7D%29%5E%7B2%7D%2B%28%5Csqrt%7Bh_%7Bi%7D%7D-%5Csqrt%7B%5Chat%7Bh%7D_%7Bi%7D%7D%29%5E%7B2%7D%5Cright%5D+%5C%5C++%26%2B%5Csum_%7Bi%3D0%7D%5E%7BS%5E%7B2%7D%7D+%5Csum_%7Bj%3D0%7D%5E%7BB%7D+%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D%5Cleft%28C_%7Bi%7D-%5Chat%7BC%7D_%7Bi%7D%5Cright%29%5E%7B2%7D+%5C%5C++%26%2B%5Clambda_%7B%5Ctext+%7Bnoobj+%7D%7D+%5Csum_%7Bi%3D0%7D%5E%7BS%5E%7B2%7D%7D+%5Csum_%7Bj%3D0%7D%5E%7BB%7D+%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bnoobj+%7D%7D%5Cleft%28C_%7Bi%7D-%5Chat%7BC%7D_%7Bi%7D%5Cright%29%5E%7B2%7D+%5C%5C+++%26%2B%5Csum_%7Bi%3D0%7D%5E%7BS%5E%7B2%7D%7D+%5Cmathbb%7B1%7D_%7Bi%7D%5E%7B%5Ctext+%7Bobj+%7D%7D+%5Csum_%7Bc+%5Cin+%5Ctext+%7B+classes+%7D%7D%5Cleft%28p_%7Bi%7D%28c%29-%5Chat%7Bp%7D_%7Bi%7D%28c%29%5Cright%29%5E%7B2%7D+%5Cend%7Baligned%7D" alt="[公式]"></p><p>首先， <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D" alt="[公式]"> 代表的是这个grid里有没有物体，如果这个grid没有物体， <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D%3D0" alt="[公式]"> ，反之 <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D%3D1" alt="[公式]"> 。</p><p>与 <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bobj+%7D%7D" alt="[公式]"> 相反的是 <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bnoobj+%7D%7D" alt="[公式]"> ，如果没有物体， <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bnoobj+%7D%7D%3D1" alt="[公式]"> ，反之 <img src="https://www.zhihu.com/equation?tex=%5Cmathbb%7B1%7D_%7Bi+j%7D%5E%7B%5Ctext+%7Bnoobj+%7D%7D%3D0" alt="[公式]"> 。</p><p>说白了就是，当一个grid有物体的时候，损失函数计算第1，2，3，5项，当grid里没有物体的时候计算第4项。</p><p>损失函数一共有5项，我们一项一项的分析。</p><p>首先的是中心坐标的损失函数，用了我们最熟悉的均方误差MSE，这个很好理解。</p><p>然后是高和宽，没有简单的用MSE，而是用平方根的MSE，这是为什么呢？</p><p>第一个原因是更容易优化，但是还有更重要的原因：</p><p>看下面的表格：</p><img src="https://pic4.zhimg.com/80/v2-a0a7833719a274bfce50aed5ed977217_720w.jpg" alt="img" style="zoom:50%;" /><p>首先，我们只考虑var1和var2在0和1之间。当var1和var2都很小的时候，也即是w和h都很小，意味着这个物体很小，那么我们应该尽量放大一些损失函数，让模型在识别小物体的时候准确一点。当var1和var2都很大，意味着这个物体也很大，甚至可能已经布满整张图片了，这时我么可以减小一些损失函数，毕竟很大的物体不需要很高的精度。</p><p>一句话，使用平方根的MSE而不是MSE其实就是像让模型<strong>对小尺度的物体更敏感</strong>。或者说，对大的和小的物体同样敏感。</p><p>接下来的三项都使用了MSE，其实用交叉熵可能会更好，但是这些细节就不追究了。</p><p>其中第4项是用来判断一个bounding box中究竟有没有物体的。</p><p>接下来的问题是 <img src="https://www.zhihu.com/equation?tex=%5Clambda_%7Bcoord%7D" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=%5Clambda_%7Bnoobj%7D" alt="[公式]"> 都应该取怎样的值，为什么这样设计？</p><p>论文中给出的答案是 <img src="https://www.zhihu.com/equation?tex=%5Clambda_%7Bcoord%7D%3D5" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=%5Clambda_%7Bnoobj%7D+%3D+0.5" alt="[公式]"> ，也就是放大第一项和第二项的损失函数，缩小第四项的损失函数。</p><p>这样做的原因是让梯度更稳定，如果grid中不含有物体，它对1，2，3，5项没有影响，如果调节第四项，会让含有物体的grid的confidence发生改变，这可能使其他项的梯度剧烈变化，从而带来模型上的不稳定。</p><p>因此，我们放大第一项和第二项，缩小第四项。</p><p>YOLO的设计虽然精巧，但是还有许多不足的地方，比如一个grid只能识别出一种物体。我们会在YOLO v2和YOLO v3中看到更巧妙的设计。</p><p>此外，YOLO的bounding box的预测准确度是不如R-CNN这样的Region-based方法的，看YOLO v2里作者们怎么报复回来。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标检测介绍</title>
      <link href="/2022/09/08/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%BB%8B%E7%BB%8D/"/>
      <url>/2022/09/08/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1>目标检测（Object Detection）</h1><h2 id="一、基本概念">一、基本概念</h2><h3 id="1-什么是目标检测">1. 什么是目标检测</h3><p>目标检测（Object Detection）的任务是找出图像中所有感兴趣的目标（物体），确定它们的类别和位置，是计算机视觉领域的核心问题之一。由于各类物体有不同的外观、形状和姿态，加上成像时光照、遮挡等因素的干扰，目标检测一直是计算机视觉领域最具有挑战性的问题。</p><p>计算机视觉中关于图像识别有四大类任务：</p><p>（1）分类-Classification：解决“是什么？”的问题，即给定一张图片或一段视频判断里面包含什么类别的目标。</p><p>（2）定位-Location：解决“在哪里？”的问题，即定位出这个目标的的位置。</p><p>（3）检测-Detection：解决“在哪里？是什么？”的问题，即定位出这个目标的位置并且知道目标物是什么。</p><p>（4）分割-Segmentation：分为实例的分割（Instance-level）和场景分割（Scene-level），解决“每一个像素属于哪个目标物或场景”的问题。<br><img src="https://img-blog.csdnimg.cn/2020112019245715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" style="zoom:67%;" /></p><p>所以，目标检测是一个分类、回归问题的叠加。</p><h3 id="2-目标检测的核心问题">2. 目标检测的核心问题</h3><p>（1）分类问题：即图片（或某个区域）中的图像属于哪个类别。</p><p>（2）定位问题：目标可能出现在图像的任何位置。</p><p>（3）大小问题：目标有各种不同的大小。</p><p>（4）形状问题：目标可能有各种不同的形状。</p><h3 id="3-目标检测算法分类">3. 目标检测算法分类</h3><p>基于深度学习的目标检测算法主要分为两类：Two stage和One stage。</p><h4 id="1）Tow-Stage">1）Tow Stage</h4><p>先进行区域生成，该区域称之为region proposal（简称RP，一个有可能包含待检物体的预选框），再通过卷积神经网络进行样本分类。</p><p>任务流程：特征提取 --&gt; 生成RP --&gt; 分类/定位回归。</p><p>常见tow stage目标检测算法有：R-CNN、SPP-Net、Fast R-CNN、Faster R-CNN和R-FCN等。</p><h4 id="2）One-Stage">2）One Stage</h4><p>不用RP，直接在网络中提取特征来预测物体分类和位置。</p><p>任务流程：特征提取–&gt; 分类/定位回归。</p><p>常见的one stage目标检测算法有：OverFeat、YOLOv1、YOLOv2、YOLOv3、SSD和RetinaNet等。</p><h3 id="4-目标检测应用">4. 目标检测应用</h3><h4 id="1）人脸检测">1）人脸检测</h4><ul><li>智能门控</li><li>员工考勤签到</li><li>智慧超市</li><li>人脸支付</li><li>车站、机场实名认证</li><li>公共安全：逃犯抓捕、走失人员检测</li></ul><h4 id="2）行人检测">2）行人检测</h4><ul><li>智能辅助驾驶</li><li>智能监控</li><li>暴恐检测（根据面相识别暴恐倾向）</li><li>移动侦测、区域入侵检测、安全帽/安全带检测</li></ul><h4 id="3）车辆检测">3）车辆检测</h4><ul><li>自动驾驶</li><li>违章查询、关键通道检测</li><li>广告检测（检测广告中的车辆类型，弹出链接）</li></ul><h4 id="4）遥感检测">4）遥感检测</h4><ul><li>大地遥感，如土地使用、公路、水渠、河流监控</li><li>农作物监控</li><li>军事检测</li></ul><h2 id="二、目标检测原理">二、目标检测原理</h2><p>目标检测分为两大系列——RCNN系列和YOLO系列，RCNN系列是基于区域检测的代表性算法，YOLO是基于区域提取的代表性算法，另外还有著名的SSD是基于前两个系列的改进。</p><h3 id="1-候选区域产生">1. 候选区域产生</h3><p>很多目标检测技术都会涉及候选框（bounding boxes）的生成，物体候选框获取当前主要使用图像分割与区域生长技术。区域生长(合并)主要由于检测图像中存在的物体具有局部区域相似性(颜色、纹理等)。目标识别与图像分割技术的发展进一步推动有效提取图像中信息。</p><h4 id="1）滑动窗口">1）滑动窗口</h4><p>通过滑窗法流程图可以很清晰理解其主要思路：首先对输入图像进行不同窗口大小的滑窗进行从左往右、从上到下的滑动。每次滑动时候对当前窗口执行分类器(分类器是事先训练好的)。如果当前窗口得到较高的分类概率，则认为检测到了物体。对每个不同窗口大小的滑窗都进行检测后，会得到不同窗口检测到的物体标记，这些窗口大小会存在重复较高的部分，最后采用非极大值抑制(Non-Maximum Suppression, NMS)的方法进行筛选。最终，经过NMS筛选后获得检测到的物体。<br>滑窗法简单易于理解，但是不同窗口大小进行图像全局搜索导致效率低下，而且设计窗口大小时候还需要考虑物体的长宽比。所以，对于实时性要求较高的分类器，不推荐使用滑窗法。<br><img src="https://img-blog.csdnimg.cn/20201120192524413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" style="zoom: 67%;" /></p><h4 id="2）选择性搜索">2）选择性搜索</h4><h5 id="①-什么是选择性搜索">① 什么是选择性搜索</h5><p>滑窗法类似穷举进行图像子区域搜索，但是一般情况下图像中大部分子区域是没有物体的。学者们自然而然想到只对图像中最有可能包含物体的区域进行搜索以此来提高计算效率。选择搜索（selective search，简称SS）方法是当下最为熟知的图像bounding boxes提取算法，由Koen E.A于2011年提出。<br>选择搜索算法的主要思想：图像中物体可能存在的区域应该是有某些相似性或者连续性区域的。因此，选择搜索基于上面这一想法采用子区域合并的方法进行提取bounding boxes。首先，对输入图像进行分割算法产生许多小的子区域。其次，根据这些子区域之间相似性(相似性标准主要有颜色、纹理、大小等等)进行区域合并，不断的进行区域迭代合并。每次迭代过程中对这些合并的子区域做bounding boxes(外切矩形)，这些子区域外切矩形就是通常所说的候选框。</p><img src="https://img-blog.csdnimg.cn/20201120192552221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /><h5 id="②-选择搜索流程">② 选择搜索流程</h5><ul><li>step0：生成区域集R</li><li>step1：计算区域集R里每个相邻区域的相似度S={s1, s2,…}</li><li>step2：找出相似度最高的两个区域，将其合并为新集，添加进R</li><li>step3：从S中移除所有与step2中有关的子集</li><li>step4：计算新集与所有子集的相似度</li><li>step5：跳至step2，直至S为空</li></ul><h5 id="③-选择搜索优点">③ 选择搜索优点</h5><ul><li>计算效率优于滑窗法</li><li>由于采用子区域合并策略，所以可以包含各种大小的疑似物体框</li><li>合并区域相似的指标多样性，提高了检测物体的概率</li></ul><h3 id="2-数据表示">2. 数据表示</h3><p>经过标记后的样本数据如下所示：</p><p><img src="https://img-blog.csdnimg.cn/20201120192610625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>预测输出可以表示为:</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/88db80965ad11a13.png" alt=""></p><h3 id="3-效果评估">3. 效果评估</h3><p>使用IoU（Intersection over Union，交并比）来判断模型的好坏。所谓交并比，是指预测边框、实际边框交集和并集的比率，一般约定0.5为一个可以接收的值。</p><p><img src="https://img-blog.csdnimg.cn/20201120192628252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h3 id="4-非极大值抑制">4. 非极大值抑制</h3><p>预测结果中，可能多个预测结果间存在重叠部分，需要保留交并比最大的、去掉非最大的预测结果，这就是非极大值抑制（Non-Maximum Suppression，简写作NMS）。如下图所示，对同一个物体预测结果包含三个概率0.8/0.9/0.95，经过非极大值抑制后，仅保留概率最大的预测结果。<br><img src="https://img-blog.csdnimg.cn/20201120192646966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h2 id="三、目标检测模型">三、目标检测模型</h2><h3 id="1-R-CNN系列">1. R-CNN系列</h3><h4 id="1）R-CNN">1）R-CNN</h4><h5 id="①-定义">① 定义</h5><p>R-CNN(全称Regions with CNN features) ，是R-CNN系列的第一代算法，其实没有过多的使用“深度学习”思想，而是将“深度学习”和传统的“计算机视觉”的知识相结合。比如R-CNN pipeline中的第二步和第四步其实就属于传统的“计算机视觉”技术。使用selective search提取region proposals，使用SVM实现分类。</p><img src="https://img-blog.csdnimg.cn/20201120192703441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /><h5 id="②-流程">② 流程</h5><ul><li>预训练模型。选择一个预训练 （pre-trained）神经网络（如AlexNet、VGG）。</li><li>重新训练全连接层。使用需要检测的目标重新训练（re-train）最后全连接层（connected layer）。</li><li>提取 proposals并计算CNN 特征。利用选择性搜索（Selective Search）算法提取所有proposals（大约2000幅images），调整（resize/warp）它们成固定大小，以满足 CNN输入要求（因为全连接层的限制），然后将feature map 保存到本地磁盘。</li><li>训练SVM。利用feature map 训练SVM来对目标和背景进行分类（每个类一个二进制SVM）</li><li>边界框回归（Bounding boxes Regression）。训练将输出一些校正因子的线性回归分类器</li></ul><h5 id="③-效果">③ 效果</h5><ul><li>R-CNN在VOC 2007测试集上mAP达到58.5%，打败当时所有的目标检测算法</li></ul><h5 id="④-缺点">④ 缺点</h5><ul><li>重复计算，每个region proposal，都需要经过一个AlexNet特征提取，为所有的RoI（region of interest）提取特征大约花费47秒，占用空间。</li><li>selective search方法生成region proposal，对一帧图像，需要花费2秒。</li><li>三个模块（提取、分类、回归）是分别训练的，并且在训练时候，对于存储空间消耗较大。</li></ul><h4 id="2）Fast-R-CNN">2）Fast R-CNN</h4><h5 id="①-定义-2">① 定义</h5><p>Fast R-CNN是基于R-CNN和SPPnets进行的改进。SPPnets，其创新点在于只进行一次图像特征提取（而不是每个候选区域计算一次），然后根据算法，将候选区域特征图映射到整张图片特征图中。</p><img src="https://img-blog.csdnimg.cn/20201120192732956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /><h5 id="②-流程-2">② 流程</h5><ul><li>使用selective search生成region proposal，大约2000个左右区域候选框</li><li>(joint training)缩放图片的scale得到图片金字塔，FP得到conv5的特征金字塔</li><li>(joint training)对于每个scale的每个ROI，求取映射关系，在conv5中剪裁出对应的patch。并用一个单层的SSP layer来统一到一样的尺度（对于AlexNet是6*6）</li><li>(joint training) 继续经过两个全连接得到特征，这特征又分别共享到两个新的全连接，连接上两个优化目标。第一个优化目标是分类，使用softmax，第二个优化目标是bbox regression，使用了一个平滑的L1-loss</li><li>测试时需要加上NMS处理：利用窗口得分分别对每一类物体进行非极大值抑制提出重叠建议框，最终得到每个类别中回归修正后的得分最高的窗口</li></ul><h5 id="③-改进">③ 改进</h5><ul><li>和RCNN相比，训练时间从84小时减少为9.5小时，测试时间从47秒减少为0.32秒。在VGG16上，Fast RCNN</li><li>训练速度是RCNN的9倍，测试速度是RCNN的213倍；训练速度是SPP-net的3倍，测试速度是SPP-net的3倍<br>Fast RCNN在PASCAL VOC 2007上准确率相差无几，约在66~67%之间</li><li>加入RoI Pooling，采用一个神经网络对全图提取特征</li><li>在网络中加入了多任务函数边框回归，实现了端到端的训练</li></ul><h5 id="④-缺点-2">④ 缺点</h5><ul><li>依旧采用selective search提取region proposal（耗时2~3秒，特征提取耗时0.32秒）</li><li>无法满足实时应用，没有真正实现端到端训练测试</li><li>利用了GPU，但是region proposal方法是在CPU上实现的</li></ul><h4 id="3）Faster-RCNN">3）Faster RCNN</h4><p>经过R-CNN和Fast-RCNN的积淀，Ross B.Girshick在2016年提出了新的Faster RCNN，在结构上将特征抽取、region proposal提取， bbox regression，分类都整合到了一个网络中，使得综合性能有较大提高，在检测速度方面尤为明显。<br><img src="https://img-blog.csdnimg.cn/20201120192749192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /></p><h5 id="①-整体流程">① 整体流程</h5><ul><li>Conv Layers。作为一种CNN网络目标检测方法，Faster RCNN首先使用一组基础的卷积/激活/池化层提取图像的特征，形成一个特征图，用于后续的RPN层和全连接层。</li><li>Region Proposal Networks（RPN）。RPN网络用于生成候选区域，该层通过softmax判断锚点（anchors）属于前景还是背景，在利用bounding box regression（包围边框回归）获得精确的候选区域。</li><li>RoI Pooling。该层收集输入的特征图和候选区域，综合这些信息提取候选区特征图（proposal feature maps），送入后续全连接层判定目标的类别。</li><li>Classification。利用取候选区特征图计算所属类别，并再次使用边框回归算法获得边框最终的精确位置。</li></ul><h5 id="②-Anchors">② Anchors</h5><p>Anchors（锚点）指由一组矩阵，每个矩阵对应不同的检测尺度大小。如下矩阵：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[[ -84.  -40.  99.  55.]</span><br><span class="line"> [-176.  -88. 191. 103.]</span><br><span class="line"> [-360. -184. 375. 199.]</span><br><span class="line"> [ -56.  -56.  71.  71.]</span><br><span class="line"> [-120. -120. 135. 135.]</span><br><span class="line"> [-248. -248. 263. 263.]</span><br><span class="line"> [ -36.  -80.  51.  95.]</span><br><span class="line"> [ -80. -168.  95. 183.]</span><br><span class="line"> [-168. -344. 183. 359.]]</span><br></pre></td></tr></table></figure><p>其中每行4个值（x 1 , y 1 , x 2 , y 2 x_1, y_1, x_2, y_2），对应矩形框左上角、右下角相对于中心点的偏移量。9个矩形共有三种形状，即1:1, 1:2, 2:1，即进行多尺度检测。<br><img src="https://img-blog.csdnimg.cn/20201120192806110.png#pic_center" alt="img"></p><p>例如，一张800<em>600的原始图片，经过VGG下采样后(生成特征矩阵)16倍大小，大小变为50</em>38，每个点设置9个anchor，则总数为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceil(800 / 16) * ceil(600 / 16) * 9 = 50 * 38 * 9 = 17100</span><br></pre></td></tr></table></figure><h5 id="③-Bounding-box-regression">③ Bounding box regression</h5><p>物体识别完成后，通过一种方式对外围框进行调整，使得和目标物体更加接近。</p><h5 id="④-损失函数">④ 损失函数</h5><p>对一个图像的损失函数，是一个分类损失函数与回归损失函数的叠加：</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/2640e388ff45ed2c.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2021/08/2badf056cfad5b0d.png" alt=""></p><h5 id="⑤-改进">⑤ 改进</h5><ul><li>在VOC2007测试集测试mAP达到73.2%，目标检测速度可达5帧/秒</li><li>提出Region Proposal Network(RPN)，取代selective search，生成待检测区域，时间从2秒缩减到了10毫秒</li><li>真正实现了一个完全的End-To-End的CNN目标检测模型</li><li>共享RPN与Fast RCNN的特征</li></ul><h5 id="⑥-缺点">⑥ 缺点</h5><ul><li>还是无法达到实时检测目标</li><li>获取region proposal， 再对每个proposal分类计算量还是较大</li></ul><h3 id="2-YOLO系列">2. YOLO系列</h3><h4 id="1）YOLOv1（2016）">1）YOLOv1（2016）</h4><h5 id="①-基本思想">① 基本思想</h5><p>YOLO（You Only Look Once ）是继RCNN，fast-RCNN和faster-RCNN之后，Ross Girshick针对DL目标检测速度问题提出的另一种框架，其核心思想是生成RoI+目标检测两阶段（two-stage）算法用一套网络的一阶段（one-stage）算法替代，直接在输出层回归bounding box的位置和所属类别。</p><p>之前的物体检测方法首先需要产生大量可能包含待检测物体的先验框, 然后用分类器判断每个先验框对应的边界框里是否包含待检测物体，以及物体所属类别的概率或者置信度，同时需要后处理修正边界框，最后基于一些准则过滤掉置信度不高和重叠度较高的边界框，进而得到检测结果。这种基于先产生候选区再检测的方法虽然有相对较高的检测准确率，但运行速度较慢。</p><p>YOLO创造性的将物体检测任务直接当作回归问题（regression problem）来处理，将候选区和检测两个阶段合二为一。只需一眼就能知道每张图像中有哪些物体以及物体的位置。下图展示了各物体检测系统的流程图。</p><p><img src="https://img-blog.csdnimg.cn/20201120192837724.png#pic_center" alt="img"></p><p>实际上，YOLO并没有真正去掉候选区，而是采用了预定义候选区的方法，也就是将图片划分为7乘7个网格，每个网格允许预测出2个边框，总共49乘2个bounding box，可以理解为98个候选区域，它们很粗略地覆盖了图片的整个区域。YOLO以降低mAP为代价，大幅提升了时间效率。</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/4bdc7ae880029f3e.png" alt=""></p><p>每个网格单元预测这些框的2个边界框和置信度分数。这些置信度分数反映了该模型对框是否包含目标的可靠程度，以及它预测框的准确程度。置信度定义为：</p><p><img src="https://s3.bmp.ovh/imgs/2021/08/b5c480620f6ffbab.png" alt=""></p><h5 id="②-网络结构">② 网络结构</h5><p>YOLOv1网络有24个卷积层，后面是2个全连接层。我们只使用1 × 1 1 \times 11×1降维层，后面是3 × 3 3 \times 33×3卷积层。如下图所示：<br><img src="https://img-blog.csdnimg.cn/20201120193019288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>为了快速实现快速目标检测，YOLOV1还训练了快速版本。快速YOLO使用具有较少卷积层（9层而不是24层）的神经网络，在这些层中使用较少的滤波器。除了网络规模之外，YOLO和快速YOLO的所有训练和测试参数都是相同的。网络的最终输出是7 <em>7</em> 30(1470)的预测张量。</p><h5 id="③-训练过程与细节">③ 训练过程与细节</h5><p>（1）预训练。采用前20个卷积层、平均池化层、全连接层进行了大约一周的预训练；</p><p>（2）输入。输入数据为224<em>224和448</em>448大小的图像；</p><p>（3）采用相对坐标。通过图像宽度和高度来规范边界框的宽度和高度，使它们落在0和1之间；边界框x xx和y yy坐标参数化为特定网格单元位置的偏移量，边界也在0和1之间；</p><p>（4）损失函数<br><img src="https://img-blog.csdnimg.cn/2020112019303663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p><img src="https://s3.bmp.ovh/imgs/2021/08/79afbbff8e1fa170.png" alt=""></p><p>（5）学习率。第一个迭代周期，慢慢地将学习率从1 0 − 3 10^{-3}10 −3 提高到1 0 − 2 10^{-2}10 −2 ；然后继续以1 0 − 2 10^{-2}10 −2 的学习率训练75个迭代周期，用1 0 − 3 10^{-3}10 −3 的学习率训练30个迭代周期，最后用1 0 − 4 10^{-4}10 −4 的学习率训练30个迭代周期。</p><p>（6）避免过拟合策略。使用dropout和数据增强来避免过拟合。</p><h5 id="④-优点与缺点">④ 优点与缺点</h5><p>（1）优点</p><ul><li>YOLO检测物体速度非常快，其增强版GPU中能跑45fps（frame per second），简化版155fps</li><li>YOLO在训练和测试时都能看到一整张图的信息（而不像其它算法看到局部图片信息），因此YOLO在检测物体是能很好利用上下文信息，从而不容易在背景上预测出错误的物体信息</li><li>YOLO可以学到物体泛化特征</li></ul><p>（2）缺点</p><ul><li>精度低于其它state-of-the-art的物体检测系统</li><li>容易产生定位错误</li><li>对小物体检测效果不好，尤其是密集的小物体，因为一个栅格只能检测2个物体</li><li>由于损失函数的问题，定位误差是影响检测效果的主要原因，尤其是大小物体处理上还有待加强</li></ul><h4 id="2）YOLOv2（2016）">2）YOLOv2（2016）</h4><p>Ross Girshick吸收fast-RCNN和SSD算法，设计了YOLOv2（论文原名《YOLO9000: Better, Faster, Stronger 》），在精度上利用一些列训练技巧，在速度上应用了新的网络模型DarkNet19，在分类任务上采用联合训练方法，结合wordtree等方法，使YOLOv2的检测种类扩充到了上千种，作者在论文中称可以检测超过9000个目标类别，所以也称YOLO9000. YOLOv2模型可以以不同的尺寸运行，从而在速度和准确性之间提供了一个简单的折衷，在67FPS时，YOLOv2在VOC 2007上获得了76.8 mAP。在40FPS时，YOLOv2获得了78.6 mAP，比使用ResNet的Faster R-CNN和SSD等先进方法表现更出色，同时仍然运行速度显著更快。</p><h5 id="①-改进策略">① 改进策略</h5><p>YOLOv2对YOLOv1采取了很多改进措施，以提高模型mAP，如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20201120193054397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>**（1）Batch Normalization（批量正则化）。**YOLOv2中在每个卷积层后加Batch Normalization(BN)层，去掉dropout. BN层可以起到一定的正则化效果，能提升模型收敛速度，防止模型过拟合。YOLOv2通过使用BN层使得mAP提高了2%。</p><p>**（2）High Resolution Classifier（高分辨率分类器）。**原来的YOLO网络在预训练的时候采用的是224<em>224的输入（这是因为一般预训练的分类模型都是在ImageNet数据集上进行的），然后在detection的时候采用448</em>448的输入，这会导致从分类模型切换到检测模型的时候，模型还要适应图像分辨率的改变。而YOLOv2则将预训练分成两步：先用224<em>224的输入从头开始训练网络，大概160个epoch（表示将所有训练数据循环跑160次），然后再将输入调整到448</em>448，再训练10个epoch。注意这两步都是在ImageNet数据集上操作。最后再在检测的数据集上fine-tuning，也就是detection的时候用448<em>448的图像作为输入就可以顺利过渡了。作者的实验表明这样可以提高几乎4%的mAP。</em></p><p><strong>（3）Convolutional With Anchor Boxes（带Anchor Boxes的卷积）。</strong> YOLOv1利用全连接层直接对边界框进行预测，导致丢失较多空间信息，定位不准。YOLOv2去掉了YOLOv1中的全连接层，使用Anchor Boxes预测边界框，同时为了得到更高分辨率的特征图，YOLOv2还去掉了一个池化层。由于图片中的物体都倾向于出现在图片的中心位置，若特征图恰好有一个中心位置，利用这个中心位置预测中心点落入该位置的物体，对这些物体的检测会更容易。所以总希望得到的特征图的宽高都为奇数。YOLOv2通过缩减网络，使用416<em>416的输入，模型下采样的总步长为32，最后得到13</em>13的特征图，然后对13<em>13的特征图的每个cell预测5个anchor boxes，对每个anchor box预测边界框的位置信息、置信度和一套分类概率值。使用anchor boxes之后，YOLOv2可以预测13</em>13*5=845个边界框，模型的召回率由原来的81%提升到88%，mAP由原来的69.5%降低到69.2%.召回率提升了7%，准确率下降了0.3%。</p><p><strong>（4）Dimension Clusters（维度聚类）</strong>。在Faster R-CNN和SSD中，先验框都是手动设定的，带有一定的主观性。YOLOv2采用k-means聚类算法对训练集中的边界框做了聚类分析，选用boxes之间的IOU值作为聚类指标。综合考虑模型复杂度和召回率，最终选择5个聚类中心，得到5个先验框，发现其中中扁长的框较少，而瘦高的框更多，更符合行人特征。通过对比实验，发现用聚类分析得到的先验框比手动选择的先验框有更高的平均IOU值，这使得模型更容易训练学习。<br><img src="https://img-blog.csdnimg.cn/20201120193112629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>VOC和COCO的聚类边界框尺寸。我们对边界框的维度进行k-means聚类，以获得我们模型的良好先验。左图显示了我们通过对k的各种选择得到的平均IOU。我们发现k=5给出了一个很好的召回率与模型复杂度的权衡。右图显示了VOC和COCO的相对中心。这两种先验都赞成更薄更高的边界框，而COCO比VOC在尺寸上有更大的变化。<br><strong>（5）New Network（新的网络）</strong>。 YOLOv2采用Darknet-19，其网络结构如下图所示，包括19个卷积层和5个max pooling层，主要采用3<em>3卷积和1</em>1卷积，这里1*1卷积可以压缩特征图通道数以降低模型计算量和参数，每个卷积层后使用BN层以加快模型收敛同时防止过拟合。最终采用global avg pool 做预测。采用YOLOv2，模型的mAP值没有显著提升，但计算量减少了。<br><img src="https://img-blog.csdnimg.cn/202011201932079.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p><strong>（6）直接定位预测（Direct location Prediction）</strong>。 Faster R-CNN使用anchor boxes预测边界框相对先验框的偏移量，由于没有对偏移量进行约束，每个位置预测的边界框可以落在图片任何位置，会导致模型不稳定，加长训练时间。YOLOv2沿用YOLOv1的方法，根据所在网格单元的位置来预测坐标,则Ground Truth的值介于0到1之间。网络中将得到的网络预测结果再输入sigmoid函数中，让输出结果介于0到1之间。设一个网格相对于图片左上角的偏移量是Cx,Cy。先验框的宽度和高度分别是Pw和Ph，<br>，则预测的边界框相对于特征图的中心坐标 (b_x，b_y)和宽高bw,bh的计算公式如下图所示。</p><img src="https://img-blog.csdnimg.cn/20201120193221389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /><p>其中，σ为sigmoid函数；tx，ty是<strong>预测</strong>的坐标偏移值（中心点坐标）；tw，th是尺度缩放，分别经过sigmoid，输出0-1之间的偏移量，与cx，cy相加后得到bounding box中心点的位置。</p><p><strong>（7）细粒度特征（Fine-Grained Features）</strong>。 YOLOv2借鉴SSD使用多尺度的特征图做检测，提出pass through层将高分辨率的特征图与低分辨率的特征图联系在一起，从而实现多尺度检测。YOLOv2提取Darknet-19最后一个max pool层的输入，得到26<em>26</em>512的特征图。经过1<em>1</em>64的卷积以降低特征图的维度，得到26<em>26</em>64的特征图，然后经过pass through层的处理变成13<em>13</em>256的特征图（抽取原特征图每个2<em>2的局部区域组成新的channel，即原特征图大小降低4倍，channel增加4倍），再与13</em>13<em>1024大小的特征图连接，变成13</em>13*1280的特征图，最后在这些特征图上做预测。使用Fine-Grained Features，YOLOv2的性能提升了1%。<br><strong>（8）多尺度训练（Multi-Scale Training）</strong>。 YOLOv2中使用的Darknet-19网络结构中只有卷积层和池化层，所以其对输入图片的大小没有限制。YOLOv2采用多尺度输入的方式训练，在训练过程中每隔10个batches,重新随机选择输入图片的尺寸，由于Darknet-19下采样总步长为32，输入图片的尺寸一般选择32的倍数{320,352,…,608}（最小的选项是320×320，最大的是608×608。我们调整网络的尺寸并继续训练）。采用Multi-Scale Training, 可以适应不同大小的图片输入，当采用低分辨率的图片输入时，mAP值略有下降，但速度更快，当采用高分辨率的图片输入时，能得到较高mAP值，但速度有所下降。</p><p><img src="https://img-blog.csdnimg.cn/20201120193236251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>YOLOv2比先前的检测方法更快，更准确。它也可以以不同的分辨率运行，以便在速度和准确性之间进行简单折衷</p><h5 id="②-训练过程">② 训练过程</h5><ul><li>第一阶段：现在ImageNet分类数据集上训练Darknet-19,此时模型输入为224**224，共训练160轮*</li><li>第二阶段：将网络输入调整为448*448，继续在ImageNet分类数据集上训练细调模型，共10轮，此时分类模型top-1准确率为76.5%，而top-5准确度为93.3%</li><li>第三阶段：修改Darknet-19分类模型为检测模型，并在检测数据集上继续细调网络</li></ul><h5 id="③-优点与缺点">③ 优点与缺点</h5><p>（1）优点</p><ul><li>YOLOv2使用了一个新的分类器作为特征提取部分，较多使用了3<em>3卷积核，在每次池化后操作后把通道数翻倍。网络使用了全局平均池化，把1</em>1卷积核置于3*3卷积核之间，用来压缩特征。也用了batch normalization稳定模型训练</li><li>最终得出的基础模型就是Darknet-19，包含19个卷积层，5个最大池化层，运算次数55.8亿次，top-1图片分类准确率72.9%，top-5准确率91.2%</li><li>YOLOv2比VGG16更快，精度略低于VGG16</li></ul><p>（2）缺点</p><ul><li>YOLOv2检测准确率不够，比SSD稍差</li><li>不擅长检测小物体</li><li>对近距离物体准确率较低</li></ul><h4 id="3）YOLOv3（2018）">3）YOLOv3（2018）</h4><p>YOLOv3总结了自己在YOLOv2的基础上做的一些尝试性改进，有的尝试取得了成功，而有的尝试并没有提升模型性能。其中有两个值得一提的亮点，一个是使用残差模型，进一步加深了网络结构；另一个是使用FPN架构实现多尺度检测。</p><h5 id="①-改进">① 改进</h5><ul><li>新网络结构：DarkNet-53；</li><li>用逻辑回归替代softmax作为分类器；</li><li>融合FPN（特征金字塔网络），实现多尺度检测。</li></ul><h5 id="②-多尺度预测">② 多尺度预测</h5><p>YOLOv3在基本特征提取器上添加几个卷积层，其中最后一个卷积层预测了一个三维张量——边界框，目标和类别预测。 在COCO实验中，为每个尺度预测3个框，所以对于4个边界框偏移量，1个目标预测和80个类别预测，张量的大小为N×N×[3 *（4 + 1 + 80）]。接下来，从前面的2个层中取得特征图，并将其上采样2倍。</p><p>YOLOv3还从网络中的较前的层中获取特征图，并使用按元素相加的方式将其与上采样特征图进行合并。这种方法使得能够从上采样的特征图中获得更有意义的语义信息，同时可以从更前的层中获取更细粒度的信息。然后，再添加几个卷积层来处理这个组合的特征图，并最终预测出一个类似的张量，虽然其尺寸是之前的两倍。</p><p>最后，再次使用相同的设计来预测最终尺寸的边界框。因此，第三个尺寸的预测将既能从所有先前的计算，又能从网络前面的层中的细粒度的特征中获益。</p><h5 id="③-网络结构">③ 网络结构</h5><p>YOLOv3在之前Darknet-19的基础上引入了残差块，并进一步加深了网络，改进后的网络有53个卷积层，取名为Darknet-53，网络结构如下图所示（以256*256的输入为例）：</p><p><img src="https://img-blog.csdnimg.cn/20201120193258860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>从YOLOv1到YOLOv2再到YOLO9000、YOLOv3, YOLO经历三代变革，在保持速度优势的同时，不断改进网络结构，同时汲取其它优秀的目标检测算法的各种trick，先后引入anchor box机制、引入FPN实现多尺度检测等。</p><p><img src="https://img-blog.csdnimg.cn/2020112019331279.png#pic_center" alt="img"></p><p>不同backbone的各种网络在准确度，billions of operations，billion floating point operations per second和FPS上的比较<br>每个网络都使用相同的设置进行训练，并在256×256的图像上进行单精度测试。 运行时间是在Titan X上用256×256图像进行测量的。因此，Darknet-53可与最先进的分类器相媲美，但浮点运算更少，速度更快。 Darknet-53比ResNet-101更好，且速度快1.5倍。 Darknet-53与ResNet-152具有相似的性能，但速度快2倍。</p><p>Darknet-53也实现了最高的每秒浮点运算测量。 这意味着网络结构可以更好地利用GPU，使它的评测更加高效，更快。 这主要是因为ResNet的层数太多，效率不高。</p><h5 id="④-效果">④ 效果</h5><p>（1）兼顾速度与准确率。在COCO数据机上，mAP指标与SSD模型相当，但速度提高了3倍；mAP指标比RetinaNet模型差些，但速度要高3.8倍。</p><p><img src="https://img-blog.csdnimg.cn/20201120193326411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20201120193333780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>当然，YOLOv3也有些失败的尝试，并未起到有效作用，请自行查阅原始论文。</p><h2 id="三、视频关键帧处理">三、视频关键帧处理</h2><p>例如，需要从一台晚会中抹去某个违法明星的视频，如果视频每秒25帧，采用逐帧扫描，每处理一帧需要2秒，则需要的处理时间为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间 = 4 * 3600 * 25 * 2</span><br></pre></td></tr></table></figure><p>共需要200个小时才能处理完成。所以就需要借助关键帧来提高处理速度，降低目标检测复杂度。</p><h3 id="1-什么是关键帧">1. 什么是关键帧</h3><p>关键帧（I-Frame）：</p><ul><li>关键帧是包含该段视频中主要信息的帧</li><li>关键帧在压缩成AVI, MP4, MOV等格式时，该帧会完全保留</li><li>视频解码时只需要本帧数据，不需要从前一帧、后一帧获取数据</li></ul><p>前向差别帧（P-Frame）</p><ul><li>当前帧与前一个I-Frame或前一个P-Frame之间的差别，可以理解为与前一帧的数据偏移值</li><li>P-Frame没有完整数据画面，只有与前一帧的差别信息，解码时需要从前一帧获取数据</li></ul><p>双向差别帧（B-Frame）</p><ul><li>记录本帧与前一帧、后一帧的差别</li><li>解码时需要获取前一帧、后一帧的数据</li><li>压缩后的视频体积小，但编解码计算较慢</li></ul><h3 id="2-如何提取关键帧">2. 如何提取关键帧</h3><p>可以使用FFMPEG工具提取视频中的关键帧。</p><p><img src="https://img-blog.csdnimg.cn/20201120193423149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>也可以使用FFMPEG工具进行视频截取。</p><p><img src="https://img-blog.csdnimg.cn/20201120193436718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3llZ2VsaQ==,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h2 id="四、目标检测数据集">四、目标检测数据集</h2><h3 id="1-PASCAL-VOC">1. PASCAL VOC</h3><p>VOC数据集是目标检测经常用的一个数据集，自2005年起每年举办一次比赛，最开始只有4类，到2007年扩充为20个类，共有两个常用的版本：2007和2012。学术界常用5k的train/val 2007和16k的train/val 2012作为训练集，test 2007作为测试集，用10k的train/val 2007+test 2007和16k的train/val 2012作为训练集，test2012作为测试集，分别汇报结果。</p><h3 id="2-MS-COCO">2. MS COCO</h3><p>COCO数据集是微软团队发布的一个可以用来图像recognition+segmentation+captioning 数据集，该数据集收集了大量包含常见物体的日常场景图片，并提供像素级的实例标注以更精确地评估检测和分割算法的效果，致力于推动场景理解的研究进展。依托这一数据集，每年举办一次比赛，现已涵盖检测、分割、关键点识别、注释等机器视觉的中心任务，是继ImageNet Challenge以来最有影响力的学术竞赛之一。</p><p>相比ImageNet，COCO更加偏好目标与其场景共同出现的图片，即non-iconic images。这样的图片能够反映视觉上的语义，更符合图像理解的任务要求。而相对的iconic images则更适合浅语义的图像分类等任务。</p><p>COCO的检测任务共含有80个类，在2014年发布的数据规模分train/val/test分别为80k/40k/40k，学术界较为通用的划分是使用train和35k的val子集作为训练集（trainval35k），使用剩余的val作为测试集（minival），同时向官方的evaluation server提交结果（test-dev）。除此之外，COCO官方也保留一部分test数据作为比赛的评测集。</p><h3 id="3-Google-Open-Image">3. Google Open Image</h3><p>Open Image是谷歌团队发布的数据集。最新发布的Open Images V4包含190万图像、600个种类，1540万个bounding-box标注，是当前最大的带物体位置标注信息的数据集。这些边界框大部分都是由专业注释人员手动绘制的，确保了它们的准确性和一致性。另外，这些图像是非常多样化的，并且通常包含有多个对象的复杂场景（平均每个图像 8 个）。</p><h3 id="4-ImageNet">4. ImageNet</h3><p>ImageNet是一个计算机视觉系统识别项目， 是目前世界上图像识别最大的数据库。ImageNet是美国斯坦福的计算机科学家，模拟人类的识别系统建立的。能够从图片识别物体。ImageNet数据集文档详细，有专门的团队维护，使用非常方便，在计算机视觉领域研究论文中应用非常广，几乎成为了目前深度学习图像领域算法性能检验的“标准”数据集。ImageNet数据集有1400多万幅图片，涵盖2万多个类别；其中有超过百万的图片有明确的类别标注和图像中物体位置的标注。</p><h2 id="五、常用图像标注工具">五、常用图像标注工具</h2><h3 id="1-LabelImg">1. LabelImg</h3><p>1）LabelImg 是一款开源的图像标注工具，标签可用于分类和目标检测，它是用 Python 编写的，并使用Qt作为其图形界面，简单好用。注释以 PASCAL VOC 格式保存为 XML 文件，这是 ImageNet 使用的格式。 此外，它还支持 COCO 数据集格式。</p><p>2）安装方法：</p><p>前置条件：安装Python3以上版本，安装pyqt5<br>第一步：下载安装包<br>第二步：使用Pycharm打开项目，运行labelImg.py文件；或直接运行labelImg.py文件</p><p>3）常见错误处理：</p><p>① 报错：ModuleNotFoundError: No module named ‘libs.resources’</p><ul><li>处理方式：<ul><li>将python下scripts添加到环境变量path中</li><li>在labelImg目录下执行命令：pyrcc5 -o <a href="http://resources.py">resources.py</a> resources.qrc</li><li>将生成的resources.py拷贝到labelImg/libs/下</li><li>执行labelImg.py程序</li></ul></li></ul><h3 id="2-Labelme">2. Labelme</h3><p>labelme 是一款开源的图像/视频标注工具，标签可用于目标检测、分割和分类。灵感是来自于 MIT 开源的一款标注工具 Labelme。Labelme具有的特点是：</p><ul><li>支持图像的标注的组件有：矩形框，多边形，圆，线，点（rectangle, polygons, circle, lines, points）</li><li>支持视频标注</li><li>GUI 自定义</li><li>支持导出 VOC 格式用于 semantic/instance segmentation</li><li>支出导出 COCO 格式用于 instance segmentation</li></ul><h3 id="3-Labelbox">3. Labelbox</h3><p>Labelbox 是一家为机器学习应用程序创建、管理和维护数据集的服务提供商，其中包含一款部分免费的数据标签工具，包含图像分类和分割，文本，音频和视频注释的接口，其中图像视频标注具有的功能如下：</p><ul><li>可用于标注的组件有：矩形框，多边形，线，点，画笔，超像素等（bounding box, polygons, lines, points，brush, subpixels）</li><li>标签可用于分类，分割，目标检测等</li><li>以 JSON / CSV / WKT / COCO / Pascal VOC 等格式导出数据</li><li>支持 Tiled Imagery (Maps)</li><li>支持视频标注 （快要更新）</li></ul><h3 id="4-RectLabel">4. RectLabel</h3><p>RectLabel 是一款在线免费图像标注工具，标签可用于目标检测、分割和分类。具有的功能或特点：</p><ul><li>可用的组件：矩形框，多边形，三次贝塞尔曲线，直线和点，画笔，超像素</li><li>可只标记整张图像而不绘制</li><li>可使用画笔和超像素</li><li>导出为YOLO，KITTI，COCO JSON和CSV格式</li><li>以PASCAL VOC XML格式读写</li><li>使用Core ML模型自动标记图像</li><li>将视频转换为图像帧</li></ul><h3 id="5-CVAT">5. CVAT</h3><p>CVAT 是一款开源的基于网络的交互式视频/图像标注工具，是对加州视频标注工具（Video Annotation Tool） 项目的重新设计和实现。OpenCV团队正在使用该工具来标注不同属性的数百万个对象，许多 UI 和 UX 的决策都基于专业数据标注团队的反馈。具有的功能</p><ul><li>关键帧之间的边界框插值</li><li>自动标注（使用TensorFlow OD API 和 Intel OpenVINO IR格式的深度学习模型</li></ul><h3 id="6-VIA">6. VIA</h3><p>VGG Image Annotator（VIA）是一款简单独立的手动注释软件，适用于图像，音频和视频。 VIA 在 Web 浏览器中运行，不需要任何安装或设置。 页面可在大多数现代Web浏览器中作为离线应用程序运行。</p><ul><li>支持标注的区域组件有：矩形，圆形，椭圆形，多边形，点和折线</li></ul><h2 id="附录：术语表">附录：术语表</h2><table><thead><tr><th>英文全写</th><th>英文简写</th><th>中文名称</th></tr></thead><tbody><tr><td>one stage</td><td></td><td>一阶段检测</td></tr><tr><td>two stage</td><td></td><td>两阶段检测</td></tr><tr><td>region proposal</td><td>RP</td><td>候选区域（一个有可能包含待检物体的预选框）</td></tr><tr><td>bounding boxes</td><td>bb</td><td>候选框</td></tr><tr><td>Non-Maximum Suppression</td><td>NMS</td><td>非极大值抑制</td></tr><tr><td>selective search</td><td>SS</td><td>选择搜索</td></tr><tr><td>Regions with CNN features</td><td>R-CNN</td><td></td></tr><tr><td>region of interest</td><td>RoI</td><td>感兴趣区域（候选区域）</td></tr><tr><td>You Only Look Once</td><td>YOLO</td><td></td></tr><tr><td>frame per second</td><td>fps</td><td>帧每秒</td></tr><tr><td>High Resolution Classifier</td><td></td><td>高分辨率分类器</td></tr><tr><td>Batch Normalization</td><td>BN</td><td>批量正则化</td></tr><tr><td>Mean Average Precision</td><td>mAP</td><td>平均精度均值</td></tr><tr><td>Intersection over Union</td><td>IOU</td><td>交并比（“预测的边框” 和 “真实的边框” 的交集和并集的比值）</td></tr><tr><td>Fine-Grained Features</td><td></td><td>细粒度特征</td></tr><tr><td>Feature Pyramid Network</td><td>FPN</td><td>特征金字塔网络</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CNN的进化</title>
      <link href="/2022/09/08/CNN%E7%9A%84%E8%BF%9B%E5%8C%96/"/>
      <url>/2022/09/08/CNN%E7%9A%84%E8%BF%9B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1>10.31报告</h1><p>参考自：<a href="https://blog.csdn.net/wjinjie/article/details/105930512">R-CNN系列算法精讲：R-CNN —》Fast R-CNN —》Faster R-CNN 进阶之路</a></p><p>​<a href="https://blog.csdn.net/weixin_37763870/article/details/103098532?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163555705116780366567006%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163555705116780366567006&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-103098532.first_rank_v2_pc_rank_v29&amp;utm_term=CNN&amp;spm=1018.2226.3001.4187">深度学习——CNN(卷积神经网络)</a></p><p>​<a href="https://www.zhihu.com/question/66954030/answer/715416325">如何理解<em>CNN</em>中的<em>感受野</em>（receptive-field）？</a></p><p>​</p><h2 id="一、进击的网络-CNN-DNN">一、进击的网络(CNN/DNN)</h2><h3 id="1-1-DNN与CNN区别（卷积神经网络）">1.1 DNN与CNN区别（卷积神经网络）</h3><img src="https://img-blog.csdnimg.cn/20191116145026770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzc2Mzg3MA==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:67%;" /><p><em>上图为DNN深度神经网络图</em></p><p>DNN（(Deep Neural Networks，<em>DNN</em>）内部的神经网络层可以分为三类，<strong>输入层，隐藏层和输出层</strong>，一般来说第一层是输出层，最后一层是输出层，而中间的层数都是隐藏层。</p><img src="https://img-blog.csdnimg.cn/2019111615080290.png" alt="img" style="zoom:67%;" /><p><em>上图为CNN神经网络</em></p><p>卷积神经网络（convolutional neural network, CNN），是一种专门用来处理<strong>具有类似网格结构的数据的神经网络</strong>。<strong>卷积网络</strong>是指那些至少在网络的一层中使用卷积运算来替代一般的矩阵乘法运算的神经网络。</p><p><strong>总结：</strong></p><p>（1）DNN是一种最简单的神经网络。各个神经元分别属于不同的层，每个神经元和前一层的所有神经元相连接，信号从输入层向输出层单向传播。</p><p>（2）CNN是一种通过<strong>卷积计算</strong>的前馈神经网络，其是受生物学上的感受野机制提出的，具有平移不变性，使用卷积核，最大的应用了局部信息，保留了平面结构信息。</p><p>（3）DNN以<strong>向量形式</strong>输入，未考虑平面的结构信息，而在图像领域和自然语言处理领域，平面信息很重要，因此CNN比DNN处理结果更好。由于DNN、CNN的输入、输出长度固定，而自然语言处理中的语句长度通常不固定，所以DNN、CNN处理这种问题效率较低，且无法处理时序相关的序列问题.为了解决这些问题，出现了循环神经网络RNN。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CNN给我的感觉就像滚雪球，不过这个雪球是反着滚的，把一个大的雪人（图片）通过均匀在道路（神经网络）上滚。</span><br><span class="line">越滚越越远（网络越来越深）。最后滚成一个类别之类的东西也。</span><br></pre></td></tr></table></figure><img src="http://a1.qpic.cn/psc?/V12XQ1QV3cpyPD/05RlWl8gsTOH*Z17MtCBzCd93QTLQdc5OrCRkV5gdbcxL4CXWlM00VUAU7lP9vw8zTe6gw.5kn7uoZtXqssJMA!!/b&ek=1&kp=1&pt=0&bo=SQJSAUkCUgEDACU!&tl=1&vuin=1005741898&tm=1636009200&sce=50-1-1&rf=4-0" style="zoom:67%;" /><h3 id="1-2-CNN的五种结构组成">1.2 CNN的五种结构组成</h3><h4 id="1-2-1-输入层">1.2.1 输入层</h4><p>​在处理图像的CNN中，输入层一般代表了<strong>一张图片的像素矩阵</strong>。可以用<strong>三维矩阵代表一张图片</strong>。三维矩阵的长和宽代表了图像的大小，而三维矩阵的深度代表了图像的色彩通道。比如<strong>黑白图片的深度为1，而在RGB色彩模式下，图像的深度为3。</strong>  类似这样一张64×64的jpg文件，本质上是3×64×64，三维矩阵。</p><h4 id="1-2-2-卷积层-Convolution-Layer">1.2.2 卷积层(Convolution Layer)</h4><p>​**卷积层是CNN最重要的部分。**它与传统全连接层不同，卷积层中每一个节点的输入只是上一层神经网络的一小块。卷积层被称为过滤器(filter)或者内核(kernel)，Tensorflow的官方文档中称这个部分为过滤器(filter)。<br>【注意】在一个卷积层中，过滤器(filter)所处理的节点矩阵的长和宽都是由人工指定的，这个节点矩阵的尺寸也被称为过滤器尺寸。常用的尺寸有3x3或5x5，而过滤层处理的矩阵深度和当前处理的神经层网络节点矩阵的深度一致。</p><p><em>下图为卷积层过滤器(filter)结构示意图</em></p><img src="https://img-blog.csdnimg.cn/20191116153724532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzc2Mzg3MA==,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 33%;" /><p><em>下图为卷积过程</em></p><img src="https://img-blog.csdnimg.cn/20191116154816709.gif" alt="img" style="zoom:50%;" /><p><em>详细过程如下,Input矩阵是像素点矩阵，Kernel矩阵是过滤器(filter)</em></p><img src="https://img-blog.csdnimg.cn/2019111615502886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzc2Mzg3MA==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><h4 id="1-2-3-池化层-Pooling-Layer">1.2.3 池化层(Pooling Layer)</h4><p>​池化层不会改变三维矩阵的深度，但是它<strong>可以缩小矩阵的大小</strong>。通过池化层，可以进一步缩小最后全连接层中节点的个数，从而达到减少整个神经网络参数的目的。使用池化层既可以加快计算速度也可以防止过拟合。池化层filter的计算不是节点的加权和，而是<strong>采用最大值或者平均值计算</strong>。使用最大值操作的池化层被称之为最大池化层（max pooling）（最大池化层是使用的最多的磁化层结构）。使用平均值操作的池化层被称之为平均池化层（mean pooling）。</p><p>下图分别表示不重叠的4个2x2区域的最大池化层（max pooling）、平均池化层（mean pooling）。</p><img src="https://img-blog.csdnimg.cn/20191116160351379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzc2Mzg3MA==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><img src="https://img-blog.csdnimg.cn/20191116160420689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzc2Mzg3MA==,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 50%;" /><h4 id="1-2-4-全连接层-（fully-connected-layers，FC">1.2.4 全连接层**（fully connected layers，FC)**</h4><p>​在经过多轮卷积层和池化层的处理之后，在CNN的最后一般会由1到2个全连接层来给出最后的分类结果。经过几轮卷积层和池化层的处理之后，可以认为图像中的信息已经被抽象成了<strong>信息含量更高</strong>的特征。我们可以将卷积层和池化层看成自动图像特征提取的过程。在提取完成之后，仍然需要使用全连接层来完成分类任务。</p><p>​全连接层（fully connected layers，FC）在整个卷积神经网络中起到“<strong>分类器</strong>”的作用。如果说卷积层、池化层和激活函数层等操作是将原始数据映射到隐层特征空间的话，全连接层则起到将学到的“分布式特征表示”映射到样本标记空间的作用。在实际使用中，全连接层可由卷积操作实现：对前层是全连接的全连接层可以转化为卷积核为1x1的卷积；而前层是卷积层的全连接层可以转化为卷积核为hxw的全局卷积，h和w分别为前层卷积结果的高和宽。</p><p>​<strong>全连接层的作用主要就是实现分类（Classification）</strong>。</p><p>​全连接的核心操作就是<strong>矩阵向量乘积</strong>。</p><p><img src="https://img-blog.csdnimg.cn/20191114142650540.png" alt="img"></p><p>​本质就是由一个特征空间线性变换到另一个特征空间。目标空间的任一维——也就是隐层的一个 cell——都认为会受到源空间的每一维的影响。不考虑严谨，可以说，目标向量是源向量的加权和。</p><p>​在 CNN 中，全连接常出现在最后几层，用于对前面设计的特征做加权和。比如 mnist，前面的卷积和池化相当于做特征工程，后面的全连接相当于做特征加权。（卷积相当于全连接的有意弱化，按照局部视野的启发，把局部之外的弱影响直接抹为零影响；还做了一点强制，不同的局部所使用的参数居然一致。弱化使参数变少，节省计算量，又专攻局部不贪多求全；强制进一步减少参数。少即是多） 在 RNN 中，全连接用来把 embedding 空间拉到隐层空间，把隐层空间转回 label 空间等。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">理解1：</span><br><span class="line">   卷积取的是局部特征，全连接就是把以前的局部特征重新通过权值矩阵组装成完整的图。</span><br><span class="line">因为用到了所有的局部特征，所以叫全连接。</span><br><span class="line">理解2：</span><br><span class="line">   从卷积网络谈起，卷积网络在形式上有一点点像咱们正在召开的“人民代表大会制度”。卷积核的个数相当于候选人，图像中不同的特征会激活不同的“候选人”（卷积核）。</span><br><span class="line">池化层（仅指最大池化）起着类似于“合票”的作用，不同特征在对不同的“候选人”有着各自的喜好。</span><br><span class="line">   全连接相当于是“代表普选”。所有被各个区域选出的代表，对最终结果进行“投票”，全连接保证了receiptive field 是整个图像，既图像中各个部分（所谓所有代表），都有对最终结果影响的权利。</span><br><span class="line">理解3：</span><br><span class="line">   假设你是一只小蚂蚁，你的任务是找小面包。你的视野还比较窄，只能看到很小一片区域。当你找到一片小面包之后，你不知道你找到的是不是全部的小面包，所以你们全部的蚂蚁开了个会，把所有的小面包都拿出来分享了。全连接层就是这个蚂蚁大会~</span><br></pre></td></tr></table></figure><h4 id="1-2-5-Softmax层-归一化指数函数">1.2.5 Softmax层(<strong>归一化指数函数</strong>)</h4><p>​通过Softmax层，可以得到当前样例属于不同种类的概率分布问题。</p><p>​它是二分类函数sigmoid在多分类上的推广，目的是将多分类的结果以概率的形式展现出来。下图展示了softmax的计算方法：</p><img src="https://img-blog.csdnimg.cn/20181128162309759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6X3BldGVy,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><p>​二分类就用sigmoid转化到 0~1 。</p><h4 id="1-2-5-感受野（receptive-field，RF）">1.2.5 感受野（receptive field，RF）</h4><img src="https://s3.bmp.ovh/imgs/2021/11/ceb3b327dc1dc066.png" style="zoom: 33%;" /><p>感受野指的是一个特定的CNN特征（特征图上的某个点）在输入空间所受影响的区域。一个感受野可以用<strong>中心位置</strong>(center location)和<strong>大小</strong>(size)来表征。然而，对于一个CNN特征来说，感受野中的每个像素值（pixel）并不是同等重要。一个像素点越接近感受野中心，它对输出特征的计算所起作用越大。这意味着某一个特征不仅仅是受限在输入图片中某个特定的区域（感受野），并且呈指数级聚焦在区域的中心。这个重要的发现会在下一篇文章中讲。现在，我们关注如何计算一个特定感受野的中心位置和大小。</p><p>在CNN中，感受野应该是一个很重要的东西，但是往往被大家忽略，在我看到的文献中，图像分割模型<a href="https://link.zhihu.com/?target=http%3A//liangchiehchen.com/projects/DeepLab.html">DeepLab</a>就提到了感受野大小的问题，但是那里并没有给出计算公式，如果采用上面的公式就可以快速得到结果。对于图像分割，感受野大小对分割效果是有很大影响的，所以DeepLab采用了扩展卷积（Atrous Convolution， Dilated Convolution）来增加感受野大小。对于空洞卷积来说，你可以将其转化为普通卷积（卷积核大小增加）来计算特征图的感受野。另外，上面的公式同样适用于池化层，因为其在结构上与卷积层是类似的。</p><p>图1为给出了某些感受野实例。其中输入特征图大小为 <img src="https://www.zhihu.com/equation?tex=5%5Ctimes5" alt="[公式]"> ，采用的卷积参数如下：卷积核大小 <img src="https://www.zhihu.com/equation?tex=k%3D3%5Ctimes3" alt="[公式]"> ，padding大小 <img src="https://www.zhihu.com/equation?tex=p%3D1%5Ctimes1" alt="[公式]"> ，步长 <img src="https://www.zhihu.com/equation?tex=s%3D2%5Ctimes2" alt="[公式]"> 。经过一次卷积之后，得到大小为 <img src="https://www.zhihu.com/equation?tex=3%5Ctimes3" alt="[公式]"> 的输出特征图（绿色）。在这个特征图上继续采用相同的卷积，得到一个 <img src="https://www.zhihu.com/equation?tex=2%5Ctimes2" alt="[公式]"> 的特征图（橙色）。输出特征图的大小可以通过如下公式计算（参考<a href="https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1603.07285.pdf">A guide to convolution arithmetic for deep learning</a>）：</p><p><img src="https://pic3.zhimg.com/v2-f03d34ea70e2f16e18d0ab486ebb6972_b.jpg" alt="img"></p><p>为了简化讲解，这里假定CNN架构是对称的，并且输入图片是方形的。因此所有的卷积层的所有参数在两个维度上都是相同的。如果CNN架构或者输入图片是非对称的，你可以为各个维度单独计算特征图的属性。</p><img src="https://pic2.zhimg.com/v2-bf2e71cf68c1f1af5921087c3f928781_b.jpg" alt="img" style="zoom: 50%;" /><p>图1 CNN特征图的两种可视化方法</p><p>图1的左栏给出了CNN特征图可视化最常用的方式。在这个可视化中，我们可以看到每个特征图所包含的特征数，但是很难知道每个特征的感受野的中心位置和大小，对于深度CNN，我们没有办法追踪到感受野信息。右栏给出的是固定大小的CNN可视化，所有的特征图固定大小并保持与输入特征图大小一致，这可以解决前面的问题。每个特征被标记在其感受野所在的中心（从而定位出感受野中心位置）。由于一个特征图中所有的特征都有相同大小的感受野，我们可以简单地在每个特征周围画出一个边界框，从而获得感受野的大小。我们也没有必要将这个边界框向下映射到输入层，因为特征图已经与输入层具有相同的大小。图2给出了另外一个实例，其中输入特征图更大，为 <img src="https://www.zhihu.com/equation?tex=7%5Ctimes7" alt="[公式]"> ，与前面例子采用相同的卷积。图的左栏和右栏分别给出了固定大小CNN特征图的3D和2D可视化。可以看出感受野大小增加迅速，以至于第二个特征层的中心特征的感受野已经覆盖了整个输入特征图。这在深度CNN中是一个很重要的设计理念以提升性能。</p><img src="https://pic2.zhimg.com/v2-fd7a5f22dec54f61f9a327127e2f7411_b.jpg" alt="img" style="zoom: 50%;" /><h2 id="感受野计算公式">感受野计算公式</h2><p>为了计算CNN每一层的感受野，除了要知道特征图每个维度的特征数 <img src="https://www.zhihu.com/equation?tex=n" alt="[公式]">，还需要记录每一层的其他信息，这包括当前层的感受野大小 <img src="https://www.zhihu.com/equation?tex=r" alt="[公式]"> ，两个相邻特征的距离（跳跃的距离，如前面可视化所示） <img src="https://www.zhihu.com/equation?tex=j" alt="[公式]"> ，和左上角特征（第一个特征）的中心坐标 <img src="https://www.zhihu.com/equation?tex=start" alt="[公式]"> 。注意感受野（其实是特征图第一个特征的感受野）的中心坐标就等于这个特征的中心坐标，就如前面可视化中所示。当采用的卷积其核大小为 <img src="https://www.zhihu.com/equation?tex=k" alt="[公式]"> ，padding大小为 <img src="https://www.zhihu.com/equation?tex=p" alt="[公式]"> ，步长为 <img src="https://www.zhihu.com/equation?tex=s" alt="[公式]"> ，输出特征图的感受野可以按照如下公式计算：</p><p><img src="https://pic2.zhimg.com/v2-0b6fb2be042ca40f03619dca8c2bc4a1_b.jpg" alt="img"></p><ul><li>第一个式子根据输入特征图大小以及卷积参数计算输出特征图大小，前面已经说过。</li><li>第二个式子计算输出特征图的特征间的间隔 <img src="https://www.zhihu.com/equation?tex=j" alt="[公式]"> ，其等于上一层的间隔值乘以卷积的步长，所以间隔值将是按照步长呈指数级增长。</li><li>第三个式子计算输出特征图的感受野大小，其等于前一层感受野大小加上 <img src="https://www.zhihu.com/equation?tex=%28k-1%29%2Aj_%7Bin%7D" alt="[公式]"> ，所以感受野是呈指数级增加，并且还有一个因子 <img src="https://www.zhihu.com/equation?tex=k-1" alt="[公式]"> 。</li><li>第四个式子计算输出特征图的第一个特征感受野的中心坐标，其等于第一层的中心坐标加上 <img src="https://www.zhihu.com/equation?tex=%28k-1%29%2F2%2Aj_%7Bin%7D" alt="[公式]"> <em>，再减去</em> <img src="https://www.zhihu.com/equation?tex=p%2Aj_%7Bin%7D" alt="[公式]"> ，注意两项都要乘以前一层的间隔距离以得到实际距离。</li></ul><p>对于第一层，一般是输入图片，其各项值为： <img src="https://www.zhihu.com/equation?tex=n%3Dimage%5C_size%2C+r%3D1%2C+j+%3D1%2C+start%3D0.5" alt="[公式]"> 。图3给出了一个如何计算感受野的实例，图中的坐标系统中，输入层的第一个特征中心位置记为 <img src="https://www.zhihu.com/equation?tex=0.5" alt="[公式]"> 。通过利用上面公式迭代地进行计算，你可以计算出CNN中所有特征图的感受野信息。</p><img src="https://pic2.zhimg.com/v2-ab018634d2a790d6fa268b3837176f79_b.jpg" alt="img" style="zoom:50%;" /><h3 id="1-3-其他参数">1.3.其他参数</h3><h4 id="1-3-1-Dropout">1.3.1 Dropout</h4><p>dropout 是指在深度学习网络的训练过程中，对于神经网络单元，按照一定的概率将其暂时从网络中丢弃。</p><p>主要要来减少过拟合。</p><p>该论文从神经网络的难题出发，一步一步引出dropout为何有效的解释。大规模的神经网络有两个缺点：</p><ul><li>费时</li><li>容易过拟合</li></ul><p>​       这两个缺点真是抱在深度学习大腿上的两个大包袱，一左一右，相得益彰，额不，臭气相投。过拟合是很多机器学习的通病，过拟合了，得到的模型基本就废了。而为了解决过拟合问题，一般会采用ensemble方法，即训练多个模型做组合，此时，费时就成为一个大问题，不仅训练起来费时，测试起来多个模型也很费时。总之，几乎形成了一个死锁。</p><p>​Dropout的出现很好的可以解决这个问题，每次做完dropout，相当于从原始的网络中找到一个更瘦的网络，如下图所示：</p><img src="https://img-blog.csdnimg.cn/20200827215802248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpbnpoYW5neWFueGlhbmc=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:67%;" /><p>​因而，对于一个有N个节点的神经网络，有了dropout后，就可以看做是2n个模型的集合了，但此时要训练的参数数目却是不变的，这就解脱了费时的问题。</p><h4 id="1-3-2-激活函数">1.3.2 激活函数</h4><p>​激活函数用来增加非线性因素的，提高模型拟合能力。如果不存在激活函数，神经网络的每一层的输入都是对前面输入的线性变化，就算把网络加到很深也无法去拟合任意函数的。</p><p>详情请见：<a href="https://cjh0220.github.io/posts/f9cbfb7b/">激活函数</a></p><h4 id="1-3-3-损失函数">1.3.3 损失函数</h4><p>​<strong>损失函数</strong>loss function）是用来<strong>估量模型的预测值f(x)与真实值Y的不一致程度</strong>，它是一个非负实值函数,通常使用L(Y, f(x))来表示，损失函数越小，模型的鲁棒性就越好。</p><p>详情请见：<a href="https://cjh0220.github.io/posts/be2e8163/">损失函数</a></p><h4 id="1-3-4-padding">1.3.4 padding</h4><p>在卷积操作之前填充这幅图像。</p><p>在这个案例中，你可以沿着图像边缘再填充一层像素。如果你这样操作了，那么6×6的图像就被你填充成了一个8×8的图像。如果你用3×3的图像对这个8×8的图像卷积，你得到的输出就不是4×4的，而是6×6的图像，你就得到了一个尺寸和原始图像6×6的图像。习惯上，你可以用0去填充，如果是填充的数量，在这个案例中，，因为我们在周围都填充了一个像素点，输出也就变成了，所以就变成了，和输入的图像一样大。这个涂绿的像素点（左边矩阵）影响了输出中的这些格子（右边矩阵）。这样一来，角落或图像边缘的信息发挥的作用较小的这一缺点就被削弱了。</p><img src="https://img-blog.csdnimg.cn/20200103135441708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODI3OTEwMQ==,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 33%;" /><p>刚才已经展示过用一个像素点来填充边缘，如果你想的话，也可以填充两个像素点，也就是说在这里填充一层。实际上你还可以填充更多像素。我这里画的这种情况，填充后p = 2。</p><img src="https://img-blog.csdnimg.cn/20200103135750151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODI3OTEwMQ==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><h5 id="Valid卷积："><strong>Valid</strong>卷积：</h5><p><strong>Valid</strong>卷积意味着不填充。</p><h5 id="Same卷积"><strong>Same</strong>卷积</h5><p><strong>Same</strong>卷积意味你填充后，你的输出大小和输入大小是一样的。</p><img src="http://a1.qpic.cn/psc?/V12XQ1QV3cpyPD/05RlWl8gsTOH*Z17MtCBzC9POCBaedtEP4n0sXSodmjuTUd.4kJp52CqMMSezAYjcbPQawoeVkSzqVcLLBVfRQ!!/b&ek=1&kp=1&pt=0&bo=NgOyATYDsgEDACU!&tl=1&vuin=1005741898&tm=1636005600&sce=50-1-1&rf=4-0" style="zoom:50%;" /><p>为了指定卷积操作中的padding，你可以指定p的值。也可以使用Valid卷积，也就是p = 0。也可使用Same卷积填充像素，使你的输出和输入大小相同。</p><h2 id="二、目标检测的敲门砖（R-CNN）">二、目标检测的敲门砖（R-CNN）</h2><h3 id="2-1-历史背景">2.1 历史背景</h3><img src="https://img-blog.csdnimg.cn/20200516094233191.PNG#pic_center" alt="img" style="zoom: 67%;" /><p>​我们常说的R-CNN系列，一共包含三个版本：<strong>R-CNN</strong>、<strong>Fast R-CNN</strong>、<strong>Faster R-CNN</strong>。从命名上看，R是Region的缩写，CNN指我们常说的卷积神经网络。那么R-CNN其实就是使用推荐区域的卷积神经网络。由Fast、Faster很容易知道，版本的更迭解决的是一个实时性的问题。</p><p>​R-CNN算法最早在2013年被提出，它的出现打开了运用深度学习进行目标检测的大门，从此之后，目标检测的精准度与实时性被不断刷新。R-CNN系列算法自提出之际，就非常引人注目，以至于在之后的很多经典算法中，如SSD、YOLO系列、Mask R-CNN中都能看到它的影子。</p><p>​学习R-CNN系列算法不仅能够让我们了解到基础的目标检测算法的思路，而且能够让学习者更加轻松地掌握SSD、YOLO系列、Mask R-CNN等算法。因为相比一些one-stage 的目标检测算法，Faster R-CNN作为two-stage的算法理解起来并不算简单。正是如此，当我们掌握了R-CNN系列算法后，再去学习经典的one-stage算法，就会变得异常简单。</p><p>​R-CNN、Fast R-CNN采用的还是传统的SS算法生成推荐区域，计算非常耗时，达不到实时检测的效果。直到Faster R-CNN才使用RPN代替了原来的SS算法，才使得目标检测的时间大大缩短，达到实时性的效果。因此，本篇博客先会对R-CNN、Fast R-CNN进行一个简明扼要地讲解，大家只需了解算法的思路和演进过程即可；之后，会着重讲解R-CNN 系列的灵魂之作——Faster R-CNN，而这部分才是大家需要着重了解的。</p><p>​2013年11月，Ross Girshick等人最早提出了R-CNN算法，打开了利用深度学习进行目标检测的大门。在当时来说，R-CNN算法的目标检测水平超群，比传统的目标检测方法有了很大提升。实验表明，R-CNN算法在PASCAL VOC数据集取得了很好的成绩，这种算法的平均精确度比之前在VOC2012数据集上的最好测试效果还要高30%。并且，由该算法提出的论文《Rich feature hierarchies for accurate object detection and semantic segmentation》获得了世界计算机视觉顶会CVPR2014的最佳论文奖。</p><h3 id="2-2-R-CNN">2.2 R-CNN</h3><img src="https://img-blog.csdnimg.cn/20200515153150772.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dqaW5qaWU=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom: 67%;" /><p>如上图所示，<strong>R-CNN目标检测算法</strong>流程主要分四个步骤：</p><ol><li>采用SS(<a href="https://cjh0220.github.io/posts/undefined/">Selective Search</a>)方法，使一张图片生成1000~2000个候选区域(region proposals)。</li><li>对每一个候选区域，都使用深度神经网络（AlexNet）提取特征，得到1*4096的特征向量。</li><li>将每一个特征向量送入每一类的<a href="https://cjh0220.github.io/posts/2c7c9a1c/"><strong>SVM分类器</strong></a>，判断是否属于该类。</li><li>对已分类的推荐框进行<strong>线性回归</strong>，对这些框进行精细地调整，得到更加准确的边界框坐标。</li></ol><p>R-CNN算法的检测效果很好，但是检测速度很慢，因此总体效率不高。其主要原因在于：</p><ul><li><strong>提取特征操作非常冗余</strong>。检测时，需要将每个推荐区域都送入训练好的模型（AlexNet）进行前向传播，因此每张图片大约要进行1000~2000次前向传播。</li><li><strong>训练速度慢，过程繁琐</strong>。要单独分别训练三个不同的模型：CNN用来提取图像特征、SVM分类器用来预测类别、回归器精细修正建议框的位置。分开训练，耗时耗力。</li><li>使用Selective Search算法生成推荐区域，这个过程大约耗时2s，也是它不能达到实时性检测的一个重要原因。</li></ul><h3 id="2-3-Fast-R-CNN">2.3 Fast-R-CNN</h3><p>Fast R-CNN紧随R-CNN其后。Fast R-CNN更快更好，得益于以下几点:</p><ul><li>在提出区域之前先对图像进行特征提取，这样整个图像上只运行一个CNN，而不是2000个CNN的2000多个重叠区域</li><li>将支持向量机替换为softmax层，从而扩展用于预测的神经网络，而不是创建新的模型</li></ul><p>从直觉上看，移除2000个conv层，而只使用一次Convolution，并在其上创建方框是很有意义的。</p><h3 id="2-4-Faster-R-CNN">2.4 Faster R-CNN</h3><p>Fast R-CNN的缺点之一是缓慢的选择搜索算法，而Faster R-CNN引入了一种叫做网络和区域候选网络(RPN)的东西。</p><h4 id="RPN工作原理：">RPN工作原理：</h4><p>在初始CNN的最后一层，一个3x3滑动窗口在feature map上移动，并将其映射到一个较低的维度(例如256-d)。对于每个滑动窗口位置，它基于k个固定比例锚框(默认边界框)生成多个可能的区域。</p><p>每个推荐区域包含以下内容：</p><ul><li>该区域的“客观性”得分</li><li>4个表示区域边界框的坐标</li></ul><p>换句话说，我们查看上一个区域中的每个位置，并考虑k个围绕它的不同框:一个高框，一个宽框，一个大框，等等。对于每个方框，我们输出它是否包含对象，以及方框的坐标是什么。这是为什么看着像个一个滑动窗口位置:</p><p>2k分数表示每个k边界框在“对象”上的softmax概率。注意，尽管RPN输出边界框坐标，但它并不试图分类任何潜在的对象:它的唯一工作仍然是提出对象区域。如果锚框的“客观性”得分高于某个阈值，则该框的坐标将作为区域建议向前传递。</p><p>一旦我们有了我们的区域提案，我们就直接把它们输入到本质上是fast R-CNN。我们添加了一个池化层，一些完全连接层，最后一个softmax分类层和边界框回归器。在某种意义上，Faster R-CNN = RPN + Fast R-CNN.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 卷积神经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>残差神经网络</title>
      <link href="/2022/09/08/%E6%AE%8B%E5%B7%AE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
      <url>/2022/09/08/%E6%AE%8B%E5%B7%AE%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>链接：</p><p><a href="https://zhuanlan.zhihu.com/p/91385516">一文读懂残差网络</a></p><h2 id="残差网络的由来"><strong>残差网络的由来</strong></h2><p>残差操作这一思想起源于论文《Deep Residual Learning for Image Recognition》，目前的引用量已达3万多。这篇文章发现，如果存在某个<img src="https://www.zhihu.com/equation?tex=K" alt="[公式]">层的网络<img src="https://www.zhihu.com/equation?tex=f" alt="[公式]">是当前最优的网络，那么可以构造一个更深的网络，其最后几层仅是该网络<img src="https://www.zhihu.com/equation?tex=f" alt="[公式]">第<img src="https://www.zhihu.com/equation?tex=K" alt="[公式]">层输出的恒等映射(Identity Mapping)，就可以取得与<img src="https://www.zhihu.com/equation?tex=f" alt="[公式]">一致的结果；也许<img src="https://www.zhihu.com/equation?tex=K" alt="[公式]">还不是所谓“最佳层数”，那么更深的网络就可以取得更好的结果。总而言之，与浅层网络相比，更深的网络的表现不应该更差。但是如下图所示，56层的神经网络表现明显要比20层的差。证明更深的网络在训练过程中的难度更大，因此作者提出了残差网络的思想。</p><p><img src="https://pic2.zhimg.com/80/v2-a16f6011fbae00e134f3d8cdb623e5f5_720w.jpg" alt="img">网络层数加深导致的训练问题</p><h2 id="残差网络的定义">残差网络的定义</h2><p>残差网络依旧让非线形层满足 <img src="https://www.zhihu.com/equation?tex=H%5Cleft%28x%2C+w_%7Bh%7D%5Cright%29" alt="[公式]"> ，然后从输入直接引入一个短连接到非线形层的输出上，使得整个映射变为</p><p><img src="https://www.zhihu.com/equation?tex=%5Cmathrm%7By%7D%3DH%5Cleft%28x%2C+w_%7Bh%7D%5Cright%29%2Bx" alt="[公式]"></p><p>这就是残差网路的核心公式，换句话说，残差是网络搭建的一种操作，任何使用了这种操作的网络都可以称之为残差网络。</p><p>一个具体的残差模块的定义如下图：</p><p><img src="https://pic3.zhimg.com/80/v2-39dabdf70ac19c0c92b86d53375d8c06_720w.jpg" alt="img">残差模块（由于先敲公式后引得图，容易混淆，图中的F(x)就是上文所说的H(x,w)，下面也一样替换）</p><h2 id="残差网络的优势">残差网络的优势</h2><p>残差模块为什么有效，有很多的解释，这里提供两个方面的理解，一方面是残差网络更好的拟合分类函数以获得更高的分类精度，另一方面是残差网络如何解决网络在层数加深时优化训练上的难题。</p><p><strong>1.残差网络拟合函数的优越性</strong></p><p>首先从万能近似定理（Universal Approximation Theorem）入手。这个定理表明，一个前馈神经网络（feedforward neural network）如果具有线性输出层，同时至少存在一层具有任何一种“挤压”性质的激活函数（例如logistic sigmoid激活函数）的隐藏层，那么只要给予这个网络足够数量的隐藏单元，它就可以以任意的精度来近似任何从一个有限维空间到另一个有限维空间的波莱尔可测函数(Borel Measurable Function)。</p><p>万能近似定理意味着我们在构建网络来学习什么函数的时候，我们知道一定存在一个多层感知机（Multilayer Perceptron Model，MLP）能够表示这个函数。然而，我们不能保证训练算法能够学得这个函数。因为即使多层感知机能够表示该函数，学习也可能会失败，可能的原因有两种。</p><p>（1）用于训练的优化算法可能找不到用于期望函数的参数值。</p><p>（2）训练算法可能由于过拟合而选择了错误的函数。</p><p>第二种过拟合情况不在我们的讨论范围之内，因此我们聚焦在前一种情况，为何残差网络相比简单的多层网络能更好的拟合分类函数，即找到期望函数的参数值。</p><p>对于普通的不带短连接的神经网络来说，存在这样一个命题。</p><p>命题1:假设 <img src="https://www.zhihu.com/equation?tex=f_%7B%5Cmathcal%7BN%7D%7D%3A+%5Cmathbb%7BR%7D%5E%7Bd%7D+%5Crightarrow+%5Cmathbb%7BR%7D" alt="[公式]"> 为普通的带激活函数的全连接网络 <img src="https://www.zhihu.com/equation?tex=N" alt="[公式]"> 。 <img src="https://www.zhihu.com/equation?tex=%5Cmathrm%7BP%7D%3D%5C%7B%5Cmathrm%7Bx%7D+%5Cin+%5Cleft.%5Cmathbb%7BR%7D%5E%7Bd%7D+%7C+f_%7B%5Cmathcal%7BN%7D%7D%28x%29%3E0%5Cright%5C%7D" alt="[公式]"> 为 <img src="https://www.zhihu.com/equation?tex=f_N" alt="[公式]"> 的正等值面，假如 <img src="https://www.zhihu.com/equation?tex=N" alt="[公式]"> 的每个层的激活函数都至多只有<img src="https://www.zhihu.com/equation?tex=d" alt="[公式]"> 个神经元，那么</p><p><img src="https://www.zhihu.com/equation?tex=%5Clambda%28P%29%3D0+%5Ctext+%7B+or+%7D+%5Clambda%28P%29%3D%2B%5Cinfty" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5Clambda" alt="[公式]"> 为勒贝格测度。换句话说，这样狭窄的全连接网络表示的函数要么没有边界约束，要么恒为0。因此，即使层数无限加深，整个网络的表现力也受网络的宽度限制而无法近似一个带边界的区域。而对于残差网络来讲，拟合函数的能力则完全不受网路宽度的影响，上述命题1对于残差网络并不适用。</p><p>下面从一个简单的二维例子来说明这一点，这样可以进行方便的可视化。我们随机生成一组测试点 <img src="https://www.zhihu.com/equation?tex=%5Cleft%28z_%7Bi%7D%2C+y_%7Bi%7D%5Cright%29_%7Bi%3D1+%5Cldots+n%7D+%5Cin+%5Cmathbb%7BR%7D%5E%7B2%7D+%5Ctimes%5C%7B-1%2C1%5C%7D" alt="[公式]"> ，满足</p><p><img src="https://www.zhihu.com/equation?tex=y_%7Bi%7D%3D%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bc%7D%7B1%2C+%5Ctext+%7B+if+%7D%5Cleft%5C%7Cz_%7Bi%7D%5Cright%5C%7C_%7B2%7D+%5Cleq+1%7D+%5C%5C+%7B-1%2C+i+f+%5Cleq+2%5Cleft%5C%7Cz_%7Bi%7D%5Cright%5C%7C_%7B2%7D+%5Cleq+3%7D%5Cend%7Barray%7D%5Cright." alt="[公式]"></p><p>我们手动构造一个清晰的分类边界使得整个任务更容易一点，损失函数采用逻辑回归损失<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B1%7D%7Bn%7D+%5Csum+%5Clog+%5Cleft%281%2Be%5E%7B-y_%7Bi%7D+%5Chat%7By_%7B%5Cmathrm%7Bt%7D%7D%7D%7D%5Cright%29" alt="[公式]"> ，其中 <img src="https://www.zhihu.com/equation?tex=%5Chat%7By%7D_%7B%5Ciota%7D%3Df_%7B%5Cmathcal%7BN%7D%7D%5Cleft%28z_%7Bi%7D%5Cright%29" alt="[公式]"> 为网络对于样本 <img src="https://www.zhihu.com/equation?tex=i" alt="[公式]"> 的实际输出。经过训练后，分析网络不同深度下得到的训练边界，如图3.5可以发现宽度比输入维度小的残差网络的训练边界明显更加接近真实边界，也不受命题1的限制。</p><p><img src="https://pic3.zhimg.com/80/v2-8160e22f45869596f18a1692df9d7ef2_720w.jpg" alt="img">图3.5 不同网络结构拟合函数边界的结果。左上角为函数的真实边界。第一行是简单的全连接网络，每层的神经元个数为2；第二行为带短连接的网络，每层神经元个数为1。从左到右的网络层数依次递增，分别为1-5层。</p><p>事实上对于高维函数，这一特点依然适用。因此，当函数的输入维度非常高时，这一做法就变的非常有意义。尽管在高维空间这一特点很难被可视化，但是<strong>这个理论给了一个很合理的启发，就是原则上，带短连接的网络的拟合高维函数的能力比普通连接的网络更强</strong>。这部分我们讨论了残差网络有能力拟合更高维的函数，但是在实际的训练过程中仍然可能存在各种各样的问题使得学习到最优的参数非常困难，因此下一小节讨论残差在训练过程中的优越性。</p><p><strong>2.残差网络训练过程的优越性</strong></p><p>这个部分我们讨论为什么残差能够缓解深层网络的训练问题，以及探讨可能的短连接方式和我们最终选择的残差的理由。正如本章第三部分讨论的一样，整个残差卷积神经网络是由以上的残差卷积子模块堆积而成。如上一小节所定义的，假设第 <img src="https://www.zhihu.com/equation?tex=l" alt="[公式]"> 层的残差卷积字子模块的映射为</p><p><img src="https://www.zhihu.com/equation?tex=F%5Cleft%28x_%7Bl%7D%2C+w_%7Bf%7D%5Cright%29%3Dx_%7Bl%7D%2BH%5Cleft%28x_%7Bl%7D%2C+w_%7Bl%7D%5Cright%29" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=x_l" alt="[公式]"> 是第 <img src="https://www.zhihu.com/equation?tex=l" alt="[公式]"> 层的输入， <img src="https://www.zhihu.com/equation?tex=w_%7Bl%7D%3D%5Cleft%5C%7Bw_%7Bl%2C+k%7D+%7C+1+%5Cleq+k+%5Cleq+K%5Cright%5C%7D" alt="[公式]"> 是第 <img src="https://www.zhihu.com/equation?tex=l" alt="[公式]"> 层的参数， <img src="https://www.zhihu.com/equation?tex=K" alt="[公式]"> 是残差单元层数。</p><p>那么第 <img src="https://www.zhihu.com/equation?tex=l%2B1" alt="[公式]"> 层的输入为</p><p><img src="https://www.zhihu.com/equation?tex=x_%7Bl%2B1%7D%3DF%5Cleft%28x_%7Bl%7D%2C+w_%7Bf%7D%5Cright%29" alt="[公式]"></p><p>因此得到</p><p><img src="https://www.zhihu.com/equation?tex=x_%7Bl%2B1%7D%3Dx_%7Bl%7D%2BH%5Cleft%28x_%7Bl%7D%2C+w_%7Bl%7D%5Cright%29" alt="[公式]"></p><p>循环带入这个式子 <img src="https://www.zhihu.com/equation?tex=x_%7Bl%2B2%7D%3Dx_%7Bl%2B1%7D%2BH%5Cleft%28x_%7Bl%2B1%7D%2C+w_%7Bl%2B1%7D%5Cright%29%3Dx_%7Bl%7D%2BH%5Cleft%28x_%7Bl%7D%2C+w_%7Bl%7D%5Cright%29%2BH%5Cleft%28x_%7Bl%2B1%7D%2C+w_%7Bl%2B1%7D%5Cright%29" alt="[公式]"> ，我们可以得到</p><p><img src="https://www.zhihu.com/equation?tex=x_%7BL%7D%3Dx_%7Bl%7D%2B%5Csum_%7Bi%3Dl%7D%5E%7BL-1%7D+F%5Cleft%28x_%7Bi%7D%2C+w_%7Bi%7D%5Cright%29" alt="[公式]"> （1）</p><p>对于任何深度的L来讲，上述式子（1）显示了一些良好的特性。</p><p>（1）第<img src="https://www.zhihu.com/equation?tex=L" alt="[公式]">层的特征<img src="https://www.zhihu.com/equation?tex=x_L" alt="[公式]">可以分为两个部分，第一部分是浅层的网络表示<img src="https://www.zhihu.com/equation?tex=x_l" alt="[公式]">加上一个残差函数映射 <img src="https://www.zhihu.com/equation?tex=%5Csum_%7Bi%3Dl%7D%5E%7BL%3D1%7D+F%5Cleft%28x_%7Bi%7D%2C+w_%7Bi%7D%5Cright%29" alt="[公式]"> ，表明模型在任意单元内都是一个残差的形式。</p><p>（2）对于任意深度 <img src="https://www.zhihu.com/equation?tex=L" alt="[公式]"> 的特征 <img src="https://www.zhihu.com/equation?tex=x_L" alt="[公式]"> 来讲，它是前面所有残差模块的和，这与简单的不加短连接的网络完全相反。原因是，不加短连接的网络在第 <img src="https://www.zhihu.com/equation?tex=L" alt="[公式]"> 层的特征 <img src="https://www.zhihu.com/equation?tex=x_L" alt="[公式]"> 是一系列的向量乘的结果，即 <img src="https://www.zhihu.com/equation?tex=%5CPi_%7Bi%3D0%7D%5E%7BL-1%7D+W_%7Bi%7D+x_%7B0%7D" alt="[公式]"> (在忽略batch normalization和激活函数的情况下)。</p><p>同样，上述式子显示有非常好的反向传播特性，假设损失为 <img src="https://www.zhihu.com/equation?tex=%5Cvarepsilon" alt="[公式]"> ，根据链式求导法则，我们可以得到</p><p><img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7Bl%7D%7D%3D%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7BL%7D%7D+%5Cfrac%7B%5Cpartial+x_%7BL%7D%7D%7B%5Cpartial+x_%7Bl%7D%7D%3D%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7BL%7D%7D%5Cleft%281%2B%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial+x_%7Bl%7D%7D+%5Csum_%7Bi%3Dl%7D%5E%7BL-1%7D+F%5Cleft%28x_%7Bi%7D%2C+w_%7Bi%7D%5Cright%29%5Cright%29" alt="[公式]"> （2）</p><p>显示梯度<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7BL%7D%7D" alt="[公式]">由两个部分组成，一部分 <img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+x_%7Bl%7D%7D%7B%5Cpartial+x_%7BL%7D%7D" alt="[公式]"> 是不用经过任何权重加权的信息流，另一部分是通过加权层的 <img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7BL%7D%7D%5Cleft%28%5Cfrac%7B%5Cpartial%7D%7B%5Cpartial+x_%7Bl%7D%7D+%5Csum_%7Bi%3Dl%7D%5E%7BL-1%7D+F%5Cleft%28x_%7Bi%7D%2C+w_%7Bi%7D%5Cright%29%5Cright%29" alt="[公式]"> ，两部分连接的线形特性保证了信息可以直接反向传播到浅层。同时式子还说明对于小的batch而言，梯度 <img src="https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+%5Cvarepsilon%7D%7B%5Cpartial+x_%7Bl%7D%7D" alt="[公式]"> 不太可能会消失，因为通常 对于小的batch来讲不会总是为1，那么这表示即使权重非常小，梯度也不会为0，不存在梯度消失的问题。</p><p>总之，式子（1）和（2）表明信号无论是在前向传播还是反向传播的过程中，都是可以直接通过的。</p><h2 id="残差模块的实现例子">残差模块的实现例子</h2><p>大家可以对照图看具体的实现：</p><p><img src="https://pic3.zhimg.com/80/v2-39dabdf70ac19c0c92b86d53375d8c06_720w.jpg" alt="img"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import torch.nn as nn</span><br><span class="line">import torch</span><br><span class="line">from torch.nn.init import kaiming_normal, constant</span><br><span class="line"></span><br><span class="line">class BasicConvResBlock(nn.Module):</span><br><span class="line"></span><br><span class="line">    def __init__(self, input_dim=128, n_filters=256, kernel_size=3, padding=1, stride=1, shortcut=False, downsample=None):</span><br><span class="line">        super(BasicConvResBlock, self).__init__()</span><br><span class="line"></span><br><span class="line">        self.downsample = downsample</span><br><span class="line">        self.shortcut = shortcut</span><br><span class="line"></span><br><span class="line">        self.conv1 = nn.Conv1d(input_dim, n_filters, kernel_size=kernel_size, padding=padding, stride=stride)</span><br><span class="line">        self.bn1 = nn.BatchNorm1d(n_filters)</span><br><span class="line">        self.relu = nn.ReLU()</span><br><span class="line">        self.conv2 = nn.Conv1d(n_filters, n_filters, kernel_size=kernel_size, padding=padding, stride=stride)</span><br><span class="line">        self.bn2 = nn.BatchNorm1d(n_filters)</span><br><span class="line"></span><br><span class="line">    def forward(self, x):</span><br><span class="line">        residual = x</span><br><span class="line"></span><br><span class="line">        out = self.conv1(x)</span><br><span class="line">        out = self.bn1(out)</span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        out = self.conv2(out)</span><br><span class="line">        out = self.bn2(out)</span><br><span class="line"></span><br><span class="line">        if self.shortcut:</span><br><span class="line">            out += residual</span><br><span class="line"></span><br><span class="line">        out = self.relu(out)</span><br><span class="line"></span><br><span class="line">        return out</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 残差网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XGboost算法</title>
      <link href="/2022/09/08/XGboost%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/XGboost%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>XGBoost</h1><h2 id="1-什么是XGBoost">1. 什么是XGBoost</h2><p><strong>XGBoost</strong>是陈天奇等人开发的一个开源机器学习项目，高效地实现了GBDT算法并进行了算法和工程上的许多改进，被广泛应用在Kaggle竞赛及其他许多机器学习竞赛中并取得了不错的成绩。</p><p>说到XGBoost，不得不提GBDT(Gradient Boosting Decision Tree)。因为XGBoost本质上还是一个GBDT，但是力争把速度和效率发挥到极致，所以叫X (Extreme) GBoosted。包括前面说过，两者都是boosting方法。</p><h3 id="1-1-XGBoost树的定义">1.1 XGBoost树的定义</h3><p>先来举个<strong>例子</strong>，我们要预测一家人对电子游戏的喜好程度，考虑到年轻和年老相比，年轻更可能喜欢电子游戏，以及男性和女性相比，男性更喜欢电子游戏，故先根据年龄大小区分小孩和大人，然后再通过性别区分开是男是女，逐一给各人在电子游戏喜好程度上打分，如下图所示。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODU3NzIzMjUxNjgwMC5wbmc" alt=""></p><p>就这样，训练出了2棵树tree1和tree2，类似之前gbdt的原理，两棵树的结论累加起来便是最终的结论，所以小孩的预测分数就是两棵树中小孩所落到的结点的分数相加：2 + 0.9 = 2.9。爷爷的预测分数同理：-1 + （-0.9）= -1.9。具体如下图所示：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODU3ODczOTE5ODQzMy5wbmc" alt=""></p><p>恩，你可能要拍案而起了，惊呼，这不是跟上文介绍的GBDT乃异曲同工么？</p><p>事实上，如果不考虑工程实现、解决问题上的一些差异，XGBoost与GBDT比较大的不同就是目标函数的定义。XGBoost的目标函数如下图所示：</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODU4MDEzOTE1OTU5My5wbmc" alt=""></p><p>其中：</p><ul><li><p>红色箭头所指向的L 即为损失函数（比如平方损失函数：</p></li><li><p>红色方框所框起来的是正则项（包括L1正则、L2正则）</p></li><li><p>红色圆圈所圈起来的为常数项</p></li><li><p>对于f(x)，XGBoost利用泰勒展开三项，做一个近似。f(x)表示的是其中一颗回归树。</p></li></ul><p>XGBoost的核心算法思想不难，基本就是：</p><ul><li>不断地添加树，不断地进行特征分裂来生长一棵树，每次添加一个树，其实是学习一个新函数f(x)，去拟合上次预测的残差。</li><li>当我们训练完成得到k棵树，我们要预测一个样本的分数，其实就是根据这个样本的特征，在每棵树中会落到对应的一个叶子节点，每个叶子节点就对应一个分数</li><li>最后只需要将每棵树对应的分数加起来就是该样本的预测值。</li></ul><p>显然，我们的目标是要使得树群的预测值尽量接近真实值，而且有尽量大的泛化能力。类似之前GBDT的套路，XGBoost也是需要将多棵树的得分累加得到最终的预测得分（每一次迭代，都在现有树的基础上，增加一棵树去拟合前面树的预测结果与真实值之间的残差）。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODY1NzI2MTgzMzQ5My5wbmc" alt=""></p><p>那接下来，我们如何选择每一轮加入什么 f 呢？答案是非常直接的，选取一个 f 来使得我们的目标函数尽量最大地降低。这里 f 可以使用泰勒展开公式近似。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODY1ODY3NTMwMTIwLnBuZw" alt=""></p><p>实质是把样本分配到叶子结点会对应一个obj，优化过程就是obj优化。也就是分裂节点到叶子不同的组合，不同的组合对应不同obj，所有的优化围绕这个思想展开。到目前为止我们讨论了目标函数中的第一个部分：训练误差。接下来我们讨论目标函数的第二个部分：正则项，即如何定义树的复杂度。</p><h3 id="1-2-正则项：树的复杂度">1.2 正则项：树的复杂度</h3><p>XGBoost对树的复杂度包含了两个部分：</p><ul><li>一个是树里面叶子节点的个数T</li><li>一个是树上叶子节点的得分w的L2模平方（对w进行L2正则化，相当于针对每个叶结点的得分增加L2平滑，目的是为了避免过拟合）</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9qdWx5ZWR1LWltZy5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vcXVlc2Jhc2U2NDE1MzQzODY3NDE5OTQ3MTQ4My5wbmc" alt=""></p><p>我们再来看一下XGBoost的目标函数（损失函数揭示训练误差 + 正则化定义复杂度）：</p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/4ade7a318e325195.png" alt=""></p><p>正则化公式也就是目标函数的后半部分，对于上式而言， 整个累加模型的输出，正则化项∑kΩ(ft)是则表示树的复杂度的函数，值越小复杂度越低，泛化能力越强。</p><h3 id="1-3-树该怎么长">1.3 树该怎么长</h3><p>很有意思的一个事是，我们从头到尾了解了xgboost如何优化、如何计算，但树到底长啥样，我们却一直没看到。很显然，一棵树的生成是由一个节点一分为二，然后不断分裂最终形成为整棵树。那么树怎么分裂的就成为了接下来我们要探讨的关键。对于一个叶子节点如何进行分裂，XGBoost作者在其原始论文中给出了一种分裂节点的方法：枚举所有不同树结构的贪心法</p><p>不断地枚举不同树的结构，然后利用打分函数来寻找出一个最优结构的树，接着加入到模型中，不断重复这样的操作。这个寻找的过程使用的就是<strong>贪心算法</strong>。选择一个feature分裂，计算loss function最小值，然后再选一个feature分裂，又得到一个loss function最小值，你枚举完，找一个效果最好的，把树给分裂，就得到了小树苗。</p><p>总而言之，XGBoost使用了和CART回归树一样的想法，利用贪婪算法，遍历所有特征的所有特征划分点，不同的是使用的目标函数不一样。具体做法就是分裂后的目标函数值比单子叶子节点的目标函数的增益，同时为了限制树生长过深，还加了个阈值，只有当增益大于该阈值才进行分裂。从而继续分裂，形成一棵树，再形成一棵树，每次在上一次的预测基础上取最优进一步分裂/建树。</p><h3 id="1-4如何停止树的循环生成">1.4如何停止树的循环生成</h3><p>凡是这种循环迭代的方式必定有停止条件，什么时候停止呢？简言之，设置树的最大深度、当样本权重和小于设定阈值时停止生长以防止过拟合。具体而言，则</p><ul><li><p>当引入的分裂带来的增益小于设定阀值的时候，我们可以忽略掉这个分裂，所以并不是每一次分裂loss function整体都会增加的，有点预剪枝的意思，阈值参数为（即正则项里叶子节点数T的系数）；</p></li><li><p>当树达到最大深度时则停止建立决策树，设置一个超参数max_depth，避免树太深导致学习局部样本，从而过拟合；</p></li><li><p>样本权重和小于设定阈值时则停止建树。什么意思呢，即涉及到一个超参数-最小的样本权重和min_child_weight，和GBM的 min_child_leaf 参数类似，但不完全一样。大意就是一个叶子节点样本太少了，也终止同样是防止过拟合；</p></li></ul><h2 id="2-XGBoost与GBDT有什么不同">2.XGBoost与GBDT有什么不同</h2><p>除了算法上与传统的GBDT有一些不同外，XGBoost还在工程实现上做了大量的优化。总的来说，两者之间的区别和联系可以总结成以下几个方面。</p><ul><li>GBDT是机器学习算法，XGBoost是该算法的工程实现。</li><li>在使用CART作为基分类器时，XGBoost显式地加入了正则项来控制模 型的复杂度，有利于防止过拟合，从而提高模型的泛化能力。</li><li>GBDT在模型训练时只使用了代价函数的一阶导数信息，XGBoost对代 价函数进行二阶泰勒展开，可以同时使用一阶和二阶导数。</li><li>传统的GBDT采用CART作为基分类器，XGBoost支持多种类型的基分类 器，比如线性分类器。</li><li>传统的GBDT在每轮迭代时使用全部的数据，XGBoost则采用了与随机 森林相似的策略，支持对数据进行采样。</li><li>传统的GBDT没有设计对缺失值进行处理，XGBoost能够自动学习出缺 失值的处理策略。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XGbooost </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GBDT算法</title>
      <link href="/2022/09/08/GBDT%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/GBDT%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>GBDT算法 （梯度提升决策树）</h1><h2 id="1-GBDT算法的过程">1.GBDT算法的过程</h2><h3 id="1-1Boosting思想">1.1Boosting思想</h3><p>Boosting方法训练基分类器时采用<strong>串行</strong>的方式，各个基分类器之间有依赖。它的基本思路是将**基分类器层层叠加，每一层在训练的时候，对前一层基分类器分错的样本，给予更高的权重。**测试时，根据各层分类器的结果的加权得到最终结果。</p><p>Bagging与Boosting的串行训练方式不同，Bagging方法在训练过程中，各基分类器之间无强依赖，可以进行并行训练。</p><p>GBDT(Gradient Boosting Decision Tree)，全名叫梯度提升决策树，使用的是Boosting的思想。</p><h3 id="1-2GBDT原理">1.2GBDT原理</h3><p>GBDT的原理很简单，就是所有弱分类器的结果相加等于预测值，然后下一个弱分类器去拟合误差函数对预测值的残差(这个残差就是预测值与真实值之间的误差)。当然了，它里面的弱分类器的表现形式就是各棵树。</p><p>举一个非常简单的例子，比如我今年30岁了，但计算机或者模型GBDT并不知道我今年多少岁，那GBDT咋办呢？</p><ul><li>它会在第一个弱分类器（或第一棵树中）随便用一个年龄比如20岁来拟合，然后发现误差有10岁；</li><li>接下来在第二棵树中，用6岁去拟合剩下的损失，发现差距还有4岁；</li><li>接着在第三棵树中用3岁拟合剩下的差距，发现差距只有1岁了；</li><li>最后在第四课树中用1岁拟合剩下的残差，完美。</li><li>最终，四棵树的结论加起来，就是真实年龄30岁（实际工程中，gbdt是计算负梯度，用负梯度近似残差）。</li></ul><p><strong>为何gbdt可以用用负梯度近似残差呢？</strong></p><p>回归任务下，GBDT 在每一轮的迭代时对每个样本都会有一个预测值，此时的损失函数为均方差损失函数，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><msup><mi>y</mi><mi>i</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msup><mi>y</mi><mi>i</mi></msup><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">l\left( y_{i},y^{i}\right) =\dfrac{1}{2}\left( y_{i}-y^{i}\right) ^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2247em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0787em;"><span style="top:-3.3276em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>那此时的负梯度是这样计算的</p><p><img src="https://camo.githubusercontent.com/c09291f07c59de9cde4eb4010af4268eb8c0f80f4995d178c4d338553802362d/68747470733a2f2f6a756c796564752d696d672e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f717565736261736536343135353231343936323431363637303937332e676966" alt=""></p><p>所以，当损失函数选用均方损失函数是时，每一次拟合的值就是（真实值 - 当前模型预测的值），即残差。此时的变量是y^{i}，即“当前预测模型的值，也就是对它求负梯度。</p><p><strong>训练过程</strong></p><p>简单起见，假定训练集只有4个人：A,B,C,D，他们的年龄分别是14,16,24,26。其中A、B分别是高一和高三学生；C,D分别是应届毕业生和工作两年的员工。如果是用一棵传统的回归决策树来训练，会得到如下图所示结果：</p><p><img src="https://camo.githubusercontent.com/953440eddbcf317f67227aaa04818347d653dc12b80fe339d88a93b35854440e/68747470733a2f2f6a756c796564752d696d672e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f717565736261736536343135333433383536383139313330333935382e706e67" alt=""></p><p>现在我们使用GBDT来做这件事，由于数据太少，我们限定叶子节点做多有两个，即每棵树都只有一个分枝，并且限定只学两棵树。我们会得到如下图所示结果：</p><p><img src="https://camo.githubusercontent.com/d2687e29c0958e01420a6cabac90b3678a94dcc7e15713cd41229624b3b74d69/68747470733a2f2f6a756c796564752d696d672e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f717565736261736536343135333433383537303532393235363839352e706e67" alt=""></p><p>在第一棵树分枝和图1一样，由于A,B年龄较为相近，C,D年龄较为相近，他们被分为左右两拨，每拨用平均年龄作为预测值。</p><ul><li>此时计算残差（残差的意思就是：A的实际值 - A的预测值 = A的残差），所以A的残差就是实际值14 - 预测值15 = 残差值-1。</li><li>注意，A的预测值是指前面所有树累加的和，这里前面只有一棵树所以直接是15，如果还有树则需要都累加起来作为A的预测值。</li></ul><p>然后拿它们的残差-1、1、-1、1代替A B C D的原值，到第二棵树去学习，第二棵树只有两个值1和-1，直接分成两个节点，即A和C分在左边，B和D分在右边，经过计算（比如A，实际值-1 - 预测值-1 = 残差0，比如C，实际值-1 - 预测值-1 = 0），此时所有人的残差都是0。残差值都为0，相当于第二棵树的预测值和它们的实际值相等，则只需把第二棵树的结论累加到第一棵树上就能得到真实年龄了，即每个人都得到了真实的预测值。</p><p>换句话说，现在A,B,C,D的预测值都和真实年龄一致了。Perfect！</p><ul><li>A: 14岁高一学生，购物较少，经常问学长问题，预测年龄A = 15 – 1 = 14</li><li>B: 16岁高三学生，购物较少，经常被学弟问问题，预测年龄B = 15 + 1 = 16</li><li>C: 24岁应届毕业生，购物较多，经常问师兄问题，预测年龄C = 25 – 1 = 24</li><li>D: 26岁工作两年员工，购物较多，经常被师弟问问题，预测年龄D = 25 + 1 = 26</li></ul><p>所以，GBDT需要将多棵树的得分累加得到最终的预测得分，且每一次迭代，都在现有树的基础上，增加一棵树去拟合前面树的预测结果与真实值之间的残差。</p><h2 id="2-梯度提升和梯度下降的区别和联系是什么？">2.梯度提升和梯度下降的区别和联系是什么？</h2><p>下表是梯度提升算法和梯度下降算法的对比情况。可以发现，两者都是在每 一轮迭代中，利用损失函数相对于模型的负梯度方向的信息来对当前模型进行更 新，只不过在梯度下降中，模型是以参数化形式表示，从而模型的更新等价于参 数的更新。而在梯度提升中，模型并不需要进行参数化表示，而是直接定义在函 数空间中，从而大大扩展了可以使用的模型种类。</p><p><img src="https://camo.githubusercontent.com/17b8382a7346470c9f203f29843ccfc99c1016eb4c963ffbe4d0bc6dd1b2b457/687474703a2f2f7778332e73696e61696d672e636e2f6d773639302f3030363330446566677931673474647768717a73646a3330727030616664686f2e6a7067" alt=""></p><h2 id="3-GBDT的优点和局限性有哪些？">3.<strong>GBDT</strong>的优点和局限性有哪些？</h2><h3 id="3-1-优点">3.1 优点</h3><ol><li>预测阶段的计算速度快，树与树之间可并行化计算。</li><li>在分布稠密的数据集上，泛化能力和表达能力都很好，这使得GBDT在Kaggle的众多竞赛中，经常名列榜首。</li><li>采用决策树作为弱分类器使得GBDT模型具有较好的解释性和鲁棒性，能够自动发现特征间的高阶关系。</li></ol><h3 id="3-2-局限性">3.2 局限性</h3><ol><li>GBDT在高维稀疏的数据集上，表现不如支持向量机或者神经网络。</li><li>GBDT在处理文本分类特征问题上，相对其他模型的优势不如它在处理数值特征时明显。</li><li>训练过程需要串行训练，只能在决策树内部采用一些局部并行的手段提高训练速度。</li></ol><h2 id="4-RF-随机森林-与GBDT之间的区别与联系">4. RF(随机森林)与GBDT之间的区别与联系</h2><p><strong>相同点</strong>：</p><ul><li>都是由多棵树组成，最终的结果都是由多棵树一起决定。</li><li>RF和GBDT在使用CART树时，可以是分类树或者回归树。</li></ul><p><strong>不同点</strong>：</p><ul><li>组成随机森林的树可以并行生成，而GBDT是串行生成</li><li>随机森林的结果是多数表决表决的，而GBDT则是多棵树累加之和</li><li>随机森林对异常值不敏感，而GBDT对异常值比较敏感</li><li>随机森林是减少模型的方差，而GBDT是减少模型的偏差</li><li>随机森林不需要进行特征归一化。而GBDT则需要进行特征归一化</li></ul><p>原文转自：<a href="https://github.com/NLP-LOVE/ML-NLP/blob/master/Machine%20Learning/3.2%20GBDT/3.2%20GBDT.md">https://github.com/NLP-LOVE/ML-NLP/blob/master/Machine Learning/3.2 GBDT/3.2 GBDT.md</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> GBDT算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVM支持向量机算法</title>
      <link href="/2022/09/08/SVM%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/SVM%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>1.SVM</h1><p>支持向量机（support vector machines，SVM）是一种<strong>二分类模型</strong>，它将实例的特征向量映射为空间中的一些点，SVM 的目的就是想要画出一条线，以 “最好地” 区分这两类点，以至如果以后有了新的点，这条线也能做出很好的分类。SVM 适合中小型数据样本、非线性、高维的分类问题。</p><p>SVM 最早是由 Vladimir N. Vapnik 和 Alexey Ya. Chervonenkis 在1963年提出，目前的版本（soft margin）是由 Corinna Cortes 和 Vapnik 在1993年提出，并在1995年发表。深度学习（2012）出现之前，SVM 被认为机器学习中近十几年来最成功，表现最好的算法。</p><h2 id="1-1-SVM-基本概念">1.1 SVM 基本概念</h2><p>将实例的特征向量（以二维为例）映射为空间中的一些点，如下图的实心点和空心点，它们属于不同的两类。SVM 的目的就是想要画出一条线，以“最好地”区分这两类点，以至如果以后有了新的点，这条线也能做出很好的分类。</p><p>本质上就是找到一条直线或曲线能够最佳程度拟合数据点。</p><p><img src="https://img-blog.csdnimg.cn/2019030209095227.png" alt="img"></p><p><strong>Q1：能够画出多少条线对样本点进行区分？</strong><br>答：线是有无数条可以画的，区别就在于效果好不好，每条线都可以叫做一个划分超平面。比如上面的绿线就不好，蓝线还凑合，红线看起来就比较好。我们所希望找到的这条效果最好的线就是具有 “最大间隔的划分超平面”。</p><p><strong>Q2：为什么要叫作“超平面”呢？</strong><br>答：因为样本的特征很可能是高维的，此时样本空间的划分就不是一条线了。</p><p><strong>Q3：画线的标准是什么？/ 什么才叫这条线的效果好？/ 哪里好？</strong><br>答：SVM 将会寻找可以区分两个类别并且能使间隔（margin）最大的划分超平面。比较好的划分超平面，样本局部扰动时对它的影响最小、产生的分类结果最鲁棒、对未见示例的泛化能力最强。</p><p><strong>Q4：间隔（margin）是什么？</strong><br>答：对于任意一个超平面，其两侧数据点都距离它有一个最小距离（垂直距离），这两个最小距离的和就是间隔。比如下图中两条虚线构成的带状区域就是 margin，虚线是由距离中央实线最近的两个点所确定出来的（也就是由支持向量决定）。但此时 margin 比较小，如果用第二种方式画，margin 明显变大也更接近我们的目标。</p><img src="https://img-blog.csdnimg.cn/20190302091934374.png" alt="img" style="zoom:50%;" /><p><strong>Q5：为什么要让 margin 尽量大？</strong><br>答：因为大 margin 犯错的几率比较小，也就是更鲁棒啦。</p><p><strong>Q6：支持向量是什么？</strong><br>答：从上图可以看出，虚线上的点到划分超平面的距离都是一样的，实际上只有这几个点共同确定了超平面的位置，因此被称作 “支持向量（support vectors）”，“支持向量机” 也是由此来的。</p><h2 id="1-2-hard-margin-SVM">1.2 hard-margin SVM</h2><img src="https://img-blog.csdnimg.cn/20200916085324603.png" alt="img" style="zoom: 67%;" /><p>划分超平面可以定义为一个线性方程：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w^{T} X+b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，其中：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mrow><mo fence="true">{</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">;</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">;</mo><mo>…</mo><mo separator="true">;</mo><msub><mi>w</mi><mi>d</mi></msub><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">w=\left\{w_{1} ; w_{2} ; \ldots ; w_{d}\right\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span>是一个法向量，决定了超平面的方向，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> 是特征值的个数</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>为训练样本</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>为位移项，决定了超平面与原点之间的距离</li></ul><p>只要确定了法向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 和位移 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>，就可以唯一地确定一个划分超平面。划分超平面和它两侧的边际超平面上任意一点的距离为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{||w||}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3651em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣∣</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">∣∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>利用一些数学推导，公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>∗</mo><mrow><mo fence="true">(</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y_{i} *\left(w_{0}+w_{1} x_{1}+w_{2} x_{2}\right) \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，∀i可变为有限制的凸优化问题(convex quadratic optimization)</p><p>利用 Karush-Kuhn-Tucker (KKT)条件和拉格朗日公式，可以推出 MMH 可以被表示为以下“决定边界 (decision boundary)”</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mrow><mo fence="true">(</mo><msup><mi>X</mi><mi>T</mi></msup><mo fence="true">)</mo></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>l</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><msub><mi>α</mi><mi>i</mi></msub><msub><mi>X</mi><mi>i</mi></msub><msup><mi>X</mi><mi>T</mi></msup><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">d\left(X^{T}\right)=\sum_{i=1}^{l} y_{i} \alpha_{i} X_{i} X^{T}+b_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2413em;vertical-align:-0.35em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1138em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>此方程就代表了边际最大化的划分超平面。</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>是支持向量点的个数，因为大部分的点并不是支持向量点，只有个别在边际超平面上的点才是支持向量点。那么我们就只对属于支持向量点的进行求和；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为支持向量点的特征值；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是支持向量点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的类别标记（class label)，比如+1还是-1；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">X^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 是要测试的实例，想知道它应该属于哪一类，把它带入该方程</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都是单一数值型参数，由以上提到的最优算法得出，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是拉格朗日乘数。</li></ul><p>每当有新的测试样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，将它带入该方程，看看该方程的值是正还是负，根据符号进行归类。</p><h2 id="1-3-SVM-应用实例">1.3 SVM 应用实例</h2><p>看一下 SVM 如何求出一个划分超平面。</p><p>我们已经知道了两个支持向量点（1,1）和（2,3），设置权重为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>2</mn><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w = (a , 2a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>，那么将这两个支持向量点坐标分别带入公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo>=</mo><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">w^Tx + b = ± 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">±</span><span class="mord">1</span></span></span></span>中，可以得到:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mo>+</mo><mn>2</mn><mi>a</mi><mo>+</mo><msub><mi>w</mi><mn>0</mn></msub><mo>=</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mspace width="1em"/><mi>u</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a+2 a+w_{0}=-1, \quad using point (1,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><mi>a</mi><mo>+</mo><mn>6</mn><mi>a</mi><mo>+</mo><msub><mi>w</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mspace width="1em"/><mi>u</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>p</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2 a+6 a+w_{0}=1, \quad using point (2,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></span></p><img src="https://s3.bmp.ovh/imgs/2021/09/c51c221f7e95459b.png" style="zoom:67%;" /><p>由于 SVM 算法本身的实现非常复杂，所以不研究如何实现 SVM，而是采用 sklearn 库来学习 SVM 的应用问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sklearn 库中导入 svm 模块</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义三个点和标签</span></span><br><span class="line">X = [[<span class="number">2</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">y = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 定义分类器，clf 意为 classifier，是分类器的传统命名</span></span><br><span class="line">clf = svm.SVC(kernel = <span class="string">&#x27;linear&#x27;</span>)  <span class="comment"># .SVC（）就是 SVM 的方程，参数 kernel 为线性核函数</span></span><br><span class="line"><span class="comment"># 训练分类器</span></span><br><span class="line">clf.fit(X, y)  <span class="comment"># 调用分类器的 fit 函数建立模型（即计算出划分超平面，且所有相关属性都保存在了分类器 cls 里）</span></span><br><span class="line"><span class="comment"># 打印分类器 clf 的一系列参数</span></span><br><span class="line"><span class="built_in">print</span>(clf)</span><br><span class="line"><span class="comment"># 支持向量</span></span><br><span class="line"><span class="built_in">print</span>(clf.support_vectors_)</span><br><span class="line"><span class="comment"># 属于支持向量的点的 index </span></span><br><span class="line"><span class="built_in">print</span>(clf.support_)</span><br><span class="line"><span class="comment"># 在每一个类中有多少个点属于支持向量</span></span><br><span class="line"><span class="built_in">print</span>(clf.n_support_) </span><br><span class="line"><span class="comment"># 预测一个新的点</span></span><br><span class="line"><span class="built_in">print</span>(clf.predict([[<span class="number">2</span>,<span class="number">0</span>]]))</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印分类器 clf 的一系列参数</span></span><br><span class="line">SVC(C=<span class="number">1.0</span>, cache_size=<span class="number">200</span>, class_weight=<span class="literal">None</span>, coef0=<span class="number">0.0</span>,</span><br><span class="line">  decision_function_shape=<span class="string">&#x27;ovr&#x27;</span>, degree=<span class="number">3</span>, gamma=<span class="string">&#x27;auto_deprecated&#x27;</span>,</span><br><span class="line">  kernel=<span class="string">&#x27;linear&#x27;</span>, max_iter=-<span class="number">1</span>, probability=<span class="literal">False</span>, random_state=<span class="literal">None</span>,</span><br><span class="line">  shrinking=<span class="literal">True</span>, tol=<span class="number">0.001</span>, verbose=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 支持向量</span></span><br><span class="line">[[<span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line"> [<span class="number">2.</span> <span class="number">3.</span>]]</span><br><span class="line"><span class="comment"># 属于支持向量的点的 index</span></span><br><span class="line">[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"><span class="comment"># 在每一个类中有多少个点属于支持向量</span></span><br><span class="line">[<span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 预测一个新的点</span></span><br><span class="line">[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(__doc__)</span><br><span class="line"><span class="comment"># 导入相关的包</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pylab <span class="keyword">as</span> pl  <span class="comment"># 绘图功能</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 40 个点</span></span><br><span class="line">np.random.seed(<span class="number">0</span>) <span class="comment"># 让每次运行程序生成的随机样本点不变</span></span><br><span class="line"><span class="comment"># 生成训练实例并保证是线性可分的</span></span><br><span class="line"><span class="comment"># np._r表示将矩阵在行方向上进行相连</span></span><br><span class="line"><span class="comment"># random.randn(a,b)表示生成 a 行 b 列的矩阵，且随机数服从标准正态分布</span></span><br><span class="line"><span class="comment"># array(20,2) - [2,2] 相当于给每一行的两个数都减去 2</span></span><br><span class="line">X = np.r_[np.random.randn(<span class="number">20</span>, <span class="number">2</span>) - [<span class="number">2</span>, <span class="number">2</span>], np.random.randn(<span class="number">20</span>, <span class="number">2</span>) + [<span class="number">2</span>, <span class="number">2</span>]]</span><br><span class="line"><span class="comment"># 两个类别 每类有 20 个点，Y 为 40 行 1 列的列向量</span></span><br><span class="line">Y = [<span class="number">0</span>] * <span class="number">20</span> + [<span class="number">1</span>] * <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 svm 模型</span></span><br><span class="line">clf = svm.SVC(kernel=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">clf.fit(X, Y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获得划分超平面</span></span><br><span class="line"><span class="comment"># 划分超平面原方程：w0x0 + w1x1 + b = 0</span></span><br><span class="line"><span class="comment"># 将其转化为点斜式方程，并把 x0 看作 x，x1 看作 y，b 看作 w2</span></span><br><span class="line"><span class="comment"># 点斜式：y = -(w0/w1)x - (w2/w1)</span></span><br><span class="line">w = clf.coef_[<span class="number">0</span>]  <span class="comment"># w 是一个二维数据，coef 就是 w = [w0,w1]</span></span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]  <span class="comment"># 斜率</span></span><br><span class="line">xx = np.linspace(-<span class="number">5</span>, <span class="number">5</span>)  <span class="comment"># 从 -5 到 5 产生一些连续的值（随机的）</span></span><br><span class="line"><span class="comment"># .intercept[0] 获得 bias，即 b 的值，b / w[1] 是截距</span></span><br><span class="line">yy = a * xx - (clf.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]  <span class="comment"># 带入 x 的值，获得直线方程</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 画出和划分超平面平行且经过支持向量的两条线（斜率相同，截距不同）</span></span><br><span class="line">b = clf.support_vectors_[<span class="number">0</span>] <span class="comment"># 取出第一个支持向量点</span></span><br><span class="line">yy_down = a * xx + (b[<span class="number">1</span>] - a * b[<span class="number">0</span>]) </span><br><span class="line">b = clf.support_vectors_[-<span class="number">1</span>] <span class="comment"># 取出最后一个支持向量点</span></span><br><span class="line">yy_up = a * xx + (b[<span class="number">1</span>] - a * b[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看相关的参数值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;w: &quot;</span>, w)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;a: &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;support_vectors_: &quot;</span>, clf.support_vectors_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;clf.coef_: &quot;</span>, clf.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 scikit-learin 中，coef_ 保存了线性模型中划分超平面的参数向量。形式为(n_classes, n_features)。若 n_classes &gt; 1，则为多分类问题，(1，n_features) 为二分类问题。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制划分超平面，边际平面和样本点</span></span><br><span class="line">pl.plot(xx, yy, <span class="string">&#x27;k-&#x27;</span>)</span><br><span class="line">pl.plot(xx, yy_down, <span class="string">&#x27;k--&#x27;</span>)</span><br><span class="line">pl.plot(xx, yy_up, <span class="string">&#x27;k--&#x27;</span>)</span><br><span class="line"><span class="comment"># 圈出支持向量</span></span><br><span class="line">pl.scatter(clf.support_vectors_[:, <span class="number">0</span>], clf.support_vectors_[:, <span class="number">1</span>],</span><br><span class="line">           s=<span class="number">80</span>, facecolors=<span class="string">&#x27;none&#x27;</span>)</span><br><span class="line">pl.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=Y, cmap=pl.cm.Paired)</span><br><span class="line"></span><br><span class="line">pl.axis(<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">pl.show()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Automatically created module for IPython interactive environment</span><br><span class="line">w:  [0.90230696 0.64821811]</span><br><span class="line">a:  -1.391980476255765</span><br><span class="line">support_vectors_:  [[-1.02126202  0.2408932 ]</span><br><span class="line"> [-0.46722079 -0.53064123]</span><br><span class="line"> [ 0.95144703  0.57998206]]</span><br><span class="line">clf.coef_:  [[0.90230696 0.64821811]]</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190302195149698.png" alt="img"></p><h1>2.核方法</h1><h2 id="2-1使用核方法的动机">2.1使用核方法的动机</h2><p>在线性 SVM 中转化为最优化问题时求解的公式计算都是以内积(dot product)形式出现的，其中 ϕ ( X ) \phi(X)ϕ(X) 是把训练集中的向量点转化到高维的非线性映射函数，因为内积的算法复杂度非常大，所以我们利用核函数来取代计算非线性映射函数的内积。</p><p>以下核函数和非线性映射函数的内积等同，但核函数 K 的运算量要远少于求内积。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>ϕ</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><mi>ϕ</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">K\left(X_{i}, X_{j}\right)=\phi\left(X_{i}\right) \cdot \phi\left(X_{j}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><h2 id="2-2常用的核函数（kernel-functions）">2.2常用的核函数（kernel functions）</h2><p>h 度多项式核函数(polynomial kernel of degree h)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msup><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>j</mi></msub><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi>h</mi></msup></mrow><annotation encoding="application/x-tex">K\left(X_{i}, X_{j}\right)=\left(X_{i}, X_{j}+1\right)^{h}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2751em;vertical-align:-0.2861em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.989em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>高斯径向基核函数(Gaussian radial basis function kernel)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mrow><mo fence="true">∥</mo><msub><mi>X</mi><mi>i</mi></msub><mo>−</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">∥</mo></mrow><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">K\left(X_{i}, X_{j}\right)=e^{-\left\|X_{i}-X_{j}\right\|^{2} / 2 \sigma^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0369em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="minner mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∥</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight">/2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>S 型核函数(Sigmoid function kernel)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mrow><mo fence="true">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>X</mi><mi>j</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>k</mi><msub><mi>X</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>X</mi><mi>j</mi></msub><mo>−</mo><mi>δ</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">K\left(X_{i}, X_{j}\right)=\tanh \left(k X_{i} \cdot X_{j}-\delta\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mop">tanh</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p><strong>如何选择使用哪个 kernel ？</strong></p><ol><li>根据先验知识，比如图像分类，通常使用 RBF（高斯径向基核函数），文字不使用 RBF。</li><li>尝试不同的 kernel，根据结果准确度而定尝试不同的 kernel，根据结果准确度而定。</li></ol><h2 id="2-3核函数举例">2.3核函数举例</h2><p>假设定义两个向量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x = ( x_1 , x _2 , x_ 3 ) x = (x_1, x_2, x_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>定义方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f(x)=\left(x_{1} x_{1}, x_{1} x_{2}, x_{1} x_{3}, x_{2} x_{1}, x_{2} x_{2}, x_{2} x_{3}, x_{3} x_{1}, x_{3} x_{2}, x_{3} x_{3}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>核函数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">K(x,y)=(&lt;x,y&gt;) ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>假设：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mtext>，</mtext><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=(1,2,3)，y=(4,5,6)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mclose">)</span></span></span></span><br><strong>不用核函数，直接求内积：</strong></p><p><img src="https://s3.bmp.ovh/imgs/2021/09/5002651334e8d2a5.png" alt=""></p><p><strong>使用核函数：</strong></p><p><em>K</em>(<em>x</em>,<em>y</em>)=(4+10+18)2=322=1024</p><p>同样的结果，使用 kernel 方法计算容易很多。而这只是 9 维的情况，如果维度更高，那么直接求内积的方法运算复杂度会非常大。</p><p><strong>所以使用 kernel 的意义在于：</strong></p><ol><li>将向量的维度 从低维映射到高维</li><li>降低运算复杂度</li></ol><h1>3.相关概念补充</h1><h2 id="3-1性可区分和线性不可区分">3.1性可区分和线性不可区分</h2><p>能够用一条直线对样本点进行分类的属于线性可区分（linear separable），否则为线性不可区分（linear inseparable)。</p><p>以下三个例子，都是线性不可区分的，即无法用一条直线将两类样本点区分开。</p><p><img src="https://img-blog.csdnimg.cn/20190302092521390.jpg" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20190302092550442.jpg" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20190302092924879.png" alt="img"></p><p>而刚才的例子就是线性可区分的。</p><p><img src="https://img-blog.csdnimg.cn/20190302093034118.png" alt="img"></p><p><strong>在线性不可分的情况下，数据集在空间中对应的向量无法被一个超平面区分开，如何处理？</strong></p><p><strong>两个步骤来解决：</strong></p><ul><li>利用一个非线性的映射把原数据集中的向量点转化到一个更高维度的空间中（比如下图将二维空间中的点映射到三维空间）</li><li>在这个高维度的空间中找一个线性的超平面来根据线性可分的情况处理</li></ul><p><img src="https://img-blog.csdnimg.cn/20190303080800401.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxMzQ3ODY5,size_16,color_FFFFFF,t_70" alt="img"></p><p>比如想要将红点和蓝点变成线性可分的，那么就将映射 y = x 变成映射 y = x^2<br>，这样就线性可分了。</p><p><img src="https://img-blog.csdnimg.cn/20190303081111808.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20190303081101648.png" alt="img"></p><p><strong>如何利用非线性映射将原始数据转化到高维空间中去？</strong></p><p>例子：<br>有一个 3 维输入向量：X = ( x 1 , x 2 , x 3 ) X=(x_1,x_2,x_3)</p><p>将其转化到 6 维空间 Z 中去：</p><p><em>ϕ</em>1(<em>X</em>)=<em>x</em>1，<em>ϕ</em>2(<em>X</em>)=<em>x</em>2，<em>ϕ</em>3(<em>X</em>)=<em>x</em>3，<em>ϕ</em>4(<em>X</em>)=(<em>x</em>1)2，<em>ϕ</em>5(<em>X</em>)=<em>x</em>1<em>x</em>2，<em>a<strong>n</strong>d</em> <em>ϕ</em>6(<em>X</em>)=<em>x</em>1<em>x</em>3</p><p>新的决策超平面：d ( Z ) = WZ + b，其中 W 和 Z 是向量，这个超平面是线性的。</p><p>解出 W 和 b 之后，并且带入回原方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>d</mi><mo stretchy="false">(</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><msub><mi>w</mi><mn>4</mn></msub><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msub><mi>w</mi><mn>5</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>6</mn></msub><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi>b</mi><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>z</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>z</mi><mn>2</mn></msub><mo>+</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>w</mi><mn>3</mn></msub><msub><mi>z</mi><mn>3</mn></msub><mo>+</mo><msub><mi>w</mi><mn>4</mn></msub><msub><mi>z</mi><mn>4</mn></msub><mo>+</mo><msub><mi>w</mi><mn>5</mn></msub><msub><mi>z</mi><mn>5</mn></msub><mo>+</mo><msub><mi>w</mi><mn>6</mn></msub><msub><mi>z</mi><mn>6</mn></msub><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;d(Z)=w_{1} x_{1}+w_{2} x_{2}+w_{3} x_{3}+w_{4}\left(x_{1}\right)^{2}+w_{5} x_{1} x_{2}+w_{6} x_{1} x_{3}+b=w_{1} z_{1}+w_{2} z_{2}+ \\&amp;w_{3} z_{3}+w_{4} z_{4}+w_{5} z_{5}+w_{6} z_{6}+b\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.114em;vertical-align:-1.307em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.807em;"><span style="top:-3.807em;"><span class="pstrut" style="height:2.954em;"></span><span class="mord"></span></span><span style="top:-2.307em;"><span class="pstrut" style="height:2.954em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.307em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.807em;"><span style="top:-3.853em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">+</span></span></span><span style="top:-2.353em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.307em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>思考问题：</strong></p><ul><li>如何选择合理的非线性转化把数据转到高维空间中？</li><li>如何解决计算内积时算法复杂度非常高的问题？</li></ul><h2 id="3-2-SVM-可扩展到多分类问题">3.2 SVM 可扩展到多分类问题</h2><p>SVM 扩展可解决多个类别分类问题：<br>对于每个类，有一个当前类和其他类的二类分类器（one-vs-rest）<br>将多分类问题转化为 n 个二分类问题，n 就是类别个数。</p><h2 id="3-3-SVM-算法特性">3.3 SVM 算法特性</h2><p>训练好的模型的算法复杂度是由支持向量的个数决定的，而不是由数据的维度决定的。所以 SVM 不太容易产生 overfitting。<br>SVM 训练出来的模型完全依赖于支持向量，即使训练集里面所有非支持向量的点都被去除，重复训练过程，结果仍然会得到完全一样的模型。<br>一个 SVM 如果训练得出的支持向量个数比较少，那么SVM 训练出的模型比较容易被泛化。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支持向量机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SMOTE过采样算法</title>
      <link href="/2022/09/08/SMOTE%E8%BF%87%E9%87%87%E6%A0%B7%E7%AE%97%E6%B3%95%E3%80%81/"/>
      <url>/2022/09/08/SMOTE%E8%BF%87%E9%87%87%E6%A0%B7%E7%AE%97%E6%B3%95%E3%80%81/</url>
      
        <content type="html"><![CDATA[<h1>一、问题背景：类别不平衡</h1><h2 id="从模型的训练过程来看"><strong>从模型的训练过程来看</strong></h2><p>​从训练模型的角度来说，如果某类的样本数量很少，那么这个类别所提供的“信息”就太少。<br>​        使用经验风险（模型在训练集上的平均损失）最小化作为模型的学习准则。设损失函数为0-1 loss（这是一种典型的均等代价的损失函数），那么优化目标就等价于错误率最小化（也就是accuracy最大化）。考虑极端情况：1000个训练样本中，正类样本999个，负类样本1个。训练过程中在某次迭代结束后，模型把所有的样本都分为正类，虽然分错了这个负类，但是所带来的损失实在微不足道，accuracy已经是99.9%，于是满足停机条件或者达到最大迭代次数之后自然没必要再优化下去，ok，到此为止，训练结束！<br>​        于是这个模型没有学习到如何去判别出少数类。</p><h2 id="从模型的预测过程来看"><strong>从模型的预测过程来看</strong></h2><p>​考虑二项Logistic回归模型。输入一个样本 x ，模型输出的是其属于正类的概率 y’ 。当 y’&gt;0.5时，模型判定该样本属于正类，否则就是属于反类。<br>​为什么是0.5呢？可以认为模型是出于最大后验概率决策的角度考虑的，选择了0.5意味着当模型估计的样本属于正类的后验概率要大于样本属于负类的后验概率时就将样本判为正类。但实际上，这个后验概率的估计值是否准确呢？<br>​从几率（odds）的角度考虑：几率表达的是样本属于正类的可能性与属于负类的可能性的比值。模型对于样本的预测几率为 y’/(1-y’) 。<br>​模型在做出决策时，当然希望能够遵循真实样本总体的正负类样本分布：设 θ 等于正类样本数除以全部样本数，那么样本的真实几率为 θ/(1−θ) 。当观测几率大于真实几率时，也就是 y’&gt;θ 时，那么就判定这个样本属于正类。<br>​        虽然我们无法获悉真实样本总体，但之于训练集，存在这样一个假设：训练集是真实样本总体的无偏采样。正是因为这个假设，所以认为训练集的观测几率 θ/(1−θ) 就代表了真实几率 θ/(1−θ) 。<br>​        所以，在这个假设下，当一个样本的预测几率大于观测几率时，就应该将样本判断为正类。</p><h1>二、解决方法</h1><p>目前主要有三种办法：</p><ol><li><strong>调整 θ值</strong>（也叫再缩放、再平衡、阈值移动、是代价敏感学习的基础）</li></ol><p>根据训练集的正负样本比例，调整 θ 值。</p><p>这样做的依据是上面所述的对训练集的假设。但在给定任务中，这个假设是否成立，还有待讨论。</p><ol start="2"><li><strong>过采样</strong></li></ol><p>对训练集里面样本数量较少的类别（少数类）进行过采样，合成新的样本来缓解类不平衡。</p><p>下面将介绍一种经典的过采样算法：<strong>SMOTE</strong>。</p><ol start="3"><li><strong>欠采样</strong></li></ol><p>对训练集里面样本数量较多的类别（多数类）进行欠采样，抛弃一些样本来缓解类不平衡。</p><h1>三、SMOTE过采样算法</h1><p>SMOTE全称是Synthetic Minority Oversampling Technique即<strong>合成少数类过采样技术</strong>，它是基于随机过采样算法的一种改进方案，由于随机过采样采取简单复制样本的策略来增加少数类样本，这样容易产生模型过拟合的问题，即使得模型学习到的信息过于特别(Specific)而不够泛化(General)，SMOTE算法的基本思想是对少数类样本进行分析并根据少数类样本人工合成新样本添加到数据集中，算法流程如下。</p><p>1、对于少数类中每一个样本x，以欧氏距离为标准计算它到少数类样本集中所有样本的距离，得到其k近邻。</p><p>2、根据样本不平衡比例设置一个采样比例以确定采样倍率N，对于每一个少数类样本x，从其k近邻中随机选择若干个样本，假设选择的近邻为xn。</p><p>3、对于每一个随机选出的近邻xn，分别与原样本按照如下的公式构建新的样本</p><pre><code>xnew=x+rand(0,1)∗|x−xn|</code></pre><img src="https://img-blog.csdn.net/20180128200143864?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2V5Q29kZXI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img" style="zoom: 50%;" /><p><strong>smote算法的伪代码如下：</strong></p><img src="https://img-blog.csdn.net/20180128200323892?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2V5Q29kZXI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img" style="zoom:67%;" /><p>因此，smote算法的思想是<strong>合成新的少数类样本</strong>，合成的策略是对每个少数类样本a，从它的最近邻中随机选一个样本b，然后在a、b之间的连线上随机选一点作为新合成的少数类样本。</p><p><strong>下面具体介绍如何合成新的样本</strong></p><p>​设训练集的一个少数类的样本数为 T ，那么SMOTE算法将为这个少数类合成 NT 个新样本。这里要求 N 必须是正整数，如果给定的 N&lt;1 那么算法将“认为”少数类的样本数 T=NT ，并将强制 N=1 。 考虑该少数类的一个样本 ii ，其特征向量为 xi,i∈{1,…,T}：</p><p>1.首先从该少数类的全部 T 个样本中找到样本 xi 的 k个近邻（例如用欧氏距离），记为 xi(near),near∈{1,…,k}；</p><p>2.然后从这 k 个近邻中随机选择一个样本 xi(nn) ，再生成一个0 到 1 之间的随机数 ζ1 ，从而合成一个新样本 xi1 ：<br>xi1=xi+ζ1⋅(xi(nn)−xi)</p><p>3.将步骤2重复进行 N 次，从而可以合成 NN 个新样本：xinew,new∈1,…,N。</p><p>那么，对全部的 T 个少数类样本进行上述操作，便可为该少数类合成 NT个新样本。</p><p>如果样本的特征维数是 2维，那么每个样本都可以用二维平面上的一个点来表示。SMOTE算法所合成出的一个新样本 xi1 相当于是表示样本 xi的点和表示样本 xi(nn) 的点之间所连线段上的一个点。所以说该算法是基于“插值”来合成新样本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SMOTE算法及其python实现</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> NearestNeighbors</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Smote</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,samples,N=<span class="number">10</span>,k=<span class="number">5</span></span>):</span><br><span class="line">        self.n_samples,self.n_attrs=samples.shape</span><br><span class="line">        self.N=N</span><br><span class="line">        self.k=k</span><br><span class="line">        self.samples=samples</span><br><span class="line">        self.newindex=<span class="number">0</span></span><br><span class="line">       <span class="comment"># self.synthetic=np.zeros((self.n_samples*N,self.n_attrs))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">over_sampling</span>(<span class="params">self</span>):</span><br><span class="line">        N=<span class="built_in">int</span>(self.N/<span class="number">100</span>)</span><br><span class="line">        self.synthetic = np.zeros((self.n_samples * N, self.n_attrs))</span><br><span class="line">        neighbors=NearestNeighbors(n_neighbors=self.k).fit(self.samples)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;neighbors&#x27;</span>,neighbors</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.samples)):</span><br><span class="line">            nnarray=neighbors.kneighbors(self.samples[i].reshape(<span class="number">1</span>,-<span class="number">1</span>),return_distance=<span class="literal">False</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="comment">#print nnarray</span></span><br><span class="line">            self._populate(N,i,nnarray)</span><br><span class="line">        <span class="keyword">return</span> self.synthetic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># for each minority class samples,choose N of the k nearest neighbors and generate N synthetic samples.</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_populate</span>(<span class="params">self,N,i,nnarray</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">            nn=random.randint(<span class="number">0</span>,self.k-<span class="number">1</span>)</span><br><span class="line">            dif=self.samples[nnarray[nn]]-self.samples[i]</span><br><span class="line">            gap=random.random()</span><br><span class="line">            self.synthetic[self.newindex]=self.samples[i]+gap*dif</span><br><span class="line">            self.newindex+=<span class="number">1</span></span><br><span class="line">a=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line">s=Smote(a,N=<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span> s.over_sampling()</span><br></pre></td></tr></table></figure><h1>SMOTE算法的缺陷</h1><p>​该算法主要存在两方面的问题:一是在近邻选择时,存在一定的盲目性。从上面的算法流程可以看出,在算法执行过程中,需要确定K值,即选择多少个近邻样本,这需要用户自行解决。从K值的定义可以看出,K值的下限是M值(M值为从K个近邻中随机挑选出的近邻样本的个数,且有M&lt; K),M的大小可以根据负类样本数量、正类样本数量和数据集最后需要达到的平衡率决定。但K值的上限没有办法确定,只能根据具体的数据集去反复测试。因此如何确定K值,才能使算法达到最优这是未知的。<br>​       另外,该算法无法克服非平衡数据集的数据分布问题,容易产生分布边缘化问题。由于负类样本的分布决定了其可选择的近邻,如果一个负类样本处在负类样本集的分布边缘,则由此负类样本和相邻样本产生的“人造”样本也会处在这个边缘,且会越来越边缘化,从而模糊了正类样本和负类样本的边界,而且使边界变得越来越模糊。这种边界模糊性,虽然使数据集的平衡性得到了改善,但加大了分类算法进行分类的难度．</p><h1>推荐阅读：</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650718717&amp;idx=1&amp;sn=85038d7c906c135120a8e1a2f7e565ad&amp;scene=0#wechat_redirect">解决真实世界问题：如何在不平衡类上使用机器学习?</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650724464&amp;idx=1&amp;sn=1f34358862bacfb4c7ea17c864d8c44d&amp;chksm=871b1c0eb06c95180e717d8316b0380602f638a764530b4b9e35ac812c7c33799d3357d46f00&amp;scene=0&amp;key=0f5e635eeb6bf20a076ad60d7f11c6ef5c5c1c8f02873bc8b458381b629a1e2ae76174d0d4ba34331c71d095e3b3b92aa7fff5e1e11badeaf6c87ff90fd264f3dc6b1eb074eaccb2ac46e8f2d440cefd&amp;ascene=0&amp;uin=MTU1NTY3MTA0Mg==&amp;devicetype=iMac%20MacBookPro12,1%20OSX%20OSX%2010.11.6%20build%2815G1217%29&amp;version=12010310&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=csWk%2bJXfpl7rA8r527fLqF%2bF3EZEeBKpFRjI%2bWMXoPf2PEtPt/LMrscLX4GBl7gg">从重采样到数据合成：如何处理机器学习中的不平衡分类问题？</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聚类算法简述</title>
      <link href="/2022/09/08/%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E7%AE%80%E8%BF%B0/"/>
      <url>/2022/09/08/%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95%E7%AE%80%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1>一、K-Means(K均值)聚类</h1><p>算法步骤：<br>(1) 首先我们选择一些类/组，并随机初始化它们各自的中心点。中心点是与每个数据点向量长度相同的位置。这需要我们提前预知类的数量(即中心点的数量)。<br>(2) 计算每个数据点到中心点的距离，数据点距离哪个中心点最近就划分到哪一类中。<br>(3) 计算每一类中中心点作为新的中心点。<br>(4) 重复以上步骤，直到每一类中心在每次迭代后变化不大为止。也可以多次随机初始化中心点，然后选择运行结果最好的一个。<br>下图演示了K-Means进行分类的过程：</p><p><img src="https://img-blog.csdn.net/20180228115245278?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><ul><li>优点<ul><li>速度快，计算简便</li></ul></li><li>缺点<ul><li>我们必须提前知道数据有多少类/组。</li></ul></li></ul><p>K-Medians是K-Means的一种变体，是用数据集的<strong>中位数</strong>而不是<strong>均值</strong>来计算数据的中心点。<br>K-Medians的优势是使用中位数来计算中心点不受异常值的影响；缺点是计算中位数时需要对数据集中的数据进行排序，速度相对于K-Means较慢。</p><p>KMeans 具体过程如下：</p><p>1、比如下面是随机的一些点，我们想将这些点分成三类，聚类中用簇（cluster）表示，那么离得比较近的点肯定归为一个簇，最理想的情况就是如下所示，不同簇用不同的颜色表示。</p><p><img src="https://pic3.zhimg.com/80/v2-d9c547ddaafe2fcd76e75ad45d1aefa2_720w.webp" alt="img"></p><p>2、我们当然可以通过眼睛看来决定哪些点为一个簇，但是计算机不能，那么我们需要先进行初始化，即随机选三个点分别作为三个簇的中心，也就是质心，如下图的五角星。然后计算每个点到这三个质心的距离，将这些点分配给离它最近的质心。</p><p><img src="https://pic1.zhimg.com/80/v2-c57d35e16d2371dd7fb9f222bb54ca54_720w.webp" alt="img"></p><p>3、现在每个点都有所属的簇了，然后根据每个簇中的所有点重新计算簇的质心（一般是计算平均值），可以看到三个五角星的位置发生了变化。</p><p><img src="https://pic4.zhimg.com/80/v2-d4dfa5474faeab74b27ff5946472913b_720w.webp" alt="img"></p><p>4、然后又计算每个点到三个新的质心的距离，又将这些点和离它最近的质心归为一类，这些点的所属类别就发生了变化。不断迭代这个过程，直到质心的位置基本不变。</p><p>最终的结果就可能如下图所示：</p><p><img src="https://pic1.zhimg.com/80/v2-3508b3bc48dab6c61a9ab1925fa2a3c8_720w.webp" alt="img"></p><p>最刚开始的中心点是随机指定的，而中心点不同的指定方法，会使得聚类算法运行的最终结果有很大的不同。我们通常是进行多次初始化，多次运行聚类算法，取最好的那个结果。</p><p>KMeans 聚类算法有三个缺点：</p><ul><li>第一个就是对簇的数量的选择，我们希望指定一个簇数K，以使每个点和其最近的簇的距离之和最小。但是在实际情况中，我们很难找到一个合适的K值，因为我们不知道应该将数据分为几类。</li><li>Kmeans 算法会把所有的数据点都进行分类，但是很多情况下，会有一些离群点，这些点应该被剔除的，但是 Kmeans 算法还是会把它们归为某一类。</li><li>k均值聚类假设对每个簇来说，所有的方向都同等重要。这也就意味着k均值聚类主要适用于球形分布的数据，对于其他分布的数据分类可能不好。</li></ul><p><a href="https://zhuanlan.zhihu.com/p/94022640">机器学习漫谈</a></p><h2 id="二、均值漂移聚类">二、均值漂移聚类</h2><p>均值漂移聚类是基于滑动窗口的算法，来找到数据点的密集区域。这是一个基于<strong>质心</strong>的算法，通过将中心点的候选点更新为滑动窗口内点的均值来完成，来定位每个组/类的中心点。然后对这些候选窗口进行相似窗口进行去除，最终形成中心点集及相应的分组。</p><p>具体步骤：</p><ol><li>确定滑动窗口半径r，以随机选取的中心点C半径为r的圆形滑动窗口开始滑动。均值漂移类似一种爬山算法，在每一次迭代中向密度更高的区域移动，直到收敛。</li><li>每一次滑动到新的区域，计算滑动窗口内的均值来作为中心点，滑动窗口内的点的数量为窗口内的密度。在每一次移动中，窗口会想密度更高的区域移动。</li><li>移动窗口，计算窗口内的中心点以及窗口内的密度，知道没有方向在窗口内可以容纳更多的点，即一直移动到圆内密度不再增加为止。</li><li>步骤一到三会产生很多个滑动窗口，当多个滑动窗口重叠时，保留包含最多点的窗口，然后根据数据点所在的滑动窗口进行聚类。</li></ol><p>下图演示了均值漂移聚类的计算步骤：</p><p><img src="https://img-blog.csdn.net/2018022816141991?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>下面显示了所有滑动窗口从头到尾的整个过程。每个黑点代表滑动窗口的质心，每个灰点代表一个数据点。</p><p><img src="https://img-blog.csdn.net/201802281615434?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><ul><li>优点：<ul><li>不同于K-Means算法，均值漂移聚类算法不需要我们知道有多少类/组。</li><li>基于密度的算法相比于K-Means受均值影响较小。</li></ul></li><li>缺点：<ul><li>窗口半径r的选择可能是不重要的。</li></ul></li></ul><h1>三、基于密度的聚类方法(DBSCAN)</h1><p>与均值漂移聚类类似，DBSCAN也是基于密度的聚类算法。<br>具体步骤：</p><ol><li>首先确定半径r和minPoints. 从一个没有被访问过的任意数据点开始，以这个点为中心，r为半径的圆内包含的点的数量是否大于或等于minPoints，如果大于或等于minPoints则改点被标记为central point,反之则会被标记为noise point。</li><li>重复1的步骤，如果一个noise point存在于某个central point为半径的圆内，则这个点被标记为边缘点，反之仍为noise point。重复步骤1，知道所有的点都被访问过。<ul><li>优点：不需要知道簇的数量</li><li>缺点：需要确定距离r和minPoints</li></ul></li></ol><h1>四、用高斯混合模型（GMM）的最大期望（EM）聚类</h1><p>K-Means的缺点在于对聚类中心均值的简单使用。下面的图中的两个圆如果使用K-Means则不能作出正确的类的判断。同样的，如果数据集中的点类似下图中曲线的情况也是不能正确分类的。</p><p><img src="https://img-blog.csdn.net/20180228114540606?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>使用高斯混合模型（GMM）做聚类首先假设数据点是呈高斯分布的，相对应K-Means假设数据点是圆形的，高斯分布（椭圆形）给出了更多的可能性。我们有两个参数来描述簇的形状：均值和标准差。所以这些簇可以采取任何形状的椭圆形，因为在x，y方向上都有标准差。因此，每个高斯分布被分配给单个簇。<br>所以要做聚类首先应该找到数据集的均值和标准差，我们将采用一个叫做最大期望(EM)的优化算法。下图演示了使用GMMs进行最大期望的聚类过程。</p><p><img src="https://img-blog.csdn.net/20180301110131231?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>具体步骤：</p><ol><li>选择簇的数量（与K-Means类似）并随机初始化每个簇的高斯分布参数（均值和方差）。也可以先观察数据给出一个相对精确的均值和方差。</li><li>给定每个簇的高斯分布，计算每个数据点属于每个簇的概率。一个点越靠近高斯分布的中心就越可能属于该簇。</li><li>基于这些概率我们计算高斯分布参数使得数据点的概率最大化，可以使用数据点概率的加权来计算这些新的参数，权重就是数据点属于该簇的概率。</li><li>重复迭代2和3直到在迭代中的变化不大。<br>GMMs的优点：（1）GMMs使用均值和标准差，簇可以呈现出椭圆形而不是仅仅限制于圆形。K-Means是GMMs的一个特殊情况，是方差在所有维度上都接近于0时簇就会呈现出圆形。<br>（2）GMMs是使用概率，所有一个数据点可以属于多个簇。例如数据点X可以有百分之20的概率属于A簇，百分之80的概率属于B簇。也就是说GMMs可以支持混合资格。</li></ol><h1>五、凝聚层次聚类</h1><p>层次聚类算法分为两类：自上而下和自下而上。凝聚层级聚类(HAC)是自下而上的一种聚类算法。HAC首先将每个数据点视为一个单一的簇，然后计算所有簇之间的距离来合并簇，知道所有的簇聚合成为一个簇为止。<br>下图为凝聚层级聚类的一个实例：</p><p><img src="https://img-blog.csdn.net/20180301171047257?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>具体步骤：</p><ol><li><p>首先我们将每个数据点视为一个单一的簇，然后选择一个测量两个簇之间距离的度量标准。例如我们使用average linkage作为标准，它将两个簇之间的距离定义为第一个簇中的数据点与第二个簇中的数据点之间的平均距离。</p></li><li><p>在每次迭代中，我们将两个具有最小average linkage的簇合并成为一个簇。</p></li><li><p>重复步骤2知道所有的数据点合并成一个簇，然后选择我们需要多少个簇。</p><p>层次聚类优点：</p><p>（1）不需要知道有多少个簇<br>（2）对于距离度量标准的选择并不敏感<br>缺点：效率低</p></li></ol><h1>六、图团体检测(Graph Community Detection)</h1><p>当我们的数据可以被表示为网络或图是，可以使用图团体检测方法完成聚类。在这个算法中图团体（graph community）通常被定义为一种顶点(vertice)的子集，其中的顶点相对于网络的其他部分要连接的更加紧密。下图展示了一个简单的图，展示了最近浏览过的8个网站，根据他们的维基百科页面中的链接进行了连接。</p><p><img src="https://img-blog.csdn.net/20180301163648779?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvS2F0aGVyaW5lX2hzcg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p>模块性可以使用以下公式进行计算：</p><p><img src="http://a1.qpic.cn/psc?/V12XQ1QV3cpyPD/05RlWl8gsTOH*Z17MtCBzC0JD4R6wvdcv*86N9UpOdENV5t9cnIhnAJ2lLVYLDABvz6Y3HHcaaX6R6VltxA0tA!!/b&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=qwPTAKsD0wADACU!&amp;tl=1&amp;vuin=1005741898&amp;tm=1635408000&amp;sce=50-1-1&amp;rf=4-0" alt=""></p><p>组合学告诉我们对于一个仅有8个顶点的网络，就存在4140种不同的聚类方式，16个顶点的网络的聚类方式将超过100亿种。32个顶点的网络的可能聚类方式更是将超过10^21种。因此，我们必须寻找一种启发式的方法使其不需要尝试每一种可能性。这种方法叫做Fast-Greedy Modularity-Maximization(快速贪婪模块性最大化)的算法，这种算法在一定程度上类似于上面描述的集聚层次聚类算法。只是这种算法不根据距离来融合团体，而是根据模块性的改变来对团体进行融合。<br>具体步骤：</p><ol><li>首先初始分配每个顶点到其自己的团体，然后计算整个网络的模块性 M。</li><li>第 1 步要求每个团体对（community pair）至少被一条单边链接，如果有两个团体融合到了一起，该算法就计算由此造成的模块性改变 ΔM。</li><li>第 2 步是取 ΔM 出现了最大增长的团体对，然后融合。然后为这个聚类计算新的模块性 M，并记录下来。</li><li>重复第 1 步和 第 2 步——每一次都融合团体对，这样最后得到 ΔM 的最大增益，然后记录新的聚类模式及其相应的模块性分数 M。</li><li>重复第 1 步和 第 2 步——每一次都融合团体对，这样最后得到 ΔM 的最大增益，然后记录新的聚类模式及其相应的模块性分数 M。</li></ol><h1>七、如何选择K值</h1><p><a href="https://blog.csdn.net/weixin_45399233/article/details/101942911">如何选择K值</a></p><p>K-Means中K值的选择<br>（1）拍脑袋法<br>（2）肘部法则（Elbow Method）<br>（3）间隔统计量（Gap Statistic）<br>（4）轮廓系数（Silhouette Coefficient）<br>（5）Canopy算法<br>K-Means是一个很简单的聚类方法，说它简单，主要原因是使用它时只需设置一个K值（设置需要将数据聚成几类）。但问题是，有时候我们拿到的数据根本不知道要分为几类，对于二维的数据，我们还能通过肉眼观察法进行确定，超过二维的数据怎么办？今天就一起来学习下。</p><h2 id="7-1-拍脑袋法">7.1 拍脑袋法</h2><p>启发式算法，自己根据实际意义定K值。或者直接：</p><p>一个非常快速的，拍脑袋的方法是将样本量除以2再开方出来的值作为K值，具体公式为：<br><img src="https://img-blog.csdnimg.cn/20191002215915890.png" alt="在这里插入图片描述"></p><h2 id="7-2-肘部法则（Elbow-Method）">7.2 肘部法则（Elbow Method）</h2><p>Elbow Method ：Elbow意思是手肘，如下图左所示，此种方法适用于 K 值相对较小的情况，当选择的k值小于真正的时，k每增加1，cost值就会大幅的减小；当选择的k值大于真正的K时， k每增加1，cost值的变化就不会那么明显。这样，正确的k值就会在这个转折点，类似elbow的地方。 如下图：</p><p><img src="https://img-blog.csdnimg.cn/20191002220004619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM5OTIzMw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>通过画K与cost function的关系曲线图，如左图所示，肘部的值(cost function开始时下降很快，在肘部开始平缓了)做为K值，K=3。并不是所有的问题都可以通过画肘部图来解决，有的问题如右边的那个图，肘点位置不明显（肘点可以是3，4，5），这时就无法确定K值了。故肘部图是可以尝试的一种方法，但是并不是对所有的问题都能画出如左边那么好的图来确定K值。</p><p><img src="https://img-blog.csdnimg.cn/20191002220039954.png" alt="在这里插入图片描述"></p><h2 id="7-3-间隔统计量（Gap-Statistic）">7.3 间隔统计量（Gap Statistic）</h2><p>根据肘部法则选择最合适的K值有时并不是那么清晰，因此斯坦福大学的Robert等教授提出了Gap Statistic方法。<br>Gap Statistic的定义为:</p><p><img src="https://img-blog.csdnimg.cn/20191002220248135.png" alt="在这里插入图片描述"></p><p>这里E(logDk)指的是logDk的期望。这个数值通常通过蒙特卡洛模拟产生，我们在样本里所在的矩形区域中（高维的话就是立方体区域）按照均匀分布随机地产生和原始样本数一样多的随机样本，并对这个随机样本做K-Means，从而得到一个Dk。如此往复多次，通常20次，我们可以得到20个log Dk。对这20个数值求平均值，就得到了E(logDk)的近似值。最终可以计算Gap Statisitc。而Gap statistic取得最大值所对应的K就是最佳的K。<br>Gap Statistic的基本思路是：引入参考的测值，这个参考值可以有Monte Carlo采样的方法获得。</p><p><img src="https://img-blog.csdnimg.cn/20191002220455563.png" alt="在这里插入图片描述"></p><p>B是sampling的次数。为了修正MC带来的误差，我们计算sk也即标准差来矫正Gap Statistic。</p><p><img src="https://img-blog.csdnimg.cn/20191002220507358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM5OTIzMw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>选择满足<br><img src="https://img-blog.csdnimg.cn/20191002220539143.png" alt="在这里插入图片描述"><br>的最小的k作为最优的聚类个数。下图阐释了Gap Statistic的过程。</p><p><img src="https://img-blog.csdnimg.cn/20191002220615556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM5OTIzMw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20191002220624440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM5OTIzMw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="7-4-轮廓系数法">7.4 轮廓系数法</h2><p>Silhouette method 会衡量对象和所属簇之间的相似度——即内聚性（cohesion）。当把它与其他簇做比较，就称为分离性（separation）。该对比通过 silhouette 值来实现，后者在 [-1, 1] 范围内。Silhouette 值接近 1，说明对象与所属簇之间有密切联系；反之则接近 -1。若某模型中的一个数据簇，生成的基本是比较高的 silhouette 值，说明该模型是合适、可接受的。</p><p>方法：</p><p>1）计算样本i到同簇其他样本的平均距离a(i)。a(i)越小，说明样本i越应该被聚类到该簇。将a(i)称为样本i的簇内不相似度。簇C中所有样本的a(i)均值称为簇C的簇不相似度。</p><p>2）计算样本i到其他某簇C(j)的所有样本的平均距离b(ij)，称为样本i与簇C(j)的不相似度。定义为样本i的簇间不相似度：b(i) =min{bi1, bi2, …, bik}，b(i)越大，说明样本i越不属于其他簇。</p><p>3）根据样本i的簇内不相似度a i 和簇间不相似度b i ，定义样本i的轮廓系数：</p><p><img src="https://img-blog.csdnimg.cn/20191002220822119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTM5OTIzMw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4）判断：</p><p>s(i)接近1，则说明样本i聚类合理<br>s(i)接近-1，则说明样本i更应该分类到另外的簇<br>若s(i) 近似为0，则说明样本i在两个簇的边界上<br>所有样本的s(i )的均值称为聚类结果的轮廓系数，是该聚类是否合理、有效的度量。但是，其缺陷是计算复杂度为O(n^2)，需要计算距离矩阵，那么当数据量上到百万，甚至千万级别时，计算开销会非常巨大。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聚类算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Batch-Size解析</title>
      <link href="/2022/09/08/Batch-Size%E8%A7%A3%E6%9E%90/"/>
      <url>/2022/09/08/Batch-Size%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>1.Batch Size 是什么？</h1><p>Batch Size指的是<strong>一次训练所选取的样本数</strong>，</p><p>Batch Size的大小影响<strong>模型的优化程度和速度</strong>。</p><p><img src="https://s3.bmp.ovh/imgs/2021/11/00c6619fe888483e.png" alt=""></p><h1>2.Batch Size 对训练效果的影响</h1><ul><li>当Batch Size太小时，比如Batch Size=1。一次迭代只需对一个样本进行计算，因此单次迭代速度很快，可用于在线学习。在实际过程中，由于单个样本的随机性，<strong>一方面，训练会剧烈波动；一方面， 这种波动可能使训练到达更好的局部最小值。</strong></li><li>当Batch Size增大时，GPU的利用率会提高，对于相同的数据量处理的速度会更快一些。与此同时，Batch Size越大，其确定的下降方向越准，网络训练（收敛）的更快。</li><li>当Batch Size太大时，比如每次迭代更新使用<strong>所有的训练样本</strong>。那么迭代速度就会非常慢，甚至会出现训练不动的情况。</li></ul><h1>3.合理增大Batch Size 的好处</h1><p>在合理范围内增大Batch Size 的好处在以下几个方面：</p><ul><li>一次训练多组数据，内存利用率提高；GPU并行计算效率提高；</li><li>相比于小批量，对于相同的数据量，处理速度更快；</li><li>在一定范围内，一般来说，Batch Size 越大，其确定的梯度下降方向越准，引起的训练震荡就越小。</li></ul><h1>4. Batch Size太大的坏处</h1><p>如果盲目增大Batch Size，对训练会有一定的坏处：</p><ul><li>一次喂入的数据量太大，内存容量可能撑不住，或者显卡显存不足。</li><li>增大到一定程度后，其确定的梯度下降方向基本不再变化了。</li><li>容易陷入局部最小值，且很难再跳出。</li></ul><h1>原文博客</h1><p><a href="https://ai-wx.blog.csdn.net/article/details/118946126">Batch size问题总结</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深学调参 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化算法</title>
      <link href="/2022/09/08/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/08/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>SGD、BGD、MBGD</h1><p>现在所说的SGD一般都指MBGD(小批量梯度下降法Mini-batch Gradient Descent)。</p><p>三种梯度下降的方法用于更新参数，也就是当前参数等于上一时刻参数减去学习率乘以梯度。</p><img src="https://ftp.bmp.ovh/imgs/2021/07/492f6351931a562b.png" style="zoom: 67%;" />三种方法的不同体现在计算梯度上 假设损失函数为二次函数，那么参数θ的更新公式为<img src="https://ftp.bmp.ovh/imgs/2021/07/7fe288e86ec0010c.png" style="zoom: 67%;" /><h2 id="SGD（随机梯度下降法Stochastic-Gradient-Descent）">SGD（随机梯度下降法Stochastic Gradient Descent）</h2><p>SGD：mini-batch gradient descent（随机梯度下降）<br>SGD就是每一次迭代每次只用<strong>一个样本</strong>计算mini-batch的梯度，然后对参数进行更新，是最常见的优化方法了。</p><p>&lt;img src=“<a href="https://ftp.bmp.ovh/imgs/2021/07/742b1819c08ba909.png">https://ftp.bmp.ovh/imgs/2021/07/742b1819c08ba909.png</a>” style=“zoom: 67%;” /</p><p>优点是速度快，缺点是可能陷入局部最优，搜索起来比较盲目，并不是每次都朝着最优的方向（因为单个样本可能噪音比较多），走的路径比较曲折（震荡）。</p><img src="https://img-blog.csdnimg.cn/20190625080633780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RwZW5nd2FuZw==,size_16,color_FFFFFF,t_70" style="zoom:67%;" /><p><img src="https://s3.bmp.ovh/imgs/2021/11/d225c73325ad2cd0.png" alt=""></p><h2 id="BGD-批梯度下降算法-Batch-Gradient-Descent）">BGD (批梯度下降算法 Batch Gradient Descent）</h2><p>计算梯度时候使用<strong>所有的数据</strong>来计算，取平均值（最原始的梯度下降算法）。</p><p>BGD算法，每走一步（更新模型参数），为了计算original-loss上的梯度，就需要遍历整个数据集，在一般深度学习任务中，这是很不现实的。</p><p>好处在于收敛次数少，坏处就是每次迭代需要用到所有数据，占用内存大耗时大。<img src="https://ftp.bmp.ovh/imgs/2021/07/8ea7df3d437d0423.png" style="zoom:67%;" /></p><img src="https://img-blog.csdnimg.cn/20190625080220317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RwZW5nd2FuZw==,size_16,color_FFFFFF,t_70" style="zoom:67%;" /><h2 id="MBGD-小批量梯度下降法Mini-batch-Gradient-Descent">MBGD (小批量梯度下降法Mini-batch Gradient Descent)</h2><p>SGD和BGD是两个极端， 而MBGD是两种方法的折中，每次选择<strong>一批数据</strong>(不是全部，也不是单个)来求梯度。<br>该方法也容易陷入局部最优。</p><p><strong>现在所说的SGD基本都是MBGD。</strong></p><p><img src="https://private.codecogs.com/gif.latex?g_%7Bt%7D%3D%20%5Ctriangledown%20_%7B%5Ctheta_%7Bt-1%7D%7DJ%28%5Ctheta_%7Bt-1%7D%29" alt="g_{t}= \triangledown {\theta{t-1}}J(\theta_{t-1})"></p><p>​        <img src="https://private.codecogs.com/gif.latex?%5Ctriangle%20%5Ctheta%20_t%20%3D%20-%5Ceta%20%5Cast%20g_t" alt="\triangle \theta _t = -\eta \ast g_t"></p><p>​       <img src="https://private.codecogs.com/gif.latex?%5Ctheta%20_t%20%3D%20%5Ctheta%20_%7Bt-1%7D+%5Ctriangle%20%5Ctheta%20_t" alt="\theta _t = \theta _{t-1}+\triangle \theta _t"></p><p>其中<img src="https://private.codecogs.com/gif.latex?%5Ctheta%20_t" alt="\theta _t">是模型参数，<img src="https://private.codecogs.com/gif.latex?J%28%5Ctheta%20_%7Bt-1%7D%29" alt="J(\theta _{t-1})">是模型目标函数，<img src="https://private.codecogs.com/gif.latex?g_t" alt="g_t">是目标函数的梯度，<img src="https://private.codecogs.com/gif.latex?%5Ceta" alt="\eta">是学习率。</p><p>SGD完全依赖于当前batch的梯度，所以η可理解为允许当前batch的梯度多大程度影响参数更新。</p><p>缺点：（正因为有这些缺点才让这么多大神发展出了后续的各种算法）</p><ul><li>选择合适的learning rate比较困难。</li><li>对所有的参数更新使用同样的learning rate。对于稀疏数据或者特征，有时我们可能想更新快一些对于不经常出现的特征，对于常出现的特征更新慢一些，这时候SGD就不太能满足要求了。</li><li>SGD容易收敛到局部最优，在某些情况下可能被困在鞍点。【但是在合适的初始化和学习率设置下，鞍点的影响其实没这么大】</li><li>“之字形”的出现，即在陡谷（一种在一个方向的弯曲程度远大于其他方向的表面弯曲情况）处震荡。如下图所示</li></ul><p><img src="https://img-blog.csdn.net/20181015224812323?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hbm1hbnhpYW93dWd1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><h1>NAG（牛顿动量 Nesterov accelerated gradient）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.Nesterov是Momentum的变种。</span><br><span class="line">2.与Momentum唯一区别就是，计算梯度的不同，Nesterov先用当前的速度v更新一遍参数，在用更新的临时参数计算梯度。</span><br><span class="line">3.相当于添加了矫正因子的Momentum。</span><br><span class="line">4.在GD下，Nesterov将误差收敛从O（1/k），改进到O(1/k^2)</span><br><span class="line">5.然而在SGD下，Nesterov并没有任何改进</span><br></pre></td></tr></table></figure><p>在小球向下滚动的过程中，我们希望小球能够提前知道在哪些地方坡面会上升，这样在遇到上升坡面之前，小球就开始减速。这方法就是Nesterov Momentum，其在凸优化中有较强的理论保证收敛。并且，在实践中Nesterov Momentum也比单纯的 Momentum 的效果好：</p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/e589016396e64320.png" alt="img"></p><p>其核心思想是：注意到 momentum 方法，如果只看 γ * v 项，那么当前的 θ经过 momentum 的作用会变成 θ-γ * v。因此可以把 θ-γ * v这个位置看做是当前优化的一个”展望”位置。所以，可以在 θ-γ * v求导, 而不是原始的θ。</p><p><img src="https://img-blog.csdn.net/20170805212728775?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDA4OTQ0NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p>我们使用<img src="https://private.codecogs.com/gif.latex?%5Cmu%20%5Cast%20m_%7Bt-1%7D" alt="img">来移动，通过计算<img src="https://private.codecogs.com/gif.latex?%5Ctheta_%7Bt-1%7D+%5Cmu%20%5Cast%20m_%7Bt-1%7D" alt="img">，我们能够得到一个下次参数位置的近似值——也就是能告诉我们参数大致会变为多少。那么，通过基于未来参数的近似值（站的更远看看）而非当前的参数值计算相得应罚函数<img src="https://private.codecogs.com/gif.latex?J%28%5Ctheta_%7Bt-1%7D+%5Cmu%20%5Cast%20m_%7Bt-1%7D%29" alt="img">并求偏导数，我们能让优化器高效地「前进」并收敛：</p><p><img src="https://private.codecogs.com/gif.latex?m_t%3D%5Cmu%20%5Cast%20m_%7Bt-1%7D-%5Ceta%20%5Ctriangledown%20J%28%5Ctheta%20_%7Bt-1%7D+%5Cmu%20%5Cast%20m_%7Bt-1%7D%29" alt="img"></p><p><img src="https://private.codecogs.com/gif.latex?%5Ctheta%20_t%20%3D%20%5Ctheta%20_%7Bt-1%7D+m_t" alt="img"></p><img src="https://img-blog.csdn.net/20170521225135450?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvQlZMMTAxMDExMTE=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="zoom:50%;" /><p><img src="https://img-blog.csdn.net/20170728165011954?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdHN5Y2NuaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p><img src="https://img-blog.csdn.net/20170803165730092?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdHN5Y2NuaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p><strong>优点：</strong><br>这种基于预测的更新方法，使我们避免过快地前进，并提高了算法地响应能力，大大改进了 RNN 在一些任务上的表现【为什么对RNN好呢，不懂啊】<br>没有对比就没有伤害，NAG方法收敛速度明显加快。波动也小了很多。实际上NAG方法用到了二阶信息，所以才会有这么好的结果。<em>先按照原来的梯度走一步的时候已经求了一次梯度，后面再修正的时候又求了一次梯度，所以是二阶信息。</em></p><h1>AdaGrad</h1><p>AdaGrad 算法根据自变量在每个维度的梯度值调整各个维度的学习率，从而避免统一的维度难以适应所有维度的问题。</p><p>adagrad 方法是将每一个参数的每一次迭代的梯度取平方累加再开方，用基础学习率除以这个数，来做学习率的动态更新。【这样每一个参数的学习率就与他们的梯度有关系了，那么每一个参数的学习率就不一样了！也就是所谓的<strong>自适应学习率</strong>】。</p><p>Adagrad其实是对学习率进行了一个约束。即：</p><p><img src="https://www.zhihu.com/equation?tex=n_t%3Dn_%7Bt-1%7D%2Bg_t%5E2" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5CDelta%7B%5Ctheta_t%7D%3D-%5Cfrac%7B%5Ceta%7D%7B%5Csqrt%7Bn_t%2B%5Cepsilon%7D%7D%2Ag_t" alt="[公式]"></p><p>此处，对<img src="https://www.zhihu.com/equation?tex=g_t" alt="[公式]">从1到<img src="https://www.zhihu.com/equation?tex=t" alt="[公式]">进行一个递推形成一个约束项regularizer，<img src="https://www.zhihu.com/equation?tex=-%5Cfrac%7B1%7D%7B%5Csqrt%7B%5Csum_%7Br%3D1%7D%5Et%28g_r%29%5E2%2B%5Cepsilon%7D%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=%5Cepsilon" alt="[公式]">用来保证分母非0</p><p><img src="https://s3.bmp.ovh/imgs/2021/11/693003f60385bdf2.png" alt=""></p><p><strong>特点：</strong></p><ul><li>前期<img src="https://www.zhihu.com/equation?tex=g_t" alt="[公式]">较小的时候， regularizer较大，能够放大梯度</li><li>后期<img src="https://www.zhihu.com/equation?tex=g_t" alt="[公式]">较大的时候，regularizer较小，能够约束梯度</li><li>适合处理稀疏梯度</li></ul><p><strong>缺点：</strong></p><ul><li>由公式可以看出，仍依赖于人工设置一个全局学习率</li><li><img src="https://www.zhihu.com/equation?tex=%5Ceta" alt="[公式]">设置过大的话，会使regularizer过于敏感，对梯度的调节太大</li><li>中后期，分母上梯度平方的累加将会越来越大，使<img src="https://www.zhihu.com/equation?tex=gradient%5Cto0" alt="[公式]">，使得训练提前结束</li></ul><h1>Adadelta</h1><p>Adagrad会累加之前所有的梯度平方，而Adadelta只累加固定大小的项【其实就是相当于指数滑动平均，只用了前多少步的梯度平方平均值】，并且也不直接存储这些项，仅仅是近似计算对应的平均值【这也就是指数滑动平均的优点】</p><p>RMSprop依然需要自己设定全局学习率，因此Adadelta在RMSprop的基础上，用参数更新的平方来替代全局学习率的位置，这样就可以省略全局学习率了。</p><p><img src="https://img-blog.csdn.net/20180703191607972?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzMjY5NzYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p><strong>特点：</strong></p><ul><li>训练初中期，加速效果不错，很快</li><li>训练后期，反复在局部最小值附近抖动</li></ul><h1>momentum（动量梯度下降 Gradient Descent With Momentum）</h1><img src="https://img-blog.csdn.net/20180703160108872?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzMjY5NzYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img" style="zoom:50%;" /><p><img src="https://s3.bmp.ovh/imgs/2021/11/18fbba011e3b53d3.png" alt=""></p><h1>RMSProp</h1><p><img src="https://i.bmp.ovh/imgs/2021/07/5a6b98969620d257.png" alt=""></p><p><img src="https://s3.bmp.ovh/imgs/2021/11/79d795a8c621eeed.png" alt=""></p><p>由于AdaGrad单调递减的学习率变化过于激进，RMSprop只关注过去一段时间的梯度平均值，离的时间越远越不重要。</p><p><img src="https://img-blog.csdn.net/2018070319350422?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzMjY5NzYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p><p><strong>特点：</strong></p><ul><li>其实RMSprop依然依赖于全局学习率</li><li>RMSprop算是Adagrad的一种发展，和Adadelta的变体，效果趋于二者之间</li><li>适合处理非平稳目标（也就是与时间有关的）</li><li>对于RNN效果很好，因为RMSprop的更新只依赖于上一时刻的更新，所以适合。？？？</li></ul><h1>Adam(Adaptive Moment Estimation)</h1><p>Adam(Adaptive Moment Estimation)本质上是带有动量项的RMSprop，它利用梯度的一阶矩估计和二阶矩估计动态调整每个参数的学习率。Adam的优点主要在于经过偏置校正后，每一次迭代学习率都有个确定范围，使得参数比较平稳。公式如下：</p><p><img src="https://www.zhihu.com/equation?tex=m_t%3D%5Cmu%2Am_%7Bt-1%7D%2B%281-%5Cmu%29%2Ag_t" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=n_t%3D%5Cnu%2An_%7Bt-1%7D%2B%281-%5Cnu%29%2Ag_t%5E2" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=%5Chat%7Bm_t%7D%3D%5Cfrac%7Bm_t%7D%7B1-%5Cmu%5Et%7D" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=%5Chat%7Bn_t%7D%3D%5Cfrac%7Bn_t%7D%7B1-%5Cnu%5Et%7D" alt="img"></p><p><img src="https://www.zhihu.com/equation?tex=%5CDelta%7B%5Ctheta_t%7D%3D-%5Cfrac%7B%5Chat%7Bm_t%7D%7D%7B%5Csqrt%7B%5Chat%7Bn_t%7D%7D%2B%5Cepsilon%7D%2A%5Ceta" alt="img"></p><p>其中，<img src="https://www.zhihu.com/equation?tex=m_t" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=n_t" alt="[公式]">分别是对梯度的一阶矩估计和二阶矩估计，可以看作对期望<img src="https://www.zhihu.com/equation?tex=E%7Cg_t%7C" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=E%7Cg_t%5E2%7C" alt="[公式]">的估计；<img src="https://www.zhihu.com/equation?tex=%5Chat%7Bm_t%7D" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=%5Chat%7Bn_t%7D" alt="[公式]">是对<img src="https://www.zhihu.com/equation?tex=m_t" alt="[公式]">，<img src="https://www.zhihu.com/equation?tex=n_t" alt="[公式]">的校正，这样可以近似为对期望的无偏估计。 可以看出，直接对梯度的矩估计对内存没有额外的要求，而且可以根据梯度进行动态调整，而<img src="https://www.zhihu.com/equation?tex=-%5Cfrac%7B%5Chat%7Bm_t%7D%7D%7B%5Csqrt%7B%5Chat%7Bn_t%7D%7D%2B%5Cepsilon%7D" alt="[公式]">对学习率形成一个动态约束，而且有明确的范围。</p><p><img src="https://s3.bmp.ovh/imgs/2021/11/12494375d9ed0ab7.png" alt=""></p><p><strong>特点：</strong></p><ul><li>结合了Adagrad善于处理稀疏梯度和RMSprop善于处理非平稳目标的优点</li><li>对内存需求较小</li><li>为不同的参数计算不同的自适应学习率</li><li>也适用于大多非凸优化 - 适用于大数据集和高维空间</li></ul><h1>Adamax</h1><p>Adamax是Adam的一种变体，此方法对学习率的上限提供了一个更简单的范围。公式上的变化如下：</p><p><img src="https://www.zhihu.com/equation?tex=n_t%3Dmax%28%5Cnu%2An_%7Bt-1%7D%2C%7Cg_t%7C%29" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5CDelta%7Bx%7D%3D-%5Cfrac%7B%5Chat%7Bm_t%7D%7D%7Bn_t%2B%5Cepsilon%7D%2A%5Ceta" alt="[公式]"></p><p>可以看出，Adamax学习率的边界范围更简单</p><h1>Nadam</h1><p>Nadam类似于带有Nesterov动量项的Adam。公式如下：</p><p><img src="https://www.zhihu.com/equation?tex=%5Chat%7Bg_t%7D%3D%5Cfrac%7Bg_t%7D%7B1-%5CPi_%7Bi%3D1%7D%5Et%5Cmu_i%7D" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=m_t%3D%5Cmu_t%2Am_%7Bt-1%7D%2B%281-%5Cmu_t%29%2Ag_t" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5Chat%7Bm_t%7D%3D%5Cfrac%7Bm_t%7D%7B1-%5CPi_%7Bi%3D1%7D%5E%7Bt%2B1%7D%5Cmu_i%7D" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=n_t%3D%5Cnu%2An_%7Bt-1%7D%2B%281-%5Cnu%29%2Ag_t%5E2" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5Chat%7Bn_t%7D%3D%5Cfrac%7Bn_t%7D%7B1-%5Cnu%5Et%7D" alt="[公式]"><img src="https://www.zhihu.com/equation?tex=%5Cbar%7Bm_t%7D%3D%281-%5Cmu_t%29%2A%5Chat%7Bg_t%7D%2B%5Cmu_%7Bt%2B1%7D%2A%5Chat%7Bm_t%7D" alt="[公式]"></p><p><img src="https://www.zhihu.com/equation?tex=%5CDelta%7B%5Ctheta_t%7D%3D-%5Ceta%2A%5Cfrac%7B%5Cbar%7Bm_t%7D%7D%7B%5Csqrt%7B%5Chat%7Bn_t%7D%7D%2B%5Cepsilon%7D" alt="[公式]"></p><p>可以看出，Nadam对学习率有了更强的约束，同时对梯度的更新也有更直接的影响。一般而言，在想使用带动量的RMSprop，或者Adam的地方，大多可以使用Nadam取得更好的效果。</p><h1>优化动画图</h1><p><img src="https://img-blog.csdn.net/20160824161755284" alt=""></p><p><img src="https://img-blog.csdn.net/20160824161815758" alt=""></p><h1>附录</h1><p><img src="https://img-blog.csdn.net/20180703200322455?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIzMjY5NzYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优化算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机顶级期刊会议及学习网址</title>
      <link href="/2022/09/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%A1%B6%E7%BA%A7%E6%9C%9F%E5%88%8A%E4%BC%9A%E8%AE%AE%E5%8F%8A%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80/"/>
      <url>/2022/09/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%A1%B6%E7%BA%A7%E6%9C%9F%E5%88%8A%E4%BC%9A%E8%AE%AE%E5%8F%8A%E5%AD%A6%E4%B9%A0%E7%BD%91%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1>CCF推荐计算机顶会/期刊</h1><p>人工智能领域最核心的四大顶会AAAI、IJCAI、ICML和NIPS，以及作为计算机视觉和自然语言为代表的CVPR和ACL这两大学术会议，也涌现了许多“后起之秀”，比如仅创立六年却有深度学习顶会“无冕之王”之称的ICLR，还有创办于1996年的大有赶超ACL之势的自然语言处理领域顶会EMNLP。</p><p><img src="https://pic3.zhimg.com/v2-96a302ec160f9d809db476e85c546a26_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-c1a58a9dc1c5960d877db7deaf31b62c_b.jpg" alt="img"></p><p><img src="https://pic3.zhimg.com/v2-d5a59758c6e03ee7f6bb031e66b00ac6_b.jpg" alt="img"><img src="https://pic4.zhimg.com/v2-571870548e5232dcafd81c2fa21911db_b.jpg" alt="img"></p><p><img src="https://pic3.zhimg.com/v2-15f09c69df90e4179d498549c4a8f15e_b.jpg" alt="img"></p><p>作者：爱学习的团子酱</p><p>链接：<a href="https://zhuanlan.zhihu.com/p/339490850">https://zhuanlan.zhihu.com/p/339490850</a><br>来源：知乎</p><h1>计算机视觉顶会</h1><h2 id="1、-ICCV-International-Conference-on-Computer-Vision">1、 ICCV (International Conference on Computer Vision)</h2><p>ICCV 的全称是 IEEE International Conference on Computer Vision，即国际计算机视觉大会，由IEEE主办，与计算机视觉模式识别会议（<a href="https://baike.baidu.com/item/CVPR/7054378">CVPR</a>）和欧洲计算机视觉会议（<a href="https://baike.baidu.com/item/ECCV/4240509">ECCV</a>）并称计算机视觉方向的三大顶级会议，被<a href="https://baike.baidu.com/item/%E6%BE%B3%E5%A4%A7%E5%88%A9%E4%BA%9A/146759">澳大利亚</a>ICT学术会议排名和<a href="https://baike.baidu.com/item/%E4%B8%AD%E5%9B%BD%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E4%BC%9A/1594491">中国计算机学会</a>等机构评为最高级别学术会议，在业内具有极高的评价。不同于在美国每年召开一次的CVPR和只在欧洲召开的ECCV，ICCV在世界范围内每两年召开一次。ICCV论文录用率非常低，是三大会议中公认级别最高的。ICCV会议时间通常在四到五天，相关领域的专家将会展示最新的研究成果。(百度百科)</p><h2 id="2、ECCV（European-Conference-on-Computer-Vision）">2、ECCV（European Conference on Computer Vision）</h2><p>ECCV的全称是European Conference on Computer Vision(欧洲计算机视觉国际会议) ，两年一次，是计算机视觉三大会议（另外两个是<a href="https://baike.baidu.com/item/ICCV">ICCV</a>和<a href="https://baike.baidu.com/item/CVPR">CVPR</a>）之一。每次会议在全球范围录用论文300篇左右，主要的录用论文都来自美国、欧洲等顶尖实验室及研究所，中国大陆的论文数量一般在10-20篇之间。ECCV2010的论文录取率为27%。</p><h2 id="3、CVPR（IEEE-Conference-on-Computer-Vision-and-Pattern-Recognition）">3、CVPR（IEEE Conference on Computer Vision and Pattern Recognition）</h2><p>国际计算机视觉与模式识别会议（CVPR）是IEEE一年一度的学术性会议，会议的主要内容是计算机视觉与<a href="https://baike.baidu.com/item/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF/10808656">模式识别技术</a>。</p><h1>计算机视觉顶刊</h1><p>TPAMI（<a href="https://link.zhihu.com/?target=http%3A//ieeexplore.ieee.org/xpl/RecentIssue.jsp%3Freload%3Dtrue%26punumber%3D34">Pattern Analysis and Machine Intelligence, IEEE Transactions on</a>）</p><h5 id="IJCV（International-Journal-of-Computer-Vision）">IJCV（International Journal of Computer Vision）</h5><h5 id="TIP（IEEE-Transactions-on-Image-Processing）">TIP（IEEE Transactions on Image Processing）</h5><h1>国内普通学术论文网站</h1><p>1.维普网 <a href="https://link.zhihu.com/?target=http%3A//t.cn/RJLp7xf">http://t.cn/RJLp7xf</a></p><p>2.中国知网 <a href="https://link.zhihu.com/?target=http%3A//t.cn/EcDxjvz">http://t.cn/EcDxjvz</a></p><p>3.万方 <a href="https://link.zhihu.com/?target=http%3A//t.cn/RQzL7Xw">http://t.cn/RQzL7Xw</a></p><p>4.全国报刊索引 <a href="https://link.zhihu.com/?target=http%3A//t.cn/Raav93J">http://t.cn/Raav93J</a></p><p><a href="https://ieeexplore.ieee.org/browse/periodicals/title">https://ieeexplore.ieee.org/browse/periodicals/title</a></p><p><a href="https://ieeexplore.ieee.org/Xplore/home.jsp">IEEE Xplore</a>校园网可以直接登不用钱。</p><h1>中文博客、国际博客</h1><p><a href="https://www.csdn.net/">CSDN</a></p><p><a href="http://www.cnblogs.com/">博客园</a></p><p><a href="https://segmentfault.com/">SegmentFault</a></p><p><a href="http://www.oschina.net/">开源中国</a></p><p><a href="http://www.w3school.com.cn">W3School</a>（前端）</p><p><a href="https://gitee.com/">Gitee代码托管</a></p><p><a href="https://github.com/">gitHub</a></p><p><a href="http://stackoverflow.com/">Stack Overflow</a></p><h1>其他</h1><p>[Al重要会议ddl计时器](</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 期刊会议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不平衡分类的处理方式</title>
      <link href="/2022/09/08/%E4%B8%8D%E5%B9%B3%E8%A1%A1%E5%88%86%E7%B1%BB%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/"/>
      <url>/2022/09/08/%E4%B8%8D%E5%B9%B3%E8%A1%A1%E5%88%86%E7%B1%BB%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>如果你研究过一点机器学习和数据科学，你肯定遇到过不平衡的类分布（imbalanced class distribution）。这种情况是指：属于某一类别的观测样本的数量显著少于其它类别。</p><p>这个问题在异常检测是至关重要的的场景中很明显，例如电力盗窃、银行的欺诈交易、罕见疾病识别等。在这种情况下，利用传统机器学习算法开发出的预测模型可能会存在偏差和不准确。</p><p>发生这种情况的原因是机器学习算法通常被设计成通过减少误差来提高准确率。所以它们并没有考虑类别的分布/比例或者是类别的平衡。</p><p>这篇指南描述了使用多种采样技术来解决这种类别不平衡问题的各种方法。本文还比较了每种技术的优缺点。最后，本文作者还向我们展示了一种让你可以创建一个平衡的类分布的方法，让你可以应用专门为此设计的集成学习技术（ensemble learning technique）。本文作者为来自 KPMG 的数据分析顾问 Upasana Mukherjee。</p><h2 id="1-不平衡数据集面临的挑战"><strong>1. 不平衡数据集面临的挑战</strong></h2><p>当今公用事业行业面临的主要挑战之一就是电力盗窃。电力盗窃是全球第三大盗窃形式。越来越多的公用事业公司倾向于使用高级的数据分析技术和机器学习算法来识别代表盗窃的消耗模式。</p><p>然而，最大的障碍之一就是海量的数据及其分布。欺诈性交易的数量要远低于正常和健康的交易，也就是说，它只占到了总观测量的大约 1-2%。这里的问题是提高识别罕见的少数类别的准确率，而不是实现更高的总体准确率。</p><p>当面临不平衡的数据集的时候，机器学习算法倾向于产生不太令人满意的分类器。对于任何一个不平衡的数据集，如果要预测的事件属于少数类别，并且事件比例小于 5%，那就通常将其称为罕见事件（rare event）。</p><h3 id="1-1不平衡类别的实例">1.1不平衡类别的实例</h3><p>让我们借助一个实例来理解不平衡类别。</p><p>例子：在一个公用事业欺诈检测数据集中，你有以下数据：</p><p>总观测 = 1000</p><p>欺诈观测 = 20</p><p>非欺诈观测 = 980</p><p>罕见事件比例 = 2%</p><p>这个案例的数据分析中面临的主要问题是：对于这些先天就是小概率的异常事件，如何通过获取合适数量的样本来得到一个平衡的数据集？</p><h3 id="1-2使用标准机器学习技术时面临的挑战">1.2使用标准机器学习技术时面临的挑战</h3><p>面临不平衡数据集的时候，传统的机器学习模型的评价方法不能精确地衡量模型的性能。</p><p>诸如决策树和 Logistic 回归这些标准的分类算法会偏向于数量多的类别。它们往往会仅预测占数据大多数的类别。在总量中占少数的类别的特征就会被视为噪声，并且通常会被忽略。因此，与多数类别相比，少数类别存在比较高的误判率。</p><p>对分类算法的表现的评估是用一个包含关于实际类别和预测类别信息的混淆矩阵（Confusion Matrix）来衡量的。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8IAicDoeYFUsXGw04ZiaIgF4tGqwwx6sY4HAicosMtjSXYN5MQzjcibzYfQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p><em>如上表所示，模型的准确率 = (TP+TN) / (TP+FN+FP+TP)</em></p><p>然而，在不平衡领域时，准确率并不是一个用来衡量模型性能的合适指标。例如：一个分类器，在包含 2% 的罕见事件时，如果它将所有属于大部分类别的实例都正确分类，实现了 98% 的准确率；而把占 2% 的少数观测数据视为噪声并消除了。</p><h3 id="1-3不平衡类别的其他实例">1.3不平衡类别的其他实例</h3><p>因此，总结一下，在尝试利用不平衡数据集解决特定业务的挑战时，由标准机器学习算法生成的分类器可能无法给出准确的结果。除了欺诈性交易，存在不平衡数据集问题的常见业务问题还有：</p><ul><li>识别客户流失率的数据集，其中绝大多数顾客都会继续使用该项服务。具体来说，电信公司中，客户流失率低于 2%。</li><li>医疗诊断中识别罕见疾病的数据集</li><li>自然灾害，例如地震</li></ul><h3 id="1-4使用的数据集">1.4使用的数据集</h3><p>这篇文章中，我们会展示多种在高度不平衡数据集上训练一个性能良好的模型的技术。并且用下面的欺诈检测数据集来精确地预测罕见事件：<br>总观测 = 1000</p><p>欺诈观测 = 20</p><p>非欺诈性观测 = 980</p><p>事件比例 = 2%</p><p>欺诈类别标志 = 0（非欺诈实例）</p><p>欺诈类别标志 = 1（欺诈实例）</p><h2 id="2-处理不平衡数据集的方法"><strong>2. 处理不平衡数据集的方法</strong></h2><h3 id="2-1-数据层面的方法：重采样技术">2.1 数据层面的方法：重采样技术</h3><p>处理不平衡数据集需要在往机器学习算法输入数据之前，制定诸如提升分类算法或平衡训练数据的类（数据预处理）的策略。后者因为应用范围广泛而更常使用。</p><p>平衡分类的主要目标不是增加少数类的的频率就是降低多数类的频率。这样做是为了获得大概相同数量的两个类的实例。让我们一起看看几个重采样（resampling）技术：</p><h4 id="2-1-1-随机欠采样（Random-Under-Sampling）">2.1.1 随机欠采样（Random Under-Sampling）</h4><p>随机欠采样的目标是通过随机地消除占多数的类的样本来平衡类分布；直到多数类和少数类的实例实现平衡，目标才算达成。</p><p>总观测 = 1000</p><p>欺诈性观察 = 20</p><p>非欺诈性观察 = 980</p><p>事件发生率 = 2%</p><p>这种情况下我们不重复地从非欺诈实例中取 10% 的样本，并将其与欺诈性实例相结合。</p><p>随机欠采样之后的非欺诈性观察 = 980 x 10% = 98</p><p>结合欺诈性与非欺诈性观察之后的全体观察 = 20+98 = 118</p><p>欠采样之后新数据集的事件发生率 = 20／118 = 17%</p><ul><li>优点<ul><li>它可以提升运行时间；并且当训练数据集很大时，可以通过减少样本数量来解决存储问题。</li></ul></li><li>缺点<ul><li>它会丢弃对构建规则分类器很重要的有价值的潜在信息。</li><li>被随机欠采样选取的样本可能具有偏差。它不能准确代表大多数。从而在实际的测试数据集上得到不精确的结果。</li></ul></li></ul><h4 id="2-1-2随机过采样（Random-Over-Sampling）">2.1.2随机过采样（Random Over-Sampling）</h4><p>过采样（Over-Sampling）通过随机复制少数类来增加其中的实例数量，从而可增加样本中少数类的代表性。</p><p>总观测 = 1000</p><p>欺诈性观察 = 20</p><p>非欺诈性观察 = 980</p><p>事件发生率 = 2%</p><p>这种情况下我们复制 20 个欺诈性观察 20 次。</p><p>非欺诈性观察 = 980</p><p>复制少数类观察之后的欺诈性观察 = 400</p><p>过采样之后新数据集中的总体观察 = 1380</p><p>欠采样之后新数据集的事件发生率 = 400/1380 = 29%</p><ul><li>优点<ul><li>与欠采样不同，这种方法不会带来信息损失。</li><li>表现优于欠采样。</li></ul></li><li>缺点<ul><li>由于复制少数类事件，它加大了过拟合的可能性</li></ul></li></ul><h4 id="2-1-3-基于聚类的过采样（Cluster-Based-Over-Sampling）">2.1.3 基于聚类的过采样（Cluster-Based Over Sampling）</h4><p>在这种情况下，K-均值聚类算法独立地被用于少数和多数类实例。这是为了识别数据集中的聚类。随后，每一个聚类都被过采样以至于相同类的所有聚类有着同样的实例数量，且所有的类有着相同的大小。</p><p>总观测 = 1000</p><p>欺诈性观察 = 20</p><p>非欺诈性观察 = 980</p><p>事件发生率 = 2%</p><ul><li>多数类聚类</li></ul><ol><li>聚类 1：150 个观察</li><li>聚类 2：120 个观察</li><li>聚类 3：230 个观察</li><li>聚类 4：200 个观察</li><li>聚类 5：150 个观察</li><li>聚类 6：130 个观察</li></ol><ul><li>少数类聚类</li></ul><ol><li>聚类 1：8 个观察</li><li>聚类 2：12 个观察</li></ol><p>每个聚类过采样之后，相同类的所有聚类包含相同数量的观察。</p><ul><li>多数类聚类</li></ul><ol><li>聚类 1：170 个观察</li><li>聚类 2：170 个观察</li><li>聚类 3：170 个观察</li><li>聚类 4：170 个观察</li><li>聚类 5：170 个观察</li><li>聚类 6：170 个观察</li></ol><ul><li>少数类聚类</li></ul><ol><li>聚类 1：250 个观察</li><li>聚类 2：250 个观察</li></ol><p>基于聚类的过采样之后的事件率 = 500/ (1020+500) = 33 %</p><ul><li>优点<ul><li>这种聚类技术有助于克服类之间不平衡的挑战。表示正例的样本数量不同于表示反例的样本数量。</li><li>有助于克服由不同子聚类组成的类之间的不平衡的挑战。每一个子聚类不包含相同数量的实例。</li></ul></li><li>缺点<ul><li>正如大多数过采样技术，这一算法的主要缺点是有可能过拟合训练集。</li></ul></li></ul><h4 id="2-1-4信息性过采样：合成少数类过采样技术（SMOTE）">2.1.4信息性过采样：合成少数类过采样技术（SMOTE）</h4><p>这一技术可用来避免过拟合——当直接复制少数类实例并将其添加到主数据集时。从少数类中把一个数据子集作为一个实例取走，接着创建相似的新合成的实例。这些合成的实例接着被添加进原来的数据集。新数据集被用作样本以训练分类模型。</p><p>总观测 = 1000</p><p>欺诈性观察 = 20</p><p>非欺诈性观察 = 980</p><p>事件发生率 = 2%</p><p>从少数类中取走一个包含 15 个实例的样本，并生成相似的合成实例 20 次。</p><p>生成合成性实例之后，创建下面的数据集</p><p>少数类（欺诈性观察）= 300</p><p>多数类（非欺诈性观察）= 980</p><p>事件发生率 = 300/1280 = 23.4 %</p><ul><li>优点<ul><li>通过随机采样生成的合成样本而非实例的副本，可以缓解过拟合的问题。</li><li>不会损失有价值信息。</li></ul></li><li>缺点<ul><li>当生成合成性实例时，SMOTE 并不会把来自其他类的相邻实例考虑进来。这导致了类重叠的增加，并会引入额外的噪音。</li><li>SMOTE 对高维数据不是很有效。</li></ul></li></ul><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8nq3B8E6Ffo02wIn4HFM5m8dS7eENZLEy1IoY6h4gwq5RksvIpVksow/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img"  /><p><em>图 1：合成少数类过采样算法，其中 N 是属性的数量</em></p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8AibmQVA6FMYcCVJ8icEogb0KNNgYT8qe8icRc524QLthFvHuLIxCEsSNw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p><em>图 2：借助 SMOTE 的合成实例生成</em></p><h4 id="2-1-5-改进的合成少数类过采样技术（MSMOTE）">2.1.5 改进的合成少数类过采样技术（MSMOTE）</h4><p>这是 SMOTE 的改进版本，SMOTE 没有考虑数据集中少数类和潜在噪声的基本分布。所以为了提高 SMOTE 的效果，MSMOTE 应运而生。</p><p>该算法将少数类别的样本分为 3 个不同的组：安全样本、边界样本和潜在噪声样本。分类通过计算少数类的样本和训练数据的样本之间的距离来完成。安全样本是可以提高分类器性能的那些数据点。而另一方面，噪声是可以降低分类器的性能的数据点。两者之间的那些数据点被分类为边界样本。</p><p>虽然 MSOMTE 的基本流程与 SMOTE 的基本流程相同，在 MSMOTE 中，选择近邻的策略不同于 SMOTE。该算法是从安全样本出发随机选择 k-最近邻的数据点，并从边界样本出发选择最近邻，并且不对潜在噪声样本进行任何操作。</p><h3 id="2-2-算法集成技术（Algorithmic-Ensemble-Techniques）">2.2 算法集成技术（Algorithmic Ensemble Techniques）</h3><p>上述部分涉及通过重采样原始数据提供平衡类来处理不平衡数据，在本节中，我们将研究一种替代方法：修改现有的分类算法，使其适用于不平衡数据集。</p><p>集成方法的主要目的是提高单个分类器的性能。该方法从原始数据中构建几个两级分类器，然后整合它们的预测。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8mdwUjdSP9NibLfLdvo39ZFc3vU6p2MRickhbYXQNlGyPQkJNdTty9KUw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p><em>图 3：基于集成的方法</em></p><h4 id="2-2-1-基于-Bagging-的方法">2.2.1 基于 Bagging 的方法</h4><p>Bagging 是 Bootstrap Aggregating 的缩写。传统的 Bagging 算法包括生成「n」个不同替换的引导训练样本，并分别训练每个自举算法上的算法，然后再聚合预测。</p><p>Bagging 常被用于减少过拟合，以提高学习效果生成准确预测。与 boosting 不同，bagging 方法允许在自举样本中进行替换。</p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8LocuAel0M7vqnNdXhnliaHb3HcwibQUsd1hwarAz0IcJ4icpP6COpfUnA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img" style="zoom:67%;" /><p><em>图 4：Bagging 方法</em></p><p>总观测= 1000</p><p>欺诈观察= 20</p><p>非欺诈观察= 980</p><p>事件率= 2％</p><p>​从具有替换的群体中选择 10 个自举样品。每个样本包含 200 个观察值。每个样本都不同于原始数据集，但类似于分布和变化上与该数据集类似。机器学习算法（如 logistic 回归、神经网络与决策树）拟合包含 200 个观察的自举样本，且分类器 c1，c2 … c10 被聚合以产生复合分类器。这种集成方法能产生更强的复合分类器，因为它组合了各个分类器的结果。</p><ul><li>优点<ul><li>提高了机器学习算法的稳定性与准确性</li><li>减少方差</li><li>减少了 bagged 分类器的错误分类</li><li>在嘈杂的数据环境中，bagging 的性能优于 boosting</li></ul></li><li>缺点<ul><li>bagging 只会在基本分类器效果很好时才有效。错误的分类可能会进一步降低表现。</li></ul></li></ul><h4 id="2-2-2-基于-Boosting-的方法">2.2.2 基于 Boosting 的方法</h4><p>Boosting 是一种集成技术，它可以将弱学习器结合起来创造出一个能够进行准确预测的强大学习器。Boosting 开始于在训练数据上准备的基本分类器/弱分类器。</p><p>基本学习器/分类器是弱学习器，即预测准确度仅略好于平均水平。弱是指当数据的存在小变化时，会引起分类模型出现大的变化。</p><p>在下一次迭代中，新分类器将重点放在那些在上一轮中被错误分类的案例上。</p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8teMRguuBaakjXE4ngq69qXGYbbLMPibvZBa1uzVXVL1CTokBDDXWyicg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="img" style="zoom: 200%;" /><p><em>图 5：Boosting 方法</em></p><h5 id="2-2-2-1-自适应-boosting——Ada-Boost">2.2.2.1 自适应 boosting——Ada Boost</h5><p>Ada Boost 是最早的 boosting 技术，其能通过许多弱的和不准确的规则的结合来创造高准确度的预测。其中每个训练器都是被串行地训练的，其目标在每一轮正确分类上一轮没能正确分类的实例。</p><p>对于一个学习过的分类器，如果要做出强大的预测，其应该具备以下三个条件：</p><ul><li>规则简单</li><li>分类器在足够数量的训练实例上进行了训练</li><li>分类器在训练实例上的训练误差足够低</li></ul><p>每一个弱假设都有略优于随机猜测的准确度，即误差项 € (t) 应该略大约 ½-β，其中 β&gt;0。这是这种 boosting 算法的基础假设，其可以产生一个仅有一个很小的误差的最终假设。</p><p>在每一轮之后，它会更加关注那些更难被分类的实例。这种关注的程度可以通过一个权重值（weight）来测量。起初，所有实例的权重都是相等的，经过每一次迭代之后，被错误分类的实例的权重会增大，而被正确分类的实例的权重则会减小。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8UBH4XAjBgyibliaLibShQmGx6YphtOt8jN5dhmgAEJ28VLGak5seRCtkQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p><em>图 6：自适应 boosting 的方法</em></p><p>比如如果有一个包含了 1000 次观察的数据集，其中有 20 次被标记为了欺诈。刚开始，所有的观察都被分配了相同的权重 W1，基础分类器准确分类了其中 400 次观察。</p><p>然后，那 600 次被错误分类的观察的权重增大为 W2，而这 400 次被正确分类的实例的权重减小为 W3。</p><p>在每一次迭代中，这些更新过的加权观察都会被送入弱的分类器以提升其表现。这个过程会一直持续，直到错误分类率显著降低，从而得到一个强大的分类器。</p><ul><li>优点<ul><li>非常简单就能实现</li><li>可以很好地泛化——适合任何类型的分类问题且不易过拟合</li></ul></li><li>缺点<ul><li>对噪声数据和异常值敏感</li></ul></li></ul><h5 id="2-2-2-2-梯度树-boosting">2.2.2.2 梯度树 boosting</h5><p>在梯度 Boosting（Gradient Boosting）中，许多模型都是按顺序训练的。其是一种数值优化算法，其中每个模型都使用梯度下降（Gradient Descent）方法来最小化损失函数 y = ax+b+e。</p><p>在梯度 Boosting 中，决策树（Decision Tree）被用作弱学习器。</p><p>尽管 Ada Boost 和梯度 Boosting 都是基于弱学习器/分类器工作的，而且都是在努力使它们变成强大的学习器，但这两种方法之间存在一些显著的差异。Ada Boost 需要在实际的训练过程之前由用户指定一组弱学习器或随机生成弱学习器。其中每个学习器的权重根据其每步是否正确执行了分类而进行调整。而梯度 Boosting 则是在训练数据集上构建第一个用来预测样本的学习器，然后计算损失（即真实值和第一个学习器的输出之间的差），然后再使用这个损失在第二个阶段构建改进了的学习器。</p><p>在每一个步骤，该损失函数的残差（residual）都是用梯度下降法计算出来的，而新的残差会在后续的迭代中变成目标变量。</p><p>梯度 Boosting 可以通过 R 语言使用 SAS Miner 和 GBM 软件包中的 Gradient Boosting Node 实现。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8jfW0Le8DnCH5PeXVODxGMHF4YiajOxuex2icic8JIFpaia2VQeWOZsEffA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p><em>图 7：梯度 Boosting 方法</em></p><p>比如，如果有一个包含了 1000 次观察的训练数据集，其中有 20 次被标记为了欺诈，并且还有一个初始的基础分类器。目标变量为 Fraud，当交易是欺诈时，Fraud=1；当交易不是欺诈时，Fraud=0.</p><p>比如说，决策树拟合的是准确分类仅 5 次观察为欺诈观察的情况。然后基于该步骤的实际输出和预测输出之间的差，计算出一个可微的损失函数。该损失函数的这个残差是下一次迭代的目标变量 F1。</p><p>类似地，该算法内部计算该损失函数，并在每个阶段更新该目标，然后在初始分类器的基础上提出一个改进过的分类器。</p><ul><li>缺点<ul><li>梯度增强过的树比随机森林更难拟合</li><li>梯度 Boosting 算法通常有 3 个可以微调的参数：收缩（shrinkage）参数、树的深度和树的数量。要很好拟合，每个参数都需要合适的训练。如果这些参数没有得到很好的调节，那么就可能会导致过拟合。</li></ul></li></ul><h5 id="2-2-2-3-XGBoost">2.2.2.3 XGBoost</h5><p>XGBoost（Extreme Gradient Boosting/极限梯度提升）是 Gradient Boosting 算法的一种更先进和更有效的实现。</p><p>相对于其它 Boosting 技术的优点：</p><ul><li>速度比普通的 Gradient Boosting 快 10 倍，因为其可以实现并行处理。它是高度灵活的，因为用户可以自定义优化目标和评估标准，其具有内置的处理缺失值的机制。</li><li>和遇到了负损失就会停止分裂节点的 Gradient Boosting 不同，XGBoost 会分裂到指定的最大深度，然后会对其树进行反向的剪枝（prune），移除仅有一个负损失的分裂。</li></ul><p>XGBoost 可以使用 R 和 Python 中的 （sklearn库中）XGBoost 包实现。</p><h2 id="3-实际案例"><strong>3. 实际案例</strong></h2><h3 id="3-1-数据描述">3.1 数据描述</h3><p>这个例子使用了电信公司的包含了 47241 条顾客记录的数据集，每条记录包含的信息有 27 个关键预测变量</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8w1KJsX6wyzYuYAGpSQZW88dQY33XBibSh9j20HzDpOPg9yHibNOribiboQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p>罕见事件数据集的数据结构如下，缺失值删除、异常值处理以及降维。</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8zRspIQNyjaNfjsUI6icwZ8DP7NOOCRtlfUajFdFVicaBanXn1fxIHusVGZLaovGtcYUib3hibE0Vk0g/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p><p>后面用R代码，这边不用了。</p><h2 id="结论">结论</h2><p>遇到不平衡数据集时，没有改善预测模型准确性的一站式解决方案。你可能需要尝试多个办法来搞清楚最适合数据集的采样技术。在绝大多数情况下，诸如 SMOTE 以及 MSMOTE 之类的合成技术会比传统过采样或欠采样的办法要好。</p><p>为了获得更好的结果，你可以在使用诸如 Gradeint boosting 和 XGBoost 的同时也使用 SMOTE 和 MSMOTE 等合成采样技术。</p><p>通常用于解决不平衡数据集问题的先进 bagging 技术之一是 SMOTE bagging。这个办法采取了一种完全不同于传统 bagging 技术的办法来创造每个 Bag/Bootstrap。通过每次迭代时设置一个 SMOTE 重采样率，它可以借由 SMOTE 算法生成正例。每次迭代时，负例集会被 bootstrap。</p><p>不平衡数据集的特点不同，最有效的技术也会有所不同。对比模型时要考虑相关评估参数。</p><p>在对比通过全面地结合上述技术而构建的多个预测模型时，ROC 曲线下的 Lift &amp; Area 将会在决定最优模型上发挥作用。</p><p>原文链接：<a href="https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;mid=2650724464&amp;idx=1&amp;sn=1f34358862bacfb4c7ea17c864d8c44d&amp;chksm=871b1c0eb06c95180e717d8316b0380602f638a764530b4b9e35ac812c7c33799d3357d46f00&amp;scene=0&amp;key=0f5e635eeb6bf20a076ad60d7f11c6ef5c5c1c8f02873bc8b458381b629a1e2ae76174d0d4ba34331c71d095e3b3b92aa7fff5e1e11badeaf6c87ff90fd264f3dc6b1eb074eaccb2ac46e8f2d440cefd&amp;ascene=0&amp;uin=MTU1NTY3MTA0Mg==&amp;devicetype=iMac%20MacBookPro12,1%20OSX%20OSX%2010.11.6%20build%2815G1217%29&amp;version=12010310&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=csWk%2bJXfpl7rA8r527fLqF%2bF3EZEeBKpFRjI%2bWMXoPf2PEtPt/LMrscLX4GBl7gg">从重采样到数据合成：如何处理机器学习中的不平衡分类问题？</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BN层批量归一化</title>
      <link href="/2022/09/08/BN%E5%B1%82%E6%89%B9%E9%87%8F%E5%BD%92%E4%B8%80%E5%8C%96/"/>
      <url>/2022/09/08/BN%E5%B1%82%E6%89%B9%E9%87%8F%E5%BD%92%E4%B8%80%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="https://blog.csdn.net/wjinjie/article/details/118949226">https://blog.csdn.net/wjinjie/article/details/118949226</a></p><h1>批量归一化问题总结</h1><h2 id="1、批归一化BN">1、批归一化BN</h2><p>Batch Normalization是2015年一篇论文中提出的数据归一化方法，往往用在深度神经网络中激活层之前。其作用可以加快模型训练时的收敛速度，使得模型训练过程更加稳定，避免梯度爆炸或者梯度消失。并且起到一定的正则化作用，几乎代替了Dropout。</p><h2 id="2、为什么要批归一化BN">2、为什么要批归一化BN</h2><p>以前在神经网络训练中，只是对<strong>输入层数据</strong>进行归一化处理，却没有在<strong>中间层</strong>进行归一化处理。</p><p>要知道，虽然我们对输入数据进行了归一化处理，但是输入数据经过 σ ( W X + b ) \sigma(WX+b)σ(WX+b) 这样的矩阵乘法以及非线性运算之后，其数据分布很可能被改变，<strong>而随着深度网络的多层运算之后，数据分布的变化将越来越大。</strong></p><p>如果我们能在网络的中间也进行归一化处理，那么就能将中间层数据<strong>统一到同一量纲</strong>。 这种在<strong>神经网络中间层</strong>也进行归一化处理，使训练效果更好的方法，就是批归一化Batch Normalization（BN）。</p><h2 id="3、BN-计算过程">3、BN 计算过程</h2><p><strong>下面给出 BN 算法在训练时的过程：</strong></p><p><strong>输入</strong>：上一层输出结果</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">X=x_1,x_2,...,x_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,学习参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo separator="true">,</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">γ,β</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></p><p><strong>算法流程</strong>：</p><p>（1）计算上一层输出数据的均值：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>μ</mi><mi>β</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mu_{\beta}=\frac{1}{m} \sum_{i=1}^{m}\left(x_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>其中，$m $是此次训练样本 batch 的大小。</p><p>（2）计算上一层输出数据的标准差</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>σ</mi><mi>β</mi><mn>2</mn></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>β</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma_{\beta}^{2}=\frac{1}{m} \sum_{i=1}^{m}\left(x_{i}-\mu_{\beta}\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2472em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>（3）归一化处理，得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>β</mi></msub></mrow><mrow><msqrt><msubsup><mi>σ</mi><mi>β</mi><mn>2</mn></msubsup></msqrt><mo>+</mo><mi>ϵ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\hat{x}_{i}=\frac{x_{i}-\mu_{\beta}}{\sqrt{\sigma_{\beta}^{2}}+\epsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9903em;vertical-align:-1.73em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.1642em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1642em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1242em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.88em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.88em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6758em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.3942em;"><span class="pstrut" style="height:3.1642em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8412em;"><span class="pstrut" style="height:3.1642em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.73em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 是为了避免分母为 0 而加进去的接近于 0 的很小值。</p><p>（4）重构，对经过上面归一化处理得到的数据进行重构，得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>γ</mi><msub><mover accent="true"><mi>x</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">y_{i}=\gamma \hat{x}_{i}+\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></span></p><p>其中，$ \gamma, \beta$ 为可学习参数。</p><h2 id="4、BN中均值、方差具体怎么计算得到？">4、BN中均值、方差具体怎么计算得到？</h2><p>神经网络中传递的是张量数据，其维度通常记为【N, H, W, C】，其中 N 是batch_size，H、W是行、列，C是通道数。假设一次送入10张彩色图片进行处理，那么维度是：【10，H，W，3】。</p><p><strong>1）均值的计算</strong>：<br>就是在一个批次内（10张），将每张图中的对应通道中的数字加起来，然后求均值。必例如彩色图像有RGB三个通道。所以求均值时，需要计算的是10张图同一通道上的均值。计算过程：<strong>将10张图中所有R通道上的像素值加起来，再除以（10xHxW），即得到均值</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">u_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。同理可得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>g</mi></msub><mtext>、</mtext><msub><mi>u</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">u_g、u_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p><strong>（2）方差的计算</strong>：<br>根据下式，对RGB三个通道，分别计算方差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mi>r</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mspace width="1em"/><msubsup><mi>σ</mi><mi>g</mi><mn>2</mn></msubsup><mo separator="true">,</mo><mspace width="1em"/><msubsup><mi>σ</mi><mi>b</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{r}^{2}, \quad \sigma_{g}^{2}, \quad \sigma_{b}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1972em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4169em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mn>10</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>10</mn></munderover><msup><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^{2}=\frac{1}{10} \sum_{i=1}^{10}\left(x_{i}-\mu\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">μ</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="5、训练与推理中BN的区别">5、训练与推理中BN的区别</h2><p>训练时，均值、方差分别是该批次内数据相应维度上的均值与方差；训练一旦结束，学习参数gamma和bata也就确定了。</p><p>推理时，通常进行一个样本的预测，就并没有batch的概念，因此，这个时候用的是<strong>全部训练数据</strong>的均值和方差。实际过程中，这种方法比较消耗内存，所以一般通过<strong>滑动平均法</strong>来求得。</p><h2 id="6、归一化的作用（优点）">6、归一化的作用（优点）</h2><p>归一化是深度学习神经网络训练中常用的技巧，它的作用主要在于：</p><ul><li><strong>统一量纲，使网络层数据呈同一分布，使模型的训练过程更加稳定。</strong></li><li><strong>加快梯度下降的速度，促使模型快速收敛</strong></li><li><strong>在一定程度上缓解了深层网络中梯度弥散的问题</strong>，从而使训练深层网络模型更加容易（原因是：比如tanh、sigmoid等激活函数，在输入较大或较小时，梯度会出现弥散。而归一化将输入限幅在了0-1之间）</li><li>重构了原始的数据分布，一定程度上缓解过拟合，防止每批训练中某一个样本经常被挑选到，有助于提高精度。</li><li>减少了人为选择参数。在某些情况下可以取消 dropout 和 L2 正则项参数，或者采取更小的 L2 正则项约束参数。</li><li>减少了对学习率的要求。现在我们可以使用初始很大的学习率或者选择了较小的学习率，算法也能够快速训练收敛。</li><li>可以不再使用局部响应归一化。BN 本身就是归一化网络(局部响应归一化在 AlexNet 网络中存在)。</li></ul><h2 id="7、批归一化BN适用范围">7、批归一化BN适用范围</h2><h4 id="（1）-BN在激活函数之前"><strong>（1） BN在激活函数之前</strong></h4><p>在CNN中，BN一般作用在激活函数之前（如下所示，是一个经典的例子）。个人觉得，这是由激活函数的性质决定的。由于像sigmoid、tanh等激活函数，当输入过大或过小时，梯度接近于0，会导致梯度弥散，所以要在激活函数输入之前将数值限制在0-1之间。而对于relu等激活函数几乎不受这种影响，但是在relu函数之前加入BN，经过relu之后输出的数值范围也在0-1之间，因此送入卷积层计算的数值也就在0-1范围之间。</p><p>相反，如果在卷积层之前添加BN时，虽然卷积层的输入数据能限制在 0-1 范围之间，但是经过卷积层之后的数据就不一定在0-1 范围之间，就达不到在激活函数之前限幅的目的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">self.listLayers = [self.bn1,</span><br><span class="line">                   layers.Activation(<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">                   self.conv1,</span><br><span class="line">                   self.bn2,</span><br><span class="line">                   layers.Activation(<span class="string">&quot;relu&quot;</span>),</span><br><span class="line">                   self.conv2,</span><br><span class="line">                   self.dropout]</span><br></pre></td></tr></table></figure><h4 id="（2）BN适用场景"><strong>（2）BN适用场景</strong></h4><p><strong>在神经网络训练时遇到收敛速度很慢，或梯度爆炸等无法训练</strong>的状况时可以尝试BN来解决。另外，在一般使用情况下也可以加入BN来加快训练速度，提高模型精度。</p><p>BN 在每个 mini-batch 比较大，数据分布比较接近的场景比较适用。在进行训练之前，要做好充分的shuffle，否则效果会差很多。另外，由于BN需要在运行过程中统计每个mini-batch的一阶统计量和二阶统计量，因此不适用于动态的网络结构和RNN网络。</p><h2 id="8、常见的归一化类型">8、常见的归一化类型</h2><p><strong>（1）线性归一化</strong></p><p>比较适用于在数值比较集中的情况。缺点是如果 max 和 min 不稳定，很容易使得归一化结果不稳定，使得后续使用效果也不稳定。线性归一化公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">x^{\prime}=\frac{x-\min (x)}{\max (x)-\min (x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>（2）标准差标准化</strong></p><p>使经过处理的数据符合标准正太分布，即均值为 0，标准差为 1。其中 $ \mu$ 为所有样本数据的均值，$ \sigma$ 为所有样本数据的标准差。标准差标准化公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding="application/x-tex">x^{\prime}=\frac{x-\mu}{\sigma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">μ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>（3）局部响应归一化</strong></p><p>LRN （Local Response Normalization）是一种提高深度学习准确度的技术方法。在 ALexNet 中，提出了 LRN 层，对局部神经元的活动创建竞争机制，使其中响应比较大对值变得相对更大，并抑制其他反馈较小的神经元，增强了模型的泛化能力。LRN 一般是在激活、池化函数后使用。</p><p>局部响应归一化原理是仿造生物学上活跃的神经元对相邻神经元的抑制现象（侧抑制），其公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>b</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup><mo>=</mo><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>i</mi></msubsup><mi mathvariant="normal">/</mi><msup><mrow><mo fence="true">(</mo><mi>k</mi><mo>+</mo><mi>α</mi><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>−</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></munderover><msup><mrow><mo fence="true">(</mo><msubsup><mi>a</mi><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><mi>j</mi></msubsup><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo fence="true">)</mo></mrow><mi>β</mi></msup></mrow><annotation encoding="application/x-tex">b_{x, y}^{i}=a_{x, y}^{i} /\left(k+\alpha \sum_{j=\max (0, i-n / 2)}^{\min (N-1, i+n / 2)}\left(a_{x, y}^{j}\right)^{2}\right)^{\beta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2578em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.839em;vertical-align:-1.55em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.875em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='3.600em' viewBox='0 0 875 3600'><path d='M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,-36,557 l0,84c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189l0,-92c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mop mtight"><span class="mtight">m</span><span class="mtight">a</span><span class="mtight">x</span></span><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">m</span><span class="mtight">i</span><span class="mtight">n</span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">n</span><span class="mord mtight">/2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0787em;"><span style="top:-3.3276em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.875em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='3.600em' viewBox='0 0 875 3600'><path d='M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,9c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558l0,-144c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.289em;"><span style="top:-4.5029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>a 表示<strong>卷积层（包括卷积操作和激活操作）后的输出结果</strong>。这个输出的结果是一个四维数组 [batch,height,width,channel]。这个输出结构中的一个位置 [a,b,c,d]，可以理解成在某一张特征图中的某一个通道下的某个高度和某个宽度位置的点，即<strong>第 a 张特征图的第 d 个通道下的高度为 b 宽度为 c 的点。</strong></li><li><img src="https://www.zhihu.com/equation?tex=a_%7Bx%2Cy%7D%5E%7Bi%7D" alt="[公式]"> 表示第 i 片特征图在位置（x,y）运用激活函数 ReLU 后的输出。n 是同一位置上临近的 feature map 的数目，N 是特征图的总数。</li></ul><img src="https://pic4.zhimg.com/80/v2-198aff65688eabc9943a26fb0a54864f_720w.jpg" alt="img" style="zoom: 33%;" /><ul><li>参数 <img src="https://www.zhihu.com/equation?tex=k%2C+n%2C+%5Calpha%EF%BC%8C%5Cbeta" alt="[公式]"> 都是超参数。k=2，n=5，α=10-4，β=0.75。</li></ul><p>举一个例子：</p><blockquote><p>i = 10, N = 96 时，第 i=10 个卷积核在位置（x,y）处的取值为 <img src="https://www.zhihu.com/equation?tex=a_%7Bx%2Cy%7D%5E%7Bi%7D" alt="[公式]"> ，它的局部响应归一化过程如下：用 <img src="https://www.zhihu.com/equation?tex=a_%7Bx%2Cy%7D%5E%7Bi%7D+" alt="[公式]"> 除以第 8、9、10、11、12 片特征图位置（x,y）处的取值求和。</p></blockquote><p>也就是跨通道的一个 Normalization 操作。</p><p><strong>（4）非线性归一化</strong></p><p>非线性归一化经常用在数据分化比较大的场景，有些数值很大，有些很小。通过一些数学函数，将原始值进行映射。该方法包括 log、指数，正切等。</p><h2 id="9、BN、LN、IN与GN对比">9、BN、LN、IN与GN对比</h2><p>深度学习中数据的维度一般是【N, H, W, C】格式，其中 N 是batch size，H、W是特征图的高和宽，C是特征图的通道数。如下图所示，是 BN、LN、IN 与 GN 作用方式的对比图。</p><p><img src="https://img-blog.csdnimg.cn/4cdb038463ce4259823140aa74e7e020.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dqaW5qaWU=,size_16,color_FFFFFF,t_70" alt="img"></p><p>下面分别来解释这四种不同的归一化方式：</p><ul><li>批归一化BN：对批次方向（N）做归一化</li><li>层归一化LN：在通道方向（C）上做归一化，主要对RNN作用明显</li><li>实例归一化IN：在一个图像像素内做归一化，主要用于风格化迁移</li><li>组归一化GN：在通道方向上分组，然后再每个组内做归一化</li></ul><p>组归一化的优点：组归一化将通道分成组，并在每组内计算归一化的均值和方差。组归一化的计算与批量大小无关，所以其准确度在各种批量大小都很稳定。</p><h2 id="10、BN-和-WN-比较">10、BN 和 WN 比较</h2><p>WN（Weight Normalization）是权重归一化，它与BN都属于参数重写的方法，只是采用的方式不同。WN 是对网络权值 W进行归一化， BN 是对网络某一层输入数据进行归一化。</p><p>WN 相比 BN 的优势在于：</p><ul><li>通过重写深度学习网络的权重W的方式来加速深度学习网络参数收敛，没有引入 minbatch 的依赖，适用于 RNN、LSTM网络；而 BN 不能直接用于RNN，原因在于：(1) RNN 处理的 Sequence 是变长的；2) RNN 是基于时间状态 计算，如果直接使用 Batch Normalization 处理，需要保存每个时间状态下mini btach 的均值和方差，效率低且占内存）。</li><li>Batch Normalization 基于一个 mini batch 的数据计算均值和方差，而不是基于整个 Training set 来做，相当于进行梯度计算式引入噪声。因此，Batch Normalization 不适用于对噪声敏感的强化学习、生成模型。相反，Weight Normalization 对通过标量 g  和向量 v 对权重 W 进行重写，重写向量 v是固定的，因此，基于 Weight Normalization 的 Normalization 可以看做比 Batch Normalization 引入更少的噪声。</li><li>不需要额外的存储空间来保存 mini batch 的均值和方差，同时实现 Weight Normalization 时，对深度学习网络进行正向信号传播和反向梯度计算带来的额外计算开销也很小。因此，要比采用 Batch Normalization 进行 normalization 操作时，速度快。</li></ul><h2 id="11、归一化和标准化的联系与区别">11、归一化和标准化的联系与区别</h2><ul><li>联系：都能取消由于量纲不同引起的误差；都是一种线性变换；都是对向量按照比例压缩再进行平移。</li><li>区别：归一化是将样本的特征值转换到同一量纲下，把数据映射到 [0, 1] 或 [-1, 1] 区间内，区间放缩法是归一化的一种。标准化是将样本转换成标准正太分布，使其和整体样本分布相关，每个样本点都能对标准化产生影响。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归一化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可拓学知识目录</title>
      <link href="/2022/09/08/%E5%8F%AF%E6%8B%93%E5%AD%A6%E7%9F%A5%E8%AF%86%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/09/08/%E5%8F%AF%E6%8B%93%E5%AD%A6%E7%9F%A5%E8%AF%86%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1>可拓学</h1><h2 id="创新四步">创新四步</h2><p>基元建模-&gt;拓展-&gt;变换-&gt;评价</p><h2 id="基元">基元</h2><ul><li>三种元：物元，事元，关系元</li><li>3种基本元组合的复合元</li><li>结构：对象，特征，量值</li><li>发散思维：一物多征，一征多物，一征多值，一值多征，一值多物，同征同值多对象</li></ul><h2 id="可托集合">可托集合</h2><h3 id="三种集合">三种集合</h3><ul><li>康拓集合</li><li>模糊集合</li><li>可拓集合</li></ul><h3 id="其他要素">其他要素</h3><ul><li>元素</li><li>准则</li><li>论域</li><li>距离和可托距</li></ul><h2 id="拓展">拓展</h2><h3 id="拓展的思维结构">拓展的思维结构</h3><ul><li>发散树：多角度多特征考虑问题</li><li>相关网：牵一发而动全身</li><li>蕴含系：世间万物蕴含因果</li><li>分合链：分解和组合的艺术</li></ul><h3 id="拓展的基本方法">拓展的基本方法</h3><ul><li>共轭分析</li><li>相关分析</li><li>蕴含分析</li><li>可扩分析</li></ul><h2 id="变换">变换</h2><h3 id="基本变换">基本变换</h3><ul><li>置换变换（置换量值，置换对象，置换特征）</li><li>增删变换（增加变换，删减变换）</li><li>扩缩变换（扩大变换，缩小变换）</li><li>组分变换（组合变换，分解变换，先组合后分解，先分解后组合）</li><li>复制变换（扩大复制，缩小复制，近似复制，多次复制）</li></ul><h3 id="变换的运算">变换的运算</h3><ul><li>主动变换（与，或，积，逆）</li><li>传导变换</li><li>共轭变换（虚实，软硬，潜显，负正）</li></ul><h2 id="选">选</h2><p>7个步骤</p><ul><li>选择衡量条件</li><li>确定权重</li><li>首次评价</li><li>建立失联函数</li><li>计算规范关联度</li><li>计算综合优度</li><li>按优度的大小排序</li></ul>]]></content>
      
      
      <categories>
          
          <category> 可拓学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可拓学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sigmoid函数与损失函数求导</title>
      <link href="/2022/09/08/sigmoid%E5%87%BD%E6%95%B0%E4%B8%8E%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E6%B1%82%E5%AF%BC/"/>
      <url>/2022/09/08/sigmoid%E5%87%BD%E6%95%B0%E4%B8%8E%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E6%B1%82%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h1>深度学习：Sigmoid函数与损失函数求导</h1><h2 id="1、sigmoid函数">1、sigmoid函数</h2><p>sigmoid函数，也就是s型曲线函数，如下：<br><img src="http://r.photo.store.qq.com/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/45NBuzDIW489QBoVep5mcf*48pd3sw1EG6ASFdDywaGGCr4lxdd5LhJ4BRqpK06sV0ipiHOzf97Pdrhqvqvj5D6MUjEuN03e2lZZ5vA8.2g!/r" alt=""></p><h2 id="1-1-从指数函数到sigmoid">1.1 从指数函数到sigmoid</h2><p>首先我们来画出指数函数的基本图形：<br><img src="https://img-blog.csdn.net/20170718141138825?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpc2hlbmdxaWFuanVu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>从上图，我们得到了这样的几个信息，指数函数过(0,1)点，单调递增/递减，定义域为(−∞,+∞)，值域为(0,+∞)，再来我们看一下sigmoid函数的图像：</p><p><img src="https://img-blog.csdn.net/20170718141443040?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpc2hlbmdxaWFuanVu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>如果直接把e−xe−x放到分母上，就与exex图像一样了，所以分母加上1，就得到了上面的图像，定义域是(−∞,+∞)(−∞,+∞)，值域是(0,1)(0,1)，那么就有一个很好地特性了，就是不管xx是什么，都可以得到(0,1)(0,1)之间的值；</p><h2 id="1-2-对数函数与sigmoid">1.2 对数函数与sigmoid</h2><p>首先来看一下对数函数的图像：<br><img src="https://img-blog.csdn.net/20170718141517032?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpc2hlbmdxaWFuanVu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>对数函数的图像如上，单调递减，有一个比较好的特性就是在(0,1)(0,1)之间，在接近0的时候，就近无穷大，接近1的时候为0，如果我们把前面的sigmoid函数放到自变量的位置上，就得到了(0,1)(0,1)的图像；</p><p>我们如何来衡量一个结果与实际计算值得差距呢？一种思路就是，如果结果越接近，差值就越小，反之越大，这个函数就提供了这样一种思路，如果计算得到的值越接近1，那么那么表示与世界结果越接近，反之越远，所以利用这个函数，可以作为逻辑回归分类器的损失函数，如果所有的结果都能接近结果值，那么就越接近于0，如果所有的样本计算完成以后，结果接近于0，就表示计算结果与实际结果非常相近。</p><h1>sigmoid函数求导</h1><p>sigmoid导数具体的推导过程如下：<br><img src="http://a1.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5p2BoDdDGE3C9GgoOAwcZ46Xt1h.nEPTaeD4vpTM6*1vIOlBtRe0xiJJx3PJi53RUlpunUxPqIaf4R3me9KsVis!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=yQFrAckBawEDGTw!&amp;tl=1&amp;vuin=1005741898&amp;tm=1619020800&amp;sce=60-2-2&amp;rf=0-0" alt=""></p><h2 id="神经网络损失函数求导">神经网络损失函数求导</h2><p>神经网络的损失函数可以理解为是一个多级的复合函数，求导使用链式法则。<br><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/45NBuzDIW489QBoVep5mcRJuoBoG9GSnvJHF*2oFLc6yUTYBZBJ3B1rAuCZQjPrQXzFAi2b*LXCApUHrQX6o.vRJzg8p2NufGYgHR9y0BOw!/b&amp;bo=QwT*AEME*wADGTw!&amp;rf=viewer_4" alt=""></p><h4 id="简化复合函数求导：">简化复合函数求导：</h4><p><img src="https://img-blog.csdn.net/20170718141630182?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpc2hlbmdxaWFuanVu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>如上图所示，我们从上往下开始计算，将每个单元的值计算出来，然后计算每个单元的偏导数，保存下来；</p><p>接下来继续计算子单元的值，子单元的偏导数，保存下来；将最后的子单元到根节点所在的路径的所有偏导乘起来，就是该函数对这个变量的偏导，计算的本质就是从上往下，计算的时候将值存起来，乘到后面的单元上去，这样每个路径的偏导计算只需要一次，从上到下计算一遍就得到了所有的偏导数。</p><p>实际上BP(Backpropagation，反向传播算法)，就是如此计算的，如果现在有一个三层的神经网络，有输入、一个隐藏层，输出层，我们对损失函数求权重的偏导数，它是一个复杂的复合函数，如果先对第一层的权重求偏导，然后在对第二层的权重求偏导，会发现，其中有很多重复计算的步骤，就像上面的简单函数的示例，所以，为了避免这种消耗，我们采用的就是从后往前求偏导，求出每个单元的函数值，求出对应单元的偏导数，保存下来，一直乘下去，输入层。</p><p>下面用一个简单的示例来演示一下<strong>反向传播求偏导</strong>的过程：<br><img src="https://img-blog.csdn.net/20170718141653072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhpc2hlbmdxaWFuanVu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 损失函数函数求导 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数模国赛当天推荐流程</title>
      <link href="/2022/09/08/%E6%95%B0%E6%A8%A1%E5%9B%BD%E8%B5%9B%E5%BD%93%E5%A4%A9%E6%8E%A8%E8%8D%90%E6%B5%81%E7%A8%8B/"/>
      <url>/2022/09/08/%E6%95%B0%E6%A8%A1%E5%9B%BD%E8%B5%9B%E5%BD%93%E5%A4%A9%E6%8E%A8%E8%8D%90%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>国赛流程</h1><h2 id="时间安排：">时间安排：</h2><p>第一天晚上：问题分析，模型讨论，数据处理，模型假设。</p><p>第二天：代码与模型公式的准备。流程图的书写</p><p>第三天：完成所有问题的求解，同时帮助论文手制作图片。</p><p>第四天：完成论文书写。前4个小时前一起看论文改正。最后两小时用来打包提交。</p><h2 id="题目思路：">题目思路：</h2><h3 id="1-问题复述">1.问题复述</h3><ul><li>题意</li><li>数据的抓取</li><li>条件的捕捉</li></ul><h3 id="2-问题分析">2.问题分析</h3><p>每道题具体分析具体情况，注意结合数据。</p><h3 id="3-模型假设">3.模型假设</h3><p>基于问题分析，我们把无关因素全部排除，模型假设中执行。</p><ul><li>内部联系</li><li>外部因素</li><li>数据层面</li></ul><h3 id="4-因素确定">4.因素确定</h3><p>如果是评价模型，需要做提炼指标。如果没有数据需要找数据，但是一定要把影响因素都找出来，有时会生成二级的指标，注意符合客观事实，可以参考别的相关文献。</p><h3 id="5-模型讨论">5.模型讨论</h3><p>具体问题具体讨论，如果出现两种可能都很好的解，可以让两人分别执行，注意不要太浪费时间。尽量还是一个模型为主。</p><h3 id="6-代码coding与论文picturing（画图）">6.代码coding与论文picturing（画图）</h3><p>求解的流程图与求解代码同时进行，不要跟错。模型手可以做查找论文以及辅助绘图的工作，也可以帮忙coding。</p><h3 id="7-结果分析">7.结果分析</h3><p>每道题的结果最好大家来一起讨论，可以帮助论文手写出更好的论文，也可以帮助模型的改良。</p><h3 id="8-模型检验">8.模型检验</h3><p>代码手再最后需要进行灵敏度检验，模型的进一步的表现预期，简单一个图4、5行话即可。</p><h3 id="9-共同写作">9.共同写作</h3><p>论文一定要再最后一起过一遍，尤其是摘要！</p><p>模型的评价，可以一起来评价。</p><h3 id="10-打包处理">10.打包处理</h3><p>这一步也要一起做，操作简单，但是不能犯错。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LR逻辑回归模型</title>
      <link href="/2022/09/08/LR%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/"/>
      <url>/2022/09/08/LR%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1>LR逻辑回归(logistics regression)</h1><p>逻辑回归是一个分类算法，它可以处理二元分类以及多元分类。<br>逻辑回归就是根据之前的数据，预测某事件为真的概率值</p><h2 id="一-分类和回归任务的区别"><strong>一.分类和回归任务的区别</strong></h2><p>​我们可以按照任务的种类,将任务分为回归任务和分类任务.那这两者的区别是什么呢?按照较官方些的说法,输入变量与输出变量均为连续变量的预测问题是回归问题,输出变量为有限个离散变量的预测问题成为分类问题.</p><p>​通俗一点讲,我们要预测的结果是一个数,比如要通过一个人的饮食预测一个人的体重,体重的值可以有无限多个,有的人50kg,有的人51kg,在50和51之间也有无限多个数.这种预测结果是某一个确定数,而具体是哪个数有无限多种可能的问题,我们会训练出一个模型,传入参数后得到这个确定的数,这类问题我们称为回归问题.预测的这个变量(体重)因为有无限多种可能,在数轴上是连续的,所以我们称这种变量为连续变量.<br>​我们要预测一个人身体健康或者不健康,预测会得癌症或者不会得癌症,预测他是水瓶座,天蝎座还是射手座,这种结果只有几个值或者多个值的问题,我们可以把每个值都当做一类,预测对象到底属于哪一类.这样的问题称为分类问题.如果一个分类问题的结果只有两个,比如&quot;是&quot;和&quot;不是&quot;两个结果,我们把结果为&quot;是&quot;的样例数据称为&quot;正例&quot;,讲结果为&quot;不是&quot;的样例数据称为&quot;负例&quot;,对应的,这种结果的变量称为离散型变量.</p><h2 id="二-逻辑回归不是回归"><strong>二.逻辑回归不是回归</strong></h2><p>​从名字来理解逻辑回归.在逻辑回归中,逻辑一词是logistics [lə’dʒɪstɪks]的音译字,并不是因为这个算法是突出逻辑的特性.</p><p>​至于回归,我们前一段讲到回归任务是结果为连续型变量的任务,logistics regression是用来做分类任务的,为什么叫回归呢?那我们是不是可以假设,逻辑回归就是用回归的办法来做分类的呢.跟上思路.</p><h3 id="三-怎么做">三.怎么做</h3><p>​假设刚刚的思路是正确的,逻辑回归就是在用回归的办法做分类任务,那有什么办法可以做到呢,此时我们就先考虑最简单的二分类,结果是正例或者负例的任务.</p><p>​按照多元线性回归的思路,我们可以先对这个任务进行线性回归,学习出这个事情结果的规律,比如根据人的饮食,作息,工作和生存环境等条件预测一个人&quot;有&quot;或者&quot;没有&quot;得恶性肿瘤,可以先通过回归任务来预测人体内肿瘤的大小,取一个平均值作为阈值,假如平均值为y,肿瘤大小超过y为恶心肿瘤,无肿瘤或大小小于y的,为非恶性.这样通过线性回归加设定阈值的办法,就可以完成一个简单的二分类任务.如下图:</p> <img src="https://img-blog.csdnimg.cn/20181110164028163.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><p>​上图中,红色的x轴为肿瘤大小,粉色的线为回归出的函数的图像,绿色的线为阈值.<br>​预测肿瘤大小还是一个回归问题,得到的结果(肿瘤的大小)也是一个连续型变量.通过设定阈值,就成功将回归问题转化为了分类问题.但是,这样做还存在一个问题.</p><p>​我们上面的假设,依赖于所有的肿瘤大小都不会特别离谱,如果有一个超大的肿瘤在我们的例子中,阈值就很难设定.加入还是取平均大小为阈值,则会出现下图的情况:</p><p>​         <img src="https://img-blog.csdnimg.cn/20181110165551883.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /></p><p>​从上边的例子可以看出,使用线性的函数来拟合规律后取阈值的办法是行不通的,行不通的原因在于拟合的函数太直,离群值(也叫异常值)对结果的影响过大,但是我们的整体思路是没有错的,错的是用了太&quot;直&quot;的拟合函数,如果我们用来拟合的函数是非线性的,不这么直,是不是就好一些呢?</p><p>​所以我们下面来做两件事:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1-找到一个办法解决掉回归的函数严重受离群值影响的办法.</span><br><span class="line">2-选定一个阈值.</span><br></pre></td></tr></table></figure><h2 id="四-把回归函数掰弯"><strong>四:把回归函数掰弯</strong></h2><p>​没错,本小节用来解决上边说的第一个问题.开玩笑了,无论如何我也不可能掰弯这个函数.我们能做的呢,就是换一个.原来的判别函数我们用线性的y = <img src="https://private.codecogs.com/gif.latex?w%5E%7BT%7Dx" alt="w^{T}x">,逻辑回归的函数呢,我们目前就用sigmod函数,函数如下:</p><img src="https://img-blog.csdnimg.cn/20200407172245460.png" style="zoom: 50%;" /><p>​公式中,e为欧拉常数(是常数,如果不知道,自行百度),Z就是我们熟悉的多元线性回归中的<img src="https://private.codecogs.com/gif.latex?W%5E%7BT%7DX" alt="W^{T}X">,建议现阶段大家先记住逻辑回归的判别函数用它就好了.</p><p>​就像我们说多元线性回归的判别函数为<img src="https://private.codecogs.com/gif.latex?y%20%3D%20w_%7B0%7Dx_%7B0%7D%20+%20w_%7B1%7Dx_%7B1%7D%20+%20...%20+w_%7Bn%7Dx_%7Bn%7D" alt="y = w_{0}x_{0} + w_{1}x_{1} + ... +w_{n}x_{n}">一样.追究为什么是他花费的经历会比算法本身更多.</p><p>sigmod函数的图像如下:</p><img src="https://img-blog.csdnimg.cn/20181110172820614.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 33%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = numpy.dot(X, theta)     <span class="comment">#python代码</span></span><br><span class="line">h = <span class="number">1</span>/(<span class="number">1</span>+numpy.exp(-z))     <span class="comment"># exp: e 的多少次方</span></span><br></pre></td></tr></table></figure><p>​该函数具有很强的鲁棒性(鲁棒是Robust的音译，也就是健壮和强壮的意思),并且将函数的输入范围(∞,-∞)映射到了输出的(0,1)之间且具有概率意义.具有概率意义是怎么理解呢:将一个样本输入到我们学习到的函数中,输出0.7,意思就是这个样本有70%的概率是正例,1-70%就是30%的概率为负例.</p><p>​再次强调一下,如果你的数学功底很好,可以看一下我上边分享的为什么是sigmod函数的连接,如果数学一般,我们这个时候没有必要纠结为什么是sigmod,函数那么多为什么选他.学习到后边你自然就理解了</p><p>​总结一下上边所讲:我们利用线性回归的办法来拟合然后设置阈值的办法容易受到离群值的影响,sigmod函数可以有效的帮助我们解决这一个问题,所以我们只要在拟合的时候把即y =<img src="https://private.codecogs.com/gif.latex?y%20%3D%20w_%7B0%7Dx_%7B0%7D%20+%20w_%7B1%7Dx_%7B1%7D%20+%20...%20+w_%7Bn%7Dx_%7Bn%7D" alt="img"> 换成<img src="https://private.codecogs.com/gif.latex?W%5E%7BT%7DX" alt="img">即可,其中</p><p>z=<img src="https://private.codecogs.com/gif.latex?W%5E%7BT%7DX" alt="img">,也就是说g(z) =<img src="https://private.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B1%20+%20e%5E%7Bw%5E%7BT%7Dx%7D%7D" alt="img"> . 同时,因为g(z)函数的特性,它输出的结果也不再是预测结果,而是一个值预测为正例的概率,预测为负例的概率就是1-g(z).</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">函数形式表达:</span><br><span class="line"></span><br><span class="line">         P(y=0|w,x) = 1 – g(z)</span><br><span class="line"></span><br><span class="line">         P(y=1|w,x) =  g(z)</span><br><span class="line"></span><br><span class="line">         P(正确) = *         为某一条样本的预测值,取值范围为0或者1.</span><br><span class="line"></span><br><span class="line">到这里,我们得到一个回归函数,它不再像y=wT * x一样受离群值影响,他的输出结果是样本预测为正例的概率(0到1之间的小数).我们接下来解决第二个问题:选定一个阈值.</span><br></pre></td></tr></table></figure><h2 id="五-选定阈值"><strong>五:选定阈值</strong></h2><p>​选定阈值的意思就是,当我选阈值为0.5,那么小于0.5的一定是负例,哪怕他是0.49.此时我们判断一个样本为负例一定是准确的吗?其实不一定,因为它还是有49%的概率为正利的.但是即便他是正例的概率为0.1,我们随机选择1w个样本来做预测,还是会有接近100个预测它是负例结果它实际是正例的误差.无论怎么选,误差都是存在的.所以我们选定阈值的时候就是在选择可以接受误差的程度.<br>​我们现在知道了sigmod函数预测结果为一个0到1之间的小数,选定阈值的第一反应,大多都是选0.5,其实实际工作中并不一定是0.5,阈值的设定往往是根据实际情况来判断的.本小节我们只举例让大家理解为什么不完全是0.5,并不会有一个万能的答案,都是根据实际工作情况来定的.</p><p>​0到1之间的数阈值选作0.5当然是看着最舒服的,可是假设此时我们的业务是像前边的例子一样,做一个肿瘤的良性恶性判断.选定阈值为0.5就意味着,如果一个患者得恶性肿瘤的概率为0.49,模型依旧认为他没有患恶性肿瘤,结果就是造成了严重的医疗事故.此类情况我们应该将阈值设置的小一些.阈值设置的小,加入0.3,一个人患恶性肿瘤的概率超过0.3我们的算法就会报警,造成的结果就是这个人做一个全面检查,比起医疗事故来讲,显然这个更容易接受.<br>​第二种情况,加入我们用来识别验证码,输出的概率为这个验证码识别正确的概率.此时我们大可以将概率设置的高一些.因为即便识别错了又能如何,造成的结果就是在一个session时间段内重试一次.机器识别验证码就是一个不断尝试的过程,错误率本身就很高.</p><p>​ 以上两个例子可能不大准确,只做意会,你懂了就好.</p><pre><code>到这里,逻辑回归的由来我们就基本理清楚了,现在我们知道了逻辑回归的判别函数就是![img](https://private.codecogs.com/gif.latex?g%28z%29%20%3D%20%5Cfrac%7B1%7D%7B1+e%5E%7B-z%7D%7D)</code></pre><p>，z=<img src="https://private.codecogs.com/gif.latex?W%5E%7BT%7DX" alt="img"></p><h2 id="六-最大似然估计"><strong>六.最大似然估计</strong></h2><p>​此时我们想要找到一组w,使函数<img src="https://private.codecogs.com/gif.latex?g%28z%29%20%3D%20%5Cfrac%7B1%7D%7B1+e%5E%7B-z%7D%7D" alt="g(z) = \frac{1}{1+e^{-z}}">正确的概率最大.而我们在上面的推理过程中已经得到每个单条样本预测正确概率的公式:</p><pre><code>P(正确) =![(g(w,xi))^&#123;y^&#123;i&#125;&#125;](https://private.codecogs.com/gif.latex?%28g%28w%2Cxi%29%29%5E%7By%5E%7Bi%7D%7D) *![img](https://private.codecogs.com/gif.latex?%281-g%28w%2Cxi%29%29%5E%7B1-y%5E%7Bi%7D%7D)若想让预测出的结果全部正确的概率最大,根据最大似然估计([多元线性回归推理](https://blog.csdn.net/weixin_39445556/article/details/81416133)中有讲过,此处不再赘述),就是所有样本预测正确的概率相乘得到的P(总体正确)最大,此时我们让&lt;img src=&quot;https://img-blog.csdnimg.cn/20181110220832633.jpg&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt; ,数学表达形式如下:</code></pre><img src="https://img-blog.csdnimg.cn/2018111022095526.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 25%;" /><p>​上述公式最大时公式中W的值就是我们要的最好的W.下面对公式进行求解.</p><p>​     我们知道,一个连乘的函数是不好计算的,我们可以通过两边同事取log的形式让其变成连加.</p><img src="https://img-blog.csdnimg.cn/2018111022143681.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:33%;" /><p>得到的这个函数越大,证明我们得到的W就越好.因为在函数最优化的时候习惯让一个函数越小越好,所以我们在前边加一个负号.得到公式如下:</p><p><img src="https://img-blog.csdnimg.cn/20181110222213701.jpg" alt="img"></p><p>这个函数就是我们逻辑回归(logistics regression)的损失函数,我们叫它<strong>交叉熵损失函数</strong>.</p><h2 id="七-求解交叉熵损失函数"><strong>七.求解交叉熵损失函数</strong></h2><p>​求解损失函数的办法我们还是使用梯度下降,同样在<a href="https://blog.csdn.net/weixin_39445556/article/details/83661219">批量梯度下降与随机梯度下降</a>一节有详细写到,此处我们只做简要概括.</p><p>求解步骤如下:</p><p>​        1-随机一组W.</p><p>​        2-将W带入交叉熵损失函数,让得到的点沿着负梯度的方向移动.</p><p>​        3-循环第二步.</p><p>​    求解梯度部分同样是对损失函数求偏导,过程如下:</p><p><img src="https://img-blog.csdnimg.cn/20181110223349772.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTQ0NTU1Ng==,size_16,color_FFFFFF,t_70" alt="img"></p><p>交叉熵损失函数的梯度和最小二乘的梯度形式上完全相同,区别在于,此时的<img src="https://private.codecogs.com/gif.latex?h_%7B%5CTheta%7D%28x%29%20%3D%20g%28z%29" alt="h_{\Theta}(x) = g(z)">。而最小二乘的<img src="https://private.codecogs.com/gif.latex?h_%7B%5CTheta%7D%20%3D%20W%5E%7BT%7DX" alt="h_{\Theta} = W^{T}X"></p><p>PS:加一个总结:逻辑回归为什么对切斜的数据特别敏感(正负例数据比例相差悬殊时预测效果不好)</p><p>​    首先从文章开头部分举例的两个图可以看到,使用线性模型进行分类第一个要面对的问题就是如何降低离群值的影响,而第二大问题就是,在正负例数据比例相差悬殊时预测效果不好.为什么会出现这种情况呢?原因来自于逻辑回归交叉熵损失函数是通过最大似然估计来推导出的.</p><p>​使用最大似然估计来推导损失函数,那无疑,我们得到的结果就是所有样本被预测正确的最大概率.注意重点是我们得到的结果是预测正确率最大的结果,100个样本预测正确90个和预测正确91个的两组w,我们会选正确91个的这一组.那么,当我们的业务场景是来预测垃圾邮件,预测黄色图片时,我们数据中99%的都是负例(不是垃圾邮件不是黄色图片),如果有两组w,第一组为所有的负例都预测正确,而正利预测错误,正确率为99%,第二组是正利预测正确了,但是负例只预测出了97个,正确率为98%.此时我们算法会认为第一组w是比较好的.但实际我们业务需要的是第二组,因为正例检测结果才是业务的根本.</p><p>​此时我们需要对数据进行欠采样/重采样来让正负例保持一个差不多的平衡,或者使用树型算法来做分类.一般树型分类的算法对数据倾斜并不是很敏感,但我们在使用的时候还是要对数据进行欠采样/重采样来观察结果是不是有变好.</p><p>————————————————<br>版权声明：本文为CSDN博主「winrar_setup.rar」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_39445556/article/details/83930186">https://blog.csdn.net/weixin_39445556/article/details/83930186</a></p><h2 id="python代码参考">python代码参考</h2><h3 id="普通逻辑回归">普通逻辑回归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">data = numpy.loadtxt(<span class="string">&#x27;logicData2.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    x, y = data[:, :-<span class="number">1</span>], data[:, -<span class="number">1</span>]</span><br><span class="line">    X = (x - numpy.mean(x, axis=<span class="number">0</span>)) / numpy.std(x, axis=<span class="number">0</span>, ddof=<span class="number">1</span>)</span><br><span class="line">    onex, y = numpy.c_[numpy.ones(<span class="built_in">len</span>(X)), X], numpy.c_[y]</span><br><span class="line">    m, n = onex.shape</span><br><span class="line">    alpha, iter0 = <span class="number">0.1</span>, <span class="number">20000</span></span><br><span class="line">    theta, J = numpy.zeros((n, <span class="number">1</span>)), numpy.zeros(iter0)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iter0):</span><br><span class="line">        z = numpy.dot(onex, theta)</span><br><span class="line">        h = <span class="number">1</span> / (<span class="number">1</span> + numpy.exp(-z))</span><br><span class="line">        J[i] = (-<span class="number">1</span> / m) * numpy.<span class="built_in">sum</span>(y * numpy.log(h) + (<span class="number">1</span> - y) * numpy.log(<span class="number">1</span> - h))</span><br><span class="line">        grad = (<span class="number">1</span> / m) * numpy.dot(onex.T, h - y)</span><br><span class="line">        theta -= alpha * grad</span><br><span class="line">    <span class="built_in">print</span>(theta)</span><br></pre></td></tr></table></figure><h3 id="多元逻辑回归">多元逻辑回归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = numpy.loadtxt(<span class="string">&#x27;logicData2.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    x, y = data[:, :-<span class="number">1</span>], data[:, -<span class="number">1</span>]</span><br><span class="line">    X = (x - numpy.mean(x, axis=<span class="number">0</span>)) / numpy.std(x, axis=<span class="number">0</span>, ddof=<span class="number">1</span>)</span><br><span class="line">    onex, y = numpy.c_[numpy.ones(<span class="built_in">len</span>(X)), X], numpy.c_[y]</span><br><span class="line">    m, n = onex.shape</span><br><span class="line">    alpha, iter0 = <span class="number">0.1</span>, <span class="number">20000</span></span><br><span class="line">    theta, J = numpy.zeros((n, <span class="number">1</span>)), numpy.zeros(iter0)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iter0):</span><br><span class="line">    z = numpy.dot(onex, theta)</span><br><span class="line">    h = <span class="number">1</span> / (<span class="number">1</span> + numpy.exp(-z))</span><br><span class="line">J[i] = (-<span class="number">1</span> / m) * numpy.<span class="built_in">sum</span>(y * numpy.log(h) + (<span class="number">1</span> - y) * numpy.log(<span class="number">1</span> - h)</span><br><span class="line">     grad = (<span class="number">1</span> / m) * numpy.dot(onex.T, h - y)</span><br><span class="line">        theta -= alpha * grad</span><br><span class="line"><span class="built_in">print</span>(theta)</span><br><span class="line"><span class="built_in">print</span>(J)</span><br></pre></td></tr></table></figure><h3 id="非线性逻辑回归">非线性逻辑回归</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 读取数据</span></span><br><span class="line">data = numpy.loadtxt(<span class="string">&#x27;logicData.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment"># 多项式的次数</span></span><br><span class="line">d = <span class="number">3</span></span><br><span class="line"><span class="comment"># 数据处理</span></span><br><span class="line">x, y = data[:, :-<span class="number">1</span>], data[:, -<span class="number">1</span>:]</span><br><span class="line"><span class="comment"># 特征缩放</span></span><br><span class="line">X = (x - numpy.mean(x)) / numpy.std(x, axis=<span class="number">0</span>, ddof=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># onex的拼接</span></span><br><span class="line">onex = numpy.c_[numpy.ones(<span class="built_in">len</span>(X))]</span><br><span class="line">y = numpy.c_[y]</span><br><span class="line"><span class="comment"># onex = numpy.c_[numpy.ones(len(X)), X[:, 0] ** 1, X[:, 0] ** 2, X[:, 0] ** 3]</span></span><br><span class="line"><span class="comment"># 拼接x1^i</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, d + <span class="number">1</span>):</span><br><span class="line">    onex = numpy.c_[onex, X[:, <span class="number">0</span>] ** i]</span><br><span class="line"><span class="comment"># 拼接x2</span></span><br><span class="line">onex = numpy.c_[onex, X[:, <span class="number">1</span>]]</span><br><span class="line">m, n = onex.shape</span><br><span class="line">alpha, iter0 = <span class="number">0.1</span>, <span class="number">20000</span></span><br><span class="line">theta, J = numpy.zeros((n, <span class="number">1</span>)), numpy.zeros(iter0)</span><br><span class="line"><span class="comment"># 梯度下降</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iter0):</span><br><span class="line">   z = numpy.dot(onex, theta)  <span class="comment"># 公式一</span></span><br><span class="line">    h = <span class="number">1</span> / (<span class="number">1</span> + numpy.exp(-z))  <span class="comment"># 公式一</span></span><br><span class="line">    J[i] = (-<span class="number">1</span> / m) * numpy.<span class="built_in">sum</span>(y * numpy.log(h) + (<span class="number">1</span> - y) * numpy.log(<span class="number">1</span> - h))  <span class="comment"># 公式二</span></span><br><span class="line">    grad = (<span class="number">1</span> / m) * numpy.dot(onex.T, h - y)  <span class="comment"># 公式三</span></span><br><span class="line">    theta -= alpha * grad  <span class="comment"># 公式三</span></span><br><span class="line"><span class="built_in">print</span>(theta)</span><br><span class="line"><span class="built_in">print</span>(J)</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">    <span class="comment"># numpy.where:条件函数，判断h是不是大于0.5.</span></span><br><span class="line">    <span class="comment"># 如果是，则返回1，如果不是则返回0</span></span><br><span class="line">    <span class="keyword">if</span> (numpy.where(h[i] &gt;= <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">0</span>) == y[i]):</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">rate = count / m</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;分类准确率为&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(rate))</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.plot(J)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line"><span class="comment"># 利用布尔型索引绘制散点图</span></span><br><span class="line">plt.scatter(X[y[:, <span class="number">0</span>] == <span class="number">1</span>, <span class="number">0</span>], X[y[:, <span class="number">0</span>] == <span class="number">1</span>, <span class="number">1</span>], c=<span class="string">&#x27;r&#x27;</span>, marker=<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">plt.scatter(X[y[:, <span class="number">0</span>] == <span class="number">0</span>, <span class="number">0</span>], X[y[:, <span class="number">0</span>] == <span class="number">0</span>, <span class="number">1</span>], c=<span class="string">&#x27;g&#x27;</span>, marker=<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="comment"># 绘制分割线</span></span><br><span class="line">x1 = numpy.sort(X[:, <span class="number">0</span>])</span><br><span class="line">x2 = numpy.zeros(<span class="built_in">len</span>(y))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(d + <span class="number">1</span>):</span><br><span class="line">    x2 += theta[i] * (x1 ** i)</span><br><span class="line">x2 = -x2 / theta[-<span class="number">1</span>]</span><br><span class="line">plt.plot(x1, x2, c=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.grid(<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逻辑回归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分类评价指标</title>
      <link href="/2022/09/08/%E4%BA%8C%E5%88%86%E7%B1%BB%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
      <url>/2022/09/08/%E4%BA%8C%E5%88%86%E7%B1%BB%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1>二分类评价指标</h1><p>评价指标是针对同样的数据，输入不同的算法，或者输入相同的算法但参数不同 而给出这个算法或者参数好坏的定量指标。</p><p>本文将问题看成二分类问题，因此本文主 要用到的评价指标有准确度、召回率、ROC 曲线以及 AUC 面积，这些是在二分类问 题比较常见的指标。</p><p><strong>混淆矩阵</strong>是 ROC 曲线绘制的基础，同时它也是衡量分类型模型 准确度中最基本、最直观、计算最简单的方法。以分类模型中的二分类为例，对于这 种问题，模型最终需要判断样本的结果是 0 还是 1，或者说是 Positive 还是 Negative。</p><p>因此，能得到这四个基础指标，可以看成是一级指标：</p><p>真实值是 Positive，模型认为 是 Positive 的数量(TP)。</p><p>真实值是 Positive，模型认为是 Negative 的数量(FN)。</p><p>真实值 是 Negative，模型认为是 Positive 的数量(FP)。</p><p>真实值是 Negative，模型认为是 Negative的数量(TN)。</p><p>将这四个指标一起呈现在表格中，就能得到如表 3 这样一个矩阵，称它 为<strong>混淆矩阵</strong>。预测性分类模型，是希望越准越好。在混淆矩阵中，TP 与 TN 的数量越 大越好，而 FP 与 FN 的数量越小越好。</p><h2 id="一、混淆矩阵">一、混淆矩阵</h2><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/45NBuzDIW489QBoVep5mcZ2W2.kP5EuomFAVHtKzXCNvG.5Fg2QHu70oplOqCqWRBUmUdf5cb3HnE1wW54oXTKfi6OfdS8nOLb9tHYRyEU8!/b&amp;bo=qgU*AQAAAAADF6M!&amp;rf=viewer_4" alt="img"></p><h2 id="二、准确率，错误率，召回率">二、准确率，错误率，召回率</h2><p>准确率和错误率也是常用的评估指标，精确率是一个二分类指标，准确率能应用 于多分类。</p><p><img src="http://m.qpic.cn/psc?/V12XQ1QV3cpyPD/45NBuzDIW489QBoVep5mcR4xurrCi7UfqgyAMhZt3kUyNZ2mMTTpGYpYtmyBoVCrP5lYEBXmiRl5mY8Q1QsP2z0ZGAj2yo7E8YRHxKwGG.U!/b&amp;bo=LgRqAS4EagEDFzI!&amp;rf=viewer_4" alt="img"></p><p><strong>准确率</strong>指的是预测值为 1 且真实值也为 1 的样本在预测值为 1 的所有样本中所占 的比例。</p><p><strong>召回率</strong>指的是预测值为 1 且真实值也为 1 的样本在真实值为 1 的所有样本中 所占的比例。</p><h2 id="三、AUC值">三、AUC值</h2><p>AUC 是指 ROC 曲线下与坐标轴围成的面积，这个面积的数值小于等于 1。又因 为 ROC 曲线一般都处于 y=x 这条直线的上方，所以 AUC 的取值范围在 0.5 和 1 之间。 AUC 越接近 1.0，检测方法的实性越高；等于 0.5 时真实性最低，无应用价值。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>U</mi><mi>C</mi><mo>=</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">(</mo><mi>P</mi><mo>+</mo><mi>N</mi><mo stretchy="false">)</mo></mrow></munder><mfrac><mrow><mrow><mo fence="true">(</mo><mi>T</mi><mi>P</mi><msub><mi>R</mi><mi>i</mi></msub><mo>+</mo><mi>T</mi><mi>P</mi><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow><mo>×</mo><mrow><mo fence="true">(</mo><mi>F</mi><mi>P</mi><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><mi>F</mi><mi>P</mi><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence="true">)</mo></mrow></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">A U C=\sum_{i \in(P+N)} \frac{\left(T P R_{i}+T P R_{i-1}\right) \times\left(F P R_{i}-F P R_{i-1}\right)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.943em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评价指标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环境变量解析</title>
      <link href="/2022/09/08/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%A7%A3%E6%9E%90/"/>
      <url>/2022/09/08/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是环境变量">什么是环境变量</h2><p>主流的操作系统 Windows、Linux、MacOS 都有环境变量的概念。</p><p>打开 Windows 10 中的环境变量设置，如下图所示，<br>主流的操作系统 Windows、Linux、MacOS 都有环境变量的概念。</p><p>打开 Windows 10 中的环境变量设置，如下图所示，</p><p><img src="http://cdn1.python3.vip/imgs/api/tut_20200605092447_10.png" alt=""></p><p>这些环境变量本质上都是存储在 Windows 系统注册表里面的。</p><p><strong>环境变量</strong>可以理解为 影响 程序运行的一些 信息配置项 。英文叫 Environment Variables，下文中，有时我会简称 env</p><p>每个环境变量都是一个配置项，提供一个信息。</p><p>看到这些环境变量，很容易对环境变量产生误解，以为它们就是用来配置路径的。</p><p>不一定都是这样！</p><p>环境变量可以用来配置路径，也可以用来配置其他，比如上图中的 NUMBER_OF_PROCESSORS，指明了系统中处理器核心是4个。</p><h2 id="如何产生的">如何产生的</h2><p>一部分是由程序创建、修改 的，</p><p>一部分是由人手工创建的。</p><p>程序可以通过操作系统编程接口 增加、读取、删除、修改 环境变量配置。</p><p>人也可以通过命令或者操作界面 增加、查看、删除、修改 环境变量配置。</p><h2 id="有什么用？">有什么用？</h2><p>主要是为<strong>应用程序提供信息， 程序可以根据这些信息，决定它们的行为。</strong></p><p>因为某些程序会读取一些环境变量的值，根据这些值决定程序的处理。</p><p>举个例子，上文中的 NUMBER_OF_PROCESSORS，是操作系统程序创建的，目的就是提供信息给 系统中所有的程序， 告诉他们当前系统所在计算机的CPU核心是4个。</p><p>那么如果有一个程序需要给客户显示系统中有多少个CPU，就可以读取这个数据，显示在界面上。</p><p>更常见的，就是指明一些程序文件或者数据文件所在的目录。比如 path、ANDROID_HOME 。</p><p>从上面的描述，可以思考出这样一个结论：</p><p>到底哪些程序 会 受哪些环境变量的影响， 是由程序本身决定的。</p><p>程序的代码 到底会 读取哪些环境变量，根据这些值做出什么行为，完全是程序开发者设计决定的。</p><p>环境变量本身只是一些配置信息。</p><h2 id="path环境变量">path环境变量</h2><p>环境变量中，我们接触最密切的恐怕就是 path 这个环境变量了。</p><p>因为很多程序都会根据它的值 决定自己的行为。</p><p>最典型的就是 命令行解释器（运行在命令行窗口中的）， 有时也叫shell程序。</p><p>就是解释执行我们从 命令行窗口（术语是伪终端模拟器）输入命令的程序。</p><p>当我们在命令行窗口敲入如下一行指令的时候</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python.exe hyhy.py</span><br></pre></td></tr></table></figure><p>shell程序会接收到这行命令， 它会以空格作为分隔符，把指令分割为n个部分，第一个部分就是要执行的程序，后面的都是这个程序的参数。</p><p>那么第一个问题就是， 到哪里找这个程序 python.exe 呢？</p><p>这就是根据环境变量 path 的值决定的。</p><p>它会依次到环境变量 path 里面指定的目录下面， 一个个的找。</p><p>先在哪个目录下面找到了python.exe，就执行哪个目录下面的 python.exe。</p><p>不仅仅是 shell 要使用 环境变量 path， 很多其他程序也会使用，比如 Windows 操作系统寻找dll文件时，path里面指定的目录也是搜索路径之一。</p><p>看到这个例子，有些朋友可能又有误解了。</p><p>认为只要是配置目录的，都像 path 那样，可以配置好几个目录给程序依次查找。</p><p>不是的！！</p><p>还是那句话，怎么使用 环境变量 要看 各个程序本身的设计。</p><p>比如 环境变量 ANDROID_HOME， 就是只能包含一个目录的。</p><h2 id="修改环境变量配置">修改环境变量配置</h2><p>如果一个程序用到Windows 系统配置里面的环境变量， 当我们修改了 系统配置里面的环境变量，注意，一定要重启这个程序。</p><p>比如：cmd命令行解释器。</p><p>如果你修改了环境变量path，比如添加了一个目录，注意一定要重启cmd。</p><p>因为cmd启动后，就保留了一份自己的环境变量，这是再去修改 配置环境变量，不会影响已经启动的cmd程序。</p><p>如果要使修改生效，必须重启cmd程序。</p><h2 id="环境变量的继承">环境变量的继承</h2><p>我们再来看一个例子， 刚才我们说，程序重启后，系统配置里面的环境变量就会生效。</p><p>我们再通过一个程序来看一下。</p><p>大家在集成开发环境 Pycharm，先运行一下，下面的Python程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;环境变量 byhy ：<span class="subst">&#123;os.environ[<span class="string">&#x27;byhy&#x27;</span>]&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以发现，程序会报 KeyError: ‘byhy’ 错误，因为我们并没有这样的一个环境变量。</p><p>现在，我们去修改 系统配置，添加这个环境变量。</p><p>然后，在 重新运行程序（就像重启一样），你会惊奇的发型，仍然会报错。</p><p>为什么？不是重启程序，修改后的环境变量就会生效吗？<br>其实，每个程序启动后（运行的程序叫做进程），就会自己拷贝 一份 父进程 环境变量表，作为该 进程 的环境变量表。</p><p>父进程 通俗的说 就是 启动了这个程序的 程序。</p><p>我们是在 Pycharm 里面运行 Python 程序， Pycharm 就是 Python 程序的父进程。</p><p>如果我们在 命令行cmd 中运行 Python 程序， 命令行cmd 就是 Python 程序的父进程。</p><p>那怎么解决这个问题呢？</p><p>连 Pycharm 也重新启动一下，这样 Pycharm 的 环境变量也更新了，它的子进程当然也会使用更新后的环境变量 就可以了。</p><p>那 pycharm 和 cmd 的父进程又是谁呢？ 是 Windows 桌面管理器 explorer 。</p><p>explorer启动时，会从注册表中读取 环境变量配置作为自己进程的环境变量。</p><p>后续用户启动的程序 大都是 直接 或者 间接的从 explorer继承的环境变量，当然也就使用了配置的环境变量。</p><p>前面的例子，我们重启 cmd窗口，可以有效的重新加载系统配置的环境变量，是因为 cmd窗口的父进程是 explorer。</p><p>explorer每次启动新的进程，会重新读取 配置环境变量， 作为子进程的环境变量。所以重启cmd就有效了。</p><p>但是 cmd 或者 pycharm 启动子进程， 并不会 重新读取 配置环境变量，而是把自己的环境变量作为 子进程的环境变量。 当然，修改的配置不会生效。</p><p>那么是不是 只有explorer 启动的子程序，才能使用最新的 配置环境变量呢？</p><p>也不是，要看程序的设计，完全可以启动子程序时，重新读取 系统配置里面的环境变量给子程序使用。</p><h4 id="案例">案例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码文件 e1.py</span></span><br><span class="line"><span class="keyword">import</span> os,subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printEnv</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> os.environ.items():</span><br><span class="line">            f.write(<span class="string">f&#x27;<span class="subst">&#123;k&#125;</span>:<span class="subst">&#123;v&#125;</span>\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;A1&#x27;</span>] = <span class="string">&#x27;白月黑羽1&#x27;</span></span><br><span class="line">printEnv(<span class="string">&#x27;e1.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subprocess.Popen(</span><br><span class="line">    [<span class="string">r&#x27;c:\Python37\python.exe&#x27;</span>,<span class="string">r&#x27;h:\tmp\e2.py&#x27;</span>],</span><br><span class="line">    shell=<span class="literal">False</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码文件 e2.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printEnv</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> os.environ.items():</span><br><span class="line">            f.write(<span class="string">f&#x27;<span class="subst">&#123;k&#125;</span>:<span class="subst">&#123;v&#125;</span>\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.environ[<span class="string">&#x27;A2&#x27;</span>] = <span class="string">&#x27;白月黑羽2&#x27;</span></span><br><span class="line">printEnv(<span class="string">&#x27;e2.txt&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行 <a href="http://e1.py">e1.py</a> 后， e1.py的代码会启动 <a href="http://e2.py">e2.py</a>。</p><p>所以程序运行时， <a href="http://e1.py">e1.py</a> 就是 <a href="http://e2.py">e2.py</a> 的父进程。</p><p>上面的程序运行后，可以发现 e2.py记录的 环境变量 是在 e1.py的基础上多一个 A2=白月黑羽2 。</p><p>可以证明：<strong>环境变量从父进程继承而来。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda配置虚拟环境</title>
      <link href="/2022/09/08/conda%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/09/08/conda%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h3 id="一、检验当前conda的版本">一、检验当前conda的版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda -V</span><br></pre></td></tr></table></figure><h3 id="二、查看已经有的虚拟环境">二、查看已经有的虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list </span><br></pre></td></tr></table></figure><h3 id="三、创建虚拟环境和删除虚拟环境">三、创建虚拟环境和删除虚拟环境</h3><p>anaconda命令创建python版本为x.x，名字为env_name的虚拟环境。<br>env_name文件可以在Anaconda安装目录envs文件下找到。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建</span></span><br><span class="line">conda create -n env_name python=x.x</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除</span></span><br><span class="line">conda remove -n env_name --all</span><br></pre></td></tr></table></figure><p>需要注意两点：</p><ol><li>=的前后不要有空格，否则命令无法被正常解析。</li><li>不输入python版本号，虚拟环境也能新建成功，但是没有python解释器，不能直接使用！</li></ol><h3 id="四、激活虚拟环境和关闭虚拟环境">四、激活虚拟环境和关闭虚拟环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">激活</span></span><br><span class="line">conda activate env_name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭</span></span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h3 id="五、对虚拟环境中安装和删除额外的包">五、对虚拟环境中安装和删除额外的包</h3><p>如果没有进入到当前虚拟环境，使用-n env_name 的方式去指定对某个虚拟环境安装软件，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看指定环境下已安装的package</span></span><br><span class="line">conda list -n env_name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装指定环境下某个package</span></span><br><span class="line">conda install -n env_name [package]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除指定环境下某个package</span></span><br><span class="line">conda remove -n env_name [package]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新指定环境下某个package</span></span><br><span class="line">conda update -n env_name [package]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新conda，保持conda最新</span></span><br><span class="line">conda update conda</span><br></pre></td></tr></table></figure><h3 id="六、pycharm-中使用conda虚拟环境">六、pycharm 中使用conda虚拟环境</h3><h4 id="1-使用cmd查看新建的虚拟环境的目录：-conda-env-list">1.使用cmd查看新建的虚拟环境的目录：&gt; conda env list</h4><p>如图：我输入命令后，显示我有俩个三个虚拟环境，分别名叫spide1、tensorflow，root（root是必须有的，就是anaconda3安装路径）</p><p><img src="https://img-blog.csdnimg.cn/20200412155536911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NDE3OTEy,size_16,color_FFFFFF,t_70" alt="img"></p><h4 id="2-打开pycharm，选择File-setting-Project-Project-Interperter，点击下图的Add按钮。">2.打开pycharm，选择File-&gt;setting-&gt;Project:****-&gt;Project Interperter，点击下图的Add按钮。</h4><p><img src="https://img-blog.csdnimg.cn/20200412160140649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NDE3OTEy,size_16,color_FFFFFF,t_70" alt="img"></p><h4 id="3-选择conda-environment，点击existing-environment，选择你的conda环境，一定要选择到python-exe结尾。如我的Anaconda安装路径为：C-Users-Y-Anaconda3，我就选择我">3.选择conda environment，点击existing environment，选择你的conda环境，一定要选择到python.exe结尾。如我的Anaconda安装路径为：C:\Users\Y\Anaconda3，我就选择我</h4><p>创建的虚拟环境的路径为：C:\Users\Y\Anaconda3\envs\tensorflow\python.exe，其中tensorflow表示虚拟环境的名字。勾选“make available to all projects”，表示可以将这个环境使用到其他项目。</p><p><img src="https://img-blog.csdnimg.cn/20200412160425469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5NDE3OTEy,size_16,color_FFFFFF,t_70" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>特征工程介绍</title>
      <link href="/2022/09/08/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B%E4%BB%8B%E7%BB%8D/"/>
      <url>/2022/09/08/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1>特征方程</h1><h2 id="1、特征方程是什么">1、特征方程是什么</h2><p>是对原始数据进行一系列工程处理，将其提炼为特征，作为输入供算法和模型使用。从本质上来讲，特征工程是一个表示和展现数据的过程。在实际工作中，特征工程旨在去除原始数据中的杂质和冗余，设计更高效的特征以刻画求解的问题与预测模型之间的关系</p><p><strong>对于一个机器学习问题，数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。</strong></p><p>通过总结和归纳，人们认为特征工程包括以下方面：</p><p><img src="https://pic3.zhimg.com/80/20e4522e6104ad71fc543cc21f402b36_1440w.jpg?source=1940ef5c" alt="img"></p><p><strong>特征处理</strong>是特征工程的核心部分，sklearn提供了较为完整的特征处理方法，包括数据预处理，特征选择，降维等。首次接触到sklearn，通常会被其丰富且方便的算法模型库吸引，但是这里介绍的特征处理库也十分强大！</p><h2 id="2、数据预处理">2、<strong>数据预处理</strong></h2><p>通过特征提取，我们能得到未经处理的特征，这时的特征可能有以下问题：</p><p>作者：城东<br>链接：<a href="https://www.zhihu.com/question/29316149/answer/110159647">https://www.zhihu.com/question/29316149/answer/110159647</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><ul><li>不属于同一量纲：即特征的规格不一样，不能够放在一起比较。无量纲化可以解决这一问题。</li><li>信息冗余：对于某些定量特征，其包含的有效信息为区间划分，例如学习成绩，假若只关心“及格”或不“及格”，那么需要将定量的考分，转换成“1”和“0”表示及格和未及格。二值化可以解决这一问题。</li><li>定性特征不能直接使用：某些机器学习算法和模型只能接受定量特征的输入，那么需要将定性特征转换为定量特征。最简单的方式是为每一种定性值指定一个定量值，但是这种方式过于灵活，增加了调参的工作。<a href="https://link.zhihu.com/?target=http%3A//www.ats.ucla.edu/stat/mult_pkg/faq/general/dummy.htm">通常使用哑编码的方式将定性特征转换为定量特征</a>：假设有N种定性值，则将这一个特征扩展为N种特征，当原始特征值为第i种定性值时，第i个扩展特征赋值为1，其他扩展特征赋值为0。哑编码的方式相比直接指定的方式，不用增加调参的工作，对于线性模型来说，使用哑编码后的特征可达到非线性的效果。</li><li>存在缺失值：缺失值需要补充。</li><li>信息利用率低：不同的机器学习算法和模型对数据中信息的利用是不同的，之前提到在线性模型中，使用对定性特征哑编码可以达到非线性的效果。类似地，对定量变量多项式化，或者进行其他的转换，都能达到非线性的效果。</li></ul><p>我们使用sklearn中的preproccessing库来进行数据预处理，可以覆盖以上问题的解决方案。</p><h3 id="2-1-无量纲化"><strong>2.1 无量纲化</strong></h3><p>无量纲化使不同规格的数据转换到同一规格。常见的无量纲化方法有标准化和区间缩放法。标准化的前提是特征值服从正态分布，标准化后，其转换成标准正态分布。区间缩放法利用了边界值信息，将特征的取值区间缩放到某个特点的范围，例如[0, 1]等。</p><h4 id="2-1-1-标准化"><strong>2.1.1 标准化</strong></h4><p>标准化需要计算特征的均值和标准差，公式表达为：</p><p>使用preproccessing库的StandardScaler类对数据进行标准化的代码如下：</p><p><img src="https://pic1.zhimg.com/80/c7e852db6bd05b7bb1017b5425ffeec1_1440w.jpg?source=1940ef5c" alt="img"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"> </span><br><span class="line"><span class="comment">#标准化，返回值为标准化后的数据</span></span><br><span class="line">StandardScaler().fit_transform(iris.data)</span><br></pre></td></tr></table></figure><h4 id="2-1-2-区间缩放法"><strong>2.1.2 区间缩放法</strong></h4><p>区间缩放法的思路有多种，常见的一种为利用两个最值进行缩放，公式表达为：</p><p>使用preproccessing库的MinMaxScaler类对数据进行区间缩放的代码如下：</p><p><img src="https://pic1.zhimg.com/50/0f119a8e8f69509c5b95ef6a8a01a809_720w.jpg?source=1940ef5c" alt="img"></p><h4 id="2-1-3-标准化与归一化的区别"><strong>2.1.3 标准化与归一化的区别</strong></h4><p>**标准化(**StandardizationStandardization)：将数据变换为均值为0，标准差为1的分布切记，并非一定是正态的；</p><p><img src="https://img-blog.csdnimg.cn/20191021220535129.png#pic_center" alt="img"></p><p><strong>归一化</strong>(<em>N<strong>o</strong>r<strong>m</strong>a<strong>l</strong>i<strong>z</strong>a<strong>t</strong>i<strong>o</strong>n</em>)：将一列数据变化到某个固定区间(范围)中，通常，这个区间是[0, 1]，广义的讲，可以是各种区间，比如映射到[0，1]一样可以继续映射到其他范围，图像中可能会映射到[0,255]，其他情况可能映射到[-1,1]；</p><p><img src="https://img-blog.csdnimg.cn/20191021220509274.png#pic_center" alt="img"></p><p>使用preproccessing库的Normalizer类对数据进行归一化的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> Normalizer</span><br><span class="line"></span><br><span class="line"><span class="comment">#归一化，返回值为归一化后的数据</span></span><br><span class="line">Normalizer().fit_transform(iris.data)</span><br></pre></td></tr></table></figure><p><strong>中心化</strong>：另外，还有一种处理叫做中心化，也叫零均值处理，就是将每个原始数据减去这些数据的均值。</p><h4 id="2-1-4-标准化，归一化的时机差别">2.1.4 标准化，归一化的时机差别</h4><p>如果你对处理后的数据范围有严格要求，那肯定是归一化，个人经验，标准化是ML中更通用的手段，如果你无从下手，可以直接使用标准化；如果数据不为稳定，存在极端的最大最小值，不要用归一化。在分类、聚类算法中，需要使用距离来度量相似性的时候、或者使用PCA技术进行降维的时候，标准化表现更好；在不涉及距离度量、协方差计算的时候，可以使用归一化方法。</p><h3 id="2-2-对定量特征二值化"><strong>2.2 对定量特征二值化</strong></h3><p>定量特征二值化的核心在于设定一个阈值，大于阈值的赋值为1，小于等于阈值的赋值为0，公式表达如下：</p><p><img src="https://pic1.zhimg.com/50/11111244c5b69c1af6c034496a2591ad_720w.jpg?source=1940ef5c" alt="img"><img src="https://pic1.zhimg.com/80/11111244c5b69c1af6c034496a2591ad_1440w.jpg?source=1940ef5c" alt="img"></p><p>使用preproccessing库的Binarizer类对数据进行二值化的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> Binarizer</span><br><span class="line"></span><br><span class="line"><span class="comment">#二值化，阈值设置为3，返回值为二值化后的数据</span></span><br><span class="line">Binarizer(threshold=<span class="number">3</span>).fit_transform(iris.data)</span><br></pre></td></tr></table></figure><h3 id="2-3-对定性特征哑编码"><strong>2.3 对定性特征哑编码</strong></h3><p>由于IRIS数据集的特征皆为定量特征，故使用其目标值进行哑编码（将离散定性数据转化为数字数据）。使用preproccessing库的OneHotEncoder类对数据进行哑编码的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> OneHotEncoder</span><br><span class="line"></span><br><span class="line"><span class="comment">#哑编码，对IRIS数据集的目标值，返回值为哑编码后的数据</span></span><br><span class="line">OneHotEncoder().fit_transform(iris.target.reshape((-<span class="number">1</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><p>哑变量编码直观的解释就是任意的将一个状态位去除。还是拿上面的例子来说，我们用4个状态位就足够反应上述5个类别的信息，也就是我们仅仅使用前四个状态位 [0,0,0,0] 就可以表达博士了。只是因为对于一个我们研究的样本，他已不是小学生、也不是中学生、也不是大学生、又不是研究生，那么我们就可以默认他是博士，是不是。（额，当然他现实生活也可能上幼儿园，但是我们统计的样本中他并不是，^-^）。所以，我们用哑变量编码可以将上述5类表示成：<br><img src="https://images2017.cnblogs.com/blog/1251096/201711/1251096-20171106151030778-484474659.png" alt="img" style="zoom:33%;" /></p><h4 id="2-3-1-独热编码one-hot-encoding">2.3.1 独热编码one-hot encoding</h4><p>one-hot的基本思想：将离散型特征的每一种取值都看成一种状态，若你的这一特征中有N个不相同的取值，那么我们就可以将该特征抽象成N种不同的状态，one-hot编码保证了每一个取值只会使得一种状态处于“激活态”，也就是说这N种状态中只有一个状态位值为1，其他状态位都是0。举个例子，假设我们以学历为例，我们想要研究的类别为小学、中学、大学、硕士、博士五种类别，我们使用one-hot对其编码就会得到：<br><img src="https://images2017.cnblogs.com/blog/1251096/201711/1251096-20171106143504638-2121612119.png" alt="img" style="zoom: 33%;" /></p><h3 id="2-4-缺失值计算"><strong>2.4 缺失值计算</strong></h3><p>由于IRIS数据集没有缺失值，故对数据集新增一个样本，4个特征均赋值为NaN，表示数据缺失。使用preproccessing库的Imputer类对数据进行缺失值计算的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> vstack, array, nan</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> Imputer</span><br><span class="line"></span><br><span class="line"><span class="comment">#缺失值计算，返回值为计算缺失值后的数据</span></span><br><span class="line"><span class="comment">#参数missing_value为缺失值的表示形式，默认为NaN</span></span><br><span class="line"><span class="comment">#参数strategy为缺失值填充方式，默认为mean（均值）</span></span><br><span class="line">Imputer().fit_transform(vstack((array([nan, nan, nan, nan]), iris.data)))</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>missing_values ：指定何种占位符表示缺失值，可选 number ，string ，np.nan(default) ，None</li><li>strategy ：插补策略，字符串，默认&quot;mean&quot;<ul><li>“mean” ：使用每列的<strong>平均值</strong>替换缺失值，只能与数字数据一起使用</li><li>“median”：则使用每列的<strong>中位数</strong>替换缺失值，只能与数字数据一起使用</li><li>“most_frequent” ：则使用每列中<strong>最常用的值</strong>(众数)替换缺失值，可以与字符串或数字数据一起使用</li><li>“constant” ：则用 fill_value 替换缺失值。可以与字符串或数字数据一起使用</li></ul></li></ul><p>友情链接：</p><p><a href="https://www.zhihu.com/question/29316149/answer/110159647">知乎原文</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特征工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各类激活函数</title>
      <link href="/2022/09/08/%E5%90%84%E7%B1%BB%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/"/>
      <url>/2022/09/08/%E5%90%84%E7%B1%BB%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>激活函数</h1><h2 id="为什么要使用激活函数？">为什么要使用激活函数？</h2><p>激活函数用来怎加非线性因素的，提高模型拟合能力。如果不存在激活函数，神经网络的每一层的输入都是对前面输入的线性变化，就算把网络加到很深也无法去拟合任意函数的。</p><h2 id="激活函数具有的特性">激活函数具有的特性</h2><p>虽然我们常用激活函数不是很多，那是否只有这些函数能作为激活函数呢？我们从神经网络的工作过程中看，激活函数具有什么样的性质能够更好的帮助神经网络的训练。</p><ul><li>非线性：数，激活函数必须是非线性的。</li><li>计算简单：神经元都要经过激活运算的，在随着网络结构越来越庞大、参数量越来越多，激活函数如果计算量小就节约了大量的资源。</li><li>f ( x ) ≈ x:在向前传播时，如果参数的初始化是随机量的最小值，神经网络的训练很高效。在训练的时候不会出现输出的幅度随着不断训练发生倍数的增长，是网络更加的稳定，同时也使得梯度更容易回传。</li><li>可微：因为神经网络要通过反向传播来跟新参数，如果激活函数不可微，就无法根据损失函数对权重求偏导，也就无法更新权重。传统的激活函数如sigmoid等满足处处可微。对于分段线性函数比如ReLU，只满足几乎处处可微（即仅在有限个点处不可微）。对于SGD算法来说，由于几乎不可能收敛到梯度接近零的位置，有限的不可微点对于优化结果不会有很大影响。</li><li>非饱和性：（饱和函数有Sigmoid、Tanh等，非饱和函数ReLU等）例如Sigmoid函数求导以后的值很小，两端的值接近为零在反向传播的时候，如果网络的层次过大便会发生梯度消失的问题，使得浅层的参数无法更新。（梯度消失后面会介绍）</li><li>单调性：当激活函数单调时，单层网络保证是凸函数。</li><li>输出值的范围： 当激活函数输出值是有限的时候，基于梯度的优化方法会更加稳定，因为特征的表示受有限权值的影响更显著；当激活函数的输出是无限的时候，模型的训练会更加高效，不过在这种情况小，一般需要更小的Learning Rate。</li></ul><h1>sigmoid</h1><p>sigmoid函数，也就是s型曲线函数，如下：</p><img src="http://r.photo.store.qq.com/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/45NBuzDIW489QBoVep5mcf*48pd3sw1EG6ASFdDywaGGCr4lxdd5LhJ4BRqpK06sV0ipiHOzf97Pdrhqvqvj5D6MUjEuN03e2lZZ5vA8.2g!/r" style="zoom: 50%;" /><p><strong>原函数图像：</strong></p><p><img src="https://img-blog.csdnimg.cn/20190828171615342.jpg#pic_center" alt="img"></p><p><strong>函数性质</strong></p><ul><li>非线性函数</li><li>求导简单，函数求导后为<em>f</em>′(<em>x</em>)=<em>f</em>(<em>x</em>)(1−<em>f</em>(<em>x</em>))</li><li>不满足f ( x ) ≈ x</li><li>在定义域内处处可导</li><li><strong>饱和激活函数</strong></li><li>函数为单调函数</li><li>函数的输出区间在（0，1）之间，函数定义域为负无穷到正无穷</li></ul><p><strong>倒数及其导数图像</strong>：</p><p><img src="https://img-blog.csdnimg.cn/20190828174210519.jpg#pic_center" alt="img"></p><p><strong>优点和缺点</strong></p><ul><li>优点：平滑、容易求导</li><li>缺点：<ul><li>激活函数运算量大（包含幂的运算）</li><li>函数输出不关于原点对称，使得权重更新效率变低，同时这会导致后一层的神经元将得到上一层输出的非0均值的信号作为输入，随着网络的加深，会改变数据的原始分布</li><li>由图像知道导数的取值范围[0,0.25]，非常的小。在进行反向传播计算的时候就会乘上一个很小的值，如果网络层次过深，就会发生“梯度消失”的现象了，无法更新浅层网络的参数了。</li></ul></li></ul><h2 id="hard-sigmoid">hard sigmoid</h2><p><strong>函数公式：</strong></p><p><img src="https://img-blog.csdnimg.cn/20191106153422324.png#pic_center" alt="img"></p><p>解释：当 x &lt; -2.5输出<strong>0</strong>，当 x &gt; 2.5时，输出<strong>1</strong>，当 -2.5 &lt; x &amp; x &lt; 2.5时，输出为 <strong>(2x+5) / 10</strong>，线性函数。<br>那么其导数，当 x &lt; -2.5输出<strong>0</strong>，当 x &gt; 2.5时，输出<strong>0</strong>，当 -2.5 &lt; x &amp; x &lt; 2.5时，输出为 <strong>1 / 5</strong>。</p><p><strong>hard-Sigmoid</strong>函数时<strong>Sigmoid</strong>激活函数的分段线性近似。从公示和曲线上来看，其更易计算，因此会提高训练的效率，不过同时会导致一个问题：就是首次派生值为零可能会导致神经元died或者过慢的学习率。</p><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20191106153649526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><h2 id="Tanh-双曲正切函数-激活函数">Tanh(双曲正切函数)激活函数</h2><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20190828191851823.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25lb19sY3g=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>函数公式：</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mo fence="true">(</mo><msup><mi>e</mi><mi>x</mi></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><msup><mi>e</mi><mi>x</mi></msup><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup><mo fence="true">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">f\left( x\right) =\dfrac{\left( e^{x}-e^{-x}\right) }{\left( e^{x}+e^{-x}\right) }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3843em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4483em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6973em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>导数公式</strong>:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mi>f</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f\left( x\right) =1-\left( f\left( x\right) \right) ^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.204em;vertical-align:-0.25em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>倒数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20190828192827207.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25lb19sY3g=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>函数性质</strong></p><ul><li>非线性函数</li><li>求导简单</li><li>不满足f ( x ) ≈ x</li><li><strong>饱和激活函数</strong></li><li>函数为单调函数</li><li>函数的输出区间在（-1，1）之间，函数定义域为负无穷到正无穷</li></ul><p><strong>优点与缺点：</strong></p><ul><li>优点：<ul><li>解决了Sigmoid的输出不关于零点对称的问题</li><li>也具有Sigmoid的优点平滑，容易求导</li></ul></li><li>缺点：<ul><li>激活函数运算量大（包含幂的运算）</li><li>Tanh的导数图像虽然最大之变大，使得梯度消失的问题得到一定的缓解，但是不能根本解决这个问题</li></ul></li></ul><h2 id="ReLU激活函数">ReLU激活函数</h2><p>ReLU函数代表的的是“修正线性单元”，它是带有卷积图像的输入x的最大函数(x,o)。ReLU函数将矩阵x内所有负值都设为零，其余的值不变</p><p><strong>函数公式：</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo>=</mo><mi>max</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left( x\right) =\max \left( 0,x\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20190828195811214.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25lb19sY3g=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>激活函数的性质：</strong></p><ul><li>非线性函数（虽然单侧是线性函数）</li><li>计算简单是真的简单(不管是在神经网络向前计算过程中还是反向传播的时候)</li><li>右侧满足f ( x ) ≈ x {\rm{f}}(x) \approx xf(x)≈x</li><li>右侧为单调函数</li><li>输出为（0，+无穷）</li></ul><p><strong>优点和缺点：</strong></p><ul><li><p>优点</p><ul><li><p>计算量小，相对于之前使用sigmoid和Tanh激活函数需要进行指数运算，使用ReLu的计算量小很多，在使用反向传播计算的时候也要收敛更更快。</p></li><li><p>缓解了在深层网络中使用sigmoid和Tanh激活函数造成了梯度消失的现象（右侧导数恒为1）</p></li><li><p>缓解过拟合的问题。由于函数的会使小于零的值变成零，使得一部分神经元的输出为0，造成网络的稀疏</p><p>性，减少参数相互依赖的关系缓解过拟合的问题（<a href="https://www.zhihu.com/question/29021768/answer/43488153">请问人工神经网络中的activation function的作用具体是什么？为什么ReLu要好过于tanh和sigmoid function?</a>）</p></li></ul></li><li><p>缺点</p><ul><li>造成神经元的“死亡”（详细的介绍见连接<a href="https://www.zhihu.com/question/67151971/answer/434079498">深度学习中，使用relu存在梯度过大导致神经元“死亡”，怎么理解？</a>）</li></ul><p>解决方法：优化函数，采用较小学习速率，采用momentum based 优化算法</p><ul><li>ReLU的输出不是0均值的</li></ul></li></ul><h2 id="Leaky-ReLU-变种激活函数">Leaky ReLU 变种激活函数</h2><p><strong>函数公式：</strong></p><p>f ( x ) = max ⁡ ( α x , x )</p><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/2019083013484538.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25lb19sY3g=,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p>函数图像跟之前的ReLu图像很像，同样的PReLU和ELU激活函数也是在ReLu的基础上针对ReLU在训练时神经元容易死亡做出了优化，基本的思路就是让函数小于0的部分不直接为0，而是等于一个很小的数，使得负轴的信息不至于完全丢弃。</p><h2 id="softmax">softmax</h2><p>softmax函数，又称**归一化指数函数。**它是二分类函数sigmoid在多分类上的推广，目的是将多分类的结果以概率的形式展现出来。</p><img src="https://img-blog.csdnimg.cn/20181128162309759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6X3BldGVy,size_16,color_FFFFFF,t_70" alt="img" style="zoom:67%;" /><p>下面为大家解释一下为什么softmax是这种形式。</p><p>首先，我们知道概率有两个性质：1）预测的概率为非负数；2）各种预测结果概率之和等于1。</p><p>softmax就是将在负无穷到正无穷上的预测结果按照这两步转换为概率的。</p><p><strong>1）将预测结果转化为非负数</strong></p><p>下图为y=exp(x）的图像，我们可以知道<strong>指数函数</strong>的值域取值范围是零到正无穷。<strong>softmax第一步就是将模型的预测结果转化到指数函数上，这样保证了概率的非负性。</strong></p><img src="https://img-blog.csdnimg.cn/2019111910482712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6X3BldGVy,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 67%;" /><p>2）各种预测结果概率之和等于1</p><p>为了确保各个预测结果的概率之和等于1。我们只需要将转换后的结果进行归一化处理。方法就是将转化后的结果除以所有转化后结果之和，可以理解为转化后结果占总数的百分比。这样就得到近似的概率。</p><p>下面为大家举一个例子，假如模型对一个三分类问题的预测结果为-3、1.5、2.7。我们要用softmax将模型结果转为概率。步骤如下：</p><p>1）将预测结果转化为非负数</p><p>y1 = exp(x1) = exp(-3) = 0.05</p><p>y2 = exp(x2) = exp(1.5) = 4.48</p><p>y3 = exp(x3) = exp(2.7) = 14.88</p><p>2）各种预测结果概率之和等于1</p><p>z1 = y1/(y1+y2+y3) = 0.05/(0.05+4.48+14.88) = 0.0026</p><p>z2 = y2/(y1+y2+y3) = 4.48/(0.05+4.48+14.88) = 0.2308</p><p>z3 = y3/(y1+y2+y3) = 14.88/(0.05+4.48+14.88) = 0.7666</p><p>总结一下softmax如何将多分类输出转换为概率，可以分为两步：</p><p><strong>1）分子：通过指数函数，将实数输出映射到零到正无穷。</strong></p><p><strong>2）分母：将所有结果相加，进行归一化。</strong></p><img src="https://img-blog.csdnimg.cn/20181212223827495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6X3BldGVy,size_16,color_FFFFFF,t_70" alt="img" style="zoom: 50%;" /><h2 id="SELU（可伸缩的指数线性单元）">SELU（可伸缩的指数线性单元）</h2><p>SELU Scaled Exponential Linear Unit等同于：<code>scale * elu(x, alpha)</code>，其中 alpha 和 scale 是预定义的常量。只要正确初始化权重（参见 <code>lecun_normal</code> 初始化方法）并且输入的数量「足够大」（参见参考文献获得更多信息），选择合适的 alpha 和 scale 的值，就可以在两个连续层之间保留输入的均值和方差。</p><p>函数形式：</p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/510ee62a38ceee09.png" alt=""></p><p>深度学习在卷积神经网络和循环神经网络取得很大突破，但标准前馈网络的成功消息却很少。因此引入自归一化的神经网络，来尝试进行高级抽象表示。<br>这种自归一化的神经网络的激活函数就是selu，它也是一种基于激活函数的正则化方案。它具有自归一化特点，即使加入噪声也能收敛到均值为0、方差为1或方差具有上下界。<br>优点：在全连接层效果好，可以避免梯度消失和爆炸。<br>缺点：在卷积网络效果尚未证明。可能引起过拟合。</p><h2 id="ELU（指数线性单元）">ELU（指数线性单元）</h2><p>其将激活函数的平均值接近零，从而加快学习的速度。同时，还可以通过正值的标识来避免梯度消失的问题。根据一些研究，ELU的分类 精确度要高于Relu。</p><p><strong>函数公式：</strong></p><img src="https://img-blog.csdnimg.cn/20191030135243499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20191030140332643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><ul><li>融合了sigmoid和ReLU，左侧具有软饱和性，右侧无饱和性。</li><li>右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。</li><li>ELU的输出均值接近于零，所以收敛速度更快。</li><li>在 ImageNet上，不加 Batch Normalization 30 层以上的 ReLU<br>网络会无法收敛，PReLU网络在MSRA的Fan-in （caffe ）初始化下会发散，而 ELU<br>网络在Fan-in/Fan-out下都能收敛。</li></ul><h2 id="SELU（给ELU乘个系数）">SELU（给ELU乘个系数）</h2><p><strong>函数公式：</strong></p><img src="https://img-blog.csdnimg.cn/20191030142451758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>函数图像：</strong></p><p>lambda为系数</p><img src="https://img-blog.csdnimg.cn/20191030153053550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:33%;" /><h2 id="P-Relu（参数化修正线性单元）">P-Relu（参数化修正线性单元）</h2><p>可以看作是Leaky ReLU的一个变体，不同的是，P-ReLU中的负值部分的斜率是根据数据来定的，即a的值并不是一个常数。</p><h2 id="R-Relu（随机纠正线性单元）">R-Relu（随机纠正线性单元）</h2><p>R-ReLU也是Leaky ReLU的一个变体，只不过在这里负值部分的斜率在训练的时候是随机的，即在一个范围内随机抽取a的值，不过这个值在测试环节会固定下来。</p><h2 id="Swish">Swish</h2><p><strong>函数公式：</strong></p><img src="https://img-blog.csdnimg.cn/20191030142614595.png#pic_center" alt="img" style="zoom:50%;" /><p><strong>导数公式：</strong></p><img src="https://img-blog.csdnimg.cn/20191030151728500.png#pic_center" alt="img" style="zoom:50%;" /><p><strong>函数图像：</strong></p><img src="https://img-blog.csdnimg.cn/2019103014450670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>导数图像：</strong></p><img src="https://img-blog.csdnimg.cn/20191030151508307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p>当β = 0时,Swish变为线性函数f(x)=x2f(x)=x2.<br>β → ∞, σ(x)=(1+exp(−x))−1σ(x)=(1+exp⁡(−x))−1为0或1. Swish变为ReLU: f(x)=2max(0,x)<br>所以Swish函数可以看做是介于线性函数与ReLU函数之间的平滑函数.</p><h2 id="Mish">Mish</h2><p><strong>函数公式</strong></p><img src="https://img-blog.csdnimg.cn/20191101121536815.png#pic_center" alt="img" style="zoom:50%;" /><p><strong>公式推导：</strong></p><p><img src="https://img-blog.csdnimg.cn/20191101121647443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>Mish和Swish中参数=1的曲线对比：（第一张是原始函数，第二张是导数）</p><img src="https://img-blog.csdnimg.cn/20191101121931980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom: 50%;" /><img src="https://img-blog.csdnimg.cn/20191101121949780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><p><strong>优点</strong></p><p>以上无边界(即正值可以达到任何高度)避免了由于封顶而导致的饱和。理论上对负值的轻微允许允许更好的梯度流，而不是像ReLU中那样的硬零边界。</p><p>最后，可能也是最重要的，目前的想法是，平滑的激活函数允许更好的信息深入神经网络，从而得到更好的准确性和泛化。</p><p>要区别可能是Mish函数在曲线上几乎所有点上的平滑度</p><h2 id="Maxout">Maxout</h2><p>与常规的激活函数不同，Maxout是一个可以学习的分段线性函数。<br>其可以看做是在深度学习网络中加入了一层激活函数层，包含一个参数k，这一层相比ReLU，Sigmoid等，其在于增加了k个神经元，然后输出激活值最大的值。<br>其需要学习的参数就是k个神经元中的权值和偏置，这就相当于常规的激活函数一层，而Maxout是两层，而且参数个数增加了K倍。<br>其可以有效的原理是，任何ReLU及其变体等激活函数都可以看成分段的线性函数，而Maxout加入的一层神经元正是一个可以学习参数的分段线性函数。</p><p><strong>优点</strong>：其拟合能力很强，理论上可以拟合任意的凸函数；<br>具有ReLU的所有优点，线性和非饱和性；<br>同时没有ReLU的一些缺点，如神经元的死亡；<br><strong>缺点</strong>：导致整体参数的激增。</p><p>网络图片：</p><img src="https://img-blog.csdnimg.cn/20191030153907257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img" style="zoom:50%;" /><h2 id="关于激活函数统一说明">关于激活函数统一说明</h2><p>ELU在正半轴取输入x奸情了梯度弥散情况（正半轴导数处处为1），而这一点特性，基本上除了swish其他非饱和激活函数都具有这个特性。而只有ReLU在负半轴的输出没有复制，所以ReLU的输出均值一定是大于0的，而当激活值的均值非0时，会对下一层造成以bias，也就是下一层的激活单元会出现bias shift现象，通过不断的层数叠加，bias shift会变得非常大。而ELU可以让激活函数的输出均值尽可能接近0，类似于BN操作，但是计算复杂度更低。而且虽然Leaky ReLU和PReLU等都有负值，但是它们不保证在不激活的状态对噪声鲁棒，这里的不激活指的是负半轴。而ELU在输入取较小值时具有软饱和的特性，提升了对噪声的鲁棒性。Swish和ELU都是可以取负值，同时在负半轴具有软饱和的性能，提高了对噪声的鲁棒性，SELU效果比ELU效果还要更好。</p><p><img src="https://img-blog.csdnimg.cn/20191030152606832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pza19sZWFybmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 激活函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各类损失函数</title>
      <link href="/2022/09/08/%E5%90%84%E7%B1%BB%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
      <url>/2022/09/08/%E5%90%84%E7%B1%BB%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>损失函数</h1><p><strong>损失函数</strong>loss function）是用来<strong>估量模型的预测值f(x)与真实值Y的不一致程度</strong>，它是一个非负实值函数,通常使用L(Y, f(x))来表示，损失函数越小，模型的鲁棒性就越好。损失函数是<strong>经验风险函数</strong>的核心部分，也是<strong>结构风险函数</strong>重要组成部分。模型的结构风险函数包括了经验风险项和正则项，通常可以表示成如下式子：</p><p><img src="https://img-blog.csdnimg.cn/20210213230218627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h1>损失函数、代价函数、目标函数之间的关系</h1><p><img src="https://img-blog.csdnimg.cn/20210213230545604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h1>常见的损失函数</h1><h2 id="均方差-Mean-Squared-Error，MSE">均方差(Mean Squared Error，MSE)</h2><p>均方差（Mean Squared Error，MSE）损失是机器学习、深度学习回归任务中最常用的一种损失函数，也称为 L2 Loss。其基本形式如下：</p><p><img src="https://img-blog.csdnimg.cn/20210214151903438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><p>可以看到这个实际上就是均方差损失的形式。也就是说在模型输出与真实值的误差服从高斯分布的假设下，最小化均方差损失函数与极大似然估计本质上是一致的，因此在这个假设能被满足的场景中（比如回归），均方差损失是一个很好的损失函数选择；当这个假设没能被满足的场景中（比如分类），均方差损失不是一个好的选择</p><h2 id="平均绝对误差损失（Mean-Absolute-Error-Loss-MAE">平均绝对误差损失（Mean Absolute Error Loss,MAE)</h2><p>平均绝对误差（Mean Absolute Error Loss，MAE）是另一类常用的损失函数，也称为L1 Loss。其基本形式如下：</p><p><img src="https://img-blog.csdnimg.cn/20210214152318230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>MAE与MSE的区别：</strong></p><ul><li>MSE比MAE能够更快收敛：当使用梯度下降算法时，MSE损失的梯度为<img src="https://img-blog.csdnimg.cn/20210214154406320.png" alt="img" style="zoom:50%;" />，而MAE损失的梯度为正负1。所以。MSE的梯度会随着误差大小发生变化，而MAE的梯度一直保持为1，这不利于模型的训练。</li><li>MAE对异常点更加鲁棒：从损失函数上看，MSE对误差平方化，使得异常点的误差过大；从两个损失函数的假设上看，MSE假设了误差服从高斯分布，MAE假设了误差服从拉普拉斯分布，拉普拉斯分布本身对于异常点更加鲁棒</li></ul><h4 id="拉普拉斯分布">拉普拉斯分布</h4><p>Laplace分布是统计学中的概念，是一种连续的概率分布。如果随机变量的概率密度函数分布为：</p><p><img src="https://www.zhihu.com/equation?tex=f%28x%7C%5Cmu%2Cb%29%3D%5Cfrac%7B1%7D%7B2b%7D%5Cexp+%28-%5Cfrac%7B%7Cx-%5Cmu%7C%7D%7Bb%7D%29%3D%5Cfrac%7B1%7D%7B2b%7D%5Cbegin%7Bcases%7D+%5Cexp%28-+%5Cfrac%7B%5Cmu-x%7D%7Bb%7D%29+%26+x+%3C+%5Cmu+%5C%5C+%5Cexp%28-+%5Cfrac%7Bx-%5Cmu%7D%7Bb%7D%29+%26+x+%5Cge+%5Cmu+%5Cend%7Bcases%7D%5C%5C" alt=""></p><p>么它就是拉普拉斯分布。其中，<img src="https://www.zhihu.com/equation?tex=%5Cmu" alt=""> 是位置参数，<img src="https://www.zhihu.com/equation?tex=b%3E0" alt="">是尺度参数。画出来就是长这样：</p><img src="https://pic2.zhimg.com/80/v2-cfc09f0381e99b9866fcfd856b2df531_720w.jpg" style="zoom:50%;" /><h4 id="高斯分布">高斯分布</h4><p>高斯分布（正态分布）是一个常见的连续概率分布。正态分布的数学期望值或期望值等于位置参数，决定了分布的位置；其方差的开平方或标准差 等于尺度参数，决定了分布的幅度。正态分布的概率密度函数曲线呈钟形，因此人们又经常称之为钟形曲线（类似于寺庙里的大钟，因此得名）。我们通常所说的标准正态分布是位置参数μ = 0 ，方差σ^2 = 1 的正态分布。</p><img src="https://img-blog.csdnimg.cn/20200301225748575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hhbmdoYW5nXw==,size_16,color_FFFFFF,t_70" alt="img" style="zoom:50%;" /><p><img src="https://ftp.bmp.ovh/imgs/2021/07/540978ddb2d0bfd5.png" alt=""></p><h2 id="平均绝对误差百分比-Mean-Absolute-Percentage-ErrorAPE-MAPE">平均绝对误差百分比(Mean Absolute Percentage ErrorAPE,MAPE)</h2><p>**MAPE(Mean Absolute Percentage Error)平均绝对误差百分比：**是用来做销量预测最常用的指标，在实际的线上线下销量预测中有着非常重要的评估意义。但是在实际的项目过程中发现，有些时候的指标并不能非常好的表示模型拟合的效果，因此对这部分进行了深入分析，发现有更优化的评价指标来度量销量预测问题。</p><p>MAPE公式如下：</p><p><img src="https://private.codecogs.com/gif.latex?MAPE%3D%5Cfrac%7B1%7D%7Bn%7D%5Csum_%7Bn%7D%5E%7B1%7D%5Cfrac%7B%7C%7By%7D%27-y%7C%7D%7By%7D" alt="img"></p><p><img src="https://private.codecogs.com/gif.latex?y" alt="y">, <img src="https://private.codecogs.com/gif.latex?%7By%7D%27" alt="{y}'">分别为真实值和预测值。</p><h2 id="平均平方log误差-Mean-Squared-Logarithmic-Error-MSLE">平均平方log误差(Mean Squared Logarithmic Error, <em>MSLE</em>)</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L= \frac {1}{n} \sum^n_{i=1} (log(y_{true}^{(i)} +1) - log( y_{pred}^{(i)}+1))^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4542em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2458em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4822em;vertical-align:-0.4374em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msle相比与mse的改进:如果想要预测的值范围很大,mse会受到一些大的值的引导,即使小的值预测准也不行.假设如:</span><br><span class="line">y_true:[1,2,3,100]</span><br><span class="line">y_1:[1,2,3,110]</span><br><span class="line">y_2:[2,3,4,100]</span><br><span class="line">mse计算结果(y_1:100,y_2:3)会认为y_2优于y_1.</span><br><span class="line">msle计算结果(有_1:0.047,0.27)通过预先将所有值取log缓解了这一情况,会认为y_1优于y_2.这比较合理.</span><br></pre></td></tr></table></figure><p>当目标实现指数增长时，例如人口数量、一种商品在几年时间内的平均销量等，这个指标最适合使用。请注意，这个指标惩罚的是一个被低估的估计大于被高估的估计。</p><h2 id="Huber-Loss">Huber Loss</h2><p>Huber Loss是一种将MSE与MAE结合起来，取两者优点的损失函数，也被称作Smooth Mean Absolute Error Loss 。其原理很简单，就是在误差接近0时使用MSE，误差较大时使用MAE，公式为：</p><img src="https://img-blog.csdnimg.cn/20210214153331543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img" style="zoom:67%;" /><p>在 <img src="https://img-blog.csdnimg.cn/20210214153414616.png" alt="img" style="zoom: 33%;" />内实际上就是MSE的损失，使损失函数可导并且梯度更加稳定；在<img src="https://img-blog.csdnimg.cn/20210214153425597.png" alt="img" style="zoom:33%;" />和<img src="https://img-blog.csdnimg.cn/20210214153433361.png" alt="img" style="zoom:33%;" />区间内为MAE损失，降低了异常点的影响，使训练更加鲁棒。</p><h2 id="回归损失函数：Log-Cosh-Loss">回归损失函数：Log-Cosh Loss</h2><p>Log-Cosh是应用于回归任务中的另一种损失函数，它比L2损失更平滑。Log-cosh是预测误差的双曲余弦的对数。</p><p><img src="https://img-blog.csdnimg.cn/20190507161816893.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20190507161857100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTM4NDExOTY=,size_16,color_FFFFFF,t_70" alt="img"></p><p><strong>优点：</strong><br>对于较小的X值，log(cosh(x))约等于(x ** 2) / 2；对于较大的X值，则约等于abs(x) - log(2)。这意味着Log-cosh很大程度上工作原理和平均方误差很像，但偶尔出现错的离谱的预测时对它影响又不是很大。它具备了Huber损失函数的所有优点，但不像Huber损失，它在所有地方都二次可微。<br>但Log-cosh也不是完美无缺。如果始终出现非常大的偏离目标的预测值时，它就会遭受梯度问题。</p><p><strong>Log-cosh损失函数的Python代码:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># log cosh 损失</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logcosh</span>(<span class="params">true, pred</span>):</span><br><span class="line">    loss = np.log(np.cosh(pred - true))<span class="keyword">return</span> np.<span class="built_in">sum</span>(loss)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="中位数绝对误差-Median-absolute-error-MAE）">中位数绝对误差(Median absolute error,MAE）</h2><p>中位数绝对误差适用于包含异常值的数据的衡量。先计算出数据与它们的中位数之间的残差（偏差），MedAE就是这些偏差的绝对值的中位数。</p><p><img src="https://private.codecogs.com/gif.latex?MedAE%3D%20median%20%28%7CYi%20-%20Yi%20predict%7C%29%20i%3D0.1.2.....n" alt="img"></p><p>绝对中位差,一种统计离差的测量。而且，是一种鲁棒统计量，比标准差更能适应数据集中的异常值。对于标准差，使用的是数据到均值的距离平方，所以大的偏差权重更大，异常值对结果也会产生重要影响。对于绝对中位差，少量的异常值不会影响最终的结果。</p><p>由于绝对中位差是一个比样本方差或者标准差更鲁棒的度量，它对于不存在均值或者方差的分布效果更好，比如柯西分布。</p><h2 id="explained-variance-score-解释方差分"><strong>explained_variance_score(解释方差分)</strong></h2><p>解释回归模型的方差得分，这个指标用来衡量我们模型对数据集波动的解释程度，其值取值范围是[0,1]，越接近于1说明自变量越能解释因变量的方差变化，值越小说明效果越差。</p><p><img src="https://img-blog.csdnimg.cn/20190714231102416.png" alt="img"></p><h2 id="分位数损失（Quantile-Loss）">分位数损失（Quantile Loss）</h2><p>分位数回归Quantile Regression是一类在实际应用中非常有用的回归算法，通常的回归算法是拟合目标值的<strong>期望（MSE）或者中位数（MAE）</strong>，而分位数回归可以通过给定不同的分位点，拟合目标值的不同分位数。</p><img src="https://img-blog.csdnimg.cn/20210214153743301.png" alt="img" style="zoom:50%;" /><p>式中的r为分位数，这个损失函数是一个分段的函数，当r&gt;0.5时，低估()的损失要比高估的损失更大；反之，当r&lt;0.5 时，高估的损失要比低估的损失更大，分位数损失实现了分别用不同的系数控制高估和低估的损失，进而实现分位数回归。特别地，当r=0.5时，分位数损失退化为MAE损失，从这里可以看出 MAE 损失实际上是分位数损失的一个特例—中位数回归。</p><img src="https://img-blog.csdnimg.cn/20210214154259628.png" alt="img" style="zoom:50%;" /><h1>分类常用的损失函数</h1><h2 id="0-1损失函数-zero-one-loss"><strong>0-1损失函数(zero-one loss)</strong></h2><p><img src="https://img-blog.csdnimg.cn/20210214155126120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="log对数损失函数"><strong>log对数损失函数</strong></h2><p><img src="https://img-blog.csdnimg.cn/20210214155225513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="指数损失函数（exponential-loss）"><strong>指数损失函数（exponential loss）</strong></h2><p><img src="https://img-blog.csdnimg.cn/20210214155359325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="hinge损失函数"><strong>hinge损失函数</strong></h2><p>支持向量机Support Vector Machine (SVM)模型的损失函数本质上就是Hinge Loss + L2正则化。</p><p><img src="https://img-blog.csdnimg.cn/20210214155550537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="交叉熵损失函数-Cross-entropy-loss-function"><strong>交叉熵损失函数 (Cross-entropy loss function)</strong></h2><p><img src="https://img-blog.csdnimg.cn/20210214160234906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="多分类问题的交叉熵损失函数"><strong>多分类问题的交叉熵损失函数</strong></h3><p><img src="https://img-blog.csdnimg.cn/20210214160822703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMwNjk1NTI=,size_16,color_FFFFFF,t_70" alt="img"></p><img src="https://pic3.zhimg.com/v2-75a934ce9c4310b16ff1a2e852c147e8_1440w.jpg?source=172ae18b" alt="img" style="zoom: 33%;" /><h2 id="相对熵">相对熵</h2><p>KL距离全称为Kullback-Leibler Divergence，也被称为相对熵。公式为：</p><img src="https://img-blog.csdn.net/20161018155350970?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img" style="zoom: 67%;" /><p>感性的理解，KL距离可以解释为在相同的事件空间P(x)中两个概率P(x)和Q(x)分布的差异情况。</p><p>从其物理意义上分析：可解释为在相同事件空间里，概率分布P(x)的事件空间，若用概率分布Q（x）编码时，平均每个基本事件（符号）编码长度增加了多少比特。</p><img src="https://img-blog.csdn.net/20161018155413159?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img" style="zoom:67%;" /><p>如上面展开公式所示，前面一项是在P(x)概率分布下的熵的负数，而熵是用来表示在此概率分布下，平均每个事件需要多少比特编码。这样就不难理解上述物理意义的编码的概念了。</p><p>但是KL距离并不是传统意义上的距离。</p><p>传统意义上的距离需要满足三个条件：</p><ul><li><p>1）非负性；</p></li><li><p>2）对称性（不满足）；</p></li><li><p>3）三角不等式（不满足）。</p></li></ul><p>但是KL距离三个都不满足。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 损失函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识神经网络</title>
      <link href="/2022/09/08/%E8%AE%A4%E8%AF%86%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
      <url>/2022/09/08/%E8%AE%A4%E8%AF%86%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1>神经网络</h1><h2 id="什么是神经网络">什么是神经网络</h2><p><a href="https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/382460">人工神经网络</a>：是一种应用类似于大脑神经突触联接的结构进行信息处理的数学模型。在工程与学术界也常直接简称为“神经网络”或类神经网络。（百度百科）</p><p><strong>神经网络</strong>是一门重要的机器学习技术。它是目前最为火热的研究方向–深度学习的基础。</p><p>单层神经网络-感知器</p><p>两层神经网络-多层感知器</p><p>多层神经网络-深度学习</p><h2 id="神经网络结构">神经网络结构</h2><p>这是一个包含三个层次的神经网络。红色的是<strong>输入层</strong>，绿色的是<strong>输出层</strong>，紫色的是<strong>中间层</strong>（也叫<strong>隐藏层</strong>）。输入层有3个输入单元，隐藏层有4个单元，输出层有2个单元。后文中，我们统一使用这种颜色来表达神经网络的结构。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMTkxNTE2MDQzMTgtMTU1NzczNzI4OS5qcGc?x-oss-process=image/format,png" style="zoom:50%;" /><p>神经网络结构图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、设计一个神经网络时，输入层与输出层的节点数往往是固定的，中间层则可以自由指定；</span><br><span class="line"><span class="number">2</span>、神经网络结构图中的拓扑与箭头代表着预测过程时数据的流向，跟训练时的数据流有一定的区别；</span><br><span class="line"><span class="number">3</span>、结构图里的关键不是圆圈（代表“神经元”），而是连接线（代表“神经元”之间的连接）。每个连接线对应一个不同的权重（其值称为权值），这是需要训练得到的。  </span><br></pre></td></tr></table></figure><p>除了从左到右的形式表达的结构图，还有一种常见的表达形式是从下到上来表示一个神经网络。这时候，输入层在图的最下方。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMTkxNzQ2MzE2OTMtNzc1MTgxOTMwLmpwZw?x-oss-process=image/format,png" style="zoom:50%;" /><p>从下到上的神经网络结构图</p><h2 id="神经元模型">神经元模型</h2><p><strong>神经元模型</strong>是一个包含输入，输出与计算功能的模型。输入可以类比为神经元的树突，而输出可以类比为神经元的轴突，计算则可以类比为细胞核。</p><p>下图是一个典型的神经元模型：包含有3个输入，1个输出，以及2个计算功能。</p><p>注意中间的箭头线。这些线称为“连接”。每个上有一个“权值”。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMTkxNTM4NTY4MDItMzA3NzMyNjIxLmpwZw?x-oss-process=image/format,png" style="zoom:50%;" /><p>连接是神经元中最重要的东西。每一个连接上都有一个权重。</p><p>一个神经网络的训练算法就是让权重的值调整到最佳，以使得整个网络的预测效果最好。</p><p>我们使用a来表示输入，用w来表示权值。一个表示连接的有向箭头可以这样理解：在初端，传递的信号大小仍然是a，端中间有加权参数w，经过这个加权后的信号会变成a<em>w，因此在连接的末端，信号的大小就变成了a</em>w。</p><p>在其他绘图模型里，有向箭头可能表示的是值的不变传递。而在神经元模型里，每个有向箭头表示的是值的加权传递。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMTkxODA2MTQ4MTktMTY1MjU3NDIzNS5qcGc?x-oss-process=image/format,png" style="zoom:50%;" /><p>将神经元图中的所有变量用符号表示，并且写出输出的计算公式的话，就是下图。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMzAyMDE0NDE3OTItMTUwNTI4MzkyMC5qcGc?x-oss-process=image/format,png" style="zoom:50%;" /><p>可见z是在输入和权值的线性加权和叠加了一个<strong>函数g</strong>的值。在MP模型里，函数g是sgn函数，也就是取符号函数。这个函数当输入大于0时，输出1，否则输出0。</p><p>下面对神经元模型的图进行一些扩展。首先将sum函数与sgn函数合并到一个圆圈里，代表神经元的内部计算。其次，把输入a与输出z写到连接线的左上方，便于后面画复杂的网络。最后说明，一个神经元可以引出多个代表输出的有向箭头，但值都是一样的。</p><p>神经元可以看作一个计算与存储单元。计算是神经元对其的输入进行计算功能。存储是神经元会暂存计算结果，并传递到下一层。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMyMDE1LmNuYmxvZ3MuY29tL2Jsb2cvNjczNzkzLzIwMTUxMi82NzM3OTMtMjAxNTEyMzAyMDQwMzY0NzktNDYxNDQwOTQ4LmpwZw?x-oss-process=image/format,png" style="zoom:50%;" /><p>神经元扩展</p><p>当我们用“神经元”组成网络以后，描述网络中的某个“神经元”时，我们更多地会用“<strong>单元</strong>”（unit）来指代。同时由于神经网络的表现形式是一个有向图，有时也会用“<strong>节点</strong>”（node）来表达同样的意思。</p><p>神经元的输出是a = g（Wx + b），其中g是激活函数（sigmoid，tanh，ReLU，…）</p><p><strong>效果</strong></p><p>神经元模型的使用可以这样理解：</p><p>我们有一个数据，称之为样本。样本有四个属性，其中三个属性已知，一个属性未知。我们需要做的就是通过三个已知属性<strong>预测</strong>未知属性。</p><p>具体办法就是使用神经元的公式进行计算。三个已知属性的值是a1，a2，a3，未知属性的值是z。z可以通过公式计算出来。</p><p>这里，已知的属性称之为<strong>特征</strong>，未知的属性称之为<strong>目标</strong>。假设特征与目标之间确实是线性关系，并且我们已经得到表示这个关系的权值w1，w2，w3。那么，我们就可以通过神经元模型预测新样本的目标。</p><p>“cache”记录来自正向传播单元的值并将其发送到反向传播单元，因为需要链式计算导数。</p><p>我们用“cache”传递前向传播中计算的变量到相应的反向传播步骤，它包含用于计算导数的反向传播的有用值。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感知机</title>
      <link href="/2022/09/08/%E6%84%9F%E7%9F%A5%E6%9C%BA/"/>
      <url>/2022/09/08/%E6%84%9F%E7%9F%A5%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1>感知机（perceptron)</h1><hr><h2 id="感知机是什么？">感知机是什么？</h2><ul><li><strong>感知机</strong>：感知机是神经网络（深度学习）的起源算法，学习感知机的构造是通向神经网络和深度学习的一种重要思想。</li><li>感知机接收多个输入信号，输出一个信号。</li><li>这里所说的“信号”可以想 象成电流或河流那样具备“流动性”的东西。</li></ul><p>像电流流过导线，向前方输送 电子一样，感知机的信号也会形成流，向前方输送信息。</p><p>但是，和实际的电 流不同的是，感知机的信号只有“流/不流”（1/0）两种取值。</p><p>0 对应“不传递信号”，1对应“传递信号”。</p><p>x 1 、x 2 是输入信号，</p><p>y 是输出信号，</p><p>w 1 、w 2 是权重 （w 是 weight 的首字母）。</p><p>图中的○称为“神 经元”或者“节点”。</p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5qrzfmRpXP9qnoSM4GDTu3LxBdCLAtm.P0NYa6nfmTCRQ22zkHE1NjtRedkE2Jg5QD1OLkDjKwj2F3zWbI7dS30!/mnull&amp;bo=zgFMAc4BTAEDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>输入信号被送往神经元时，会被分别乘以固定的权重（w 1 x 1 、w 2 x 2 ）。</p><p>神经元会计算传送过来的信号的总和，只有当这个总和超过 了某个界限值时，才会输出1。</p><p>这也称为“神经元被激活”。这里将这个界限值称为阈值，用符号θ表示。</p><p>公式一：</p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5pMtwSErNnhqJl*CVqk8cgtIKTkiE4aIXo4il9SHzinWjvt96p.gSB5rh6qLvZ6Pc4LDR3hij4GClZwuu2xeQjU!/mnull&amp;bo=pQLrAKUC6wADCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>感知机的多个输入信号都有各自固有的权重，这些权重发挥着控制各个 信号的重要性的作用。也就是说，权重越大，对应该权重的信号的重要性就越高。</p><p>权重：相当于电流里的电阻。电阻是决定电流流动难度的参数， 电阻越低，通过的电流就越大。</p><p>而感知机的权重则是值越大，通过的信号就越大。</p><p>不管是电阻还是权重，在控制信号流动难度（或者流 动容易度）这一点上的作用都是一样的。</p><h1>简单的逻辑电路</h1><h2 id="与门（and）">与门（and）</h2><ul><li>与门仅在 两个输入均为1时输出1，其他时候则输出0。</li></ul><h2 id="与非门（NAND">与非门（NAND)</h2><ul><li><p>x1 和x2 同时为1时输出0，其他时候则输出1。</p><p>实际上，只要把实现与门的参数值的符号取反， 就可以实现与非门。</p></li></ul><h2 id="或门（or）">或门（or）</h2><ul><li>或门是“只要有一个输入信号是1，输 出就为1”的逻辑电路。</li></ul><p>感知机可以表示与门、与非门、或门的逻 辑电路。</p><p>这里重要的一点是：与门、与非门、或门的感知机构造是一样的。</p><p>实际上，3个门电路只有参数的值（权重和阈值）不同。</p><p>也就是说，相同构造 的感知机，只需通过适当地调整参数的值，就可以像“变色龙演员”表演不 同的角色一样，变身为与门、与非门、或门。</p><h1>感知机的实现</h1><hr><h2 id="与门的代码实现">与门的代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">def AND(x1, x2):</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">与门</span><br><span class="line"></span><br><span class="line">在函数内初始化参数 w1 、 w2 、 theta ，当输入的加权总和超过阈值时返回 1 ， 否则返回 0 。</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"># w：权重，theta：阈值，x：参数</span><br><span class="line">w1, w2, theta = 0.5, 0.5, 0.7</span><br><span class="line">tmp = x1 * w1 + x2 * w2</span><br><span class="line">print(tmp)</span><br><span class="line">if tmp &lt;= theta:</span><br><span class="line">    return 0</span><br><span class="line">elif tmp &gt; theta:</span><br><span class="line">    return 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">print(AND(0, 0))</span><br><span class="line">print(AND(1, 0))</span><br><span class="line">print(AND(0, 1))</span><br><span class="line">print(AND(0.5, 1))</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">0.0</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">0.5</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">0.5</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">0.75</span><br><span class="line">1</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="导入权重和偏置的代码实现">导入权重和偏置的代码实现</h2><p>另外一种实现形式。在此之前，首先把公式一的θ换成−b，于 是就可以用式来表示感知机的行为。<br>公式二：<br><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5hxcI9YFYZf8uDa7rxRl27HqvauX8qx*LIPWYKFWpxN2bItoqeZtuu9w*l2tP3i3842lD4ewoYn699onZABIXXw!/mnull&amp;bo=lQK5AJUCuQADCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>b称为偏置，w1和w2称为权重。<br>感知机会计算输入 信号和权重的乘积，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">In [1]: import numpy as np                                                                          </span><br><span class="line"></span><br><span class="line">In [2]: x = np.array([0,1])        # 输入                                                                 </span><br><span class="line"></span><br><span class="line">In [3]: w = np.array([0.5,0.5])        # 权重                                                            </span><br><span class="line"></span><br><span class="line">In [4]: b = -0.7                            # 偏置                                                        </span><br><span class="line"></span><br><span class="line">In [5]: w * x                                                                                       </span><br><span class="line">Out[5]: array([0. , 0.5])</span><br><span class="line"></span><br><span class="line">In [6]: np.sum(w * x)                                                                               </span><br><span class="line">Out[6]: 0.5</span><br><span class="line"></span><br><span class="line">In [7]: np.sum(w * x) + b                                                                           </span><br><span class="line">Out[7]: -0.19999999999999996    # 大约为 0.2(浮点小数造成的位运算误差)</span><br></pre></td></tr></table></figure><p>如上例所示，在NumPy数组的乘法运算中，当两个数组的元素个数相同时， 各个元素将分别相乘。</p><p>因此 wx 的结果就是它们的各个元素分别相乘（ [0, 1] * [0.5, 0.5] =&gt; [0, 0.5] ）。之后， 再计算相乘后的各个元素的总和。 np.sum(wx)</p><p>最后再把偏置加到这个加权总和上，就完成了 公式二 计算。</p><h2 id="使用权重和偏置的代码实现">使用权重和偏置的代码实现</h2><p>使用权重和偏置，可以像下面这样实现与门。<br>import numpy as np</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def AND(x1, x2):</span><br><span class="line">x = np.array([x1, x2])</span><br><span class="line">w = np.array([0.5, 0.5])</span><br><span class="line">b = -0.7    # 偏置大于权重</span><br><span class="line">tmp = np.sum(w * x) + b</span><br><span class="line">print(tmp)</span><br><span class="line">if tmp &lt;= 0:</span><br><span class="line">    return 0</span><br><span class="line">else:</span><br><span class="line">    return 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">print(AND(0, 0))</span><br><span class="line">print(AND(1, 0))</span><br><span class="line">print(AND(0, 1))</span><br><span class="line">print(AND(0.5, 1))</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">-0.7</span><br><span class="line">0</span><br><span class="line">-0.19999999999999996</span><br><span class="line">0</span><br><span class="line">-0.19999999999999996</span><br><span class="line">0</span><br><span class="line">0.050000000000000044</span><br><span class="line">1</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p>偏置和权重w 1 、w 2 的作用是不 一样的。</p><p>w 1 和w 2 是控制输入信号的重要性的参数;</p><p>而偏置是调整神经元被激活的容易程度（输出信号为 1 的程度）的参数。</p><p>比如，若 b 为 −0.1， 则只要输入信号的加权总和超过0.1，神经元就会被激活。</p><p>但是如果b 为−20.0，则输入信号的加权总和必须超过20.0，神经元才会被激活。</p><p>像这样， 偏置的值决定了神经元被激活的容易程度。</p><p>另外，这里我们将w 1 和w 2 称为权重， 将b称为偏置，但是根据上下文，有时也会将b、w 1 、w 2 这些参数统称为权重。</p><p>小知识：偏置这个术语，有“穿木屐” 的效果，即在没有任何输入时（输入为 0时），给输出穿上多高的木屐（加上多大的值）的意思。实际上，在 公式二 的b + w 1 x 1 + w 2 x 2 的计算中，当输入x 1 和x 2 为0时，只输出 偏置的值。</p><h2 id="与非门和或门的代码实现">与非门和或门的代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">def NAND(x1, x2):</span><br><span class="line">x = np.array([x1, x2])</span><br><span class="line">w = np.array([-0.5, -0.5])  # 仅权重和偏置 与 AND不同！</span><br><span class="line">b = 0.7 # 偏置设置为正，权重设置为负(与 AND相反)</span><br><span class="line">tmp = np.sum(w * x) + b</span><br><span class="line">print(tmp)</span><br><span class="line">if tmp &lt;= 0:</span><br><span class="line">    return 0</span><br><span class="line">else:</span><br><span class="line">    return 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">print(NAND(0, 0))</span><br><span class="line">print(NAND(1, 0))</span><br><span class="line">print(NAND(0, 1))</span><br><span class="line">print(NAND(0.5, 1))</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">0.7</span><br><span class="line">1</span><br><span class="line">0.19999999999999996</span><br><span class="line">1</span><br><span class="line">0.19999999999999996</span><br><span class="line">1</span><br><span class="line">-0.050000000000000044</span><br><span class="line">0</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">print(&#x27;-&#x27; * 100)</span><br><span class="line"></span><br><span class="line">def OR(x1, x2):</span><br><span class="line">    x = np.array([x1, x2])</span><br><span class="line">    w = np.array([0.5, 0.5])  # 仅权重和偏置 与 AND不同！</span><br><span class="line">b = -0.2        # 偏置小于 权重</span><br><span class="line">tmp = np.sum(w * x) + b</span><br><span class="line">print(tmp)</span><br><span class="line">if tmp &lt;= 0:</span><br><span class="line">    return 0</span><br><span class="line">else:</span><br><span class="line">    return 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">print(OR(0, 0))</span><br><span class="line">print(OR(1, 0))</span><br><span class="line">print(OR(0, 1))</span><br><span class="line">print(OR(0.5, 1))</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">-0.2</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">0.3</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">0.3</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">0.55</span><br><span class="line">1</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p>与门、与非门、或门是具有相同构造的感知机， 区别只在于权重参数的值。</p><p>因此，在与非门和或门的实现中，仅设置权重和 偏置的值这一点和与门的实现不同。</p><h2 id="感知机的局限性">感知机的局限性</h2><p>使用感知机可以实现与门、与非门、或门三种逻 辑电路。</p><p>现在我们来考虑一下异或门（XOR gate） 。</p><h2 id="异或门">异或门</h2><p>异或门也被称为逻辑异或电路。</p><p>仅当x 1 或x 2 中的一方为 1时，才会输出1（“异或”是拒绝其他的意思）。<br>实际上，用前面介绍的感知机是无法实现这个异或门的。</p><p>我们试着将或门的<strong>动作形象化</strong>。</p><p>或门的情况下，当权重参数 (b, w 1 , w 2 ) = (−0.5, 1.0, 1.0)时，可满足 或门 的真值表条件。</p><p>此时，感知机 可用下面的式 公式三 表示。</p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5ipXFgRONGDoifEuHxYdiwBOBAPYmZw1fDfT.b1xgb*TsYrWzIH24q0GENsC8O0QWh4Lpybb9kYR5HHt4E4mdEg!/mnull&amp;bo=4QLmAOEC5gADCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>公式三 表示的感知机会生成由直线−0.5 + x 1 + x 2 = 0分割开的两个空间。</p><p>其中一个空间输出1，另一个空间输出0，如下图所示。</p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5nXMkAhCgMvhNd83kDUP03wxr0fm6wTkzu4v8k73nU69FZkdyyHbbsG1I6rS2FIT1RcqRQCHqCk2..*wcIxY31k!/mnull&amp;bo=6QLSAukC0gIDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>感知机的可视化图：灰色区域是感知机输出0的区域，这个区域与或门的性质一致</p><p>或门在 (x 1 , x 2 ) = (0, 0) 时输出 0，在 (x 1 , x 2 ) 为 (0, 1)、(1, 0)、(1, 1) 时输 出1。感知机的可视化图中，○表示0，△表示1。</p><p>现在需要用直线将上图中的○和△分开。实际上，刚才的那条直线就将这4个点正确地分开了（归类）。</p><p>如果我们换成异或门的话，能否像或门那样，用一条直线作出分 割 下图中的○和△的空间呢？<br><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5iwpiPtNsFgeDzabzAVidjq7u6geT0lTg9jjzCYNjR9oRsbFC3WNDU0jAXA5qe300.c3MA9aOHqnIvngI.hiSgo!/mnull&amp;bo=*wLaAv8C2gIDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>想要用一条直线将 上图 中的○和△分开，无论如何都做不到。事实上， 用一条直线是无法将○和△分开的。</p><p>但是如果将 “直线” 这个限制去掉，就可以实现了。</p><h2 id="线性-和-非线性">线性 和 非线性</h2><p>感知机的<strong>局限性</strong>就在于它<strong>只能表示由一条直线分割的空间</strong>。</p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5nsR9Xkuh*VAv9qbJoQVu8DY5W7Y4UwjJwE0jvHzsZmxlhDi1QuEyB76wntcrY8mcOzf7EWr7oSHB.XiFQOM57s!/mnull&amp;bo=cAJqAnACagIDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>上图中 这样弯曲的曲线是无法用感知机表示的。</p><p>由<strong>曲线分割</strong> 而成的空间称为 <strong>非线性空间</strong>；</p><p>由<strong>直线分割</strong> 而成的空间称为 <strong>线性空间</strong>。</p><p>线性、非线性这两个术语在机器学习领域很常见，可以将其想象成上图所示的直线和曲线分割而成的空间。</p><h2 id="多层感知机">多层感知机</h2><p>“单层感知机无法表示异或门”或者“单层感知机无法分离非线性空间”。</p><p>但感知机 的绝妙之处在于它可以**“叠加层”**（通过叠加层来表示异或门）。</p><p>异或门的制作方法有很多，其中之一就是组合我们前面做好的与门、与 非门、或门进行配置。</p><p><strong>代码实现</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def XOR(x1, x2):</span><br><span class="line">s1 = NAND(x1, x2)  # 与 AND 相反  有0 就行</span><br><span class="line">s2 = OR(x1, x2)  # 只要有一个既返回 1   # 有 1就行</span><br><span class="line">y = AND(s1, s2)  # 必须两个都是1</span><br><span class="line">return y</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5rAk6AALhZlzJksPve.PkE8k3KWYCBYP*YURGUpvOSQtixDQ97ahA7FGVXFGyXYeWjOWXBgqT39Vre2vOzTq4mc!/mnull&amp;bo=pAPJAqQDyQIDCSw!&amp;rf=photolist&amp;t=5" alt=""></p><p>通过组合与门、与非门、或门实现异或门</p><p>这里，把s1 作为 与非门 的输出，把s 2 作为或门的输出，填入真值表中。</p><p>结果如图所示，观察x1、x 2 、y，可以发现确实符合异或门的输出。</p><p>异或门是一种<strong>多层结构的神经网络。</strong></p><p>与门、或门是单层感知机，而异或门是2层感知机。叠加了多 层的感知机也称为多层感知机（multi-layered perceptron） 。</p><p><img src="http://a1.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5ipXFgRONGDoifEuHxYdiwDLof4m2W9aaA3faRTLTHyVOlyXhNPVMf.zBGeJpiNYmwJiCBRbWjbfbRv6R3LvFhU!/c&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=qgKVAaoClQEDGTw!&amp;tl=1&amp;vuin=1005741898&amp;tm=1618934400&amp;sce=60-2-2&amp;rf=0-0" alt=""></p><p>用感知机表示异或门</p><p>上图中的感知机总共由3层构成，但是因为拥有权重的层实质 上只有2层（第0层和第1层之间，第1层和第2层之间），所以称 为“2层感知机”。不过，有的文献认为上图的感知机是由3层 构成的，因而将其称为“3层感知机”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.第0层的两个神经元接收输入信号，并将信号发送至第1层的神经元。</span><br><span class="line"></span><br><span class="line">2.第1层的神经元将信号发送至第2层的神经元，第2层的神经元输出y。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>小结</h1><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">感知机是具有输入和输出的算法。给定一个输入后，将输出一个既 定的值。</span><br><span class="line"></span><br><span class="line">感知机将权重和偏置设定为参数。</span><br><span class="line"></span><br><span class="line">使用感知机可以表示与门和或门等逻辑电路。</span><br><span class="line"></span><br><span class="line">异或门无法通过单层感知机来表示。</span><br><span class="line"></span><br><span class="line">使用2层感知机可以表示异或门。</span><br><span class="line"></span><br><span class="line">单层感知机只能表示线性空间，而多层感知机可以表示非线性空间。</span><br><span class="line"></span><br><span class="line">多层感知机（在理论上）可以表示计算机。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>作者：陈宝佳<br>链接：<a href="https://www.jianshu.com/p/a25788130897">https://www.jianshu.com/p/a25788130897</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感知机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则化、离散化、归一化、标准化</title>
      <link href="/2022/09/08/%E6%AD%A3%E5%88%99%E5%8C%96%E3%80%81%E7%A6%BB%E6%95%A3%E5%8C%96%E3%80%81%E5%BD%92%E4%B8%80%E5%8C%96/"/>
      <url>/2022/09/08/%E6%AD%A3%E5%88%99%E5%8C%96%E3%80%81%E7%A6%BB%E6%95%A3%E5%8C%96%E3%80%81%E5%BD%92%E4%B8%80%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1>正则化(regularization)</h1><hr><h2 id="正则化的目的">正则化的目的</h2><p>正则化是为了防止过拟合， 进而增强<strong>泛化</strong>能力。<br>&quot;<strong>泛化</strong>&quot;指的是一个假设模型能够应用到新样本的能力。</p><h2 id="L1-正则化和-L2-正则化的几何含义">L1 正则化和 L2 正则化的几何含义</h2><p>L1 正则化通常称为 Lasso 正则化：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo>∑</mo><mi>i</mi><mo>=</mo><mn>1</mn><mi>m</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>h</mi><mi>θ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mi>θ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mi>m</mi><mo>∑</mo><mi>j</mi><mo>=</mo><mn>1</mn><mi>n</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mi>j</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">J(θ)=−∑i=1m(y(i)log(hθ(x(i)))+(1−y(i))log(1−hθ(x(i))))+λm∑j=1n|θj|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">))</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">))))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord mathnormal">λm</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">n</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">∣</span></span></span></span></span></p><p>L2 正则化通常称为 Ridge 正则化：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo>∑</mo><mi>i</mi><mo>=</mo><mn>1</mn><mi>m</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>h</mi><mi>θ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mi>θ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mn>2</mn><mi>m</mi><mo>∑</mo><mi>j</mi><mo>=</mo><mn>1</mn><mi>n</mi><mi>θ</mi><mi>j</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">J(θ)=−∑i=1m(y(i)log(hθ(x(i)))+(1−y(i))log(1−hθ(x(i))))+λ2m∑j=1nθj2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">))</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">))))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord mathnormal">λ</span><span class="mord">2</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">2</span></span></span></span></span></p><p>我们可以写成统一的形式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>μ</mi><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>⇔</mo><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>μ</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>−</mo><mi>η</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(θ,μ)=f(θ)+μh(θ)⇔J(θ,μ)=f(θ)+μ(h(θ)−η)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mclose">)</span></span></span></span></span></p><p>其中 η 为常数，不影响最优值的求解。</p><p>可以还原为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min f(θ)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>η</mi></mrow><annotation encoding="application/x-tex">s.t. h(θ)≤η</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span></span></p><p>那么他们的几何含义是：</p><p>对于 L1 正则化 ( Lasso 正则化)：$$ h(θ)=∑j=1n|θj|$$</p><p>对于 L2 正则化 ( Ridge 正则化)：$$ h(θ)=∑j=1nθj2$$</p><p><strong>Q：以下哪个图形是 L1 正则化， 哪个图形是 L2 正则化 ？</strong></p><p><img src="https://pic1.zhimg.com/80/v2-70ff674b3c4302c67a43d9464a687a5c_720w.jpg" alt="img"></p><p>左边的图为 L1 正则化，右图为 L2 正则化。</p><p>因为 对于 L1 正则化而言 h(θ)=|w1|+|w2|≤η ，在图中表示一个菱形区域。</p><p>对于 L2 正则化而言h(θ)=w12+w22≤η，在图中表示一个圆形区域。</p><h2 id="L1-正则化和-L2-正则化正则化的推广">L1 正则化和 L2 正则化正则化的推广</h2><p>逻辑回归正则化可以写成统一的形式 Lq <em>正则化：</em><br>J(θ)=−∑i=1m(y(i)log(hθ(x(i)))+(1−y(i))log(1−hθ(x(i))))+λ2m∑j=1n|θj|q<br>其中 q≥0。不同的 q 值对应着不同的约束边界，如下图所示：</p><p><img src="https://pic3.zhimg.com/80/v2-c4b0b703eee7e3849c359e34bbbcf8fe_720w.jpg" alt="img"></p><p>从上图可以看出，</p><ul><li>q=1 对应着 L1 正则化， q=2 对应着 L2 正则化。</li><li>而当 q&lt;1 时，约束边界为非凸函数，求解最优值非常困难。 q=1 是满足约束边界为凸的最小值。</li><li>当 q≤1 时，约束边界在坐标轴上不可导，为非光滑函数，不能用梯度下降法进行求解。</li><li>对于 q∈(1,2) 的情况是 L1 正则化和 L2 正则化的折中，同时具有两者的优点。此时的约束边界为凸边界，既具有 L2 正则化的光滑可导性，同时具有 L1 正则化获得稀疏特征的优点。</li><li>实践表明，对于q&gt;2 的情况，效果并不会比 q∈[1,2] 好，没必要进行讨论。</li><li>Zou 和 Hastie (2005) 引入了 Elastic Net 正则化，可以通过参数 α 调节L1正则化和L2正则化的权重</li></ul><p>即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><mi>α</mi><msup><mi>θ</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mrow><mo fence="true">∣</mo><msub><mi>θ</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{\lambda}{2 m} \sum_{j=1}^{n}\left(\alpha \theta^{2}+(1-\alpha)\left|\theta_{j}\right|\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><p>如下图为q=1.2时的Lq正则化和α=0.2 时的 Elastic Net 正则化，两种不同的方式对 L1 正则化和 L2 正则化进行了折中。这两种方法均继承了 L1 正则化获得稀疏矩阵的优点。至于光滑可导性，乍一看二者没什么区别，实际上 Lq 正则化在坐标处是可导的，而 Elastic Net 正则化在坐标处是不可导的。</p><p><img src="https://pic2.zhimg.com/80/v2-19fe2f764a3647840b0c755a9caea631_720w.jpg" alt="img"></p><p><strong>欢迎关注我的博客：</strong><a href="https://link.zhihu.com/?target=https%3A//2018august.github.io/">https://2018august.github.io/</a></p><h1>离散化</h1><h2 id="定义">定义</h2><p><strong>离散化</strong>是指将连续的数据进行分段，使其变为一段段离散化的区间。分段的原则有基于等距离、等频率或优化的方法。</p><h2 id="作用">作用</h2><ol><li><strong>模型限制</strong><br>比如决策树、朴素贝叶斯等算法，都是基于离散型的数据展开的。如果要使用该类算法，必须将离散型的数据进行。有效的离散化能减小算法的时间和空间开销，提高系统对样本的分类聚类能力和抗噪声能力。</li><li><strong>离散化的特征更易理解</strong><br>比如工资收入，月薪2000和月薪20000，从连续型特征来看高低薪的差异还要通过数值层面才能理解，但将其转换为离散型数据(低薪、高薪)，则可以更加直观的表达出了我们心中所想的高薪和低薪。</li><li><strong>使模型结果更加稳定</strong></li></ol><h1>归一化</h1><hr><p>归一化方法有两种形式，一种是把数变为(0，1)之间的小数，一种是把有量纲表达式变为无量纲表达式。</p><p>主要是为了数据处理方便提出来的，把数据映射到0~1范围之内处理，更加便捷快速，应该归到数字信号处理范畴之内。</p><p>原始数据经过数据标准化处理后，各指标处于<strong>同一数量级</strong>，适合进行综合对比评价。</p><h2 id="min-max标准化（Min-Max-Normalization）">min-max标准化（Min-Max Normalization）</h2><p>也称为<strong>离差标准化</strong>，是对原始数据的线性变换，使结果值映射到[0 , 1]之间。<br><img src="https://img-blog.csdn.net/20160704143022847" alt=""></p><p>使用这种方法目的：<br>1、对于方差非常小的属性可以增强其稳定性；<br>2、维持稀疏矩阵中为0的条目。</p><h4 id="手写代码实现：">手写代码实现：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">arr = np.asarray([0, 10, 50, 80, 100])</span><br><span class="line">for x in arr:</span><br><span class="line">x = float(x - np.min(arr))/(np.max(arr)- np.min(arr))</span><br><span class="line">print x</span><br><span class="line"> </span><br><span class="line"># output</span><br><span class="line"># 0.0</span><br><span class="line"># 0.1</span><br><span class="line"># 0.5</span><br><span class="line"># 0.8</span><br><span class="line"># 1.0</span><br></pre></td></tr></table></figure><h4 id="sklearn代码实现：">sklearn代码实现：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">from sklearn import preprocessing   </span><br><span class="line"> </span><br><span class="line">import numpy as np  </span><br><span class="line"> </span><br><span class="line">X = np.array  ([[ 1., -1.,  2.],  </span><br><span class="line">[ 2.,  0.,  0.],  </span><br><span class="line">[ 0.,  1., -1.]])  </span><br><span class="line"></span><br><span class="line">min_max_scaler = preprocessing.MinMaxScaler() #MinMaxScalar函数 </span><br><span class="line">X_minMax = min_max_scaler.fit_transform(X)   </span><br><span class="line"></span><br><span class="line">X_minMax</span><br><span class="line"></span><br><span class="line"># output </span><br><span class="line">array([ [ 0.5       ,  0.        ,  1.        ],  </span><br><span class="line">[ 1.        ,  0.5       ,  0.33333333],  </span><br><span class="line">[ 0.        ,  1.        ,  0.        ]]) </span><br></pre></td></tr></table></figure><p>当然，在构造类对象的时候也可以直接指定最大最小值的范围：<br>feature_range=(min, max)，<br>此时应用的公式变为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X_std=(X-X.min(axis=0))/(X.max(axis=0)-X.min(axis=0))  </span><br><span class="line">X_minmax=X_std/(X.max(axis=0)-X.min(axis=0))+X.min(axis=0))</span><br></pre></td></tr></table></figure><h2 id="Z-score标准化方法-mean-normaliztion">Z-score标准化方法(mean normaliztion)</h2><p>也称为均值归一化(mean normaliztion)， 给予原始数据的均值（mean）和标准差（standard deviation）进行数据的标准化。经过处理的数据符合<strong>标准正态分布</strong>，即均值为0，标准差为1。转化函数为：<br><img src="https://img-blog.csdn.net/20160704143139785" alt=""><br>其中 μ 为所有样本数据的均值，σ为所有样本数据的标准差。</p><h4 id="手写代码实现">手写代码实现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line"> </span><br><span class="line">arr = np.asarray([0, 10, 50, 80, 100])</span><br><span class="line">for x in arr:</span><br><span class="line">x = float(x - arr.mean())/arr.std()</span><br><span class="line">print x</span><br><span class="line"> </span><br><span class="line"># output</span><br><span class="line"># -1.24101045599</span><br><span class="line"># -0.982466610991</span><br><span class="line"># 0.0517087689995</span><br><span class="line"># 0.827340303992</span><br><span class="line"># 1.34442799399</span><br></pre></td></tr></table></figure><h4 id="skleran代码实现">skleran代码实现</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from sklearn import preprocessing</span><br><span class="line"></span><br><span class="line">data = preprocessing.scale(values) #注意，这里的values是array</span><br></pre></td></tr></table></figure><h2 id="函数转换方法">函数转换方法</h2><h3 id="log函数转换">log函数转换</h3><p>通过以10为底的log函数转换的方法同样可以实现归一下，具体方法如下：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/562539f87010cf3a9ab7a06c900641e1.png" alt=""></p><p>使用注意：max为样本数据最大值，并且所有的数据都要大于等于1。</p><h3 id="atan函数转换">atan函数转换</h3><p>通过反正切函数也可以实现数据的归一化：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c7d28474a16c90f87284a9ae982b88e7.png" alt=""></p><p>使用这个方法需要注意的是如果想映射的区间为[0,1]，则数据都应该大于等于0，小于0的数据将被映射到[-1,0]区间上，而并非所有数据标准化的结果都映射到[0,1]区间上。</p><h3 id="Sigmoid函数转换（十分重要）">Sigmoid函数转换（十分重要）</h3><p>Sigmoid函数是一个具有S形曲线的函数，是<strong>良好的阈值函数</strong>，在(0, 0.5)处中心对称，在(0, 0.5)附近有比较大的斜率，而当数据趋向于正无穷和负无穷的时候，映射出来的值就会无限趋向于1和0，是个人非常喜欢的“归一化方法”，之所以打引号是因为我觉得Sigmoid函数在<strong>阈值分割</strong>上也有很不错的表现，根据公式的改变，就可以改变分割阈值，这里作为归一化方法，我们只考虑(0, 0.5)作为分割阈值的点的情况：</p><p><img src="https://img-blog.csdn.net/20141006211516437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva3J5b2xpdGg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def sigmoid(X,useStatus):</span><br><span class="line">if useStatus:</span><br><span class="line">     return 1.0 / (1 + np.exp(-float(X)))</span><br><span class="line">else:</span><br><span class="line">    return float(X)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐算法概述</title>
      <link href="/2022/09/08/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/09/08/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-推荐算法概述">1 推荐算法概述</h2><p>推荐算法是非常古老的，在机器学习还没有兴起的时候就有需求和应用了。概括来说，可以分为以下5种：</p><ol><li><strong>基于内容的推荐</strong>：这一类一般依赖于自然语言处理NLP的一些知识，通过挖掘文本的TF-IDF特征向量，来得到用户的偏好，进而做推荐。这类推荐算法可以找到用户独特的小众喜好，而且还有较好的解释性。这一类由于需要NLP的基础，本文就不多讲，在后面专门讲NLP的时候再讨论。</li><li><strong>协调过滤推荐</strong>：本文后面要专门讲的内容。协调过滤是推荐算法中目前最主流的种类，花样繁多，在工业界已经有了很多广泛的应用。它的优点是不需要太多特定领域的知识，可以通过基于统计的机器学习算法来得到较好的推荐效果。最大的优点是工程上容易实现，可以方便应用到产品中。目前绝大多数实际应用的推荐算法都是协同过滤推荐算法。</li><li><strong>混合推荐</strong>：这个类似我们机器学习中的集成学习，博才众长，通过多个推荐算法的结合，得到一个更好的推荐算法，起到三个臭皮匠顶一个诸葛亮的作用。比如通过建立多个推荐算法的模型，最后用投票法决定最终的推荐结果。混合推荐理论上不会比单一任何一种推荐算法差，但是使用混合推荐，算法复杂度就提高了，在实际应用中有使用，但是并没有单一的协调过滤推荐算法，比如逻辑回归之类的二分类推荐算法广泛。</li><li><strong>基于规则的推荐</strong>：这类算法常见的比如基于最多用户点击，最多用户浏览等，属于大众型的推荐方法，在目前的大数据时代并不主流。</li><li><strong>基于人口统计信息的推荐</strong>：这一类是最简单的推荐算法了，它只是简单的根据系统用户的基本信息发现用户的相关程度，然后进行推荐，目前在大型系统中已经较少使用。</li></ol><h2 id="2-协调过滤推荐算法">2 协调过滤推荐算法</h2><p><strong>协同过滤(Collaborative Filtering)作</strong>为推荐算法中最经典的类型，包括在线的协同和离线的过滤两部分。所谓在线协同，就是通过在线数据找到用户可能喜欢的物品，而离线过滤，则是过滤掉一些不值得推荐的数据，比比如推荐值评分低的数据，或者虽然推荐值高但是用户已经购买的数据。</p><p>协同过滤的模型一般为m个物品，m个用户的数据，只有部分用户和部分数据之间是有评分数据的，其它部分评分是空白，此时我们要用已有的部分稀疏数据来预测那些空白的物品和数据之间的评分关系，找到最高评分的物品推荐给用户。</p><p>一般来说，协同过滤推荐分为三种类型：<br>第一种是基于用户(user-based)的协同过滤，<br>第二种是基于项目(item-based)的协同过滤，<br>第三种是基于模型(model based)的协同过滤。</p><p><strong>基于用户(user-based)的协同过滤</strong>主要考虑的是用户和用户之间的相似度，只要找出相似用户喜欢的物品，并预测目标用户对对应物品的评分，就可以找到评分最高的若干个物品推荐给用户。</p><p><strong>基于项目(item-based)的协同过滤</strong>和基于用户的协同过滤类似，只不过这时我们转向找到物品和物品之间的相似度，只有找到了目标用户对某些物品的评分，那么我们就可以对相似度高的类似物品进行预测，将评分最高的若干个相似物品推荐给用户。比如你在网上买了一本机器学习相关的书，网站马上会推荐一堆机器学习，大数据相关的书给你，这里就明显用到了基于项目的协同过滤思想。</p><p>我们可以简单比较下基于用户的协同过滤和基于项目的协同过滤：基于用户的协同过滤需要在线找用户和用户之间的相似度关系，计算复杂度肯定会比基于基于项目的协同过滤高。但是可以帮助用户找到新类别的有惊喜的物品。而基于项目的协同过滤，由于考虑的物品的相似性一段时间不会改变，因此可以很容易的离线计算，准确度一般也可以接受，但是推荐的多样性来说，就很难带给用户惊喜了。一般对于小型的推荐系统来说，基于项目的协同过滤肯定是主流。但是如果是大型的推荐系统来说，则可以考虑基于用户的协同过滤。</p><p><strong>基于模型(model based)的协同过滤</strong>是目前最主流的协同过滤类型了，我们的一大堆机器学习算法也可以在这里找到用武之地。下面我们就重点介绍基于模型的协同过滤。</p><h2 id="3-基于模型的协同过滤">3 基于模型的协同过滤</h2><p>基于模型的协同过滤作为目前最主流的协同过滤类型，其相关算法可以写一本书了，当然我们这里主要是对其思想做有一个归类概括。我们的问题是这样的m个物品，m个用户的数据，只有部分用户和部分数据之间是有评分数据的，其它部分评分是空白，此时我们要用已有的部分稀疏数据来预测那些空白的物品和数据之间的评分关系，找到最高评分的物品推荐给用户。</p><p>对于这个问题，用机器学习的思想来建模解决，主流的方法可以分为：用关联算法，聚类算法，分类算法，回归算法，矩阵分解，神经网络,图模型以及隐语义模型来解决。下面我们分别加以介绍。</p><h4 id="3-1-用关联算法做协同过滤">3.1 用关联算法做协同过滤</h4><p>一般我们可以找出用户购买的所有物品数据里频繁出现的项集活序列，来做频繁集挖掘，找到满足支持度阈值的关联物品的频繁N项集或者序列。如果用户购买了频繁N项集或者序列里的部分物品，那么我们可以将频繁项集或序列里的其他物品按一定的评分准则推荐给用户，这个评分准则可以包括支持度，置信度和提升度等。<br>常用的关联推荐算法有<strong>Apriori</strong>，<strong>FP Tree</strong>和<strong>PrefixSpan</strong>。如果大家不熟悉这些算法，可以参考我的另外几篇文章：<br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6293298.html">Apriori算法原理总结</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6307064.html" title="FP Tree算法原理总结">FP Tree算法原理总结</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6323182.html">PrefixSpan算法原理总结</a></p><h4 id="3-2-用聚类算法做协同过滤">3.2 用聚类算法做协同过滤</h4><p>用聚类算法做协同过滤就和前面的基于用户或者项目的协同过滤有些类似了。我们可以按照用户或者按照物品基于一定的距离度量来进行聚类。如果基于用户聚类，则可以将用户按照一定距离度量方式分成不同的目标人群，将同样目标人群评分高的物品推荐给目标用户。基于物品聚类的话，则是将用户评分高物品的相似同类物品推荐给用户。<br>常用的聚类推荐算法有<strong>K-Means</strong>, <strong>BIRCH</strong>, <strong>DBSCAN</strong>和<strong>谱聚类</strong>，如果大家不熟悉这些算法，可以参考我的另外几篇文章：<br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6164214.html">K-Means聚类算法原理</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6179132.html">BIRCH聚类算法原理</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6208966.html">DBSCAN密度聚类算法</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6221564.html">谱聚类（spectral clustering）原理总结</a></p><h4 id="3-3-用分类算法做协同过滤">3.3 用分类算法做协同过滤</h4><p>如果我们根据用户评分的高低，将分数分成几段的话，则这个问题变成分类问题。比如最直接的，设置一份评分阈值，评分高于阈值的就是推荐，评分低于阈值就是不推荐，我们将问题变成了一个二分类问题。虽然分类问题的算法多如牛毛，但是目前使用最广泛的是逻辑回归。为啥是逻辑回归而不是看起来更加高大上的比如支持向量机呢？因为逻辑回归的解释性比较强，每个物品是否推荐我们都有一个明确的概率放在这，同时可以对数据的特征做工程化，得到调优的目的。目前逻辑回归做协同过滤在BAT等大厂已经非常成熟了。<br>常见的分类推荐算法有<strong>逻辑回归</strong>和<strong>朴素贝叶斯</strong>，两者的特点是解释性很强。如果大家不熟悉这些算法，可以参考我的另外几篇文章：<br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6029432.html">逻辑回归原理小结</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6069267.html">朴素贝叶斯算法原理小结</a></p><h4 id="3-4-用回归算法做协同过滤">3.4 用回归算法做协同过滤</h4><p>用回归算法做协同过滤比分类算法看起来更加的自然。我们的评分可以是一个连续的值而不是离散的值，通过回归模型我们可以得到目标用户对某商品的预测打分。</p><p>常用的回归推荐算法有<strong>Ridge回归</strong>，<strong>回归树</strong>和<strong>支持向量回归</strong>。如果大家不熟悉这些算法，可以参考我的另外几篇文章：<br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6004041.html">线性回归原理小结</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6053344.html">决策树算法原理(下)</a><br><a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6113120.html">支持向量机原理(五)线性支持回归</a></p><h4 id="3-5-用矩阵分解做协同过滤">3.5 用矩阵分解做协同过滤</h4><p>用矩阵分解做协同过滤是目前使用也很广泛的一种方法。由于传统的奇异值分解SVD要求矩阵不能有缺失数据，必须是稠密的，而我们的用户物品评分矩阵是一个很典型的稀疏矩阵，直接使用传统的SVD到协同过滤是比较复杂的。</p><p>目前主流的矩阵分解推荐算法主要是<strong>SVD</strong>的一些变种，比如FunkSVD，BiasSVD和SVD++。这些算法和传统SVD的最大区别是不再要求将矩阵分解为UΣVT的形式，而变是两个低秩矩阵PTQ的乘积形式。<br>对于矩阵分解的推荐算法，后续我会专门开篇来讲。</p><h4 id="3-6-用神经网络做协同过滤">3.6 用神经网络做协同过滤</h4><p>用神经网络乃至深度学习做协同过滤应该是以后的一个趋势。目前比较主流的用两层神经网络来做推荐算法的是<strong>限制玻尔兹曼机(RBM)</strong>。在目前的Netflix算法比赛中， RBM算法的表现很牛。当然如果用深层的神经网络来做协同过滤应该会更好，大厂商用深度学习的方法来做协同过滤应该是将来的一个趋势。后续我会专门开篇来讲讲RBM。</p><h4 id="3-7-用图模型做协同过滤">3.7 用图模型做协同过滤</h4><p>用图模型做协同过滤，则将用户之间的相似度放到了一个图模型里面去考虑，常用的算法是<strong>SimRank系列算法</strong>和<strong>马尔科夫模型算法</strong>。对于SimRank系列算法，它的基本思想是被相似对象引用的两个对象也具有相似性。算法思想有点类似于大名鼎鼎的PageRank。而马尔科夫模型算法当然是基于马尔科夫链了，它的基本思想是基于传导性来找出普通距离度量算法难以找出的相似性。后续我会专门开篇来讲讲SimRank系列算法。</p><h4 id="3-8-用隐语义模型做协同过滤">3.8 用隐语义模型做协同过滤</h4><p>隐语义模型主要是基于NLP的，涉及到对用户行为的语义分析来做评分推荐，主要方法有<strong>隐性语义分析LSA</strong>和<strong>隐含狄利克雷分布LDA</strong>，这些等讲NLP的再专门讲。</p><h2 id="4-协同过滤的一些新方向">4 协同过滤的一些新方向</h2><p>当然推荐算法的变革也在进行中，就算是最火爆的基于逻辑回归推荐算法也在面临被取代。哪些算法可能取代逻辑回归之类的传统协同过滤呢？下面是我的理解：</p><p>a) <strong>基于集成学习的方法和混合推荐</strong>:这个和混合推荐也靠在一起了。由于集成学习的成熟，在推荐算法上也有较好的表现。一个可能取代逻辑回归的算法是GBDT。目前GBDT在很多算法比赛都有好的表现，而有工业级的并行化实现类库。</p><p>b)<strong>基于矩阵分解的方法</strong>：矩阵分解，由于方法简单，一直受到青睐。目前开始渐渐流行的矩阵分解方法有分解机(Factorization Machine)和张量分解(Tensor Factorization)。</p><p>c) <strong>基于深度学习的方法</strong>：目前两层的神经网络RBM都已经有非常好的推荐算法效果，而随着深度学习和多层神经网络的兴起，以后可能推荐算法就是深度学习的天下了？目前看最火爆的是基于CNN和RNN的推荐算法。</p><h2 id="5-协同过滤总结">5 协同过滤总结</h2><p>协同过滤作为一种经典的推荐算法种类，在工业界应用广泛，它的优点很多，模型通用性强，不需要太多对应数据领域的专业知识，工程实现简单，效果也不错。这些都是它流行的原因。</p><p>当然，协同过滤也有些难以避免的难题，比如令人头疼的“冷启动”问题，我们没有新用户任何数据的时候，无法较好的为新用户推荐物品。同时也没有考虑情景的差异，比如根据用户所在的场景和用户当前的情绪。当然，也无法得到一些小众的独特喜好，这块是基于内容的推荐比较擅长的。</p><p>以上就是协同过滤推荐算法的一个总结，希望可以帮大家对推荐算法有一个更深的认识，并预祝大家新年快乐！、</p><p>出处：<a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/pinard/p/6349233.html" title="协同过滤推荐算法总结 - 刘建平Pinard">协同过滤推荐算法总结 - 刘建平Pinard</a></p>]]></content>
      
      
      <categories>
          
          <category> 推荐算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国赛论文制作笔记</title>
      <link href="/2022/09/08/%E5%9B%BD%E8%B5%9B%E8%AE%BA%E6%96%87%E5%88%B6%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/09/08/%E5%9B%BD%E8%B5%9B%E8%AE%BA%E6%96%87%E5%88%B6%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="数学建模论文基本构成">数学建模论文基本构成</h2><ul><li>首页：<ul><li>论文题目、摘要、关键词</li></ul></li><li>论文正文<ul><li>问题重述</li><li>问题分析</li><li>模型假设</li><li>符号说明</li><li>模型建立与求解</li><li>模型检验/模型改进与推广</li><li>模型优缺点评价</li></ul></li><li>参考文献</li><li>附录</li></ul><h2 id="论文格式">论文格式</h2><ul><li>论文题目：黑体3号，居中</li><li>摘要标题：黑体4号，居中</li><li>摘要内容：宋体，小4号</li><li>关键词：黑体小4号</li><li>正文一级标题：黑体4号，居中</li><li>正文二三级标题：黑体小4号，居左</li><li>正文：宋体，小四号</li><li>数字、字母：Times Nem Roman</li><li>页边距：上下左右2.5厘米</li><li>论文页数：正文20页以内</li></ul><h2 id="论文首页：题目，摘要，关键词">论文首页：题目，摘要，关键词</h2><h3 id="论文题目：">论文题目：</h3><p>应尽量涵盖论文研究得主要对象或研究内容，所采用的主要研究方法</p><p>简短，精炼，一目了然</p><p>独自一行，居中排版</p><h4 id="常见方法：">常见方法：</h4><h5 id="第一种：基于XXX模型-方法-理论的XXX问题研究（一般）">第一种：基于XXX模型/方法/理论的XXX问题研究（一般）</h5><p>基于一维热传导方程的炉温曲线机理模型研究</p><p>基于动态规划，统计分析、静态博弈的穿越沙漠游戏策略设计</p><h5 id="第二种：直接对问题进行简化作为题目（大神选择）">第二种：直接对问题进行简化作为题目（大神选择）</h5><p>穿越沙漠游戏中的玩家行为决策问题</p><h4 id="关键词">关键词</h4><p>3-5个，尽可能涵盖</p><p>包括五部分内容</p><ul><li>研究对象或研究内容</li><li>研究目的</li><li>主要模型</li><li>求解算法</li><li>验证方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：熵权值法 模糊综合评价模型 多目标规划模型 小区开放评价 通行影响</span><br><span class="line">信贷风险评估 梯度下降法 改进的决策树模型 非线性规划 集成学习</span><br></pre></td></tr></table></figure><h3 id="论文摘要（非常重要）">论文摘要（非常重要）</h3><p><strong>摘要内容</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">摘要是现代科技论文的一个导读部分。摘要应具有独立性和代表性，即拥有与文献同等量的主要信息，即不阅读全文，就能获得必要的信息，它是解决读者再短时间内了解论文内容和方法的有效手段。</span><br></pre></td></tr></table></figure><p><strong>主要包括</strong></p><ul><li><p>背景和问题：应简要叙述研究的对象和研究内容、研究目的</p></li><li><p>问题分析：一句题目给出的数据或自行收集了哪些数据或信息</p></li><li><p>关键假设：对所研究的问题、数据做了 哪些机理分析或数据观察，据此做出了什么样的关键假设。</p></li><li><p>模型结构：采用了什么建模方法、数学模型</p></li><li><p>求解算法：对模型用了啥算法、方法或软件</p></li><li><p>结果，检验，结论</p></li><li><p>（<strong>关键词请加深加粗</strong>）</p><p><img src="https://s1.ax1x.com/2022/09/08/vqJ39I.png" alt="vqJ39I.png"></p></li></ul><h4 id="三大部分：">三大部分：</h4><ul><li>摘要前言：<ul><li>2~3句话</li><li>总结概括</li><li>研究问题的背景或意义/主要思路和方法/解决的问题或成果</li></ul></li><li>摘要正文：<ul><li>简述各个问题的建模过程与结果分析</li><li>针对问题X,针对问题X。。。</li><li>四部分：<strong>简述问题，建模思路，模型求解和结果分析</strong></li></ul></li><li>摘要结尾：<ul><li>对整个模型过程的总结和升华，常见的是进行优缺点评价、模型的创新性评价、模型的推广等。（强调亮点）</li></ul></li></ul><p><strong>简述问题</strong></p><p>解决的主要问题是什么，目的是让阅卷老师第一时间判定你是否准确解读题意。</p><p>表述形式一：直接归纳：（针对问题一，主要分析拍照赚钱任务未完成的原因）；</p><p>表述形式二：分类：（针对问题二，可以将其定性为评价类问题）</p><p><strong>建模思路</strong></p><p>问题的分析或数据预处理 + 采用了什么数学方法或进行了哪些分析 + 建立了什么样的数学模型</p><p><strong>模型求解</strong></p><p>基于XX数据，采用了XX算法/软件对模型进行求解。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">利用差分法对方程组逐层求解，基于最小二乘原理，拟合实测温度，遍历得到最优的参数组合。将该组参数代入后即可得到一堆热传递模型。</span><br><span class="line">针对问题一的信贷风险评价模型，我们运用MATLAB软件编写指标计算和主成分分析程序，计算了XXXX安全指标。</span><br></pre></td></tr></table></figure><p><strong>结果分析</strong></p><p>计算性问题：要求我们计算的计算量，注意单位，字体加深</p><p>开放性问题：关键性的结果进行简述，有数据最好。</p><h2 id="论文正文部分撰写">论文正文部分撰写</h2><p>问题重述-----&gt;问题分析-----&gt;模型假设------&gt;符号说明------&gt;模型建立与求解</p><h3 id="问题重述">问题重述</h3><p>首先要简单地说明问题地情景，即要说清楚事情地来龙去脉。列出必要数据，提出要解决地问题，并给出研究对象地关键信息地内容，它的目的在于使读者对要解决的问题有一个印象。</p><p><strong>真实意图</strong>：查看学院能否读懂题意，明确主要问题和待解决的难点。</p><p><strong>严重警告</strong>：绝对不能照抄原题！</p><p>针对数值计算求解类：将赛题背景简述后照搬（更改为自己语言）</p><p>针对开放类赛题：适当进行扩充或简化，提炼关键语言。（更改为自己语言）</p><p>最重要：<strong>语言改写</strong></p><p><img src="https://s1.ax1x.com/2022/09/08/vqJJjf.png" alt="vqJJjf.png"></p><h3 id="问题分析">问题分析</h3><p>问题分析是将具体问题抽象为数学模型的桥梁，反映了对问题的认识成都，体现了解决问题的雏形，也就是给出建模的思路，启乘上启下作用，反应建模者的综合水平。</p><p><strong>包含内容</strong>：</p><ul><li>题目中包括的已知条件，参数或数据等；</li><li>对问题进行宏观分析，确定要解决问题的关键</li><li>对该问题给出大致的求解思路（可建立XX模型用XX方法）</li><li>给出该问题已得到求解的相关描述</li></ul><p><strong>提示</strong>：</p><ul><li>每一小问单独设置一段</li><li>不要与摘要重复</li><li>不需要具体求解结果</li><li>可用流程图/思维导图描述求解思路</li></ul><p><img src="https://s1.ax1x.com/2022/09/08/vqJl4A.png" alt="vqJl4A.png"></p><h3 id="模型假设">模型假设</h3><p>对一些不必要的细节进行规避。</p><p>假设 一般不是实际问题直接提供的，它们因人而异，所以在撰写时要注意：</p><ul><li>论文中的假设要以严格、确切的数学语言来表达，使读者不产生任何曲解。</li><li>所提出的假设确实是建立模型所必需的，与模型无关的假设只会扰乱读者思考</li><li>具备合理性，可用别的参考资料推类。</li></ul><p>撰写模型假设时，一般包括一下几种情况：</p><ul><li>①对题目中已知条件或餐宿做出保真性假设</li><li>②仅考虑题目中涉及的主要条件，对其他情况不考虑或强制规定</li><li>③对题目中涉及的主要条件进行平稳性规定</li><li>④为使研究更简便、或从常识性角度做出的假设</li><li>⑤对相关参数做出规定</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">例题 2019A</span><br><span class="line">1、高压有关是刚体，不考虑形变：  ③</span><br><span class="line">2、题目给出的数据准确，无异常值： ①</span><br><span class="line">3、不考虑高压油管内壁对油的摩擦力：  ②</span><br><span class="line">4、不考虑液体压力：   ②</span><br><span class="line">5、整个系统温度恒定   ③</span><br></pre></td></tr></table></figure><h3 id="符号说明">符号说明</h3><p>是对建模过程中涉及到的主要变量提前在论文中进行描述，方便评审老师阅读评论</p><p><strong>三线表！！</strong></p><p><strong>全局变量</strong>，临时变量不屑</p><p><strong>希腊字母！！</strong></p><p><img src="https://s1.ax1x.com/2022/09/08/vqJuHe.png" alt="vqJuHe.png"></p><h3 id="模型建立与求解">模型建立与求解</h3><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5pkoOcSjXOOFe.IeU*0YwH8viH9dh9qYZZrqbY1H9psNzTJADW6bEnpBzJGuWnR7Eo9Ly8.RngF*RmVXMsMDiLU!/b&amp;bo=2AEuAgAAAAADF8c!&amp;rf=viewer_4" alt=""></p><h4 id="评价类赛题建模">评价类赛题建模</h4><p>1、明确评价目的建立指标体系：具有代表性，确定性，独立性，区别能力。</p><p>2、对指标体系进行规范化处理 ：指标一致化处理、无量纲化处理。</p><p>3、确定指标体系对应权重系数：主观定权法和客观定权法。</p><p>4、选择或构造综合评价模型</p><h4 id="预测类赛题建模">预测类赛题建模</h4><p>1、对原始数据进行预处理（特征工程）：残缺值补全，异常值剔除</p><p>2、根据条件选择合适模型： 中短期长期预测，大小样本</p><p>3、对结果误差分析： 绝对误差分析，相对误差分析</p><p>4、给出预测结果，回答问题。</p><h4 id="优化类赛题建模">优化类赛题建模</h4><p>优化类问题通常求解目标一般用“最优”方式，使用或分配有限资源，将问题改换为数学模型要求确定问题的决策变量。构造合理的目标函数和定自变量允许的取值范围，常用<strong>不等式表示</strong></p><h4 id="对模型的改进">对模型的改进</h4><p>有的话非常优秀。对算法进行改进时难度较大的情况，会提高模型创新度，从而提得分。原则 改是为了更适用。</p><p><strong>一般对模型的改进出发点主要包括：</strong></p><p>1、原有模型有固有缺陷，影响效果</p><p>2、原有模型对现有问题不适用</p><p>3、原有模型太简单，内容较少</p><p><strong>对模型进行改进需要再论文撰写时：</strong></p><p>1、为什么要改进，改进的理由</p><p>2、如何进行改进的，改进的具体过程</p><p>3、改进效果如何；与未改进前做对比</p><p><strong>伪代码！！！</strong></p><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5rAk6AALhZlzJksPve.PkE8plC69iGWt9F24rV2d9DVnyOkMkgHSsxuqPrUEd6NIfB3Zk7hMGJFsRqKaMGS5SOE!/b&amp;bo=vgOFAgAAAAADNyg!&amp;rf=viewer_4" alt=""></p><p>常见的集成方案：</p><ul><li>基于层次分析-熵权法的综合评价模型（评价类赛题，定权更准确）</li><li>基于灰色-BP神经网络的综合预测模型（预测类赛题，小样本的预测）</li><li>基于遗传算法的BP神经网络优化算法（评价类、预测类赛题，精度更高）</li><li>基于小波变换-神经网络的预测模型（预测类赛题，大样本预测）</li></ul><h3 id="模型检验">模型检验</h3><p>稳定性与敏感性分析</p><p>统计检验与误差分析</p><p>新旧模型的对比</p><h3 id="模型优缺点评价">模型优缺点评价</h3><p>优点使劲吹，缺点不回避</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">模型思路设计简介实用，效率高</span><br><span class="line">本文建立的模型具有很强创新性</span><br><span class="line">模型的计算结果准确，精度高</span><br><span class="line">模型考虑的系统全面，具有很强实用性</span><br><span class="line">对模型进行了各类检验，稳定性高</span><br><span class="line">模型本身优点</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">受XX因素，未考虑XX情况，影响精度</span><br><span class="line">本文考虑因素较为理想，降低了模型普适性与推广能力</span><br><span class="line">系统考虑了XX因素，导致模型复杂，计算时间长，效率低</span><br><span class="line">模型本身缺点</span><br></pre></td></tr></table></figure><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5s1Dh.U4CSY9LuWe8MVoBG5ZXQkn6gklyVilmxYjOy.w2C7m01aU4o22Ibf*CnJ6PTl0tP66iSKb68JVcWlxKrI!/b&amp;bo=YwSRAgAAAAADR5Y!&amp;rf=viewer_4" alt=""></p><h3 id="参考文献">参考文献</h3><h4 id="引用范围">引用范围</h4><p>公开的资料，图书，期刊，网上的资料。等</p><p>参考文献列表：按正文中的引用次序列出</p><p>图书类：【编号】作者。书名【M】出版地：出版社，出版年</p><p>期刊、杂志类：【编号】作者。论文名【J】。杂志名，出版年，卷期号：起止页码</p><p>网络资料;[编号]作者，资源标题，网址，访问时间（年月日）</p><p>参考文献类型：</p><ul><li>专著【M】</li><li>会议论文集【C】</li><li>报纸文章【N】</li><li>期刊文章【J】</li><li>学位论文【D】</li><li>报告【R】</li><li>标准[S]</li><li>专利【P】</li></ul><p><img src="http://m.qpic.cn/psc?/V546geDp2QZW0L1vGz2K43S5DM3mjCJ4/ruAMsa53pVQWN7FLK88i5s1Dh.U4CSY9LuWe8MVoBG6F76cSUZ0jUyYlwHgjqq6ecMh1OqjpbvdnaedYu6bNbi1zFVFW5CGbHsoZKjk8GkE!/b&amp;bo=iwVdAwAAAAADB*I!&amp;rf=viewer_4" alt=""></p><h1>补充</h1><p>我们转本文，用第三人称。</p><p>灵敏度分析可不做。</p><p>假设（3~5个）。</p><p>模型》》》》》》求解，模型比求解重要。</p><p>参考文献的格式一定要稳健。</p><p>代码和数据可以用图片，降低查重。好看就行，美观</p><p>千万不要参考XX材料。</p><p>正文 20页左右</p><p>数据一定要放到附录！！！！！</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模套餐</title>
      <link href="/2022/09/08/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%A5%97%E9%A4%90/"/>
      <url>/2022/09/08/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%A5%97%E9%A4%90/</url>
      
        <content type="html"><![CDATA[<p>自己总结的一套数学建模套餐，可以帮助想入门数学建模的小伙伴们。</p><h1>数学建模套餐</h1><h2 id="一、相关资源">一、相关资源</h2><p><strong>网站类：</strong></p><p>1、<a href="http://www.mcm.edu.cn/">全国大学生数学建模竞赛 (mcm.edu.cn)</a></p><p>2、<a href="https://www.bilibili.com/video/BV1DW411s7wi?share_source=copy_web">清风建模bilibili</a></p><p>3、<a href="https://www.bilibili.com/video/BV1kC4y1a7Ee?spm_id_from=333.788.top_right_bar_window_custom_collection.content.click">【零基础教程】老哥：数学建模算法、编程、写作和获奖指南全流程培训！_哔哩哔哩_bilibili</a></p><p>4、<a href="http://www.zhanshaoyi.com/">我爱分享网 | 分享知识，收获智慧 (zhanshaoyi.com)</a>(下载软件一个比较好的网站)</p><p>5、<a href="https://www.spsspro.com/">SPASS</a>（数据分析网站，上面也有一些基础算法的讲解）</p><p>6、简书/CSDN/知乎/谷歌（搜索资料类，拒绝百度！！！）</p><p>7、维基百科</p><p><strong>导航大全（收藏一个顶十个）</strong></p><p>1、科塔学术导航 - 最专业、准确、及时和全面的科研与学术资源导航平台 (<a href="http://sciping.com">sciping.com</a>)</p><p>2、编程导航 | 专注全网优质编程网址、优质编程学习资源分享。 (<a href="http://24kdh.cn">24kdh.cn</a>)</p><p>3、数字生活指南·社区 (guidebook.top)</p><p>4、国家部门导航 (<a href="http://dajiadaohang.com">dajiadaohang.com</a>)</p><p>5、大数据导航1 （bigdata.ren）</p><p>6、大数据工具导航（<a href="http://Hao.199it.com">Hao.199it.com</a>）</p><p>7、程序员的工具箱 （<a href="http://tool.lu">tool.lu</a>)</p><p><strong>数据收集</strong></p><p>1、全球数据库（<a href="http://ceicdata.com">ceicdata.com</a>）</p><p>2、国家数据 (<a href="http://stats.gov.cn">stats.gov.cn</a>)</p><p>3、CEIC：195个国家400多万个时间序列的数据源（<a href="http://ceicdata.com">ceicdata.com</a>）</p><p>4、搜数网 (<a href="http://soshoo.com">soshoo.com</a>)</p><p>5、中国互联网络信息中心 (<a href="http://cnnic.net.cn">cnnic.net.cn</a>)</p><p>6、全国地理信息资源目录服务系统 (<a href="http://webmap.cn">webmap.cn</a>)</p><p><strong>文献资料</strong></p><p>国内（免费的网站）</p><p>1、全国图书馆参考咨询联盟 (<a href="http://superlib.net">superlib.net</a>)</p><p>2、国家哲学社会科学文献中心 (<a href="http://ncpssd.org">ncpssd.org</a>)</p><p>3、中国科技论文在线-科技论文，开放存取 (<a href="http://paper.edu.cn">paper.edu.cn</a>)</p><p>4、上海科技创新资源数据中心 (<a href="http://sstir.cn">sstir.cn</a>)</p><p>国内（付费的网站）</p><p>1、中国知网 (<a href="http://cnki.net">cnki.net</a>)</p><p>2、万方数据知识服务平台 (<a href="http://wanfangdata.com.cn">wanfangdata.com.cn</a>)</p><p>国外（前4个免费）</p><p>1、免费的科技学术期刊（<a href="http://doaj.org">doaj.org</a>）</p><p>2、美国教育部赞助的网站，收录教育相关的期刊文献（<a href="http://eric.ed.gov">eric.ed.gov</a>）</p><p>3、7000余种期刊杂志免费获取（<a href="http://freefullpdf.com">freefullpdf.com</a>）</p><p>4、在线科学、技术、医学领域学术资源平台（<a href="http://link.springer.com">link.springer.com</a>）</p><p>5、Science | AAAS（<a href="http://www.science.org">www.science.org</a>）</p><p>6、Elsevier爱斯维尔数据库（<a href="http://www.sciencedirect.com">www.sciencedirect.com</a>）</p><p>7、国外医学常用数据库（<a href="http://www.wolterskluwer.com/en/solutions/ovid%EF%BC%89">www.wolterskluwer.com/en/solutions/ovid）</a></p><p><strong>书籍类：</strong></p><p>1、姜启源的《数学模型》</p><p>个人觉得对新手很友好，适合于大学生学习。也是数学系学数学模型的教材书。但是对数学建模只能起一个知识框架的作用。</p><p><img src="https://pic3.zhimg.com/v2-5c8b5f55fc66caed416f74e5895d5ce3_720w.jpg?source=b555e01d" alt="img"></p><p>(这本我也有，配套pdf也在)</p><p>2、卓金武的《MATLAB在数学建模中的应用》；</p><p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.a57b79e3f85431a44eb8b1fb3bf895ad?rik=ZwwZl8Ysq6Zi4w&amp;riu=http%3a%2f%2fbooklibimg.kfzimg.com%2fdata%2fbook_lib_img_v2%2fisbn%2f0%2f93cd%2f93cd28691a74c99437d512aef5bb093c_0_0_0_0.jpg&amp;ehk=%2fDXZ%2fSyBLCvb7d2n1XGghB5gD6HGEi8U5QeOBxcFg%2bI%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt=""></p><p>(这本我也有，配套pdf也在)</p><p>3、《数学建模》</p><p><img src="https://img.alicdn.com/imgextra/i1/1049653664/TB1sK4NLXXXXXXxXXXXXXXXXXXX_!!0-item_pic.jpg_430x430q90.jpg" alt=""></p><p>(巧了，这本我也有！)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">书籍这类实在太多太多了，有一说一，现在互联网时代，查东西不如网上查来得快，但是书籍能给你带来强烈的安全感，喜欢书籍学习的可以入手以下几本书。</span><br></pre></td></tr></table></figure><p><strong>软件类：</strong></p><p>1、python：Anaconda</p><ul><li>Anaconda：python大礼包</li><li>jupyter notebook：实时操作比较适合数学建模</li><li>matplotlib:画图</li><li>pandas,numpy:数值分析，数值处理</li><li>tensorflow：深度学习框架</li><li>split - learn：机器学习神器</li></ul><p>2、matlab2020b：</p><p><a href="http://www.zhanshaoyi.com/15501.html">MATLAB 2020b中文破解版下载(附安装教程) | 我爱分享网 (zhanshaoyi.com)</a></p><p>3、lingo18.0破解版</p><p><a href="http://www.zhanshaoyi.com/14739.html">LINGO 18.0破解版64位下载|兼容WIN10 | 我爱分享网 (zhanshaoyi.com)</a></p><p>4、Typora（markdown编辑器）</p><p>[<a href="http://www.zhanshaoyi.com/11364.html">文本编辑器Typora中文版32/64位下载|兼容WIN10 | 我爱分享网 (zhanshaoyi.com)</a>](<a href="http://www.zhanshaoyi.com/11364.html">http://www.zhanshaoyi.com/11364.html</a>)</p><p>5、LateX</p><p><a href="https://blog.csdn.net/muzhicihe/article/details/80326090">LaTeX的下载安装及简易使用</a></p><p><a href="https://blog.csdn.net/SleepingEmperor/article/details/80394018">(115条消息) Win环境下LaTeX安装_SleepingEmperor的博客-CSDN博客_latex安装</a></p><h2 id="二、学习路线">二、学习路线</h2><p><a href="https://geminiplanet.cn/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/">数学建模算法汇总 | GeminiPlanet</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">学习算法我觉得最重要的就是，你看到题目就能知道，woc，这道题用这个很合适。</span><br><span class="line">然后</span><br><span class="line">建模手根据数据提调整好该用啥，怎么用，把代码手搞明白。</span><br><span class="line">代码手掏出写好了的框架，测试建模效果如何。</span><br><span class="line">论文手则可以准备算法的原公式和数据解释表。</span><br><span class="line">这样大家都能很快的上手，不会浪费时间。</span><br></pre></td></tr></table></figure><h2 id="三、学习思路">三、学习思路</h2><p>大一大二小菜鸟，只能冲冲C题D题，也就是偏数据分析或者评价模型的题目。</p><p>有时候图画的好，语文功底好，就能冲个小省奖。至少也能把论文交上去，也算参与参与了。</p><p>计算机专业有个优势就是学python的人不少，而机电或信工专业，有大量人会matlab语法，他们可以成为代码手的中间力量。</p><p>但是无论如何，作为数学建模的参赛选手，你必须对基本的数学模型有一定的了解，这样你们才能在比赛前期，能有足够的能力讨论题目改用什么方法去做，论文的语言是否准确。</p><p>那怎么做到学习基本的数学模型呢，个人有个人的招数，不过我们不是数学专业的，我们学习的数学知识容易遗忘，我这边建议用做笔记的形式去学习。在比赛的时候，掏出自己的笔记，能够帮你快速进入状态。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex数学公式学习</title>
      <link href="/2022/09/08/Latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/09/08/Latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>Latex数学公式学习</h1><h2 id="前言">前言</h2><ol><li>官方文档（英文）：<br>传送门：<a href="http://www.ctex.org/documents/packages/math/index.htm"><em>官方文档</em></a><br>网址：<code>http://www.ctex.org/documents/packages/math/index.htm</code></li><li>中文文档：<br>传送门：<a href="https://www.latexlive.com/help"><em>中文教程</em></a><br>网址：<code>https://www.latexlive.com/help</code></li><li>技巧：使用<a href="https://www.latexlive.com/"><em>在线LaTeX公式编辑器</em></a>，来生成LaTeX公式代码，然后复制到LaTeX编辑器（或Markdown编辑器）中，并在两边加上<code>$</code>或<code>$$</code>即可。<br>在线LaTeX公式编辑器网址：<code>https://www.latexlive.com/</code></li><li>插入公式<br>左对齐公式（行中公式）：<code>$数学公式$</code><br>居中公式（独立公式）：<code>$$数学公式$$</code><br>注意：使用<code>$</code>行中公式时，<code>数学公式</code>与<code>$</code>连接处不要有空格，否则公式不会显示；使用<code>$$</code>居中公式时，<code>数学公式</code>与<code>$$</code>连接处可以有空格。即<code>$ 数学公式 $</code> 不显示公式。</li><li>注释：<code>%</code>为单行注释。</li></ol><h2 id="注意事项">注意事项</h2><ol><li>使用<code>$</code>，即行中公式时，<code>数学公式</code>与<code>$</code>连接处不要有空格，否则公式不会显示。即<code>$ 数学公式 $</code> 不显示公式。</li><li>使用<code>$$</code>，即居中公式时，<code>数学公式</code>与<code>$$</code>连接处可以有空格。</li><li>使用<code>$$</code>时，上方要空一行。</li><li><code>=</code>不要单独打一行，否则可能会出错。</li><li><code>+ - * / = ( ) | , . '</code>等符号直接在<code>$</code>或<code>$$</code>之间输入即可识别。</li></ol><h2 id="插入公式">插入公式</h2><p>左对齐公式（行中公式）：<code>$数学公式$</code><br>居中公式（独立公式）：<code>$$数学公式$$</code></p><p><strong>注意：</strong> 注意事项请参照目录章节中的<strong>注意事项</strong>子章节。</p><p>左对齐例子：<code>$x+y=z$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x + y =z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></p><p>居中对齐例子：<code>$$x+y=z$$</code>($$后回车)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x+y=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></span></p><h2 id="注释">注释</h2><p><code>%</code>为单行注释。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">%第一个极限</span><br><span class="line">\lim_&#123;n \to +\infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;</span><br><span class="line">\quad %空一格</span><br><span class="line">and %英文单词and</span><br><span class="line">\quad %空一格</span><br><span class="line">%第2个极限</span><br><span class="line">\lim_&#123;x\leftarrow&#123;example&#125; \infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mn>1</mn><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>←</mo><mrow><mi>e</mi><mi>x</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mn>1</mn><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">%第一个极限\lim_{n \to +\infty} \frac{1}{n(n+1)}\quad %空一格and %英文单词and\quad %空一格%第2个极限\lim_{x\leftarrow{example} \infty} \frac{1}{n(n+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7583em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">←</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal mtight">e</span></span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="编号">编号</h2><p>在公式末尾使用<code>\tag&#123;编号&#125;</code>来实现公式手动编号，大括号内的内容可以自定义。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x+y=z</span><br><span class="line">\tag&#123;1&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x+y=z\tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><h2 id="转义字符">转义字符</h2><p>在公式中输入<code>_</code>或<code>^</code>等符号时，会产生上下标功能，若想输入符号本身则需要转义字符<code>\</code>，写法为<code>\+字符</code>，示例如下：</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">% \ 为转义字符</span><br><span class="line">home\_name=honor</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>o</mi><mi>m</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>=</mo><mi>h</mi><mi>o</mi><mi>n</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">% \ 为转义字符home\_name=honor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">nam</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span></span></span></span></span></p><h2 id="换行与对齐">换行与对齐</h2><h3 id="换行">换行</h3><p>使用<code>\\</code>进行换行，最后一行的<code>\\</code>可写可不写。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f(x)=2x+1 \\</span><br><span class="line">=2+1 \\</span><br><span class="line">=3</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>2</mn><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">f(x)=2x+1 \\=2+1 \\=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></span></p><h3 id="对齐">对齐</h3><p>使用<code>\begin&#123;aligned&#125;</code>进行对齐，<code>&amp;</code>表示对齐位置，一般都在<code>=</code>前面。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">f(x)&amp;=2x+1 \\</span><br><span class="line">&amp;=2+1 \\</span><br><span class="line">&amp;=3</span><br><span class="line">\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>2</mn><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}f(x)&amp;=2x+1 \\&amp;=2+1 \\&amp;=3\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5em;vertical-align:-2em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="字体">字体</h2><p>若要对公式的某一部分字符进行字体转换，可以用 <code>\字体&#123;需转换的字符&#125;</code> 命令，其中 <code>\字体</code> 部分可以参照下表选择合适的字体。一般情况下，公式默认为意大利体，直体为罗马体 <code>\rm</code>。一般里面一层大括号可省略。</p><p>注意：在LaTeX编辑器中，修改公式字体时，需要引入宏包<code>\usepackage&#123;amsmath&#125;</code>和<code>\usepackage&#123;amsfonts&#125;</code>，且在公式中输入。</p><table><thead><tr><th style="text-align:center">输入</th><th style="text-align:center">说明</th><th style="text-align:center">显示</th></tr></thead><tbody><tr><td style="text-align:center">\mathit 或 \it</td><td style="text-align:center">斜体（默认，意大利体）</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">\mathit{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathit">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathrm 或 \rm</td><td style="text-align:center">罗马体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">D</mi></mrow><annotation encoding="application/x-tex">\mathrm{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathrm">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathbf 或 \bf</td><td style="text-align:center">粗体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">D</mi></mrow><annotation encoding="application/x-tex">\mathbf{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord mathbf">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathbb</td><td style="text-align:center">黑板粗体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">D</mi></mrow><annotation encoding="application/x-tex">\mathbb{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathsf 或 \sf</td><td style="text-align:center">等线体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">D</mi></mrow><annotation encoding="application/x-tex">\mathsf{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathsf">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathcal</td><td style="text-align:center">花体</td><td style="text-align:center">$\mathcal{D} $</td></tr><tr><td style="text-align:center">\mathscr</td><td style="text-align:center">手写体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">D</mi></mrow><annotation encoding="application/x-tex">\mathscr{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7em;"></span><span class="mord mathscr" style="margin-right:0.09371em;">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathtt</td><td style="text-align:center">打字机体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="monospace">D</mi></mrow><annotation encoding="application/x-tex">\mathtt{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6111em;"></span><span class="mord mathtt">D</span></span></span></span></td></tr><tr><td style="text-align:center">\mathfrak</td><td style="text-align:center">哥特体</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">D</mi></mrow><annotation encoding="application/x-tex">\mathfrak{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6914em;"></span><span class="mord mathfrak">D</span></span></span></span></td></tr><tr><td style="text-align:center">\boldsymbol</td><td style="text-align:center">黑体</td><td style="text-align:center">D</td></tr></tbody></table><p>例子：<br><code>$$A+\mathbb&#123;BC&#125;+D$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>+</mo><mrow><mi mathvariant="double-struck">B</mi><mi mathvariant="double-struck">C</mi></mrow><mo>+</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">A+\mathbb{BC}+D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7722em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathbb">BC</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span></span></p><h2 id="空格">空格</h2><p><code>\quad</code>：空一格<br><code>\qquad</code>：空两格</p><p>例子：<br><code>$$x \quad y \qquad z$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mspace width="1em"/><mi>y</mi><mspace width="2em"/><mi>z</mi></mrow><annotation encoding="application/x-tex">x \quad y \qquad z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></span></p><h2 id="上下标">上下标</h2><p><code>^</code>表示上标， <code>_</code> 表示下标。如果上下标的内容多于一个字符，需要用 <code>&#123;&#125;</code>将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。</p><p>例子：<br><code>$$x^&#123;y^z_w&#125;=(1+&#123;\rm e&#125;^x)^&#123;-2xy^w&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><msubsup><mi>y</mi><mi>w</mi><mi>z</mi></msubsup></msup><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi mathvariant="normal">e</mi><mi>x</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>2</mn><mi>x</mi><msup><mi>y</mi><mi>w</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">x^{y^z_w}=(1+{\rm e}^x)^{-2xy^w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.18em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">e</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">x</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>上下标同时使用例子：<br><code>$$f(x) = x_1^2 + &#123;x&#125;_&#123;2&#125;^&#123;2&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">f(x) = x_1^2 + x_2^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="括号">括号</h2><p><code>()、[]、|</code>表示符号本身，使用 <code>\&#123;\&#125;</code> 来表示 {}。当要显示大号的括号或分隔符时，要用 <code>\left</code> 和 <code>\right</code> 命令，如<code>$\left(表达式\right)$</code>，大号的括号详见下一节）。</p><p>一些特殊的括号：</p><table><thead><tr><th style="text-align:center">特殊括号</th><th style="text-align:center">输入</th><th style="text-align:center">显示</th></tr></thead><tbody><tr><td style="text-align:center">尖括号</td><td style="text-align:center"><code> $\langle表达式\rangle$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mtext>表达式</mtext><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle表达式\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord cjk_fallback">表达式</span><span class="mclose">⟩</span></span></span></span></td></tr><tr><td style="text-align:center">向上取整</td><td style="text-align:center"><code> $\lceil表达式\rceil$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mtext>表达式</mtext><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil表达式\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord cjk_fallback">表达式</span><span class="mclose">⌉</span></span></span></span></td></tr><tr><td style="text-align:center">向下取整</td><td style="text-align:center"><code> $\lfloor表达式\rfloor$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mtext>表达式</mtext><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor表达式\rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord cjk_fallback">表达式</span><span class="mclose">⌋</span></span></span></span></td></tr><tr><td style="text-align:center">大括号</td><td style="text-align:center"><code> $\lbrace表达式\rbrace$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mtext>表达式</mtext><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\lbrace表达式\rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord cjk_fallback">表达式</span><span class="mclose">}</span></span></span></span></td></tr></tbody></table><p>例子：</p><p><code> $$f(x,y,z) = 3y^2z \left( 3+\frac&#123;7x+5&#125;&#123;1+y^2&#125; \right)$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><msup><mi>y</mi><mn>2</mn></msup><mi>z</mi><mrow><mo fence="true">(</mo><mn>3</mn><mo>+</mo><mfrac><mrow><mn>7</mn><mi>x</mi><mo>+</mo><mn>5</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><h2 id="大括号">大括号</h2><h4 id="方法1">方法1</h4><p>使用 <code>\left</code>和 <code>\right</code>来创建自动匹配高度的括号，包含 (圆括号)、[方括号]、|绝对值|。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f\left(</span><br><span class="line">   \left[</span><br><span class="line">     \frac&#123;</span><br><span class="line">       1+\left\&#123;x,y\right\&#125;</span><br><span class="line">     &#125;&#123;</span><br><span class="line">       \left(</span><br><span class="line">          \frac&#123;x&#125;&#123;y&#125;+\frac&#123;y&#125;&#123;x&#125;</span><br><span class="line">       \right)</span><br><span class="line">       \left(u+1\right)</span><br><span class="line">     &#125;+a</span><br><span class="line">   \right]^&#123;3/2&#125;</span><br><span class="line">\right)</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msup><mrow><mo fence="true">[</mo><mfrac><mrow><mn>1</mn><mo>+</mo><mrow><mo fence="true">{</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo fence="true">}</mo></mrow></mrow><mrow><mrow><mo fence="true">(</mo><mfrac><mi>x</mi><mi>y</mi></mfrac><mo>+</mo><mfrac><mi>y</mi><mi>x</mi></mfrac><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mi>u</mi><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow></mfrac><mo>+</mo><mi>a</mi><mo fence="true">]</mo></mrow><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f\left(   \left[     \frac{       1+\left\{x,y\right\}     }{       \left(          \frac{x}{y}+\frac{y}{x}       \right)       \left(u+1\right)     }+a   \right]^{3/2}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.2em;vertical-align:-1.85em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.875em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='4.200em' viewBox='0 0 875 4200'><path d='M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,-36,557 l0,684c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189l0,-692c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.38em;"><span class="pstrut" style="height:3.15em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.827em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose delimcenter" style="top:0em;">}</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.3279em;"><span style="top:-4.5029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/2</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-4.35em;"><span class="pstrut" style="height:6.2em;"></span><span style="width:0.875em;height:4.200em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='4.200em' viewBox='0 0 875 4200'><path d='M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,609c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558l0,-744c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>有时候要用<code>\left.</code>或<code>\right.</code>进行匹配而不显示本身。</p><p>例子：<br><code>$$\left. \frac&#123; &#123;\rm d&#125;u&#125;&#123; &#123;\rm d&#125;x&#125; \right| _&#123;x=0&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mrow><mfrac><mrow><mi mathvariant="normal">d</mi><mi>u</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo fence="true">∣</mo></mrow><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\left. \frac{ {\rm d}u}{ {\rm d}x} \right| _{x=0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4497em;vertical-align:-0.9997em;"></span><span class="minner"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span></span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span></span><span class="mord mathnormal">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='2.400em' viewBox='0 0 333 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.5486em;"><span style="top:-1.7003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9997em;"><span></span></span></span></span></span></span></span></span></span></span></p><h4 id="方法2">方法2</h4><p>使用<code>\big</code>和<code>\bigg</code>来创建逐级变大的括号，包含 (圆括号)、[方括号]、|绝对值|。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$\bigg( \big( ( ) \big) \bigg)$$</span><br><span class="line">$$\bigg[ \big[ [ ] \big] \bigg]$$</span><br><span class="line">$$\bigg| \big| | | \big| \bigg|$$</span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">(</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">)</mo></mrow><annotation encoding="application/x-tex">\bigg( \big( ( ) \big) \bigg)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="delimsizing size3">(</span></span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mopen">(</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord"><span class="delimsizing size3">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">[</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">[</mo><mo stretchy="false">[</mo><mo stretchy="false">]</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">]</mo><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">]</mo></mrow><annotation encoding="application/x-tex">\bigg[ \big[ [ ] \big] \bigg]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="delimsizing size3">[</span></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mopen">[</span><span class="mclose">]</span><span class="mord"><span class="delimsizing size1">]</span></span><span class="mord"><span class="delimsizing size3">]</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">∣</mo><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">∣</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">∣</mo><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">∣</mo></mrow><annotation encoding="application/x-tex">\bigg| \big| | | \big| \bigg|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='2.400em' viewBox='0 0 333 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='1.200em' viewBox='0 0 333 1200'><path d='M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='1.200em' viewBox='0 0 333 1200'><path d='M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='2.400em' viewBox='0 0 333 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="分式">分式</h2><p>通常使用 <code>\frac &#123;分子&#125; &#123;分母&#125;</code> 命令产生一个分式，分式可嵌套。</p><p>便捷情况可直接输入 <code>\frac ab</code>来快速生成一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>a</mi><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>如果分式很复杂，亦可使用 <code>分子 \over 分母</code> 命令，此时分式仅有一层。</p><p>例子：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo>=</mo><mfrac><mrow><mi>X</mi><mo>−</mo><msub><mi>X</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>X</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>X</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">X = \frac {X- X_{min}} {X_{max} - X_{min}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1963em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">w = \frac {(\sum^{n}_{i=1}{a_ix_i)^2}}{\sum^n_{i=1}{(x_i-\overline{x})^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4978em;vertical-align:-0.994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5038em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><code> $$\frac&#123;a-1&#125;&#123;b-1&#125; \quad and \quad &#123;a+1\over b+1&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>a</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>b</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mfrac><mrow><mi>a</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>b</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{a-1}{b-1} \quad and \quad {a+1\over b+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><h2 id="根式">根式</h2><p><code>\sqrt [根指数] &#123;被开方数&#125; </code></p><p>注意：缺省根指数时为2</p><p>例子：</p><p><code> $$\sqrt&#123;2&#125; \quad and \quad \sqrt[n]&#123;x+y&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msqrt><mn>2</mn></msqrt><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mroot><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><mi>n</mi></mroot></mrow><annotation encoding="application/x-tex">\sqrt{2} \quad and \quad \sqrt[n]{x+y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1678em;vertical-align:-0.2117em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9561em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.9161em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0839em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5853em;"><span style="top:-2.87em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8283em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.7883em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2117em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="对数">对数</h2><p><code> \log_&#123;对数底数&#125;&#123;表达式&#125;</code></p><p>表达式的大括号可省略</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\log_&#123;x+y&#125;&#123;(z+1)&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow></msub><mrow><mo stretchy="false">(</mo><mi>z</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\log_{x+y}{(z+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1302em;vertical-align:-0.3802em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1642em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3802em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></p><h2 id="省略号">省略号</h2><p>数学公式中常见的省略号有两种，<code>\ldots</code> 表示与文本底线对齐的横向省略号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.123em;"></span><span class="minner">…</span></span></span></span>,<code>\cdots</code></p><p>表示与文本中线对齐的横向省略号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.313em;"></span><span class="minner">⋯</span></span></span></span>,<code>\vdots</code>表示纵向省略号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mrow><annotation encoding="application/x-tex">\vdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.03em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span>,<code>\ddots</code>表示斜向省略号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋱</mo></mrow><annotation encoding="application/x-tex">\ddots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.823em;"></span><span class="minner">⋱</span></span></span></span></p><p>。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$f(x_1,x_2,\underbrace&#123;\ldots&#125;_&#123;\rm ldots&#125; ,x_n) = x_1^2 + x_2^2 + \underbrace&#123;\cdots&#125;_&#123;\rm cdots&#125; + x_n^2$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><munder><munder><mo lspace="0em" rspace="0em">…</mo><mo stretchy="true">⏟</mo></munder><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">s</mi></mrow></munder><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><munder><munder><mo lspace="0em" rspace="0em">⋯</mo><mo stretchy="true">⏟</mo></munder><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">s</mi></mrow></munder><mo>+</mo><msubsup><mi>x</mi><mi>n</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">f(x_1,x_2,\underbrace{\ldots}_{\rm ldots} ,x_n) = x_1^2 + x_2^2 + \underbrace{\cdots}_{\rm cdots} + x_n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0841em;vertical-align:-1.3341em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.123em;"><span style="top:-1.6659em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">ldots</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.123em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3341em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.9174em;vertical-align:-1.3341em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.313em;"><span style="top:-1.6659em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">cdots</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.313em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3341em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="最值">最值</h2><p><code>\max_&#123;下标表达式&#125;&#123;最值表达式&#125;</code>表示最大值，<code>\min_&#123;下标表达式&#125;&#123;最值表达式&#125;</code>表达最小值。<br>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$||x||_\infty=\max_&#123;1\leq i\leq n&#125;&#123;|x_i|&#125;$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∞</mi></msub><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></munder><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mrow><annotation encoding="application/x-tex">||x||_\infty=\max_{1\leq i\leq n}{|x_i|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5728em;vertical-align:-0.8228em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8228em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></span></p><h2 id="方程组和分段函数">方程组和分段函数</h2><h3 id="方程组">方程组</h3><p>方程组有2种方式，分别是<code>\begin&#123;aligned&#125;</code>和<code>\begin&#123;cases&#125;</code>方式，<code>&amp;</code>表示对齐位置，推荐使用<code>\begin&#123;cases&#125;</code>方式，使用方法如下：</p><p><code>\begin&#123;aligned&#125;</code>方式：可以使方程组根据<code>=</code>对齐</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left\&#123;</span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">a+b454545&amp;=2 \\</span><br><span class="line">a-b&amp;=4 \\</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line">\right.</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mn>454545</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mo>−</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\left\{\begin{aligned}a+b454545&amp;=2 \\a-b&amp;=4 \\\end{aligned}\right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">454545</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><code>\begin&#123;cases&#125;</code>方式（推荐）：简便，但无法根据<code>=</code>对齐</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">a+b4545=2 \\</span><br><span class="line">a-b=4 \\</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mn>4545</mn><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>−</mo><mi>b</mi><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}a+b4545=2 \\a-b=4 \\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">4545</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="分段函数">分段函数</h3><p>分段函数可以通过<code>\begin&#123;cases&#125;</code>方式实现，不同的是方程式和条件之间要用<code>&amp;</code>符号隔开。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">y =</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\sin(x)       &amp; x&lt;0 \\</span><br><span class="line">x^2 + 2x +4   &amp; 0 \leq x &lt; 1 \\</span><br><span class="line">x^3           &amp; x \geq 1 \\</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mn>3</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>≥</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">y =\begin{cases}\sin(x)       &amp; x&lt;0 \\x^2 + 2x +4   &amp; 0 \leq x &lt; 1 \\x^3           &amp; x \geq 1 \\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="累加和累乘">累加和累乘</h2><p>使用 <code>\sum_&#123;下标表达式&#125;^&#123;上标表达式&#125;&#123;累加表达式&#125;</code>来输入一个累加。<br>与之类似，使用 <code>\prod \bigcup \bigcap</code>来分别输入累乘、并集和交集。<br>此类符号在行内显示时上下标表达式将会移至右上角和右下角。</p><p>例子：<br><code>$$\sum_&#123;i=1&#125;^n \frac&#123;1&#125;&#123;i^2&#125; \quad and \quad \prod_&#123;i=1&#125;^n \frac&#123;1&#125;&#123;i^2&#125; \quad and \quad \bigcup_&#123;i=1&#125;^&#123;2&#125; R$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><msup><mi>i</mi><mn>2</mn></msup></mfrac><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mn>1</mn><msup><mi>i</mi><mn>2</mn></msup></mfrac><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><munderover><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>2</mn></munderover><mi>R</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n \frac{1}{i^2} \quad and \quad \prod_{i=1}^n \frac{1}{i^2} \quad and \quad \bigcup_{i=1}^{2} R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0788em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">⋃</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></span></p><h2 id="矢量">矢量</h2><p>使用 <code>\vec&#123;矢量&#125;</code>来自动产生一个矢量。<br>也可以使用 <code>\overrightarrow</code>等命令自定义字母上方的符号。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$\vec&#123;a&#125; \cdot \vec&#123;b&#125;=0\$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><mi>b</mi><mo>⃗</mo></mover><mo>=</mo><mn>0</mn><mtext> </mtext></mrow><annotation encoding="application/x-tex">\vec{a} \cdot \vec{b}=0\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9774em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace"> </span></span></span></span></span></p><p>例子：<br><code>$$\overleftarrow&#123;xy&#125; \quad and \quad \overleftrightarrow&#123;xy&#125; \quad and \quad \overrightarrow&#123;xy&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">←</mo></mover><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">↔</mo></mover><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overleftarrow{xy} \quad and \quad \overleftrightarrow{xy} \quad and \quad \overrightarrow{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.147em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.522em;min-width:0.888em;"><span class="halfarrow-left" style="height:0.522em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span><span class="halfarrow-right" style="height:0.522em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9526em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="极限">极限</h2><p><code>\lim_&#123;变量 \to 表达式&#125; 表达式</code><br>如有需求，可以更改 \to 符号至任意符号。</p><p>例子：<br><code>$$\lim_&#123;n \to +\infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125; \quad and \quad \lim_&#123;x\leftarrow&#123;example&#125; \infty&#125; \frac&#123;1&#125;&#123;n(n+1)&#125;$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mn>1</mn><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>x</mi><mo>←</mo><mrow><mi>e</mi><mi>x</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mn>1</mn><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\lim_{n \to +\infty} \frac{1}{n(n+1)} \quad and \quad \lim_{x\leftarrow{example} \infty} \frac{1}{n(n+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7583em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">←</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">am</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal mtight">e</span></span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="导数">导数</h2><h3 id="导数-2">导数</h3><p><code>$&#123;\rm d&#125;x$</code>或<code>$&#123;\text d&#125;x$</code>或<code>$\text&#123;d&#125;x$</code></p><p>$ {\rm d}x<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>或</mtext></mrow><annotation encoding="application/x-tex">或</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">或</span></span></span></span>{\text d}x<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>或</mtext></mrow><annotation encoding="application/x-tex">或</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">或</span></span></span></span>\text{d}x$</p><h3 id="偏导">偏导</h3><p><code>$\frac&#123;\partial y&#125;&#123;\partial x&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial y}{\partial x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2772em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="梯度">梯度</h3><p><code>$\nabla f(x)$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p><h2 id="积分">积分</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\int_积分下限^积分上限 &#123;被积表达式&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例子：<br><code>$$\int_0^1 &#123;x^2&#125; \,&#123;\rm d&#125;x$$</code></p><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><msup><mi>x</mi><mn>2</mn></msup><mtext> </mtext><mi mathvariant="normal">d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_0^1 {x^2} \,{\rm d}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.476em;vertical-align:-0.9119em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.564em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span></span><span class="mord mathnormal">x</span></span></span></span></span></p><h2 id="矩阵">矩阵</h2><h3 id="基础矩阵">基础矩阵</h3><p>使用<code>\begin&#123;matrix&#125;…\end&#123;matrix&#125;</code> 这样的形式来表示矩阵，在<code>\begin</code> 与<code>\end</code> 之间加入矩阵中的元素即可。矩阵的行之间使用<code>\\</code> 分隔，<code>\\</code>表示换行，列之间使用<code>&amp;</code> 分隔，<code>&amp;</code>表示对齐位置。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">1 &amp; x &amp; x^2 \\</span><br><span class="line">1 &amp; y &amp; y^2 \\</span><br><span class="line">1 &amp; z &amp; z^2 \\</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>z</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="带括号的矩阵">带括号的矩阵</h3><p><strong>使用\left 与\right 表示括号</strong></p><p>如果要对矩阵加括号，可以像上文中提到的一样，使用<code>\left</code> 与<code>\right</code> 配合表示括号符号。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left[</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">1 &amp; x &amp; x^2 \\</span><br><span class="line">1 &amp; y &amp; y^2 \\</span><br><span class="line">1 &amp; z &amp; z^2 \\</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">\right]</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>z</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[\begin{matrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>使用特殊的matrix</strong></p><p>带括号的矩阵也可以使用特殊的<code>matrix</code> 。即替换<code>\begin&#123;matrix&#125;…\end&#123;matrix&#125;</code> 中<code>matrix</code> 为<code>pmatrix</code> ，<code>bmatrix</code> ，<code>Bmatrix</code> ，<code>vmatrix</code> , <code>Vmatrix</code> 。</p><ol><li><p>pmatrix：<code>$\begin&#123;pmatrix&#125;1 &amp; 2 \\ 3 &amp; 4\\ \end&#123;pmatrix&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></p></li><li><p>bmatrix：<code>$\begin&#123;bmatrix&#125;1 &amp; 2 \\ 3 &amp; 4\\ \end&#123;bmatrix&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></p></li><li><p>Bmatrix：<code>$\begin&#123;Bmatrix&#125;1 &amp; 2 \\ 3 &amp; 4\\ \end&#123;Bmatrix&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\begin{Bmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span></span></span></span></p></li><li><p>vmatrix：<code>$\begin&#123;vmatrix&#125;1 &amp; 2 \\ 3 &amp; 4\\ \end&#123;vmatrix&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='2.400em' viewBox='0 0 333 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='2.400em' viewBox='0 0 333 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>Vmatrix：<code>$\begin&#123;Vmatrix&#125;1 &amp; 2 \\ 3 &amp; 4\\ \end&#123;Vmatrix&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">∥</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">∥</mo></mrow><annotation encoding="application/x-tex">\begin{Vmatrix}1 &amp; 2 \\ 3 &amp; 4\\ \end{Vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.556em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.556em' height='2.400em' viewBox='0 0 556 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43zM367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.556em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.556em' height='2.400em' viewBox='0 0 556 2400'><path d='M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43zM367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ol><h2 id="行列式">行列式</h2><p>方法已经在上一节<strong>带括号的矩阵</strong>中有所介绍，此处只写一个例子。</p><p>例子1：使用<code>\left</code> 与<code>\right</code> 表示括号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left|</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">1 &amp; x &amp; x^2 \\</span><br><span class="line">1 &amp; y &amp; y^2 \\</span><br><span class="line">1 &amp; z &amp; z^2 \\</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">\right|</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>z</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\left|\begin{matrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{matrix}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.333em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='3.600em' viewBox='0 0 333 3600'><path d='M145 15 v585 v2400 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-2400 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v2400 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.333em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='3.600em' viewBox='0 0 333 3600'><path d='M145 15 v585 v2400 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-2400 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v2400 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>例子2：使用特殊的<code>matrix</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;vmatrix&#125;</span><br><span class="line">1 &amp; x &amp; x^2 \\</span><br><span class="line">1 &amp; y &amp; y^2 \\</span><br><span class="line">1 &amp; z &amp; z^2 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mn>2</mn></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>z</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix}1 &amp; x &amp; x^2 \\1 &amp; y &amp; y^2 \\1 &amp; z &amp; z^2 \\\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.333em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='3.600em' viewBox='0 0 333 3600'><path d='M145 15 v585 v2400 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-2400 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v2400 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.333em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.333em' height='3.600em' viewBox='0 0 333 3600'><path d='M145 15 v585 v2400 v585 c2.667,10,9.667,15,21,15c10,0,16.667,-5,20,-15 v-585 v-2400 v-585 c-2.667,-10,-9.667,-15,-21,-15c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v2400 v585 h43z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="元素省略的矩阵">元素省略的矩阵</h2><p>可以使用<code>\cdots</code>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.313em;"></span><span class="minner">⋯</span></span></span></span>,<code>\ddots</code>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋱</mo></mrow><annotation encoding="application/x-tex">\ddots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.823em;"></span><span class="minner">⋱</span></span></span></span>,<code>\vdots</code>:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mrow><annotation encoding="application/x-tex">\vdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.03em;"></span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span>,来省略矩阵中的元素。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">1&amp;a_1&amp;a_1^2&amp;\cdots&amp;a_1^n\\</span><br><span class="line">1&amp;a_2&amp;a_2^2&amp;\cdots&amp;a_2^n\\</span><br><span class="line">\vdots&amp;\vdots&amp;\vdots&amp;\ddots&amp;\vdots\\</span><br><span class="line">1&amp;a_m&amp;a_m^2&amp;\cdots&amp;a_m^n\\</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>1</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>1</mn><mi>n</mi></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>2</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mn>2</mn><mi>n</mi></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mi>m</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>m</mi><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>a</mi><mi>m</mi><mi>n</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}1&amp;a_1&amp;a_1^2&amp;\cdots&amp;a_1^n\\1&amp;a_2&amp;a_2^2&amp;\cdots&amp;a_2^n\\\vdots&amp;\vdots&amp;\vdots&amp;\ddots&amp;\vdots\\1&amp;a_m&amp;a_m^2&amp;\cdots&amp;a_m^n\\\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.46em;vertical-align:-2.48em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:7.4em;"></span><span style="width:0.875em;height:5.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='5.400em' viewBox='0 0 875 5400'><path d='M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,-36,557 l0,1884c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189l0,-1892c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.58em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.38em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.98em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.48em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:7.4em;"></span><span style="width:0.875em;height:5.400em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.875em' height='5.400em' viewBox='0 0 875 5400'><path d='M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,1809c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558l0,-1944c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="增广矩阵">增广矩阵</h2><p>增广矩阵需要使用前面的表格中使用到的<code>\begin&#123;array&#125; ... \end&#123;array&#125;</code> 来实现。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\left[  \begin&#123;array&#125;  &#123;c c | c&#125; %这里的c表示数组中元素对其方式：c居中、r右对齐、l左对齐，竖线表示2、3列间插入竖线</span><br><span class="line">1 &amp; 2 &amp; 3 \\</span><br><span class="line">\hline %插入横线，如果去掉\hline就是增广矩阵</span><br><span class="line">4 &amp; 5 &amp; 6</span><br><span class="line">\end&#123;array&#125;  \right]</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnlines="none solid" columnspacing="1em" rowlines="solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[  \begin{array}  {c c | c} %这里的c表示数组中元素对其方式：c居中、r右对齐、l左对齐，竖线表示2、3列间插入竖线1 &amp; 2 &amp; 3 \\\hline %插入横线，如果去掉\hline就是增广矩阵4 &amp; 5 &amp; 6\end{array}  \right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:2.4em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-0.95em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-3.7em;"><span class="pstrut" style="height:3.45em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><h2 id="表格">表格</h2><p>使用<code>\begin&#123;array&#125;&#123;列样式&#125;…\end&#123;array&#125;</code> 这样的形式来创建表格，列样式可以是<code>clr</code> 表示居中，左，右对齐，还可以使用<code>|</code> 表示一条竖线。表格中各行使用<code>\\</code> 分隔，各列使用<code>&amp;</code> 分隔。使用<code>\hline</code> 在本行前加入一条直线。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; \text&#123;Left&#125; &amp; \text&#123;Center&#125; &amp; \text&#123;Right&#125; \\</span><br><span class="line">\hline</span><br><span class="line">1 &amp; 0.24 &amp; 1 &amp; 125 \\</span><br><span class="line">2 &amp; -1 &amp; 189 &amp; -8 \\</span><br><span class="line">3 &amp; -20 &amp; 2000 &amp; 1+10i \\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>显示：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="center left center right" columnlines="solid none none" columnspacing="1em" rowlines="solid none none"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Left</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Center</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Right</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.24</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>125</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>189</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>8</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>20</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2000</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>+</mo><mn>10</mn><mi>i</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c|lcr}n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\\hline1 &amp; 0.24 &amp; 1 &amp; 125 \\2 &amp; -1 &amp; 189 &amp; -8 \\3 &amp; -20 &amp; 2000 &amp; 1+10i \\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:4.65em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:4.8em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-2.15em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Left</span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.24</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">20</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Center</span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">189</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2000</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Right</span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">125</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">8</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">10</span><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-6.1em;"><span class="pstrut" style="height:4.65em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="希腊字母">希腊字母</h2><p>输入 <code>\小写希腊字母英文全称</code>和<code>\首字母大写希腊字母英文全称</code>来分别输入小写和大写希腊字母。<br>对于大写希腊字母与现有字母相同的，直接输入大写字母即可。</p><table><thead><tr><th style="text-align:center">输入</th><th style="text-align:center">显示</th><th style="text-align:center">输入</th><th style="text-align:center">显示</th></tr></thead><tbody><tr><td style="text-align:center"><code>$\alpha$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></td><td style="text-align:center"><code>$A$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\beta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></td><td style="text-align:center"><code>$B$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\gamma$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span></td><td style="text-align:center"><code>$\Gamma$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi></mrow><annotation encoding="application/x-tex">\Gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Γ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\delta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span></td><td style="text-align:center"><code>$\Delta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\epsilon$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></td><td style="text-align:center"><code>$E$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\zeta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ζ</mi></mrow><annotation encoding="application/x-tex">\zeta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span></span></span></span></td><td style="text-align:center"><code>$Z$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\eta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span></td><td style="text-align:center"><code>$H$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\theta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></td><td style="text-align:center"><code>$\Theta$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Θ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\iota$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ι</mi></mrow><annotation encoding="application/x-tex">\iota</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ι</span></span></span></span></td><td style="text-align:center"><code>$I$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\kappa$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>κ</mi></mrow><annotation encoding="application/x-tex">\kappa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">κ</span></span></span></span></td><td style="text-align:center"><code>$K$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\nu$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ν</mi></mrow><annotation encoding="application/x-tex">\nu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.06366em;">ν</span></span></span></span></td><td style="text-align:center"><code>$N$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\mu$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span></span></span></span></td><td style="text-align:center"><code>$M$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\xi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ξ</mi></mrow><annotation encoding="application/x-tex">\xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span></span></span></span></td><td style="text-align:center"><code>$\Xi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ξ</mi></mrow><annotation encoding="application/x-tex">\Xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Ξ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$o$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">o</span></span></span></span></td><td style="text-align:center"><code>$O$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>`</td></tr><tr><td style="text-align:center"><code>$\pi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span></td><td style="text-align:center"><code>$\Pi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Π</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\rho$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span></td><td style="text-align:center"><code>$P$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\sigma$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span></td><td style="text-align:center"><code>$\Sigma$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\tau$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span></td><td style="text-align:center"><code>$T$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\upsilon$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>υ</mi></mrow><annotation encoding="application/x-tex">\upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">υ</span></span></span></span></td><td style="text-align:center"><code>$\Upsilon$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Υ</mi></mrow><annotation encoding="application/x-tex">\Upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Υ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\phi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></td><td style="text-align:center"><code>$\Phi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Φ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\chi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>χ</mi></mrow><annotation encoding="application/x-tex">\chi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">χ</span></span></span></span></td><td style="text-align:center"><code>$X$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\psi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span></span></span></span></td><td style="text-align:center"><code>$\Psi$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ψ</mi></mrow><annotation encoding="application/x-tex">\Psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Ψ</span></span></span></span></td></tr><tr><td style="text-align:center"><code>$\omega$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span></td><td style="text-align:center"><code>$\Omega$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Ω</span></span></span></span></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="黑板粗体（空心字母）">黑板粗体（空心字母）</h2><p>空心字母属于一种字体，官方名称为黑板粗体，仅对大写字母起作用。若使用LaTeX编辑器，使用前需要在导言区引入宏包<code>\usepackage&#123;amsfonts&#125;</code>，并在公式中修改字体。</p><p>使用<code>$\mathbb&#123;字母&#125;$</code>即可使用空心字母，下方示例仅展示3个字母（M，R，L），其它字母同理。</p><table><thead><tr><th style="text-align:center">大写字母</th><th style="text-align:center">公式语言</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">M</mi></mrow><annotation encoding="application/x-tex">\mathbb{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">M</span></span></span></span></td><td style="text-align:center"><code>$\mathbb&#123;M&#125;$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">R</span></span></span></span></td><td style="text-align:center"><code>$\mathbb&#123;R&#125;$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">L</mi></mrow><annotation encoding="application/x-tex">\mathbb{L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">L</span></span></span></span></td><td style="text-align:center"><code>$\mathbb&#123;L&#125;$</code></td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><h2 id="运算符">运算符</h2><p>对于加减除，对应键盘上便可打出来，但是对于乘法，键盘上没有这个符号，所以我们应该输入 <code>\times</code> 来显示一个  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> 号</p><h3 id="关系运算符">关系运算符</h3><table><thead><tr><th style="text-align:center">关系运算符</th><th style="text-align:center">公式语言</th><th style="text-align:center">集合运算符</th><th style="text-align:center">公式语言</th><th style="text-align:center">对数运算符</th><th style="text-align:center">公式语言</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo></mrow><annotation encoding="application/x-tex">\pm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">±</span></span></span></span></td><td style="text-align:center"><code>$\pm$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td style="text-align:center"><code>$\emptyset$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td style="text-align:center"><code>$\log$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span></td><td style="text-align:center"><code>$\times$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span></td><td style="text-align:center"><code>$\in$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span></span></span></span></td><td style="text-align:center"><code>$\lg$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">÷</span></span></span></span></td><td style="text-align:center"><code>$\div$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">∉</mo></mrow><annotation encoding="application/x-tex">\notin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span></span></span></span></td><td style="text-align:center"><code>$\notin$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span></span></span></span></td><td style="text-align:center"><code>$\ln$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∣</mo></mrow><annotation encoding="application/x-tex">\mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">∣</span></span></span></span></td><td style="text-align:center"><code>$\mid$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span></td><td style="text-align:center"><code>$\subset$</code></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∤</mo></mrow><annotation encoding="application/x-tex">\nmid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9925em;vertical-align:-0.2514em;"></span><span class="mrel amsrm">∤</span></span></span></span></td><td style="text-align:center"><code>$\nmid$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊃</mo></mrow><annotation encoding="application/x-tex">\supset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊃</span></span></span></span></td><td style="text-align:center"><code>$\supset$</code></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></td><td style="text-align:center"><code>$\cdot$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⊆</span></span></span></span></td><td style="text-align:center"><code>$\subseteq$</code></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">∘</span></span></span></span></td><td style="text-align:center"><code>$\circ$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊇</mo></mrow><annotation encoding="application/x-tex">\supseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⊇</span></span></span></span></td><td style="text-align:center"><code>$\supseteq$</code></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">\ast</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span></span></span></span></td><td style="text-align:center"><code>$\ast$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∩</span></span></span></span></td><td style="text-align:center"><code>$\cap$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊙</span></span></span></span></td><td style="text-align:center"><code>$\odot$</code>(可加前缀big)</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∪</span></span></span></span></td><td style="text-align:center"><code>$\cup$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding="application/x-tex">\otimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊗</span></span></span></span></td><td style="text-align:center"><code>$\otimes$</code>(可加前缀big)</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span></td><td style="text-align:center"><code>$\vee$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">⊕</span></span></span></span></td><td style="text-align:center"><code>$\oplus$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span></td><td style="text-align:center"><code>$\leq$</code> 或 <code>$\le$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span></td><td style="text-align:center"><code>$\wedge$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span></td><td style="text-align:center"><code>$\geq$</code> 或 <code>$\ge$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊎</mo></mrow><annotation encoding="application/x-tex">\uplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">⊎</span></span></span></span></td><td style="text-align:center"><code>$\uplus$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td style="text-align:center"><code>$\neq$</code> 或 <code>$\ne$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo></mrow><annotation encoding="application/x-tex">\sqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">⊔</span></span></span></span></td><td style="text-align:center"><code>$\sqcup$</code>(可加前缀big)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∼</mo></mrow><annotation encoding="application/x-tex">\sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">∼</span></span></span></span></td><td style="text-align:center"><code>$\sim$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∽</mo></mrow><annotation encoding="application/x-tex">\backsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3779em;"></span><span class="mrel amsrm">∽</span></span></span></span></td><td style="text-align:center"><code>$\backsim$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≃</mo></mrow><annotation encoding="application/x-tex">\simeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≃</span></span></span></span></td><td style="text-align:center"><code>$\simeq$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≅</mo></mrow><annotation encoding="application/x-tex">\cong</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.589em;"></span><span class="mrel">≅</span></span></span></span></td><td style="text-align:center"><code>$\cong$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span></td><td style="text-align:center"><code>$\approx$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span></td><td style="text-align:center"><code>$\equiv$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≪</mo></mrow><annotation encoding="application/x-tex">\ll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≪</span></span></span></span></td><td style="text-align:center"><code>$\ll$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≫</mo></mrow><annotation encoding="application/x-tex">\gg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≫</span></span></span></span></td><td style="text-align:center"><code>$\gg$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span></span></span></span></td><td style="text-align:center"><code>$\sum$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∏</mo></mrow><annotation encoding="application/x-tex">\prod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span></span></span></span></td><td style="text-align:center"><code>$\prod$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∐</mo></mrow><annotation encoding="application/x-tex">\coprod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∐</span></span></span></span></td><td style="text-align:center"><code>$\coprod$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≺</mo></mrow><annotation encoding="application/x-tex">\prec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≺</span></span></span></span></td><td style="text-align:center"><code>$\prec$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪯</mo></mrow><annotation encoding="application/x-tex">\preceq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⪯</span></span></span></span></td><td style="text-align:center"><code>$\preceq$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≻</mo></mrow><annotation encoding="application/x-tex">\succ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≻</span></span></span></span></td><td style="text-align:center"><code>$\succ$</code></td><td style="text-align:center"></td><td style="text-align:center">+,−,∗,/,&lt;,&gt;,=</td><td style="text-align:center"><code>$+, -, *, /, &lt;, &gt;, =$</code></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪰</mo></mrow><annotation encoding="application/x-tex">\succeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⪰</span></span></span></span></td><td style="text-align:center"><code>$\succeq$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>其中，部分公式添加前缀<code>big</code>可以放大，删掉<code>big</code>前缀即为正常大小。</p><p>例如，<code>$\odot$</code>为$ \odot<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，</mtext><mi mathvariant="normal">‘</mi></mrow><annotation encoding="application/x-tex">，`</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">，</span><span class="mord">‘</span></span></span></span>\bigodot$`为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨀</mo></mrow><annotation encoding="application/x-tex">\bigodot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⨀</span></span></span></span>。</p><h3 id="三角运算符">三角运算符</h3><table><thead><tr><th style="text-align:center">三角运算符</th><th style="text-align:center">公式语言</th><th style="text-align:center">微积分运算符</th><th style="text-align:center">公式语言</th><th style="text-align:center">逻辑运算符</th><th style="text-align:center">公式语言</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊥</mi></mrow><annotation encoding="application/x-tex">\bot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">⊥</span></span></span></span></td><td style="text-align:center"><code>$\bot$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">′</mo></mrow><annotation encoding="application/x-tex">\prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">′</span></span></span></span></td><td style="text-align:center"><code>$\prime$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∵</mo></mrow><annotation encoding="application/x-tex">\because</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mrel amsrm">∵</span></span></span></span></td><td style="text-align:center"><code>$\because$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∠</mi></mrow><annotation encoding="application/x-tex">\angle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mord">∠</span></span></span></span></td><td style="text-align:center"><code>$\angle$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span></span></span></span></td><td style="text-align:center"><code>$\int$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo></mrow><annotation encoding="application/x-tex">\therefore</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mrel amsrm">∴</span></span></span></span></td><td style="text-align:center"><code>$\therefore$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">30^\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6741em;"></span><span class="mord">3</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6741em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∘</span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><code>$30^\circ$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∬</mo></mrow><annotation encoding="application/x-tex">\iint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005em;">∬</span></span></span></span></td><td style="text-align:center"><code>$\iint$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">∀</span></span></span></span></td><td style="text-align:center"><code>$\forall$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mop">sin</span></span></span></span></td><td style="text-align:center"><code>$\sin$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∭</mo></mrow><annotation encoding="application/x-tex">\iiint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111em;vertical-align:-0.306em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005em;">∭</span></span></span></span></td><td style="text-align:center"><code>$\iiint$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">∃</span></span></span></span></td><td style="text-align:center"><code>$\exists$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cos</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">cos</span></span></span></span></td><td style="text-align:center"><code>$\cos$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∮</mo></mrow><annotation encoding="application/x-tex">\oint</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.3061em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∮</span></span></span></span></td><td style="text-align:center"><code>$\oint$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo></mrow><annotation encoding="application/x-tex">\not=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span></td><td style="text-align:center"><code>$\not=$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>tan</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\tan</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">tan</span></span></span></span></td><td style="text-align:center"><code>$\tan$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lim</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\lim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">lim</span></span></span></span></td><td style="text-align:center"><code>$\lim$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;̸</mo></mrow><annotation encoding="application/x-tex">\not&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span></span></span></span></td><td style="text-align:center"><code>$\not&gt;$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>cot</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\cot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mop">cot</span></span></span></span></td><td style="text-align:center"><code>$\cot$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></td><td style="text-align:center"><code>$\infty$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊄</mo></mrow><annotation encoding="application/x-tex">\not\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span></td><td style="text-align:center"><code>$\not\subset$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sec</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\sec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">sec</span></span></span></span></td><td style="text-align:center"><code>$\sec$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∇</mi></mrow><annotation encoding="application/x-tex">\nabla</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∇</span></span></span></span></td><td style="text-align:center"><code>$\nabla$</code></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span></td><td style="text-align:center"><code>$\neg$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>csc</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\csc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mop">csc</span></span></span></span></td><td style="text-align:center"><code>$\csc$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span></td><td style="text-align:center"><code>$\approx$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>△</mo></mrow><annotation encoding="application/x-tex">\bigtriangleup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">△</span></span></span></span></td><td style="text-align:center"><code>$\bigtriangleup$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▽</mo></mrow><annotation encoding="application/x-tex">\bigtriangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">▽</span></span></span></span></td><td style="text-align:center"><code>$\bigtriangledown$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◃</mo></mrow><annotation encoding="application/x-tex">\triangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">◃</span></span></span></span></td><td style="text-align:center"><code>$\triangleleft$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▹</mo></mrow><annotation encoding="application/x-tex">\triangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">▹</span></span></span></span></td><td style="text-align:center"><code>$\triangleright$</code></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="箭头运算符">箭头运算符</h3><table><thead><tr><th style="text-align:center">箭头符号</th><th style="text-align:center">公式语言</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↑</span></span></span></span></td><td style="text-align:center"><code>$\uparrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↓</span></span></span></span></td><td style="text-align:center"><code>$\downarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↕</mo></mrow><annotation encoding="application/x-tex">\updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">↕</span></span></span></span></td><td style="text-align:center"><code>$\updownarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇑</mo></mrow><annotation encoding="application/x-tex">\Uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">⇑</span></span></span></span></td><td style="text-align:center"><code>$\Uparrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇓</mo></mrow><annotation encoding="application/x-tex">\Downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">⇓</span></span></span></span></td><td style="text-align:center"><code>$\Downarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding="application/x-tex">\Updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">⇕</span></span></span></span></td><td style="text-align:center"><code>$\Updownarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span></td><td style="text-align:center"><code>$\rightarrow$</code> 或 <code>$\to$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span></td><td style="text-align:center"><code>$\leftarrow$</code> 或 <code>$\gets$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↔</span></span></span></span></td><td style="text-align:center"><code>$\leftrightarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇒</span></span></span></span></td><td style="text-align:center"><code>$\Rightarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇐</mo></mrow><annotation encoding="application/x-tex">\Leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇐</span></span></span></span></td><td style="text-align:center"><code>$\Leftarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span></span></span></span></td><td style="text-align:center"><code>$\Leftrightarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟶</mo></mrow><annotation encoding="application/x-tex">\longrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟶</span></span></span></span></td><td style="text-align:center"><code>$\longrightarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟵</mo></mrow><annotation encoding="application/x-tex">\longleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟵</span></span></span></span></td><td style="text-align:center"><code>$\longleftarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟹</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span></span></span></span></td><td style="text-align:center"><code>$\Longrightarrow$</code> 或 <code>$\implies$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟸</mo></mrow><annotation encoding="application/x-tex">\Longleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟸</span></span></span></span></td><td style="text-align:center"><code>$\Longleftarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟺</mo></mrow><annotation encoding="application/x-tex">\Longleftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟺</span></span></span></span></td><td style="text-align:center"><code>$\Longleftrightarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇀</mo></mrow><annotation encoding="application/x-tex">\rightharpoonup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇀</span></span></span></span></td><td style="text-align:center"><code>$\rightharpoonup$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↼</mo></mrow><annotation encoding="application/x-tex">\leftharpoonup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↼</span></span></span></span></td><td style="text-align:center"><code>$\leftharpoonup$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇁</mo></mrow><annotation encoding="application/x-tex">\rightharpoondown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇁</span></span></span></span></td><td style="text-align:center"><code>$\rightharpoondown$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↽</mo></mrow><annotation encoding="application/x-tex">\leftharpoondown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↽</span></span></span></span></td><td style="text-align:center"><code>$\leftharpoondown$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↙</mo></mrow><annotation encoding="application/x-tex">\swarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↙</span></span></span></span></td><td style="text-align:center"><code>$\swarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↗</mo></mrow><annotation encoding="application/x-tex">\nearrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↗</span></span></span></span></td><td style="text-align:center"><code>$\nearrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↖</mo></mrow><annotation encoding="application/x-tex">\nwarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↖</span></span></span></span></td><td style="text-align:center"><code>$\nwarrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↘</mo></mrow><annotation encoding="application/x-tex">\searrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel">↘</span></span></span></span></td><td style="text-align:center"><code>$\searrow$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↦</mo></mrow><annotation encoding="application/x-tex">\mapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">↦</span></span></span></span></td><td style="text-align:center"><code>$\mapsto$</code></td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟼</mo></mrow><annotation encoding="application/x-tex">\longmapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟼</span></span></span></span></td><td style="text-align:center"><code>$\longmapsto$</code></td></tr></tbody></table><h2 id="离散数学符号">离散数学符号</h2><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">公式</th><th style="text-align:center">名称</th></tr></thead><tbody><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">¬</span></span></span></span></td><td style="text-align:center"><code>$\neg$</code></td><td style="text-align:center">非</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∧</span></span></span></span></td><td style="text-align:center"><code>$\wedge$</code></td><td style="text-align:center">合取，且</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∨</span></span></span></span></td><td style="text-align:center"><code>$\vee$</code></td><td style="text-align:center">析取，或</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span></td><td style="text-align:center"><code>$\rightarrow$</code></td><td style="text-align:center">充分条件</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span></td><td style="text-align:center"><code>$\leftarrow$</code></td><td style="text-align:center">必要条件</td></tr><tr><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">↔</span></span></span></span></td><td style="text-align:center"><code>$\leftrightarrow$</code></td><td style="text-align:center">充要条件</td></tr></tbody></table><h2 id="戴帽符号（各种帽子）">戴帽符号（各种帽子）</h2><table><thead><tr><th>戴帽符号</th><th>公式语言</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></td><td><code>$\hat&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\widehat{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9233em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9233em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span class="svg-align" style="width:calc(100% - 0.2778em);margin-left:0.2778em;top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>$\widehat&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˇ</mo></mover></mrow><annotation encoding="application/x-tex">\check{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8808em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8808em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˇ</span></span></span></span></span></span></span></span></span></span></td><td><code>$\check&#123;A&#125;$</code></td></tr><tr><td><em>A</em></td><td><code>$\widecheck&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>˘</mo></mover></mrow><annotation encoding="application/x-tex">\breve{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">˘</span></span></span></span></span></span></span></span></span></span></td><td><code>$\breve&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9202em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span></td><td><code>$\tilde&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">~</mo></mover></mrow><annotation encoding="application/x-tex">\widetilde{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9433em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9433em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span class="svg-align" style="width:calc(100% - 0.2778em);margin-left:0.2778em;top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>$\widetilde&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span></td><td><code>$\overline&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder accentunder="true"><mi>A</mi><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\underline{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833em;vertical-align:-0.2em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span></span></span></td><td><code>$\underline&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">←</mo></mover></mrow><annotation encoding="application/x-tex">\overleftarrow{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2053em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>$\overleftarrow&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2053em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2053em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span class="svg-align" style="top:-3.6833em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></td><td><code>$\overrightarrow&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover><mi>A</mi><mo stretchy="true">⏞</mo></mover></mrow><annotation encoding="application/x-tex">\overbrace{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3313em;"></span><span class="mord mover"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3313em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span class="svg-align" style="top:-3.7833em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td><code>$\overbrace&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mi>A</mi><mo stretchy="true">⏟</mo></munder></mrow><annotation encoding="application/x-tex">\underbrace{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3313em;vertical-align:-0.648em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span></span></td><td><code>$\underbrace&#123;A&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mover><mo><mi>b</mi></mo><mi>a</mi></mover></mi></mrow><annotation encoding="application/x-tex">\overset{a}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2958em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2958em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal">b</span></span></span><span style="top:-3.8944em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span></span></span></span></td><td><code>$\overset&#123;a&#125;&#123;b&#125;$</code></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><munder><mo><mi>b</mi></mo><mi>a</mi></munder></mi></mrow><annotation encoding="application/x-tex">\underset{a}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3944em;vertical-align:-0.7em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span></span></span></span></span></td><td><code>$\underset&#123;a&#125;&#123;b&#125;$</code></td></tr></tbody></table><h2 id="特殊符号">特殊符号</h2><p>上述内容仅包含一些常用公式及符号，一些不常用的符号可以查找官方文档获取，此处提供一个比较全的LaTeX符号博客：<a href="https://www.oscaner.com/skill/others/mathjax-symbol.html">链接</a>，供大家参考。</p><p>下方展示一些不常用特殊符号：</p><p>无穷大符号：<code>$\infty$</code><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></p><p>领结符号：<code>$\bowtie$</code><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋈</mo></mrow><annotation encoding="application/x-tex">\bowtie</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.51em;vertical-align:-0.005em;"></span><span class="mrel">⋈</span></span></span></span></p><p>帽：<code>$\hat x$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></p><p>范数：<code>$\ell_p$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\ell_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></p><p>箭头备注：<code>$\xrightarrow&#123;f&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover><mo stretchy="true" minsize="3.0em">→</mo><mpadded width="+0.6em" lspace="0.3em"><mi>f</mi></mpadded></mover></mrow><annotation encoding="application/x-tex">\xrightarrow{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1191em;vertical-align:-0.011em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1081em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.011em;"><span></span></span></span></span></span></span></span></span></p><p>上备注：<code>$\overset&#123;def&#125;&#123;=&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mover><mo><mo>=</mo></mo><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></mover></mo></mrow><annotation encoding="application/x-tex">\overset{def}{=}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2001em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">=</span></span></span><span style="top:-3.614em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span></span></span></span></p><p>下备注：<code>$\underset&#123;x\in S\subseteq X&#125;&#123;max&#125;$</code></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><munder><mo><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi>x</mi><mo>∈</mo><mi>S</mi><mo>⊆</mo><mi>X</mi></mrow></munder></mi></mrow><annotation encoding="application/x-tex">\underset{x\in S\subseteq X}{max}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2701em;vertical-align:-0.8395em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mrel mtight">⊆</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8395em;"><span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/2022/09/08/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/09/08/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="一、markdown简介">一、markdown简介</h2><p>markdown 是一种轻量级标记语言,能将文本换成有效的XHTML(或者HTML)文档，它的目标是实现易读易写，成为一种适用于网络的书写语言。Markdown 语法简洁明了，易于掌握，所以用它来写作是件既效率又舒服的事情。<br>markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><h2 id="二、markdown-标题">二、markdown 标题</h2><p>markdown 支持两种标题的语法，类 Setext 和 类 Atx 形式。<br>类 Setext 形式是用底线的形式，利用 <code>=</code>（最高价标题）和 <code>-</code>（第二阶标题），例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">------------</span><br></pre></td></tr></table></figure><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。效果如下：</p><h2 id="This-is-an-H1">This is an H1</h2><h2 id="This-is-an-H2">This is an H2</h2><p>类 Atx 形式则是在行首插入1到6个 <code>#</code> ,对应到标题1到6级标题，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>效果如下：</p><h2 id="一级标题">一级标题</h2><h3 id="二级标题">二级标题</h3><h3 id="三级标题">三级标题</h3><h3 id="四级标题">四级标题</h3><h3 id="五级标题">五级标题</h3><h3 id="六级标题">六级标题</h3><h2 id="三、markdown-段落和换行">三、markdown 段落和换行</h2><p>一个 markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。<br>「由一个或多个连续的文本行组成」这句话其实暗示了 markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。<br>如果你确实想要依赖 markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。<br>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h2 id="四、markdown-列表">四、markdown 列表</h2><p>markdown 支持有序列表和无序列表。</p><h3 id="1-无序列表">1.无序列表</h3><p>无序列表用 <code>*</code>,<code>+</code>或<code>-</code>作为列表标记，语法如下:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* red</span><br><span class="line">* green</span><br><span class="line">* blue</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ red</span><br><span class="line">+ green</span><br><span class="line">+ blue</span><br></pre></td></tr></table></figure><p>也等同于：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- red</span><br><span class="line">- green</span><br><span class="line">- blue</span><br></pre></td></tr></table></figure><p>上面三种方式效果如下: <em>red</em> green * blue</p><h3 id="2-有序列表">2.有序列表</h3><p>有序列表则使用数字接着一个英文句点：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Bird</span><br><span class="line">2. McHale</span><br><span class="line">3. Parish</span><br></pre></td></tr></table></figure><p>效果如下： 1. Bird 2. McHale 3. Parish</p><h2 id="五、markdown-代码区块">五、markdown 代码区块</h2><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块， 通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示， markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。<br>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以， 例如，下面的输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码区块</span><br><span class="line">一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</span><br></pre></td></tr></table></figure><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 markdown 都会帮你处理，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">        &amp;copy; 2004 Foo Corporation</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>会被转换为：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;</span><br><span class="line">    &amp;amp;copy; 2004 Foo Corporation</span><br><span class="line">&amp;lt;/div&amp;gt;</span><br><span class="line">&lt;/code&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>代码区块中，一般的 markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 markdown 语法撰写 markdown 语法相关的文件。</p><h2 id="六、markdown-分割线">六、markdown 分割线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">******</span><br><span class="line">- - -</span><br><span class="line">------------------------</span><br></pre></td></tr></table></figure><p>效果如下：</p><hr><hr><hr><hr><hr><h2 id="七、markdown-链接">七、markdown 链接</h2><p>markdown 支持两种形式的链接语法： 行内式和参考式两种形式。<br>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://bing.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://bing.com/) has no title attribute.</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>This is <a href="https://link.zhihu.com/?target=http%3A//bing.com/">an example</a> inline link.</p><p><a href="https://link.zhihu.com/?target=http%3A//bing.com/">This link</a> has no title attribute.</p><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[foo]: http://bing.com/  &quot;Optional Title Here&quot;</span><br><span class="line">[foo]: http://bing.com/  &#x27;Optional Title Here&#x27;</span><br><span class="line">[foo]: http://bing.com/  (Optional Title Here)</span><br></pre></td></tr></table></figure><p>链接网址也可以用尖括号包起来：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/longish/path/to/resource/here</span><br><span class="line">    &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[link text][a]</span><br><span class="line">[link text][A]</span><br></pre></td></tr></table></figure><p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 <a href="https://link.zhihu.com/?target=http%3A//google.com">http://google.com</a>，你可以简化成：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google][]</span><br></pre></td></tr></table></figure><p>然后定义链接内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Google]: http://google.com/</span><br></pre></td></tr></table></figure><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from</span><br><span class="line">[Yahoo] [2] or [MSN] [3].</span><br><span class="line"></span><br><span class="line">  [1]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [3]: http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>如果改成用链接名称的方式写：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from</span><br><span class="line">[Yahoo][] or [MSN][].</span><br><span class="line"></span><br><span class="line">  [google]: http://google.com/        &quot;Google&quot;</span><br><span class="line">  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;</span><br><span class="line">  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>上面两种写法都会产生下面的 HTML。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I get 10 times more traffic from <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://google.com/&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">title</span>=<span class="string">&quot;Google&quot;</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span> than from</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://search.yahoo.com/&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>  <span class="attr">title</span>=<span class="string">&quot;Yahoo Search&quot;</span>&gt;</span>Yahoo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">or <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://search.msn.com/&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;external nofollow&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>  <span class="attr">title</span>=<span class="string">&quot;MSN Search&quot;</span>&gt;</span>MSN<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面是用行内式写的同样一段内容的 markdown 文件，提供作为比较之用：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)</span><br><span class="line">than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or</span><br><span class="line">[MSN](http://search.msn.com/ &quot;MSN Search&quot;).</span><br></pre></td></tr></table></figure><p>使用 markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h2 id="八、markdown-强调">八、markdown 强调</h2><p>markdown 使用星号 <code>*</code> 和底线 <code>_</code> 作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br><span class="line"></span><br><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p>会转成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single asterisks<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single underscores<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double asterisks<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double underscores<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果入下：</p><p><em>single asterisks</em></p><p><em>single underscores</em></p><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un*frigging*believable</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>un<em>frigging</em>believable</p><p>但是如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\*this text is surrounded by literal asterisks\*</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><em>this text is surrounded by literal asterisks</em></p><h2 id="九、markdown-代码">九、markdown 代码</h2><p>如果要标记一小段行内代码，你可以用反引号把它包起来 <code>(</code>)` ，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure><h2 id="十、markdown-图片">十、markdown 图片</h2><p>markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。<br>行内式的图片语法看起来像是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](/path/to/img.jpg)</span><br><span class="line"></span><br><span class="line">![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure><p>详细叙述如下： <em>一个惊叹号 !</em> 接着一个方括号，里面放上图片的替代文字 * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</p><p>参考式的图片语法则长得像这样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt text][id]</span><br></pre></td></tr></table></figure><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: url/to/image  &quot;Optional title attribute&quot;</span><br></pre></td></tr></table></figure><p>到目前为止， markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><p><a href="https://zhuanlan.zhihu.com/p/359357509">原文链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>首篇博客</title>
      <link href="/2022/09/08/%E9%A6%96%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/09/08/%E9%A6%96%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>初次书写博客，请多指教。</p><h1>联系方式：</h1><p>QQ: <strong>1005741898</strong></p><p>电话：13662644116</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/09/06/hello-world/"/>
      <url>/2022/09/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
